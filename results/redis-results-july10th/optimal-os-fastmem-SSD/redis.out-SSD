+ REDISROOT=/users/skannan/ssd/NVM/appbench/redis-5.0.5
+ REDISCONF=/users/skannan/ssd/NVM/appbench/redis-5.0.5/config
+ APPBASE=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ APP=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/pagerank
+ PARAM=
+ OUTPUT=
+ READS=1000000
+ KEYS=1000000
+ CLIPREFIX='numactl --preferred=0'
+ PHYSCPU=--physcpubind
+ let MAXINST=4
+ let STARTPORT=6378
+ let SERVERCPU=20
+ let DATASIZE=4096
+ let physcpu=0
+ let physcpu2=1
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
redis-server1: no process found
+ sudo killall redis-server1
redis-server1: no process found
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
redis-server2: no process found
+ sudo killall redis-server2
redis-server2: no process found
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
redis-server3: no process found
+ sudo killall redis-server3
redis-server3: no process found
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
redis-server4: no process found
+ sudo killall redis-server4
redis-server4: no process found
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sleep 5
+ PREPARE
+ (( inst=1 ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server1 redis-benchmark1
+ cp redis-server redis-server1
+ cp redis-benchmark redis-benchmark1
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server2 redis-benchmark2
+ cp redis-server redis-server2
+ cp redis-benchmark redis-benchmark2
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server3 redis-benchmark3
+ cp redis-server redis-server3
+ cp redis-benchmark redis-benchmark3
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server4 redis-benchmark4
+ cp redis-server redis-server4
+ cp redis-benchmark redis-benchmark4
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ FlushDisk
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ sudo sh -c sync
+ sudo sh -c sync
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ cd /users/skannan/ssd/NVM/appbench/shared_data
/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/run.sh: line 103: cd: /users/skannan/ssd/NVM/appbench/shared_data: No such file or directory
+ RUN
+ let port=6378
+ let physcpu=20
+ let physcpu2=20+1
+ (( r=1 ))
+ (( r<=4 ))
+ let port=6378+1
+ let physcpu=20+2
+ let physcpu2=21+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --membind=1 --physcpubind=20,21 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server1 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6378.conf
29069:C 10 Jul 2019 09:55:54.509 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
29069:C 10 Jul 2019 09:55:54.509 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=29069, just started
29069:C 10 Jul 2019 09:55:54.509 # Configuration loaded
29069:M 10 Jul 2019 09:55:54.510 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
29069:M 10 Jul 2019 09:55:54.510 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
29069:M 10 Jul 2019 09:55:54.510 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6378
 |    `-._   `._    /     _.-'    |     PID: 29069
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

29069:M 10 Jul 2019 09:55:54.525 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
29069:M 10 Jul 2019 09:55:54.525 # Server initialized
29069:M 10 Jul 2019 09:55:54.525 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
29069:M 10 Jul 2019 09:55:54.525 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
29069:M 10 Jul 2019 09:55:54.525 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6379+1
+ let physcpu=22+2
+ let physcpu2=23+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --membind=1 --physcpubind=22,23 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server2 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6379.conf
29074:C 10 Jul 2019 09:55:55.493 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
29074:C 10 Jul 2019 09:55:55.493 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=29074, just started
29074:C 10 Jul 2019 09:55:55.493 # Configuration loaded
29074:M 10 Jul 2019 09:55:55.493 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
29074:M 10 Jul 2019 09:55:55.493 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
29074:M 10 Jul 2019 09:55:55.493 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 29074
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

29074:M 10 Jul 2019 09:55:55.495 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
29074:M 10 Jul 2019 09:55:55.495 # Server initialized
29074:M 10 Jul 2019 09:55:55.495 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
29074:M 10 Jul 2019 09:55:55.495 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
29074:M 10 Jul 2019 09:55:55.495 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6380+1
+ let physcpu=24+2
+ let physcpu2=25+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --membind=1 --physcpubind=24,25 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server3 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6380.conf
29079:C 10 Jul 2019 09:55:56.494 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
29079:C 10 Jul 2019 09:55:56.494 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=29079, just started
29079:C 10 Jul 2019 09:55:56.494 # Configuration loaded
29079:M 10 Jul 2019 09:55:56.495 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
29079:M 10 Jul 2019 09:55:56.495 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
29079:M 10 Jul 2019 09:55:56.495 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6380
 |    `-._   `._    /     _.-'    |     PID: 29079
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

29079:M 10 Jul 2019 09:55:56.496 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
29079:M 10 Jul 2019 09:55:56.496 # Server initialized
29079:M 10 Jul 2019 09:55:56.496 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
29079:M 10 Jul 2019 09:55:56.496 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
29079:M 10 Jul 2019 09:55:56.496 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6381+1
+ let physcpu=26+2
+ let physcpu2=27+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --membind=1 --physcpubind=26,27 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server4 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6381.conf
29084:C 10 Jul 2019 09:55:57.495 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
29084:C 10 Jul 2019 09:55:57.495 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=29084, just started
29084:C 10 Jul 2019 09:55:57.495 # Configuration loaded
29084:M 10 Jul 2019 09:55:57.496 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
29084:M 10 Jul 2019 09:55:57.496 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
29084:M 10 Jul 2019 09:55:57.496 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6381
 |    `-._   `._    /     _.-'    |     PID: 29084
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

29084:M 10 Jul 2019 09:55:57.498 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
29084:M 10 Jul 2019 09:55:57.498 # Server initialized
29084:M 10 Jul 2019 09:55:57.498 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
29084:M 10 Jul 2019 09:55:57.498 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
29084:M 10 Jul 2019 09:55:57.498 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ export LD_PRELOAD=
+ LD_PRELOAD=
+ sleep 10
+ RUNCLIENT
+ let port=6378
+ let physcpu=2
+ let physcpu2=3
+ PARAMS=' -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q  -h 127.0.0.1 -d 4096'
+ (( c=1 ))
+ (( c<4 ))
+ let port=6378+1
+ let physcpu=2+1
+ let physcpu2=3+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6378
+ let port=6379+1
+ let physcpu=3+1
+ let physcpu2=5+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6379
+ let port=6380+1
+ let physcpu=4+1
+ let physcpu2=7+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6381
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6380
29084:M 10 Jul 2019 09:56:08.721 * Starting automatic rewriting of AOF on 7860862500% growth
29079:M 10 Jul 2019 09:56:08.722 * Starting automatic rewriting of AOF on 7958176000% growth
29074:M 10 Jul 2019 09:56:08.723 * Starting automatic rewriting of AOF on 7694808400% growth
29084:M 10 Jul 2019 09:56:08.723 * Background append only file rewriting started by pid 29095
29079:M 10 Jul 2019 09:56:08.723 * Background append only file rewriting started by pid 29096
29074:M 10 Jul 2019 09:56:08.724 * Background append only file rewriting started by pid 29097
29069:M 10 Jul 2019 09:56:08.752 * Starting automatic rewriting of AOF on 8484083000% growth
29069:M 10 Jul 2019 09:56:08.754 * Background append only file rewriting started by pid 29098
29084:M 10 Jul 2019 09:56:09.843 * AOF rewrite child asks to stop sending diffs.
29079:M 10 Jul 2019 09:56:09.847 * AOF rewrite child asks to stop sending diffs.
29074:M 10 Jul 2019 09:56:09.868 * AOF rewrite child asks to stop sending diffs.
29069:M 10 Jul 2019 09:56:09.884 * AOF rewrite child asks to stop sending diffs.
29097:C 10 Jul 2019 09:56:10.053 * Parent agreed to stop sending diffs. Finalizing AOF...
29095:C 10 Jul 2019 09:56:10.053 * Parent agreed to stop sending diffs. Finalizing AOF...
29097:C 10 Jul 2019 09:56:10.054 * Concatenating 243.25 MB of AOF diff received from parent.
29095:C 10 Jul 2019 09:56:10.054 * Concatenating 247.56 MB of AOF diff received from parent.
29098:C 10 Jul 2019 09:56:10.055 * Parent agreed to stop sending diffs. Finalizing AOF...
29098:C 10 Jul 2019 09:56:10.056 * Concatenating 253.75 MB of AOF diff received from parent.
29096:C 10 Jul 2019 09:56:10.056 * Parent agreed to stop sending diffs. Finalizing AOF...
29096:C 10 Jul 2019 09:56:10.056 * Concatenating 248.81 MB of AOF diff received from parent.
29079:M 10 Jul 2019 09:56:10.546 * Background AOF buffer size: 80 MB
29069:M 10 Jul 2019 09:56:10.555 * Background AOF buffer size: 80 MB
29084:M 10 Jul 2019 09:56:10.558 * Background AOF buffer size: 80 MB
29074:M 10 Jul 2019 09:56:10.559 * Background AOF buffer size: 80 MB
29079:M 10 Jul 2019 09:56:10.894 * Background AOF buffer size: 180 MB
29069:M 10 Jul 2019 09:56:10.917 * Background AOF buffer size: 180 MB
29084:M 10 Jul 2019 09:56:10.920 * Background AOF buffer size: 180 MB
29074:M 10 Jul 2019 09:56:10.927 * Background AOF buffer size: 180 MB
29079:M 10 Jul 2019 09:56:11.257 * Background AOF buffer size: 280 MB
29069:M 10 Jul 2019 09:56:11.286 * Background AOF buffer size: 280 MB
29084:M 10 Jul 2019 09:56:11.296 * Background AOF buffer size: 280 MB
29074:M 10 Jul 2019 09:56:11.301 * Background AOF buffer size: 280 MB
29079:M 10 Jul 2019 09:56:11.601 * Background AOF buffer size: 380 MB
29069:M 10 Jul 2019 09:56:11.641 * Background AOF buffer size: 380 MB
29074:M 10 Jul 2019 09:56:11.656 * Background AOF buffer size: 380 MB
29084:M 10 Jul 2019 09:56:11.657 * Background AOF buffer size: 380 MB
29084:M 10 Jul 2019 09:56:12.030 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:12.035 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:12.036 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:12.040 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:12.898 * Background AOF buffer size: 480 MB
29074:M 10 Jul 2019 09:56:13.036 * Background AOF buffer size: 480 MB
29084:M 10 Jul 2019 09:56:13.269 * Background AOF buffer size: 480 MB
29079:M 10 Jul 2019 09:56:13.342 * Background AOF buffer size: 480 MB
29069:M 10 Jul 2019 09:56:13.392 * Background AOF buffer size: 580 MB
29074:M 10 Jul 2019 09:56:13.521 * Background AOF buffer size: 580 MB
29069:M 10 Jul 2019 09:56:13.700 * Background AOF buffer size: 680 MB
29084:M 10 Jul 2019 09:56:13.750 * Background AOF buffer size: 580 MB
29079:M 10 Jul 2019 09:56:13.815 * Background AOF buffer size: 580 MB
29074:M 10 Jul 2019 09:56:13.941 * Background AOF buffer size: 680 MB
29069:M 10 Jul 2019 09:56:14.007 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:14.060 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:14.102 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:14.262 * Background AOF buffer size: 780 MB
29079:M 10 Jul 2019 09:56:14.353 * Background AOF buffer size: 680 MB
29084:M 10 Jul 2019 09:56:14.366 * Background AOF buffer size: 680 MB
29069:M 10 Jul 2019 09:56:14.380 * Background AOF buffer size: 780 MB
29074:M 10 Jul 2019 09:56:14.592 * Background AOF buffer size: 880 MB
29079:M 10 Jul 2019 09:56:14.675 * Background AOF buffer size: 780 MB
29084:M 10 Jul 2019 09:56:14.698 * Background AOF buffer size: 780 MB
29069:M 10 Jul 2019 09:56:14.704 * Background AOF buffer size: 880 MB
29074:M 10 Jul 2019 09:56:14.919 # Background AOF buffer size: 980 MB
29079:M 10 Jul 2019 09:56:14.987 * Background AOF buffer size: 880 MB
29074:M 10 Jul 2019 09:56:15.022 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:15.023 # Background AOF buffer size: 980 MB
29084:M 10 Jul 2019 09:56:15.024 * Background AOF buffer size: 880 MB
29095:C 10 Jul 2019 09:56:15.205 * SYNC append only file rewrite performed
29098:C 10 Jul 2019 09:56:15.209 * SYNC append only file rewrite performed
29096:C 10 Jul 2019 09:56:15.209 * SYNC append only file rewrite performed
29097:C 10 Jul 2019 09:56:15.209 * SYNC append only file rewrite performed
29095:C 10 Jul 2019 09:56:15.210 * AOF rewrite: 310 MB of memory used by copy-on-write
29097:C 10 Jul 2019 09:56:15.213 * AOF rewrite: 305 MB of memory used by copy-on-write
29098:C 10 Jul 2019 09:56:15.214 * AOF rewrite: 322 MB of memory used by copy-on-write
29096:C 10 Jul 2019 09:56:15.214 * AOF rewrite: 311 MB of memory used by copy-on-write
29069:M 10 Jul 2019 09:56:15.258 * Background AOF rewrite terminated with success
29084:M 10 Jul 2019 09:56:15.260 * Background AOF rewrite terminated with success
29079:M 10 Jul 2019 09:56:15.512 * Background AOF rewrite terminated with success
29074:M 10 Jul 2019 09:56:15.938 * Background AOF rewrite terminated with success
29069:M 10 Jul 2019 09:56:16.121 * Residual parent diff successfully flushed to the rewritten AOF (988.55 MB)
29084:M 10 Jul 2019 09:56:16.157 * Residual parent diff successfully flushed to the rewritten AOF (888.04 MB)
29079:M 10 Jul 2019 09:56:16.386 * Residual parent diff successfully flushed to the rewritten AOF (945.13 MB)
29074:M 10 Jul 2019 09:56:16.877 * Residual parent diff successfully flushed to the rewritten AOF (1039.27 MB)
29069:M 10 Jul 2019 09:56:20.228 * Background AOF rewrite finished successfully
29084:M 10 Jul 2019 09:56:23.059 * Background AOF rewrite finished successfully
29079:M 10 Jul 2019 09:56:25.238 * Background AOF rewrite finished successfully
29074:M 10 Jul 2019 09:56:27.619 * Background AOF rewrite finished successfully
29074:M 10 Jul 2019 09:56:27.753 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:32.010 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:32.021 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:32.085 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:32.101 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:32.740 * Starting automatic rewriting of AOF on 102% growth
29069:M 10 Jul 2019 09:56:32.761 * Starting automatic rewriting of AOF on 102% growth
29084:M 10 Jul 2019 09:56:32.788 * Background append only file rewriting started by pid 29099
29069:M 10 Jul 2019 09:56:32.816 * Background append only file rewriting started by pid 29100
29079:M 10 Jul 2019 09:56:34.045 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:34.066 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:34.070 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:34.080 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:34.553 * Starting automatic rewriting of AOF on 116% growth
29074:M 10 Jul 2019 09:56:34.663 * Background append only file rewriting started by pid 29101
29079:M 10 Jul 2019 09:56:34.895 * Starting automatic rewriting of AOF on 136% growth
29079:M 10 Jul 2019 09:56:34.947 * Background append only file rewriting started by pid 29102
29069:M 10 Jul 2019 09:56:35.673 * Background AOF buffer size: 79 MB
29069:M 10 Jul 2019 09:56:36.065 * Background AOF buffer size: 179 MB
29084:M 10 Jul 2019 09:56:36.236 * Background AOF buffer size: 80 MB
29069:M 10 Jul 2019 09:56:36.455 * Background AOF buffer size: 279 MB
29079:M 10 Jul 2019 09:56:36.525 * Background AOF buffer size: 76 MB
29084:M 10 Jul 2019 09:56:36.847 * Background AOF buffer size: 180 MB
29079:M 10 Jul 2019 09:56:37.028 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:37.074 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:37.094 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:37.096 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:37.578 * Background AOF buffer size: 72 MB
29069:M 10 Jul 2019 09:56:37.587 * Background AOF buffer size: 379 MB
29084:M 10 Jul 2019 09:56:37.629 * Background AOF buffer size: 280 MB
29069:M 10 Jul 2019 09:56:38.002 * Background AOF buffer size: 479 MB
29084:M 10 Jul 2019 09:56:38.039 * Background AOF buffer size: 380 MB
29079:M 10 Jul 2019 09:56:38.085 * Background AOF buffer size: 172 MB
29074:M 10 Jul 2019 09:56:38.137 * Background AOF buffer size: 175 MB
29069:M 10 Jul 2019 09:56:38.392 * Background AOF buffer size: 579 MB
29084:M 10 Jul 2019 09:56:38.434 * Background AOF buffer size: 480 MB
29079:M 10 Jul 2019 09:56:38.489 * Background AOF buffer size: 272 MB
29074:M 10 Jul 2019 09:56:38.550 * Background AOF buffer size: 275 MB
29069:M 10 Jul 2019 09:56:38.777 * Background AOF buffer size: 679 MB
29084:M 10 Jul 2019 09:56:38.828 * Background AOF buffer size: 580 MB
29079:M 10 Jul 2019 09:56:38.888 * Background AOF buffer size: 372 MB
29069:M 10 Jul 2019 09:56:39.025 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29084:M 10 Jul 2019 09:56:39.046 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:39.057 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:39.057 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:39.555 * Background AOF buffer size: 375 MB
29084:M 10 Jul 2019 09:56:39.770 * Background AOF buffer size: 680 MB
29079:M 10 Jul 2019 09:56:39.783 * Background AOF buffer size: 472 MB
29069:M 10 Jul 2019 09:56:39.806 * Background AOF buffer size: 779 MB
29074:M 10 Jul 2019 09:56:39.986 * Background AOF buffer size: 475 MB
29084:M 10 Jul 2019 09:56:40.159 * Background AOF buffer size: 780 MB
29079:M 10 Jul 2019 09:56:40.172 * Background AOF buffer size: 572 MB
29069:M 10 Jul 2019 09:56:40.184 * Background AOF buffer size: 879 MB
29074:M 10 Jul 2019 09:56:40.388 * Background AOF buffer size: 575 MB
29084:M 10 Jul 2019 09:56:40.541 * Background AOF buffer size: 880 MB
29079:M 10 Jul 2019 09:56:40.559 * Background AOF buffer size: 672 MB
29069:M 10 Jul 2019 09:56:40.591 # Background AOF buffer size: 979 MB
29074:M 10 Jul 2019 09:56:40.783 * Background AOF buffer size: 675 MB
29084:M 10 Jul 2019 09:56:40.909 # Background AOF buffer size: 980 MB
29084:M 10 Jul 2019 09:56:41.006 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:41.032 * Background AOF buffer size: 772 MB
29074:M 10 Jul 2019 09:56:41.044 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:41.046 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:41.067 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:41.565 * Background AOF buffer size: 1079 MB
29074:M 10 Jul 2019 09:56:41.609 * Background AOF buffer size: 775 MB
29084:M 10 Jul 2019 09:56:41.717 * Background AOF buffer size: 1080 MB
29079:M 10 Jul 2019 09:56:41.863 * Background AOF buffer size: 872 MB
29069:M 10 Jul 2019 09:56:41.956 * Background AOF buffer size: 1179 MB
29074:M 10 Jul 2019 09:56:41.997 * Background AOF buffer size: 875 MB
29084:M 10 Jul 2019 09:56:42.088 * Background AOF buffer size: 1180 MB
29084:M 10 Jul 2019 09:56:42.447 * Background AOF buffer size: 1280 MB
29084:M 10 Jul 2019 09:56:43.014 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29079:M 10 Jul 2019 09:56:43.073 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29074:M 10 Jul 2019 09:56:43.073 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:43.097 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
29069:M 10 Jul 2019 09:56:45.352 * AOF rewrite child asks to stop sending diffs.
29100:C 10 Jul 2019 09:56:45.352 * Parent agreed to stop sending diffs. Finalizing AOF...
29100:C 10 Jul 2019 09:56:45.352 * Concatenating 235.56 MB of AOF diff received from parent.
29084:M 10 Jul 2019 09:56:47.950 * AOF rewrite child asks to stop sending diffs.
29099:C 10 Jul 2019 09:56:47.950 * Parent agreed to stop sending diffs. Finalizing AOF...
29099:C 10 Jul 2019 09:56:47.950 * Concatenating 280.00 MB of AOF diff received from parent.
+ sleep 5
29079:M 10 Jul 2019 09:56:48.502 * AOF rewrite child asks to stop sending diffs.
29102:C 10 Jul 2019 09:56:48.502 * Parent agreed to stop sending diffs. Finalizing AOF...
29102:C 10 Jul 2019 09:56:48.502 * Concatenating 255.38 MB of AOF diff received from parent.
29074:M 10 Jul 2019 09:56:48.503 * AOF rewrite child asks to stop sending diffs.
29101:C 10 Jul 2019 09:56:48.503 * Parent agreed to stop sending diffs. Finalizing AOF...
29101:C 10 Jul 2019 09:56:48.503 * Concatenating 263.44 MB of AOF diff received from parent.
+ ps aux
+ grep redis-server
+ awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
29069
29074
29079
29084
29105
29106
/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/run.sh: line 73: 29104 Done                    ps aux
     29105                       | grep redis-server
     29106 Killed                  | awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf appendonly-6378.aof appendonly-6379.aof appendonly-6380.aof appendonly-6381.aof temp-rewriteaof-29099.aof temp-rewriteaof-29100.aof temp-rewriteaof-29101.aof temp-rewriteaof-29102.aof
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ set +x
29099291002910229101:signal-handler (:signal-handler (:signal-handler (:signal-handler (1562774215156277421515627742151562774215) ) ) ) Received SIGTERM scheduling shutdown...Received SIGTERM scheduling shutdown...Received SIGTERM scheduling shutdown...Received SIGTERM scheduling shutdown...



29102:C 10 Jul 2019 09:56:55.666 # Error moving temp append only file on the final destination: No such file or directory
29100:C 10 Jul 2019 09:56:55.666 # Error moving temp append only file on the final destination: No such file or directory
29099:C 10 Jul 2019 09:56:55.666 # Error moving temp append only file on the final destination: No such file or directory
29101:C 10 Jul 2019 09:56:55.666 # Error moving temp append only file on the final destination: No such file or directory
ioctl command: 0x8008aa01
[55579.954305] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x8fff
[55585.786975] drop_caches: sh (28989): drop_caches: 3
[55586.650913] drop_caches: sh (28998): drop_caches: 3
[55593.724915] drop_caches: sh (29060): drop_caches: 3
[55594.574173] drop_caches: sh (29068): drop_caches: 3
