+ REDISROOT=/users/skannan/ssd/NVM/appbench/redis-5.0.5
+ REDISCONF=/users/skannan/ssd/NVM/appbench/redis-5.0.5/config
+ APPBASE=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ APP=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/pagerank
+ PARAM=
+ OUTPUT=
+ READS=1000000
+ KEYS=1000000
+ CLIPREFIX='numactl --preferred=0'
+ PHYSCPU=--physcpubind
+ let MAXINST=4
+ let STARTPORT=6378
+ let SERVERCPU=20
+ let DATASIZE=4096
+ let physcpu=0
+ let physcpu2=1
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
redis-server1: no process found
+ sudo killall redis-server1
redis-server1: no process found
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
redis-server2: no process found
+ sudo killall redis-server2
redis-server2: no process found
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
redis-server3: no process found
+ sudo killall redis-server3
redis-server3: no process found
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
redis-server4: no process found
+ sudo killall redis-server4
redis-server4: no process found
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sleep 5
+ PREPARE
+ (( inst=1 ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server1 redis-benchmark1
+ cp redis-server redis-server1
+ cp redis-benchmark redis-benchmark1
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server2 redis-benchmark2
+ cp redis-server redis-server2
+ cp redis-benchmark redis-benchmark2
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server3 redis-benchmark3
+ cp redis-server redis-server3
+ cp redis-benchmark redis-benchmark3
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server4 redis-benchmark4
+ cp redis-server redis-server4
+ cp redis-benchmark redis-benchmark4
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ FlushDisk
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ sudo sh -c sync
+ sudo sh -c sync
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ cd /users/skannan/ssd/NVM/appbench/shared_data
+ RUN
+ let port=6378
+ let physcpu=20
+ let physcpu2=20+1
+ (( r=1 ))
+ (( r<=4 ))
+ let port=6378+1
+ let physcpu=20+2
+ let physcpu2=21+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=20,21 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server1 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6378.conf
initiating tracing...
initiating tracing...
5176:C 09 Jul 2019 10:52:39.905 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5176:C 09 Jul 2019 10:52:39.905 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=5176, just started
5176:C 09 Jul 2019 10:52:39.905 # Configuration loaded
5176:M 09 Jul 2019 10:52:39.906 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
5176:M 09 Jul 2019 10:52:39.906 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
5176:M 09 Jul 2019 10:52:39.906 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6378
 |    `-._   `._    /     _.-'    |     PID: 5176
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

5176:M 09 Jul 2019 10:52:39.921 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
5176:M 09 Jul 2019 10:52:39.921 # Server initialized
5176:M 09 Jul 2019 10:52:39.921 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5176:M 09 Jul 2019 10:52:39.921 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
5176:M 09 Jul 2019 10:52:39.921 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6379+1
+ let physcpu=22+2
+ let physcpu2=23+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=22,23 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server2 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6379.conf
initiating tracing...
initiating tracing...
5181:C 09 Jul 2019 10:52:40.895 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5181:C 09 Jul 2019 10:52:40.895 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=5181, just started
5181:C 09 Jul 2019 10:52:40.895 # Configuration loaded
5181:M 09 Jul 2019 10:52:40.896 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
5181:M 09 Jul 2019 10:52:40.896 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
5181:M 09 Jul 2019 10:52:40.896 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 5181
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

5181:M 09 Jul 2019 10:52:40.897 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
5181:M 09 Jul 2019 10:52:40.897 # Server initialized
5181:M 09 Jul 2019 10:52:40.897 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5181:M 09 Jul 2019 10:52:40.897 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
5181:M 09 Jul 2019 10:52:40.897 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6380+1
+ let physcpu=24+2
+ let physcpu2=25+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=24,25 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server3 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6380.conf
initiating tracing...
initiating tracing...
5186:C 09 Jul 2019 10:52:41.897 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5186:C 09 Jul 2019 10:52:41.897 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=5186, just started
5186:C 09 Jul 2019 10:52:41.897 # Configuration loaded
5186:M 09 Jul 2019 10:52:41.898 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
5186:M 09 Jul 2019 10:52:41.898 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
5186:M 09 Jul 2019 10:52:41.898 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6380
 |    `-._   `._    /     _.-'    |     PID: 5186
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

5186:M 09 Jul 2019 10:52:41.899 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
5186:M 09 Jul 2019 10:52:41.899 # Server initialized
5186:M 09 Jul 2019 10:52:41.899 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5186:M 09 Jul 2019 10:52:41.899 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
5186:M 09 Jul 2019 10:52:41.899 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6381+1
+ let physcpu=26+2
+ let physcpu2=27+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=26,27 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server4 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6381.conf
initiating tracing...
initiating tracing...
5191:C 09 Jul 2019 10:52:42.898 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
5191:C 09 Jul 2019 10:52:42.898 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=5191, just started
5191:C 09 Jul 2019 10:52:42.898 # Configuration loaded
5191:M 09 Jul 2019 10:52:42.899 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
5191:M 09 Jul 2019 10:52:42.899 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
5191:M 09 Jul 2019 10:52:42.899 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6381
 |    `-._   `._    /     _.-'    |     PID: 5191
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

5191:M 09 Jul 2019 10:52:42.900 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
5191:M 09 Jul 2019 10:52:42.900 # Server initialized
5191:M 09 Jul 2019 10:52:42.900 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
5191:M 09 Jul 2019 10:52:42.900 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
5191:M 09 Jul 2019 10:52:42.900 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ export LD_PRELOAD=
+ LD_PRELOAD=
+ sleep 10
+ RUNCLIENT
+ let port=6378
+ let physcpu=2
+ let physcpu2=3
+ PARAMS=' -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q  -h 127.0.0.1 -d 4096'
+ (( c=1 ))
+ (( c<4 ))
+ let port=6378+1
+ let physcpu=2+1
+ let physcpu2=3+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6378
+ let port=6379+1
+ let physcpu=3+1
+ let physcpu2=5+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6379
+ let port=6380+1
+ let physcpu=4+1
+ let physcpu2=7+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6381
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6380
5176:M 09 Jul 2019 10:52:54.713 * Starting automatic rewriting of AOF on 20100416200% growth
5176:M 09 Jul 2019 10:52:54.717 * Background append only file rewriting started by pid 5201
5191:M 09 Jul 2019 10:52:54.724 * Starting automatic rewriting of AOF on 20299184200% growth
5186:M 09 Jul 2019 10:52:54.725 * Starting automatic rewriting of AOF on 20317818700% growth
5191:M 09 Jul 2019 10:52:54.729 * Background append only file rewriting started by pid 5202
5186:M 09 Jul 2019 10:52:54.730 * Background append only file rewriting started by pid 5203
5181:M 09 Jul 2019 10:52:54.745 * Starting automatic rewriting of AOF on 20326100700% growth
5181:M 09 Jul 2019 10:52:54.750 * Background append only file rewriting started by pid 5204
5181:M 09 Jul 2019 10:52:55.165 * AOF rewrite child asks to stop sending diffs.
5176:M 09 Jul 2019 10:52:55.165 * AOF rewrite child asks to stop sending diffs.
5191:M 09 Jul 2019 10:52:55.166 * AOF rewrite child asks to stop sending diffs.
5202:C 09 Jul 2019 10:52:55.169 * Parent agreed to stop sending diffs. Finalizing AOF...
5201:C 09 Jul 2019 10:52:55.169 * Parent agreed to stop sending diffs. Finalizing AOF...
5202:C 09 Jul 2019 10:52:55.169 * Concatenating 26.50 MB of AOF diff received from parent.
5201:C 09 Jul 2019 10:52:55.169 * Concatenating 27.12 MB of AOF diff received from parent.
5204:C 09 Jul 2019 10:52:55.169 * Parent agreed to stop sending diffs. Finalizing AOF...
5204:C 09 Jul 2019 10:52:55.169 * Concatenating 26.50 MB of AOF diff received from parent.
5186:M 09 Jul 2019 10:52:55.267 * Background AOF buffer size: 80 MB
5176:M 09 Jul 2019 10:52:55.400 * Background AOF buffer size: 70 MB
5191:M 09 Jul 2019 10:52:55.468 * Background AOF buffer size: 80 MB
5181:M 09 Jul 2019 10:52:55.481 * Background AOF buffer size: 80 MB
5186:M 09 Jul 2019 10:52:56.279 * Background AOF buffer size: 180 MB
5176:M 09 Jul 2019 10:52:56.924 * Background AOF buffer size: 170 MB
5186:M 09 Jul 2019 10:52:57.004 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5191:M 09 Jul 2019 10:52:57.014 * Background AOF buffer size: 180 MB
5181:M 09 Jul 2019 10:52:57.029 * Background AOF buffer size: 180 MB
5176:M 09 Jul 2019 10:52:57.031 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5191:M 09 Jul 2019 10:52:57.046 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5181:M 09 Jul 2019 10:52:57.092 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5202:C 09 Jul 2019 10:52:57.533 * SYNC append only file rewrite performed
5204:C 09 Jul 2019 10:52:57.533 * SYNC append only file rewrite performed
5201:C 09 Jul 2019 10:52:57.533 * SYNC append only file rewrite performed
5201:C 09 Jul 2019 10:52:57.549 * AOF rewrite: 54 MB of memory used by copy-on-write
5202:C 09 Jul 2019 10:52:57.551 * AOF rewrite: 53 MB of memory used by copy-on-write
5204:C 09 Jul 2019 10:52:57.551 * AOF rewrite: 54 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:52:58.453 * AOF rewrite child asks to stop sending diffs.
5203:C 09 Jul 2019 10:52:58.453 * Parent agreed to stop sending diffs. Finalizing AOF...
5203:C 09 Jul 2019 10:52:58.453 * Concatenating 18.19 MB of AOF diff received from parent.
5176:M 09 Jul 2019 10:52:58.488 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:52:58.489 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:52:58.518 * Background AOF rewrite terminated with success
5186:M 09 Jul 2019 10:52:58.808 * Background AOF buffer size: 279 MB
5203:C 09 Jul 2019 10:52:59.018 * SYNC append only file rewrite performed
5203:C 09 Jul 2019 10:52:59.027 * AOF rewrite: 53 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:52:59.071 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:52:59.694 * Residual parent diff successfully flushed to the rewritten AOF (202.73 MB)
5176:M 09 Jul 2019 10:52:59.770 * Residual parent diff successfully flushed to the rewritten AOF (196.63 MB)
5181:M 09 Jul 2019 10:52:59.771 * Residual parent diff successfully flushed to the rewritten AOF (205.51 MB)
5191:M 09 Jul 2019 10:52:59.962 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:00.038 * Residual parent diff successfully flushed to the rewritten AOF (288.21 MB)
5176:M 09 Jul 2019 10:53:00.449 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:53:00.937 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:01.825 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:01.974 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5191:M 09 Jul 2019 10:53:04.167 * Starting automatic rewriting of AOF on 175% growth
5191:M 09 Jul 2019 10:53:04.188 * Background append only file rewriting started by pid 5205
5176:M 09 Jul 2019 10:53:07.296 * Starting automatic rewriting of AOF on 159% growth
5186:M 09 Jul 2019 10:53:07.309 * Starting automatic rewriting of AOF on 105% growth
5181:M 09 Jul 2019 10:53:07.324 * Starting automatic rewriting of AOF on 152% growth
5176:M 09 Jul 2019 10:53:07.419 * Background append only file rewriting started by pid 5206
5186:M 09 Jul 2019 10:53:07.424 * Background append only file rewriting started by pid 5207
5181:M 09 Jul 2019 10:53:07.454 * Background append only file rewriting started by pid 5208
5181:M 09 Jul 2019 10:53:09.005 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5186:M 09 Jul 2019 10:53:09.239 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5176:M 09 Jul 2019 10:53:09.240 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5191:M 09 Jul 2019 10:53:09.494 * AOF rewrite child asks to stop sending diffs.
5205:C 09 Jul 2019 10:53:09.495 * Parent agreed to stop sending diffs. Finalizing AOF...
5205:C 09 Jul 2019 10:53:09.496 * Concatenating 23.44 MB of AOF diff received from parent.
5191:M 09 Jul 2019 10:53:10.039 * Background AOF buffer size: 78 MB
5205:C 09 Jul 2019 10:53:10.589 * SYNC append only file rewrite performed
5205:C 09 Jul 2019 10:53:10.792 * AOF rewrite: 172 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:53:11.280 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:53:12.238 * Residual parent diff successfully flushed to the rewritten AOF (104.59 MB)
5191:M 09 Jul 2019 10:53:12.319 * Background AOF rewrite finished successfully
5176:M 09 Jul 2019 10:53:14.487 * AOF rewrite child asks to stop sending diffs.
5206:C 09 Jul 2019 10:53:14.487 * Parent agreed to stop sending diffs. Finalizing AOF...
5206:C 09 Jul 2019 10:53:14.488 * Concatenating 23.44 MB of AOF diff received from parent.
5181:M 09 Jul 2019 10:53:14.548 * AOF rewrite child asks to stop sending diffs.
5208:C 09 Jul 2019 10:53:14.549 * Parent agreed to stop sending diffs. Finalizing AOF...
5208:C 09 Jul 2019 10:53:14.549 * Concatenating 20.94 MB of AOF diff received from parent.
5186:M 09 Jul 2019 10:53:14.775 * AOF rewrite child asks to stop sending diffs.
5207:C 09 Jul 2019 10:53:14.775 * Parent agreed to stop sending diffs. Finalizing AOF...
5207:C 09 Jul 2019 10:53:14.776 * Concatenating 25.31 MB of AOF diff received from parent.
5206:C 09 Jul 2019 10:53:14.955 * SYNC append only file rewrite performed
5206:C 09 Jul 2019 10:53:15.117 * AOF rewrite: 147 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:53:15.256 * Background AOF buffer size: 70 MB
5176:M 09 Jul 2019 10:53:15.341 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:53:15.574 * Background AOF buffer size: 71 MB
5208:C 09 Jul 2019 10:53:15.605 * SYNC append only file rewrite performed
5207:C 09 Jul 2019 10:53:15.606 * SYNC append only file rewrite performed
5207:C 09 Jul 2019 10:53:15.705 * AOF rewrite: 169 MB of memory used by copy-on-write
5208:C 09 Jul 2019 10:53:15.740 * AOF rewrite: 178 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:53:15.821 * Residual parent diff successfully flushed to the rewritten AOF (76.64 MB)
5191:M 09 Jul 2019 10:53:15.840 * Starting automatic rewriting of AOF on 122% growth
5176:M 09 Jul 2019 10:53:15.871 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:15.907 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:53:15.944 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:53:15.970 * Background append only file rewriting started by pid 5209
5186:M 09 Jul 2019 10:53:16.159 * Residual parent diff successfully flushed to the rewritten AOF (71.51 MB)
5181:M 09 Jul 2019 10:53:16.216 * Residual parent diff successfully flushed to the rewritten AOF (84.70 MB)
5186:M 09 Jul 2019 10:53:16.291 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:53:16.634 * Background AOF rewrite finished successfully
5176:M 09 Jul 2019 10:53:17.730 * Starting automatic rewriting of AOF on 107% growth
5176:M 09 Jul 2019 10:53:17.804 * Background append only file rewriting started by pid 5210
5191:M 09 Jul 2019 10:53:17.838 * Background AOF buffer size: 70 MB
5191:M 09 Jul 2019 10:53:18.182 * Background AOF buffer size: 76 MB
5186:M 09 Jul 2019 10:53:19.192 * Starting automatic rewriting of AOF on 109% growth
5181:M 09 Jul 2019 10:53:19.360 * Starting automatic rewriting of AOF on 102% growth
5186:M 09 Jul 2019 10:53:19.430 * Background append only file rewriting started by pid 5211
5181:M 09 Jul 2019 10:53:19.552 * Background append only file rewriting started by pid 5212
5191:M 09 Jul 2019 10:53:22.456 * AOF rewrite child asks to stop sending diffs.
5209:C 09 Jul 2019 10:53:22.456 * Parent agreed to stop sending diffs. Finalizing AOF...
5209:C 09 Jul 2019 10:53:22.457 * Concatenating 43.06 MB of AOF diff received from parent.
5209:C 09 Jul 2019 10:53:23.725 * SYNC append only file rewrite performed
5209:C 09 Jul 2019 10:53:24.005 * AOF rewrite: 248 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:53:24.342 * Background AOF buffer size: 179 MB
5191:M 09 Jul 2019 10:53:24.485 * Background AOF rewrite terminated with success
5176:M 09 Jul 2019 10:53:25.649 * AOF rewrite child asks to stop sending diffs.
5210:C 09 Jul 2019 10:53:25.649 * Parent agreed to stop sending diffs. Finalizing AOF...
5210:C 09 Jul 2019 10:53:25.650 * Concatenating 25.50 MB of AOF diff received from parent.
5191:M 09 Jul 2019 10:53:26.264 * Residual parent diff successfully flushed to the rewritten AOF (185.88 MB)
5191:M 09 Jul 2019 10:53:26.806 * Background AOF rewrite finished successfully
5210:C 09 Jul 2019 10:53:26.806 * SYNC append only file rewrite performed
5191:M 09 Jul 2019 10:53:26.917 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5210:C 09 Jul 2019 10:53:27.029 * AOF rewrite: 140 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:53:27.052 * Background AOF buffer size: 77 MB
5176:M 09 Jul 2019 10:53:27.364 * Background AOF rewrite terminated with success
5176:M 09 Jul 2019 10:53:27.869 * Residual parent diff successfully flushed to the rewritten AOF (92.45 MB)
5176:M 09 Jul 2019 10:53:27.961 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:28.420 * AOF rewrite child asks to stop sending diffs.
5211:C 09 Jul 2019 10:53:28.421 * Parent agreed to stop sending diffs. Finalizing AOF...
5211:C 09 Jul 2019 10:53:28.421 * Concatenating 43.50 MB of AOF diff received from parent.
5181:M 09 Jul 2019 10:53:29.186 * AOF rewrite child asks to stop sending diffs.
5212:C 09 Jul 2019 10:53:29.186 * Parent agreed to stop sending diffs. Finalizing AOF...
5212:C 09 Jul 2019 10:53:29.186 * Concatenating 81.12 MB of AOF diff received from parent.
5211:C 09 Jul 2019 10:53:29.621 * SYNC append only file rewrite performed
5211:C 09 Jul 2019 10:53:29.892 * AOF rewrite: 174 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:53:30.362 * Background AOF rewrite terminated with success
5212:C 09 Jul 2019 10:53:30.686 * SYNC append only file rewrite performed
5212:C 09 Jul 2019 10:53:30.925 * AOF rewrite: 254 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:53:30.966 * Residual parent diff successfully flushed to the rewritten AOF (79.73 MB)
5186:M 09 Jul 2019 10:53:31.029 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:53:31.287 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:53:31.656 * Residual parent diff successfully flushed to the rewritten AOF (71.21 MB)
5181:M 09 Jul 2019 10:53:31.714 * Background AOF rewrite finished successfully
5176:M 09 Jul 2019 10:53:31.751 * Starting automatic rewriting of AOF on 110% growth
5176:M 09 Jul 2019 10:53:31.928 * Background append only file rewriting started by pid 5213
5191:M 09 Jul 2019 10:53:32.980 * Starting automatic rewriting of AOF on 100% growth
5191:M 09 Jul 2019 10:53:33.206 * Background append only file rewriting started by pid 5214
5186:M 09 Jul 2019 10:53:35.018 * Starting automatic rewriting of AOF on 100% growth
5186:M 09 Jul 2019 10:53:35.299 * Background append only file rewriting started by pid 5215
5181:M 09 Jul 2019 10:53:37.427 * Starting automatic rewriting of AOF on 100% growth
5181:M 09 Jul 2019 10:53:37.705 * Background append only file rewriting started by pid 5216
5176:M 09 Jul 2019 10:53:41.620 * AOF rewrite child asks to stop sending diffs.
5213:C 09 Jul 2019 10:53:41.620 * Parent agreed to stop sending diffs. Finalizing AOF...
5213:C 09 Jul 2019 10:53:41.621 * Concatenating 48.31 MB of AOF diff received from parent.
5213:C 09 Jul 2019 10:53:43.229 * SYNC append only file rewrite performed
5213:C 09 Jul 2019 10:53:43.550 * AOF rewrite: 378 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:53:44.355 * Background AOF rewrite terminated with success
5176:M 09 Jul 2019 10:53:44.800 * Residual parent diff successfully flushed to the rewritten AOF (53.44 MB)
5176:M 09 Jul 2019 10:53:44.872 * Background AOF rewrite finished successfully
5176:M 09 Jul 2019 10:53:44.981 * 10000 changes in 60 seconds. Saving...
5176:M 09 Jul 2019 10:53:45.405 * Background saving started by pid 5217
5191:M 09 Jul 2019 10:53:46.019 * AOF rewrite child asks to stop sending diffs.
5214:C 09 Jul 2019 10:53:46.019 * Parent agreed to stop sending diffs. Finalizing AOF...
5214:C 09 Jul 2019 10:53:46.020 * Concatenating 46.75 MB of AOF diff received from parent.
5191:M 09 Jul 2019 10:53:46.226 * Background AOF buffer size: 72 MB
5214:C 09 Jul 2019 10:53:47.523 * SYNC append only file rewrite performed
5214:C 09 Jul 2019 10:53:47.921 * AOF rewrite: 390 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:53:48.125 * AOF rewrite child asks to stop sending diffs.
5215:C 09 Jul 2019 10:53:48.185 * Parent agreed to stop sending diffs. Finalizing AOF...
5215:C 09 Jul 2019 10:53:48.186 * Concatenating 49.38 MB of AOF diff received from parent.
5191:M 09 Jul 2019 10:53:48.510 * Background AOF rewrite terminated with success
5215:C 09 Jul 2019 10:53:49.312 * SYNC append only file rewrite performed
5191:M 09 Jul 2019 10:53:49.462 * Residual parent diff successfully flushed to the rewritten AOF (134.32 MB)
5191:M 09 Jul 2019 10:53:49.615 * Background AOF rewrite finished successfully
5215:C 09 Jul 2019 10:53:49.618 * AOF rewrite: 421 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:53:49.720 * 10000 changes in 60 seconds. Saving...
5191:M 09 Jul 2019 10:53:50.146 * Background saving started by pid 5218
5186:M 09 Jul 2019 10:53:50.230 * Background AOF buffer size: 80 MB
5186:M 09 Jul 2019 10:53:50.272 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:53:50.521 * AOF rewrite child asks to stop sending diffs.
5216:C 09 Jul 2019 10:53:50.521 * Parent agreed to stop sending diffs. Finalizing AOF...
5216:C 09 Jul 2019 10:53:50.522 * Concatenating 54.31 MB of AOF diff received from parent.
5186:M 09 Jul 2019 10:53:50.819 * Residual parent diff successfully flushed to the rewritten AOF (83.49 MB)
5186:M 09 Jul 2019 10:53:50.970 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:53:51.076 * 10000 changes in 60 seconds. Saving...
5186:M 09 Jul 2019 10:53:51.521 * Background saving started by pid 5219
5216:C 09 Jul 2019 10:53:51.642 * SYNC append only file rewrite performed
5216:C 09 Jul 2019 10:53:51.995 * AOF rewrite: 432 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:53:52.272 * Background AOF buffer size: 79 MB
5181:M 09 Jul 2019 10:53:52.491 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:53:53.146 * Residual parent diff successfully flushed to the rewritten AOF (81.53 MB)
5181:M 09 Jul 2019 10:53:53.279 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:53:53.410 * 10000 changes in 60 seconds. Saving...
5181:M 09 Jul 2019 10:53:53.812 * Background saving started by pid 5220
5217:C 09 Jul 2019 10:53:54.626 * DB saved on disk
5217:C 09 Jul 2019 10:53:55.038 * RDB: 379 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:53:56.099 * Background saving terminated with success
5176:M 09 Jul 2019 10:53:56.212 * Starting automatic rewriting of AOF on 302% growth
5176:M 09 Jul 2019 10:53:56.803 * Background append only file rewriting started by pid 5221
5218:C 09 Jul 2019 10:54:02.637 * DB saved on disk
5218:C 09 Jul 2019 10:54:03.227 * RDB: 473 MB of memory used by copy-on-write
5219:C 09 Jul 2019 10:54:03.582 * DB saved on disk
5219:C 09 Jul 2019 10:54:04.085 * RDB: 369 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:54:04.312 * Background saving terminated with success
5191:M 09 Jul 2019 10:54:04.428 * Starting automatic rewriting of AOF on 209% growth
5186:M 09 Jul 2019 10:54:04.954 * Background saving terminated with success
5191:M 09 Jul 2019 10:54:04.988 * Background append only file rewriting started by pid 5222
5186:M 09 Jul 2019 10:54:05.060 * Starting automatic rewriting of AOF on 271% growth
5186:M 09 Jul 2019 10:54:05.553 * Background append only file rewriting started by pid 5223
5220:C 09 Jul 2019 10:54:07.528 * DB saved on disk
5220:C 09 Jul 2019 10:54:08.167 * RDB: 344 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:54:09.524 * Background saving terminated with success
5181:M 09 Jul 2019 10:54:09.632 * Starting automatic rewriting of AOF on 274% growth
5181:M 09 Jul 2019 10:54:10.245 * Background append only file rewriting started by pid 5224
5176:M 09 Jul 2019 10:54:10.581 * Background AOF buffer size: 70 MB
5191:M 09 Jul 2019 10:54:12.084 * Background AOF buffer size: 70 MB
5176:M 09 Jul 2019 10:54:12.308 * AOF rewrite child asks to stop sending diffs.
5221:C 09 Jul 2019 10:54:12.308 * Parent agreed to stop sending diffs. Finalizing AOF...
5221:C 09 Jul 2019 10:54:12.309 * Concatenating 58.56 MB of AOF diff received from parent.
5176:M 09 Jul 2019 10:54:12.339 * Background AOF buffer size: 70 MB
5221:C 09 Jul 2019 10:54:14.053 * SYNC append only file rewrite performed
5191:M 09 Jul 2019 10:54:14.489 * Background AOF buffer size: 73 MB
5221:C 09 Jul 2019 10:54:14.765 * AOF rewrite: 311 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:54:15.993 * Background AOF rewrite terminated with success
5176:M 09 Jul 2019 10:54:17.441 * Residual parent diff successfully flushed to the rewritten AOF (137.77 MB)
5176:M 09 Jul 2019 10:54:17.866 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:54:20.921 * Background AOF buffer size: 71 MB
5186:M 09 Jul 2019 10:54:25.173 * AOF rewrite child asks to stop sending diffs.
5223:C 09 Jul 2019 10:54:25.174 * Parent agreed to stop sending diffs. Finalizing AOF...
5223:C 09 Jul 2019 10:54:25.175 * Concatenating 74.62 MB of AOF diff received from parent.
5176:M 09 Jul 2019 10:54:26.294 * Starting automatic rewriting of AOF on 101% growth
5191:M 09 Jul 2019 10:54:26.526 * AOF rewrite child asks to stop sending diffs.
5222:C 09 Jul 2019 10:54:26.527 * Parent agreed to stop sending diffs. Finalizing AOF...
5222:C 09 Jul 2019 10:54:26.528 * Concatenating 68.19 MB of AOF diff received from parent.
5176:M 09 Jul 2019 10:54:26.948 * Background append only file rewriting started by pid 5225
5191:M 09 Jul 2019 10:54:27.175 * Background AOF buffer size: 173 MB
5223:C 09 Jul 2019 10:54:27.647 * SYNC append only file rewrite performed
5186:M 09 Jul 2019 10:54:27.965 * Background AOF buffer size: 179 MB
5223:C 09 Jul 2019 10:54:28.415 * AOF rewrite: 383 MB of memory used by copy-on-write
5222:C 09 Jul 2019 10:54:28.547 * SYNC append only file rewrite performed
5222:C 09 Jul 2019 10:54:29.218 * AOF rewrite: 447 MB of memory used by copy-on-write
5186:M 09 Jul 2019 10:54:29.642 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:54:29.824 * AOF rewrite child asks to stop sending diffs.
5224:C 09 Jul 2019 10:54:29.824 * Parent agreed to stop sending diffs. Finalizing AOF...
5224:C 09 Jul 2019 10:54:29.826 * Concatenating 78.69 MB of AOF diff received from parent.
5181:M 09 Jul 2019 10:54:30.305 * Background AOF buffer size: 72 MB
5191:M 09 Jul 2019 10:54:30.369 * Background AOF rewrite terminated with success
5224:C 09 Jul 2019 10:54:31.826 * SYNC append only file rewrite performed
5186:M 09 Jul 2019 10:54:32.011 * Residual parent diff successfully flushed to the rewritten AOF (226.90 MB)
5224:C 09 Jul 2019 10:54:32.330 * AOF rewrite: 335 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:54:32.495 * Residual parent diff successfully flushed to the rewritten AOF (256.73 MB)
5186:M 09 Jul 2019 10:54:32.661 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:54:33.007 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:54:33.228 * Background AOF rewrite finished successfully
5191:M 09 Jul 2019 10:54:33.341 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5181:M 09 Jul 2019 10:54:33.937 * Residual parent diff successfully flushed to the rewritten AOF (163.88 MB)
5181:M 09 Jul 2019 10:54:34.620 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:54:40.954 * Starting automatic rewriting of AOF on 100% growth
5176:M 09 Jul 2019 10:54:41.240 * AOF rewrite child asks to stop sending diffs.
5225:C 09 Jul 2019 10:54:41.245 * Parent agreed to stop sending diffs. Finalizing AOF...
5225:C 09 Jul 2019 10:54:41.246 * Concatenating 94.84 MB of AOF diff received from parent.
5181:M 09 Jul 2019 10:54:41.441 * Background append only file rewriting started by pid 5226
5176:M 09 Jul 2019 10:54:41.758 * Background AOF buffer size: 79 MB
5186:M 09 Jul 2019 10:54:41.880 * Starting automatic rewriting of AOF on 100% growth
5191:M 09 Jul 2019 10:54:41.977 * Starting automatic rewriting of AOF on 101% growth
5186:M 09 Jul 2019 10:54:42.559 * Background append only file rewriting started by pid 5227
5191:M 09 Jul 2019 10:54:42.765 * Background append only file rewriting started by pid 5228
5225:C 09 Jul 2019 10:54:43.409 * SYNC append only file rewrite performed
5225:C 09 Jul 2019 10:54:44.190 * AOF rewrite: 410 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:54:45.697 * Background AOF rewrite terminated with success
5176:M 09 Jul 2019 10:54:47.508 * Residual parent diff successfully flushed to the rewritten AOF (163.79 MB)
5176:M 09 Jul 2019 10:54:47.956 * Background AOF rewrite finished successfully
5176:M 09 Jul 2019 10:54:57.105 * 10000 changes in 60 seconds. Saving...
5176:M 09 Jul 2019 10:54:57.949 * Background saving started by pid 5229
5191:M 09 Jul 2019 10:54:59.880 * Background AOF buffer size: 70 MB
5191:M 09 Jul 2019 10:55:00.605 * Background AOF buffer size: 77 MB
5186:M 09 Jul 2019 10:55:04.165 * Background AOF buffer size: 70 MB
5186:M 09 Jul 2019 10:55:06.534 * Background AOF buffer size: 75 MB
5181:M 09 Jul 2019 10:55:06.794 * Background AOF buffer size: 72 MB
5181:M 09 Jul 2019 10:55:09.301 * AOF rewrite child asks to stop sending diffs.
5226:C 09 Jul 2019 10:55:09.301 * Parent agreed to stop sending diffs. Finalizing AOF...
5226:C 09 Jul 2019 10:55:09.302 * Concatenating 95.19 MB of AOF diff received from parent.
5186:M 09 Jul 2019 10:55:09.845 * AOF rewrite child asks to stop sending diffs.
5227:C 09 Jul 2019 10:55:09.845 * Parent agreed to stop sending diffs. Finalizing AOF...
5227:C 09 Jul 2019 10:55:09.846 * Concatenating 96.12 MB of AOF diff received from parent.
5191:M 09 Jul 2019 10:55:11.652 * Background AOF buffer size: 178 MB
5226:C 09 Jul 2019 10:55:12.473 * SYNC append only file rewrite performed
5227:C 09 Jul 2019 10:55:12.992 * SYNC append only file rewrite performed
5226:C 09 Jul 2019 10:55:13.334 * AOF rewrite: 510 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:55:13.338 * Background AOF buffer size: 177 MB
5186:M 09 Jul 2019 10:55:13.876 * Background AOF buffer size: 179 MB
5227:C 09 Jul 2019 10:55:13.896 * AOF rewrite: 533 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:55:14.627 * Background AOF rewrite terminated with success
5186:M 09 Jul 2019 10:55:15.242 * Background AOF rewrite terminated with success
5191:M 09 Jul 2019 10:55:15.440 * AOF rewrite child asks to stop sending diffs.
5228:C 09 Jul 2019 10:55:15.440 * Parent agreed to stop sending diffs. Finalizing AOF...
5228:C 09 Jul 2019 10:55:15.440 * Concatenating 123.38 MB of AOF diff received from parent.
5181:M 09 Jul 2019 10:55:16.409 * Residual parent diff successfully flushed to the rewritten AOF (214.52 MB)
5191:M 09 Jul 2019 10:55:16.811 * Background AOF buffer size: 270 MB
5181:M 09 Jul 2019 10:55:16.871 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:55:16.980 * 10000 changes in 60 seconds. Saving...
5186:M 09 Jul 2019 10:55:17.418 * Residual parent diff successfully flushed to the rewritten AOF (229.33 MB)
5181:M 09 Jul 2019 10:55:17.684 * Background saving started by pid 5230
5186:M 09 Jul 2019 10:55:18.100 * Background AOF rewrite finished successfully
5181:M 09 Jul 2019 10:55:18.178 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5186:M 09 Jul 2019 10:55:18.205 * 10000 changes in 60 seconds. Saving...
5186:M 09 Jul 2019 10:55:18.624 * Background saving started by pid 5231
5186:M 09 Jul 2019 10:55:18.626 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
5228:C 09 Jul 2019 10:55:18.641 * SYNC append only file rewrite performed
5228:C 09 Jul 2019 10:55:19.290 * AOF rewrite: 847 MB of memory used by copy-on-write
5191:M 09 Jul 2019 10:55:20.062 * Background AOF buffer size: 370 MB
5191:M 09 Jul 2019 10:55:20.197 * Background AOF rewrite terminated with success
5229:C 09 Jul 2019 10:55:20.269 * DB saved on disk
5229:C 09 Jul 2019 10:55:20.887 * RDB: 643 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:55:22.545 * Background saving terminated with success
5176:M 09 Jul 2019 10:55:22.655 * Starting automatic rewriting of AOF on 297% growth
5191:M 09 Jul 2019 10:55:23.219 * Residual parent diff successfully flushed to the rewritten AOF (371.36 MB)
5176:M 09 Jul 2019 10:55:23.325 * Background append only file rewriting started by pid 5232
5191:M 09 Jul 2019 10:55:24.318 * Background AOF rewrite finished successfully
5191:M 09 Jul 2019 10:55:24.447 * 10000 changes in 60 seconds. Saving...
5191:M 09 Jul 2019 10:55:25.417 * Background saving started by pid 5233
5176:M 09 Jul 2019 10:55:32.777 * Background AOF buffer size: 70 MB
5176:M 09 Jul 2019 10:55:34.436 * Background AOF buffer size: 75 MB
5230:C 09 Jul 2019 10:55:40.687 * DB saved on disk
5230:C 09 Jul 2019 10:55:41.467 * RDB: 899 MB of memory used by copy-on-write
5231:C 09 Jul 2019 10:55:42.482 * DB saved on disk
5181:M 09 Jul 2019 10:55:43.178 * Background saving terminated with success
5231:C 09 Jul 2019 10:55:43.278 * RDB: 952 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:55:43.287 * Starting automatic rewriting of AOF on 212% growth
5181:M 09 Jul 2019 10:55:44.261 * Background append only file rewriting started by pid 5235
5186:M 09 Jul 2019 10:55:45.393 * Background saving terminated with success
5186:M 09 Jul 2019 10:55:45.515 * Starting automatic rewriting of AOF on 213% growth
5176:M 09 Jul 2019 10:55:45.565 * Background AOF buffer size: 172 MB
5186:M 09 Jul 2019 10:55:46.331 * Background append only file rewriting started by pid 5236
5176:M 09 Jul 2019 10:55:51.603 * AOF rewrite child asks to stop sending diffs.
5232:C 09 Jul 2019 10:55:51.603 * Parent agreed to stop sending diffs. Finalizing AOF...
5232:C 09 Jul 2019 10:55:51.604 * Concatenating 85.81 MB of AOF diff received from parent.
5233:C 09 Jul 2019 10:55:52.991 * DB saved on disk
5232:C 09 Jul 2019 10:55:53.801 * SYNC append only file rewrite performed
5233:C 09 Jul 2019 10:55:54.013 * RDB: 916 MB of memory used by copy-on-write
5232:C 09 Jul 2019 10:55:54.975 * AOF rewrite: 1053 MB of memory used by copy-on-write
5176:M 09 Jul 2019 10:55:55.487 * Background AOF buffer size: 274 MB
5191:M 09 Jul 2019 10:55:56.535 * Background saving terminated with success
5181:M 09 Jul 2019 10:55:56.551 * Background AOF buffer size: 70 MB
5176:M 09 Jul 2019 10:55:57.855 * Background AOF rewrite terminated with success
5181:M 09 Jul 2019 10:55:58.097 * Background AOF buffer size: 75 MB
5176:M 09 Jul 2019 10:56:01.427 * Residual parent diff successfully flushed to the rewritten AOF (340.73 MB)
5176:M 09 Jul 2019 10:56:01.742 * Background AOF rewrite finished successfully
5186:M 09 Jul 2019 10:56:05.754 * Background AOF buffer size: 72 MB
5181:M 09 Jul 2019 10:56:08.659 * Background AOF buffer size: 173 MB
5181:M 09 Jul 2019 10:56:09.224 * AOF rewrite child asks to stop sending diffs.
5235:C 09 Jul 2019 10:56:09.224 * Parent agreed to stop sending diffs. Finalizing AOF...
5235:C 09 Jul 2019 10:56:09.225 * Concatenating 86.25 MB of AOF diff received from parent.
5235:C 09 Jul 2019 10:56:10.902 * SYNC append only file rewrite performed
5235:C 09 Jul 2019 10:56:11.532 * AOF rewrite: 972 MB of memory used by copy-on-write
5181:M 09 Jul 2019 10:56:12.245 * Background AOF buffer size: 270 MB
5181:M 09 Jul 2019 10:56:13.232 * Background AOF rewrite terminated with success
5186:M 09 Jul 2019 10:56:14.125 * AOF rewrite child asks to stop sending diffs.
5236:C 09 Jul 2019 10:56:14.126 * Parent agreed to stop sending diffs. Finalizing AOF...
5236:C 09 Jul 2019 10:56:14.126 * Concatenating 140.94 MB of AOF diff received from parent.
5186:M 09 Jul 2019 10:56:15.105 * Background AOF buffer size: 179 MB
5181:M 09 Jul 2019 10:56:15.183 * Residual parent diff successfully flushed to the rewritten AOF (311.94 MB)
5181:M 09 Jul 2019 10:56:16.222 * Background AOF rewrite finished successfully
5236:C 09 Jul 2019 10:56:16.754 * SYNC append only file rewrite performed
5236:C 09 Jul 2019 10:56:17.093 * AOF rewrite: 1166 MB of memory used by copy-on-write
+ sleep 5
5186:M 09 Jul 2019 10:56:17.874 * Background AOF rewrite terminated with success
5186:M 09 Jul 2019 10:56:18.153 * Residual parent diff successfully flushed to the rewritten AOF (223.55 MB)
5186:M 09 Jul 2019 10:56:18.521 * Background AOF rewrite finished successfully
+ ps aux
+ grep redis-server
+ awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
5176
5181
5186
5191
5240
5241
/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/run.sh: line 73:  5239 Done                    ps aux
      5240                       | grep redis-server
      5241 Killed                  | awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf dump.rdb
+ rm -rf appendonly-6378.aof appendonly-6379.aof appendonly-6380.aof appendonly-6381.aof
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ set +x
[ 1402.913517] Curr 4866 Currname redis-server4 HeteroProcname redis-server4 cache-hits 226843 cache-miss 1101642 buff-hits 17349 buff-miss 1565646 migrated 0 migrate_time 0 avg_buff_life(us) 21551105 pgbuff-del 3892 avg_cache_life(us) 0 pgcache-del 0 active-cache 226843
[ 1402.913517]  
[ 1406.743905] drop_caches: sh (5033): drop_caches: 3
[ 1408.452489] drop_caches: sh (5041): drop_caches: 3
[ 1451.998192] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
[ 1453.353142] drop_caches: sh (5096): drop_caches: 3
[ 1455.125211] drop_caches: sh (5104): drop_caches: 3
[ 1463.202037] drop_caches: sh (5167): drop_caches: 3
[ 1464.920328] drop_caches: sh (5175): drop_caches: 3
[ 1464.971619] flag is set to collect hetero allocate  9 
[ 1464.971623] flag is set to enable HETERO_PGCACHE 11 
[ 1464.971624] flag is set to enable HETERO_BUFFER 12 
[ 1464.971624] flag is set to enable HETERO_JOURNAL 13 
[ 1464.971625] flag is set to enable HETERO_RADIX 14 
[ 1464.971626] flag is set to enable HETERO_FULLKERN 15 
[ 1464.971627] flag to set FASTMEM node to 0 
[ 1464.971628] hetero_pid set to 5176 5176 procname numactl
[ 1464.971629] flag to set FASTMEM node to 0 
[ 1464.971630] flag to set MIGRATION FREQ to 1000 
[ 1464.971631] flag enables HETERO_OBJAFF 1 
[ 1464.971632] flag to MIGRATE_LISTCNT 100 
[ 1464.982145] flag is set to collect hetero allocate  9 
[ 1464.982148] flag is set to enable HETERO_PGCACHE 11 
[ 1464.982149] flag is set to enable HETERO_BUFFER 12 
[ 1464.982150] flag is set to enable HETERO_JOURNAL 13 
[ 1464.982151] flag is set to enable HETERO_RADIX 14 
[ 1464.982152] flag is set to enable HETERO_FULLKERN 15 
[ 1464.982152] flag to set FASTMEM node to 0 
[ 1464.982154] hetero_pid set to 5176 5176 procname redis-server1
[ 1464.982154] flag to set FASTMEM node to 0 
[ 1464.982155] flag to set MIGRATION FREQ to 1000 
[ 1464.982156] flag enables HETERO_OBJAFF 1 
[ 1464.982157] flag to MIGRATE_LISTCNT 100 
[ 1465.972758] flag is set to collect hetero allocate  9 
[ 1465.972761] flag is set to enable HETERO_PGCACHE 11 
[ 1465.972762] flag is set to enable HETERO_BUFFER 12 
[ 1465.972763] flag is set to enable HETERO_JOURNAL 13 
[ 1465.972764] flag is set to enable HETERO_RADIX 14 
[ 1465.972765] flag is set to enable HETERO_FULLKERN 15 
[ 1465.972765] flag to set FASTMEM node to 0 
[ 1465.972767] hetero_pid set to 5181 5181 procname numactl
[ 1465.972768] flag to set FASTMEM node to 0 
[ 1465.972769] flag to set MIGRATION FREQ to 1000 
[ 1465.972770] flag enables HETERO_OBJAFF 1 
[ 1465.972771] flag to MIGRATE_LISTCNT 100 
[ 1465.974980] flag is set to collect hetero allocate  9 
[ 1465.974983] flag is set to enable HETERO_PGCACHE 11 
[ 1465.974984] flag is set to enable HETERO_BUFFER 12 
[ 1465.974985] flag is set to enable HETERO_JOURNAL 13 
[ 1465.974986] flag is set to enable HETERO_RADIX 14 
[ 1465.974987] flag is set to enable HETERO_FULLKERN 15 
[ 1465.974987] flag to set FASTMEM node to 0 
[ 1465.974989] hetero_pid set to 5181 5181 procname redis-server2
[ 1465.974990] flag to set FASTMEM node to 0 
[ 1465.974991] flag to set MIGRATION FREQ to 1000 
[ 1465.974992] flag enables HETERO_OBJAFF 1 
[ 1465.974993] flag to MIGRATE_LISTCNT 100 
[ 1466.974027] flag is set to collect hetero allocate  9 
[ 1466.974029] flag is set to enable HETERO_PGCACHE 11 
[ 1466.974030] flag is set to enable HETERO_BUFFER 12 
[ 1466.974030] flag is set to enable HETERO_JOURNAL 13 
[ 1466.974031] flag is set to enable HETERO_RADIX 14 
[ 1466.974034] flag is set to enable HETERO_FULLKERN 15 
[ 1466.974035] flag to set FASTMEM node to 0 
[ 1466.974037] hetero_pid set to 5186 5186 procname numactl
[ 1466.974037] flag to set FASTMEM node to 0 
[ 1466.974038] flag to set MIGRATION FREQ to 1000 
[ 1466.974039] flag enables HETERO_OBJAFF 1 
[ 1466.974041] flag to MIGRATE_LISTCNT 100 
[ 1466.976238] flag is set to collect hetero allocate  9 
[ 1466.976243] flag is set to enable HETERO_PGCACHE 11 
[ 1466.976244] flag is set to enable HETERO_BUFFER 12 
[ 1466.976245] flag is set to enable HETERO_JOURNAL 13 
[ 1466.976246] flag is set to enable HETERO_RADIX 14 
[ 1466.976246] flag is set to enable HETERO_FULLKERN 15 
[ 1466.976247] flag to set FASTMEM node to 0 
[ 1466.976249] hetero_pid set to 5186 5186 procname redis-server3
[ 1466.976249] flag to set FASTMEM node to 0 
[ 1466.976251] flag to set MIGRATION FREQ to 1000 
[ 1466.976251] flag enables HETERO_OBJAFF 1 
[ 1466.976253] flag to MIGRATE_LISTCNT 100 
[ 1467.975284] flag is set to collect hetero allocate  9 
[ 1467.975287] flag is set to enable HETERO_PGCACHE 11 
[ 1467.975288] flag is set to enable HETERO_BUFFER 12 
[ 1467.975289] flag is set to enable HETERO_JOURNAL 13 
[ 1467.975290] flag is set to enable HETERO_RADIX 14 
[ 1467.975291] flag is set to enable HETERO_FULLKERN 15 
[ 1467.975292] flag to set FASTMEM node to 0 
[ 1467.975293] hetero_pid set to 5191 5191 procname numactl
[ 1467.975294] flag to set FASTMEM node to 0 
[ 1467.975295] flag to set MIGRATION FREQ to 1000 
[ 1467.975296] flag enables HETERO_OBJAFF 1 
[ 1467.975297] flag to MIGRATE_LISTCNT 100 
[ 1467.977428] flag is set to collect hetero allocate  9 
[ 1467.977431] flag is set to enable HETERO_PGCACHE 11 
[ 1467.977432] flag is set to enable HETERO_BUFFER 12 
[ 1467.977433] flag is set to enable HETERO_JOURNAL 13 
[ 1467.977434] flag is set to enable HETERO_RADIX 14 
[ 1467.977435] flag is set to enable HETERO_FULLKERN 15 
[ 1467.977435] flag to set FASTMEM node to 0 
[ 1467.977437] hetero_pid set to 5191 5191 procname redis-server4
[ 1467.977438] flag to set FASTMEM node to 0 
[ 1467.977439] flag to set MIGRATION FREQ to 1000 
[ 1467.977440] flag enables HETERO_OBJAFF 1 
[ 1467.977441] flag to MIGRATE_LISTCNT 100 
[ 1687.471776] Curr 5180 Currname redis-server1 HeteroProcname redis-server4 cache-hits 247263 cache-miss 1030523 buff-hits 15370 buff-miss 1488173 migrated 0 migrate_time 0 avg_buff_life(us) 33008995 pgbuff-del 960 avg_cache_life(us) 0 pgcache-del 0 active-cache 247263
[ 1687.471776]  
[ 1687.471780] Curr 5178 Currname redis-server1 HeteroProcname redis-server4 cache-hits 247263 cache-miss 1030523 buff-hits 15370 buff-miss 1488173 migrated 0 migrate_time 0 avg_buff_life(us) 33008995 pgbuff-del 960 avg_cache_life(us) 0 pgcache-del 0 active-cache 247263
[ 1687.471780]  
[ 1687.471806] Curr 5179 Currname redis-server1 HeteroProcname redis-server4 cache-hits 247263 cache-miss 1030523 buff-hits 15370 buff-miss 1488173 migrated 0 migrate_time 0 avg_buff_life(us) 33008995 pgbuff-del 960 avg_cache_life(us) 0 pgcache-del 0 active-cache 247263
[ 1687.471806]  
[ 1687.471822] Curr 5176 Currname redis-server1 HeteroProcname redis-server4 cache-hits 247263 cache-miss 1030523 buff-hits 15370 buff-miss 1488173 migrated 0 migrate_time 0 avg_buff_life(us) 33475453 pgbuff-del 962 avg_cache_life(us) 0 pgcache-del 0 active-cache 247263
[ 1687.471822]  
[ 1687.478427] Curr 5185 Currname redis-server2 HeteroProcname redis-server4 cache-hits 243016 cache-miss 1054874 buff-hits 18014 buff-miss 1399059 migrated 0 migrate_time 0 avg_buff_life(us) 27743730 pgbuff-del 1157 avg_cache_life(us) 0 pgcache-del 0 active-cache 243016
[ 1687.478427]  
[ 1687.478437] Curr 5184 Currname redis-server2 HeteroProcname redis-server4 cache-hits 243016 cache-miss 1054874 buff-hits 18014 buff-miss 1399059 migrated 0 migrate_time 0 avg_buff_life(us) 27743730 pgbuff-del 1157 avg_cache_life(us) 0 pgcache-del 0 active-cache 243016
[ 1687.478437]  
[ 1687.478458] Curr 5181 Currname redis-server2 HeteroProcname redis-server4 cache-hits 243016 cache-miss 1054874 buff-hits 18014 buff-miss 1399059 migrated 0 migrate_time 0 avg_buff_life(us) 27719771 pgbuff-del 1158 avg_cache_life(us) 0 pgcache-del 0 active-cache 243016
[ 1687.478458]  
[ 1687.478479] Curr 5183 Currname redis-server2 HeteroProcname redis-server4 cache-hits 243016 cache-miss 1054874 buff-hits 18014 buff-miss 1399059 migrated 0 migrate_time 0 avg_buff_life(us) 27719771 pgbuff-del 1158 avg_cache_life(us) 0 pgcache-del 0 active-cache 243016
[ 1687.478479]  
[ 1687.484552] Curr 5190 Currname redis-server3 HeteroProcname redis-server4 cache-hits 244172 cache-miss 1054544 buff-hits 18712 buff-miss 1384183 migrated 0 migrate_time 0 avg_buff_life(us) 29370272 pgbuff-del 1107 avg_cache_life(us) 0 pgcache-del 0 active-cache 244172
[ 1687.484552]  
[ 1687.484565] Curr 5189 Currname redis-server3 HeteroProcname redis-server4 cache-hits 244172 cache-miss 1054544 buff-hits 18712 buff-miss 1384183 migrated 0 migrate_time 0 avg_buff_life(us) 29370272 pgbuff-del 1107 avg_cache_life(us) 0 pgcache-del 0 active-cache 244172
[ 1687.484565]  
[ 1687.484580] Curr 5186 Currname redis-server3 HeteroProcname redis-server4 cache-hits 244172 cache-miss 1054544 buff-hits 18712 buff-miss 1384183 migrated 0 migrate_time 0 avg_buff_life(us) 29370272 pgbuff-del 1107 avg_cache_life(us) 0 pgcache-del 0 active-cache 244172
[ 1687.484580]  
[ 1687.484610] Curr 5188 Currname redis-server3 HeteroProcname redis-server4 cache-hits 244172 cache-miss 1054544 buff-hits 18712 buff-miss 1384183 migrated 0 migrate_time 0 avg_buff_life(us) 29370272 pgbuff-del 1107 avg_cache_life(us) 0 pgcache-del 0 active-cache 244172
[ 1687.484610]  
[ 1687.490551] Curr 5191 Currname redis-server4 HeteroProcname redis-server4 cache-hits 303226 cache-miss 1028664 buff-hits 16102 buff-miss 1660130 migrated 0 migrate_time 0 avg_buff_life(us) 26342174 pgbuff-del 1037 avg_cache_life(us) 0 pgcache-del 0 active-cache 303226
[ 1687.490551]  
[ 1687.490554] Curr 5193 Currname redis-server4 HeteroProcname redis-server4 cache-hits 303226 cache-miss 1028664 buff-hits 16102 buff-miss 1660130 migrated 0 migrate_time 0 avg_buff_life(us) 26342174 pgbuff-del 1037 avg_cache_life(us) 0 pgcache-del 0 active-cache 303226
[ 1687.490554]  
[ 1687.490645] Curr 5194 Currname redis-server4 HeteroProcname redis-server4 cache-hits 303226 cache-miss 1028664 buff-hits 16102 buff-miss 1660130 migrated 0 migrate_time 0 avg_buff_life(us) 26342174 pgbuff-del 1037 avg_cache_life(us) 0 pgcache-del 0 active-cache 303226
[ 1687.490645]  
