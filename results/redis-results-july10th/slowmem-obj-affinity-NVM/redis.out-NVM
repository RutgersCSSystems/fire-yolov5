+ REDISROOT=/users/skannan/ssd/NVM/appbench/redis-5.0.5
+ REDISCONF=/users/skannan/ssd/NVM/appbench/redis-5.0.5/config
+ APPBASE=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ APP=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/pagerank
+ PARAM=
+ OUTPUT=
+ READS=1000000
+ KEYS=1000000
+ CLIPREFIX='numactl --preferred=0'
+ PHYSCPU=--physcpubind
+ let MAXINST=4
+ let STARTPORT=6378
+ let SERVERCPU=20
+ let DATASIZE=4096
+ let physcpu=0
+ let physcpu2=1
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
redis-server1: no process found
+ sudo killall redis-server1
redis-server1: no process found
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
redis-server2: no process found
+ sudo killall redis-server2
redis-server2: no process found
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
redis-server3: no process found
+ sudo killall redis-server3
redis-server3: no process found
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
redis-server4: no process found
+ sudo killall redis-server4
redis-server4: no process found
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sleep 5
+ PREPARE
+ (( inst=1 ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server1 redis-benchmark1
+ cp redis-server redis-server1
+ cp redis-benchmark redis-benchmark1
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server2 redis-benchmark2
+ cp redis-server redis-server2
+ cp redis-benchmark redis-benchmark2
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server3 redis-benchmark3
+ cp redis-server redis-server3
+ cp redis-benchmark redis-benchmark3
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server4 redis-benchmark4
+ cp redis-server redis-server4
+ cp redis-benchmark redis-benchmark4
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ FlushDisk
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ sudo sh -c sync
+ sudo sh -c sync
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ cd /users/skannan/ssd/NVM/appbench/shared_data
+ RUN
+ let port=6378
+ let physcpu=20
+ let physcpu2=20+1
+ (( r=1 ))
+ (( r<=4 ))
+ let port=6378+1
+ let physcpu=20+2
+ let physcpu2=21+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=20,21 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server1 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6378.conf
initiating tracing...
initiating tracing...
24992:C 10 Jul 2019 08:57:44.568 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
24992:C 10 Jul 2019 08:57:44.568 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=24992, just started
24992:C 10 Jul 2019 08:57:44.568 # Configuration loaded
24992:M 10 Jul 2019 08:57:44.568 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
24992:M 10 Jul 2019 08:57:44.568 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
24992:M 10 Jul 2019 08:57:44.568 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6378
 |    `-._   `._    /     _.-'    |     PID: 24992
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

24992:M 10 Jul 2019 08:57:44.583 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
24992:M 10 Jul 2019 08:57:44.583 # Server initialized
24992:M 10 Jul 2019 08:57:44.584 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
24992:M 10 Jul 2019 08:57:44.584 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
24992:M 10 Jul 2019 08:57:44.584 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6379+1
+ let physcpu=22+2
+ let physcpu2=23+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=22,23 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server2 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6379.conf
initiating tracing...
initiating tracing...
24997:C 10 Jul 2019 08:57:45.540 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
24997:C 10 Jul 2019 08:57:45.540 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=24997, just started
24997:C 10 Jul 2019 08:57:45.540 # Configuration loaded
24997:M 10 Jul 2019 08:57:45.541 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
24997:M 10 Jul 2019 08:57:45.541 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
24997:M 10 Jul 2019 08:57:45.541 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 24997
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

24997:M 10 Jul 2019 08:57:45.542 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
24997:M 10 Jul 2019 08:57:45.542 # Server initialized
24997:M 10 Jul 2019 08:57:45.542 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
24997:M 10 Jul 2019 08:57:45.542 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
24997:M 10 Jul 2019 08:57:45.542 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6380+1
+ let physcpu=24+2
+ let physcpu2=25+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=24,25 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server3 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6380.conf
initiating tracing...
initiating tracing...
25002:C 10 Jul 2019 08:57:46.542 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
25002:C 10 Jul 2019 08:57:46.542 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=25002, just started
25002:C 10 Jul 2019 08:57:46.542 # Configuration loaded
25002:M 10 Jul 2019 08:57:46.542 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
25002:M 10 Jul 2019 08:57:46.542 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
25002:M 10 Jul 2019 08:57:46.542 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6380
 |    `-._   `._    /     _.-'    |     PID: 25002
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

25002:M 10 Jul 2019 08:57:46.544 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
25002:M 10 Jul 2019 08:57:46.544 # Server initialized
25002:M 10 Jul 2019 08:57:46.544 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
25002:M 10 Jul 2019 08:57:46.544 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
25002:M 10 Jul 2019 08:57:46.544 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6381+1
+ let physcpu=26+2
+ let physcpu2=27+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=26,27 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server4 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6381.conf
initiating tracing...
initiating tracing...
25007:C 10 Jul 2019 08:57:47.544 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
25007:C 10 Jul 2019 08:57:47.544 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=25007, just started
25007:C 10 Jul 2019 08:57:47.544 # Configuration loaded
25007:M 10 Jul 2019 08:57:47.545 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
25007:M 10 Jul 2019 08:57:47.545 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
25007:M 10 Jul 2019 08:57:47.545 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6381
 |    `-._   `._    /     _.-'    |     PID: 25007
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

25007:M 10 Jul 2019 08:57:47.546 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
25007:M 10 Jul 2019 08:57:47.546 # Server initialized
25007:M 10 Jul 2019 08:57:47.546 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
25007:M 10 Jul 2019 08:57:47.546 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
25007:M 10 Jul 2019 08:57:47.546 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ export LD_PRELOAD=
+ LD_PRELOAD=
+ sleep 10
+ RUNCLIENT
+ let port=6378
+ let physcpu=2
+ let physcpu2=3
+ PARAMS=' -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q  -h 127.0.0.1 -d 4096'
+ (( c=1 ))
+ (( c<4 ))
+ let port=6378+1
+ let physcpu=2+1
+ let physcpu2=3+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6378
+ let port=6379+1
+ let physcpu=3+1
+ let physcpu2=5+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6379
+ let port=6380+1
+ let physcpu=4+1
+ let physcpu2=7+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6381
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6380
24997:M 10 Jul 2019 08:57:58.767 * Starting automatic rewriting of AOF on 7987577100% growth
24997:M 10 Jul 2019 08:57:58.768 * Background append only file rewriting started by pid 25017
25002:M 10 Jul 2019 08:57:58.769 * Starting automatic rewriting of AOF on 7113826100% growth
25002:M 10 Jul 2019 08:57:58.770 * Background append only file rewriting started by pid 25018
25007:M 10 Jul 2019 08:57:58.771 * Starting automatic rewriting of AOF on 7420260100% growth
25007:M 10 Jul 2019 08:57:58.772 * Background append only file rewriting started by pid 25019
24992:M 10 Jul 2019 08:57:58.811 * Starting automatic rewriting of AOF on 9596769700% growth
24992:M 10 Jul 2019 08:57:58.812 * Background append only file rewriting started by pid 25020
25002:M 10 Jul 2019 08:57:59.282 * AOF rewrite child asks to stop sending diffs.
25018:C 10 Jul 2019 08:57:59.282 * Parent agreed to stop sending diffs. Finalizing AOF...
25018:C 10 Jul 2019 08:57:59.282 * Concatenating 90.19 MB of AOF diff received from parent.
25007:M 10 Jul 2019 08:57:59.287 * AOF rewrite child asks to stop sending diffs.
25019:C 10 Jul 2019 08:57:59.287 * Parent agreed to stop sending diffs. Finalizing AOF...
25019:C 10 Jul 2019 08:57:59.287 * Concatenating 90.81 MB of AOF diff received from parent.
24997:M 10 Jul 2019 08:57:59.287 * AOF rewrite child asks to stop sending diffs.
25017:C 10 Jul 2019 08:57:59.287 * Parent agreed to stop sending diffs. Finalizing AOF...
25017:C 10 Jul 2019 08:57:59.287 * Concatenating 87.19 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:57:59.298 * AOF rewrite child asks to stop sending diffs.
25020:C 10 Jul 2019 08:57:59.298 * Parent agreed to stop sending diffs. Finalizing AOF...
25020:C 10 Jul 2019 08:57:59.298 * Concatenating 71.31 MB of AOF diff received from parent.
25002:M 10 Jul 2019 08:57:59.574 * Background AOF buffer size: 80 MB
25007:M 10 Jul 2019 08:57:59.587 * Background AOF buffer size: 80 MB
24997:M 10 Jul 2019 08:57:59.599 * Background AOF buffer size: 80 MB
24992:M 10 Jul 2019 08:57:59.645 * Background AOF buffer size: 80 MB
24997:M 10 Jul 2019 08:58:00.825 * Background AOF buffer size: 180 MB
25002:M 10 Jul 2019 08:58:00.884 * Background AOF buffer size: 180 MB
25007:M 10 Jul 2019 08:58:01.502 * Background AOF buffer size: 180 MB
24992:M 10 Jul 2019 08:58:01.681 * Background AOF buffer size: 180 MB
25020:C 10 Jul 2019 08:58:01.999 * SYNC append only file rewrite performed
25018:C 10 Jul 2019 08:58:01.999 * SYNC append only file rewrite performed
25017:C 10 Jul 2019 08:58:01.999 * SYNC append only file rewrite performed
25019:C 10 Jul 2019 08:58:02.000 * SYNC append only file rewrite performed
24997:M 10 Jul 2019 08:58:02.010 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25019:C 10 Jul 2019 08:58:02.010 * AOF rewrite: 115 MB of memory used by copy-on-write
25017:C 10 Jul 2019 08:58:02.010 * AOF rewrite: 104 MB of memory used by copy-on-write
25018:C 10 Jul 2019 08:58:02.010 * AOF rewrite: 120 MB of memory used by copy-on-write
25020:C 10 Jul 2019 08:58:02.010 * AOF rewrite: 88 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:58:02.327 * Background AOF rewrite terminated with success
24992:M 10 Jul 2019 08:58:02.421 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:58:02.467 * Background AOF rewrite terminated with success
24997:M 10 Jul 2019 08:58:02.586 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 08:58:03.369 * Residual parent diff successfully flushed to the rewritten AOF (204.82 MB)
25007:M 10 Jul 2019 08:58:03.608 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 08:58:03.650 * Residual parent diff successfully flushed to the rewritten AOF (196.20 MB)
25002:M 10 Jul 2019 08:58:03.721 * Residual parent diff successfully flushed to the rewritten AOF (238.14 MB)
24992:M 10 Jul 2019 08:58:03.841 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:03.923 * Residual parent diff successfully flushed to the rewritten AOF (238.03 MB)
25002:M 10 Jul 2019 08:58:03.953 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:04.128 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:07.755 * Starting automatic rewriting of AOF on 111% growth
24997:M 10 Jul 2019 08:58:07.817 * Background append only file rewriting started by pid 25021
25007:M 10 Jul 2019 08:58:07.835 * Starting automatic rewriting of AOF on 151% growth
25007:M 10 Jul 2019 08:58:07.902 * Background append only file rewriting started by pid 25022
25002:M 10 Jul 2019 08:58:08.017 * Starting automatic rewriting of AOF on 111% growth
24992:M 10 Jul 2019 08:58:08.024 * Starting automatic rewriting of AOF on 140% growth
25002:M 10 Jul 2019 08:58:08.079 * Background append only file rewriting started by pid 25023
24992:M 10 Jul 2019 08:58:08.099 * Background append only file rewriting started by pid 25024
24997:M 10 Jul 2019 08:58:09.037 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25007:M 10 Jul 2019 08:58:09.077 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
24992:M 10 Jul 2019 08:58:10.018 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25002:M 10 Jul 2019 08:58:10.123 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25007:M 10 Jul 2019 08:58:12.636 * AOF rewrite child asks to stop sending diffs.
25022:C 10 Jul 2019 08:58:12.637 * Parent agreed to stop sending diffs. Finalizing AOF...
25022:C 10 Jul 2019 08:58:12.637 * Concatenating 29.19 MB of AOF diff received from parent.
24997:M 10 Jul 2019 08:58:12.908 * AOF rewrite child asks to stop sending diffs.
25021:C 10 Jul 2019 08:58:12.908 * Parent agreed to stop sending diffs. Finalizing AOF...
25021:C 10 Jul 2019 08:58:12.909 * Concatenating 28.75 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:58:13.020 * AOF rewrite child asks to stop sending diffs.
25024:C 10 Jul 2019 08:58:13.020 * Parent agreed to stop sending diffs. Finalizing AOF...
25024:C 10 Jul 2019 08:58:13.021 * Concatenating 26.56 MB of AOF diff received from parent.
25022:C 10 Jul 2019 08:58:13.325 * SYNC append only file rewrite performed
25022:C 10 Jul 2019 08:58:13.453 * AOF rewrite: 120 MB of memory used by copy-on-write
25002:M 10 Jul 2019 08:58:13.559 * AOF rewrite child asks to stop sending diffs.
25023:C 10 Jul 2019 08:58:13.560 * Parent agreed to stop sending diffs. Finalizing AOF...
25023:C 10 Jul 2019 08:58:13.560 * Concatenating 33.94 MB of AOF diff received from parent.
25007:M 10 Jul 2019 08:58:13.646 * Background AOF rewrite terminated with success
25021:C 10 Jul 2019 08:58:13.646 * SYNC append only file rewrite performed
25024:C 10 Jul 2019 08:58:13.646 * SYNC append only file rewrite performed
25024:C 10 Jul 2019 08:58:13.712 * AOF rewrite: 91 MB of memory used by copy-on-write
25021:C 10 Jul 2019 08:58:13.741 * AOF rewrite: 108 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:58:13.911 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 08:58:13.944 * Residual parent diff successfully flushed to the rewritten AOF (51.19 MB)
24997:M 10 Jul 2019 08:58:13.978 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 08:58:13.998 * Background AOF rewrite finished successfully
25023:C 10 Jul 2019 08:58:14.186 * SYNC append only file rewrite performed
24992:M 10 Jul 2019 08:58:14.210 * Residual parent diff successfully flushed to the rewritten AOF (39.10 MB)
25023:C 10 Jul 2019 08:58:14.227 * AOF rewrite: 285 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:58:14.227 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:14.278 * Residual parent diff successfully flushed to the rewritten AOF (60.20 MB)
24997:M 10 Jul 2019 08:58:14.374 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:58:14.381 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:58:14.490 * Residual parent diff successfully flushed to the rewritten AOF (63.05 MB)
25002:M 10 Jul 2019 08:58:14.512 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 08:58:14.856 * Starting automatic rewriting of AOF on 106% growth
25007:M 10 Jul 2019 08:58:14.860 * Starting automatic rewriting of AOF on 107% growth
24992:M 10 Jul 2019 08:58:14.949 * Background append only file rewriting started by pid 25025
25007:M 10 Jul 2019 08:58:14.970 * Background append only file rewriting started by pid 25026
25002:M 10 Jul 2019 08:58:15.363 * Starting automatic rewriting of AOF on 110% growth
24997:M 10 Jul 2019 08:58:15.393 * Starting automatic rewriting of AOF on 144% growth
25002:M 10 Jul 2019 08:58:15.404 * Background append only file rewriting started by pid 25027
24997:M 10 Jul 2019 08:58:15.435 * Background append only file rewriting started by pid 25028
24992:M 10 Jul 2019 08:58:18.713 * AOF rewrite child asks to stop sending diffs.
25025:C 10 Jul 2019 08:58:18.713 * Parent agreed to stop sending diffs. Finalizing AOF...
25025:C 10 Jul 2019 08:58:18.714 * Concatenating 38.94 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:58:19.214 * Background AOF buffer size: 79 MB
25007:M 10 Jul 2019 08:58:19.551 * AOF rewrite child asks to stop sending diffs.
25026:C 10 Jul 2019 08:58:19.551 * Parent agreed to stop sending diffs. Finalizing AOF...
25026:C 10 Jul 2019 08:58:19.552 * Concatenating 48.44 MB of AOF diff received from parent.
25025:C 10 Jul 2019 08:58:19.840 * SYNC append only file rewrite performed
25025:C 10 Jul 2019 08:58:19.964 * AOF rewrite: 140 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:58:20.280 * Background AOF rewrite terminated with success
25026:C 10 Jul 2019 08:58:20.625 * SYNC append only file rewrite performed
25026:C 10 Jul 2019 08:58:20.765 * AOF rewrite: 175 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:58:20.826 * Background AOF buffer size: 75 MB
25007:M 10 Jul 2019 08:58:20.968 * Background AOF rewrite terminated with success
24992:M 10 Jul 2019 08:58:21.094 * Residual parent diff successfully flushed to the rewritten AOF (110.77 MB)
24997:M 10 Jul 2019 08:58:21.192 * AOF rewrite child asks to stop sending diffs.
25028:C 10 Jul 2019 08:58:21.192 * Parent agreed to stop sending diffs. Finalizing AOF...
25028:C 10 Jul 2019 08:58:21.193 * Concatenating 67.94 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:58:21.419 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 08:58:21.841 * Residual parent diff successfully flushed to the rewritten AOF (87.00 MB)
25002:M 10 Jul 2019 08:58:21.849 * AOF rewrite child asks to stop sending diffs.
25027:C 10 Jul 2019 08:58:21.849 * Parent agreed to stop sending diffs. Finalizing AOF...
25027:C 10 Jul 2019 08:58:21.850 * Concatenating 65.88 MB of AOF diff received from parent.
25007:M 10 Jul 2019 08:58:21.993 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 08:58:22.120 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25028:C 10 Jul 2019 08:58:22.601 * SYNC append only file rewrite performed
25028:C 10 Jul 2019 08:58:22.762 * AOF rewrite: 195 MB of memory used by copy-on-write
24997:M 10 Jul 2019 08:58:23.050 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:58:23.240 * Background AOF buffer size: 79 MB
25027:C 10 Jul 2019 08:58:23.463 * SYNC append only file rewrite performed
25027:C 10 Jul 2019 08:58:23.604 * AOF rewrite: 271 MB of memory used by copy-on-write
24997:M 10 Jul 2019 08:58:23.704 * Residual parent diff successfully flushed to the rewritten AOF (70.26 MB)
24997:M 10 Jul 2019 08:58:23.807 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:58:23.890 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:58:24.252 * Residual parent diff successfully flushed to the rewritten AOF (106.38 MB)
25002:M 10 Jul 2019 08:58:24.282 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 08:58:24.577 * Starting automatic rewriting of AOF on 116% growth
24992:M 10 Jul 2019 08:58:24.649 * Background append only file rewriting started by pid 25030
25007:M 10 Jul 2019 08:58:24.659 * Starting automatic rewriting of AOF on 103% growth
25007:M 10 Jul 2019 08:58:24.725 * Background append only file rewriting started by pid 25031
24997:M 10 Jul 2019 08:58:26.754 * Starting automatic rewriting of AOF on 101% growth
24997:M 10 Jul 2019 08:58:26.940 * Background append only file rewriting started by pid 25032
25002:M 10 Jul 2019 08:58:29.894 * Starting automatic rewriting of AOF on 100% growth
25002:M 10 Jul 2019 08:58:30.226 * Background append only file rewriting started by pid 25033
24992:M 10 Jul 2019 08:58:31.718 * AOF rewrite child asks to stop sending diffs.
25030:C 10 Jul 2019 08:58:31.718 * Parent agreed to stop sending diffs. Finalizing AOF...
25030:C 10 Jul 2019 08:58:31.719 * Concatenating 29.50 MB of AOF diff received from parent.
25030:C 10 Jul 2019 08:58:32.602 * SYNC append only file rewrite performed
25007:M 10 Jul 2019 08:58:32.712 * AOF rewrite child asks to stop sending diffs.
25031:C 10 Jul 2019 08:58:32.712 * Parent agreed to stop sending diffs. Finalizing AOF...
25031:C 10 Jul 2019 08:58:32.713 * Concatenating 30.25 MB of AOF diff received from parent.
25030:C 10 Jul 2019 08:58:32.797 * AOF rewrite: 378 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:58:33.006 * Background AOF buffer size: 70 MB
24992:M 10 Jul 2019 08:58:33.149 * Background AOF rewrite terminated with success
25031:C 10 Jul 2019 08:58:33.163 * SYNC append only file rewrite performed
25031:C 10 Jul 2019 08:58:33.289 * AOF rewrite: 368 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:58:33.426 * Residual parent diff successfully flushed to the rewritten AOF (78.13 MB)
24992:M 10 Jul 2019 08:58:33.465 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 08:58:33.544 * Background AOF buffer size: 78 MB
25007:M 10 Jul 2019 08:58:33.682 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 08:58:33.919 * Residual parent diff successfully flushed to the rewritten AOF (88.22 MB)
25007:M 10 Jul 2019 08:58:33.973 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:35.637 * AOF rewrite child asks to stop sending diffs.
25032:C 10 Jul 2019 08:58:35.637 * Parent agreed to stop sending diffs. Finalizing AOF...
25032:C 10 Jul 2019 08:58:35.638 * Concatenating 44.06 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:58:35.978 * Starting automatic rewriting of AOF on 102% growth
24992:M 10 Jul 2019 08:58:36.306 * Background append only file rewriting started by pid 25034
25032:C 10 Jul 2019 08:58:36.410 * SYNC append only file rewrite performed
25007:M 10 Jul 2019 08:58:36.641 * Starting automatic rewriting of AOF on 100% growth
25032:C 10 Jul 2019 08:58:36.684 * AOF rewrite: 359 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:58:36.927 * Background append only file rewriting started by pid 25035
24997:M 10 Jul 2019 08:58:37.101 * Background AOF rewrite terminated with success
24997:M 10 Jul 2019 08:58:37.432 * Residual parent diff successfully flushed to the rewritten AOF (52.13 MB)
24997:M 10 Jul 2019 08:58:37.495 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:58:39.555 * AOF rewrite child asks to stop sending diffs.
25033:C 10 Jul 2019 08:58:39.555 * Parent agreed to stop sending diffs. Finalizing AOF...
25033:C 10 Jul 2019 08:58:39.556 * Concatenating 49.69 MB of AOF diff received from parent.
25033:C 10 Jul 2019 08:58:40.879 * SYNC append only file rewrite performed
25033:C 10 Jul 2019 08:58:41.161 * AOF rewrite: 381 MB of memory used by copy-on-write
25002:M 10 Jul 2019 08:58:41.229 * Background AOF buffer size: 74 MB
24997:M 10 Jul 2019 08:58:41.499 * Starting automatic rewriting of AOF on 110% growth
24997:M 10 Jul 2019 08:58:41.702 * Background append only file rewriting started by pid 25036
25002:M 10 Jul 2019 08:58:41.739 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:58:42.907 * Residual parent diff successfully flushed to the rewritten AOF (113.33 MB)
25002:M 10 Jul 2019 08:58:43.124 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:58:43.227 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25007:M 10 Jul 2019 08:58:43.302 * Background AOF buffer size: 71 MB
24992:M 10 Jul 2019 08:58:46.810 * AOF rewrite child asks to stop sending diffs.
25034:C 10 Jul 2019 08:58:46.811 * Parent agreed to stop sending diffs. Finalizing AOF...
25034:C 10 Jul 2019 08:58:46.812 * Concatenating 63.19 MB of AOF diff received from parent.
25002:M 10 Jul 2019 08:58:47.013 * 10000 changes in 60 seconds. Saving...
25002:M 10 Jul 2019 08:58:47.392 * Background saving started by pid 25037
25007:M 10 Jul 2019 08:58:47.522 * AOF rewrite child asks to stop sending diffs.
25035:C 10 Jul 2019 08:58:47.522 * Parent agreed to stop sending diffs. Finalizing AOF...
25035:C 10 Jul 2019 08:58:47.523 * Concatenating 55.69 MB of AOF diff received from parent.
25034:C 10 Jul 2019 08:58:48.642 * SYNC append only file rewrite performed
24992:M 10 Jul 2019 08:58:49.030 * Background AOF buffer size: 77 MB
25034:C 10 Jul 2019 08:58:49.125 * AOF rewrite: 309 MB of memory used by copy-on-write
25035:C 10 Jul 2019 08:58:49.560 * SYNC append only file rewrite performed
24992:M 10 Jul 2019 08:58:49.767 * Background AOF rewrite terminated with success
25035:C 10 Jul 2019 08:58:49.915 * AOF rewrite: 285 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:58:50.542 * Background AOF buffer size: 177 MB
24992:M 10 Jul 2019 08:58:50.593 * Residual parent diff successfully flushed to the rewritten AOF (102.36 MB)
25007:M 10 Jul 2019 08:58:50.634 * Background AOF rewrite terminated with success
24992:M 10 Jul 2019 08:58:50.642 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 08:58:50.748 * 10000 changes in 60 seconds. Saving...
24997:M 10 Jul 2019 08:58:51.070 * Background AOF buffer size: 70 MB
24992:M 10 Jul 2019 08:58:51.082 * Background saving started by pid 25038
25007:M 10 Jul 2019 08:58:51.952 * Residual parent diff successfully flushed to the rewritten AOF (186.57 MB)
25007:M 10 Jul 2019 08:58:52.227 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 08:58:52.337 * 10000 changes in 60 seconds. Saving...
25007:M 10 Jul 2019 08:58:52.709 * Background saving started by pid 25039
25007:M 10 Jul 2019 08:58:52.709 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
24997:M 10 Jul 2019 08:58:53.010 * AOF rewrite child asks to stop sending diffs.
25036:C 10 Jul 2019 08:58:53.011 * Parent agreed to stop sending diffs. Finalizing AOF...
25036:C 10 Jul 2019 08:58:53.012 * Concatenating 45.19 MB of AOF diff received from parent.
25036:C 10 Jul 2019 08:58:54.429 * SYNC append only file rewrite performed
25036:C 10 Jul 2019 08:58:54.833 * AOF rewrite: 268 MB of memory used by copy-on-write
24997:M 10 Jul 2019 08:58:55.434 * Background AOF buffer size: 175 MB
24997:M 10 Jul 2019 08:58:55.596 * Background AOF rewrite terminated with success
24997:M 10 Jul 2019 08:58:57.375 * Residual parent diff successfully flushed to the rewritten AOF (178.80 MB)
24997:M 10 Jul 2019 08:58:57.775 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 08:58:57.903 * 10000 changes in 60 seconds. Saving...
24997:M 10 Jul 2019 08:58:58.373 * Background saving started by pid 25040
25038:C 10 Jul 2019 08:59:00.710 * DB saved on disk
25038:C 10 Jul 2019 08:59:01.188 * RDB: 369 MB of memory used by copy-on-write
25037:C 10 Jul 2019 08:59:01.663 * DB saved on disk
24992:M 10 Jul 2019 08:59:02.006 * Background saving terminated with success
25037:C 10 Jul 2019 08:59:02.094 * RDB: 413 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:59:02.110 * Starting automatic rewriting of AOF on 170% growth
24992:M 10 Jul 2019 08:59:02.543 * Background append only file rewriting started by pid 25041
25002:M 10 Jul 2019 08:59:03.070 * Background saving terminated with success
25002:M 10 Jul 2019 08:59:03.175 * Starting automatic rewriting of AOF on 356% growth
25002:M 10 Jul 2019 08:59:03.642 * Background append only file rewriting started by pid 25042
25039:C 10 Jul 2019 08:59:06.126 * DB saved on disk
25039:C 10 Jul 2019 08:59:06.720 * RDB: 553 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:59:07.892 * Background saving terminated with success
25007:M 10 Jul 2019 08:59:07.994 * Starting automatic rewriting of AOF on 167% growth
25007:M 10 Jul 2019 08:59:08.541 * Background append only file rewriting started by pid 25043
25040:C 10 Jul 2019 08:59:10.970 * DB saved on disk
25040:C 10 Jul 2019 08:59:11.614 * RDB: 472 MB of memory used by copy-on-write
24997:M 10 Jul 2019 08:59:12.988 * Background saving terminated with success
24997:M 10 Jul 2019 08:59:13.090 * Starting automatic rewriting of AOF on 151% growth
24997:M 10 Jul 2019 08:59:13.625 * Background append only file rewriting started by pid 25044
24992:M 10 Jul 2019 08:59:18.533 * AOF rewrite child asks to stop sending diffs.
25041:C 10 Jul 2019 08:59:18.534 * Parent agreed to stop sending diffs. Finalizing AOF...
25041:C 10 Jul 2019 08:59:18.534 * Concatenating 76.50 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:59:20.145 * Background AOF buffer size: 70 MB
25041:C 10 Jul 2019 08:59:21.548 * SYNC append only file rewrite performed
25041:C 10 Jul 2019 08:59:22.400 * AOF rewrite: 329 MB of memory used by copy-on-write
24992:M 10 Jul 2019 08:59:23.844 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:59:24.398 * AOF rewrite child asks to stop sending diffs.
25042:C 10 Jul 2019 08:59:24.398 * Parent agreed to stop sending diffs. Finalizing AOF...
25042:C 10 Jul 2019 08:59:24.399 * Concatenating 74.25 MB of AOF diff received from parent.
25002:M 10 Jul 2019 08:59:24.999 * Background AOF buffer size: 71 MB
24992:M 10 Jul 2019 08:59:25.829 * Residual parent diff successfully flushed to the rewritten AOF (126.37 MB)
24992:M 10 Jul 2019 08:59:26.157 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 08:59:26.279 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
25007:M 10 Jul 2019 08:59:26.432 * Background AOF buffer size: 70 MB
25042:C 10 Jul 2019 08:59:27.431 * SYNC append only file rewrite performed
25042:C 10 Jul 2019 08:59:28.207 * AOF rewrite: 407 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:59:29.171 * Background AOF buffer size: 73 MB
25002:M 10 Jul 2019 08:59:29.520 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 08:59:31.593 * Residual parent diff successfully flushed to the rewritten AOF (168.55 MB)
25007:M 10 Jul 2019 08:59:31.623 * AOF rewrite child asks to stop sending diffs.
25043:C 10 Jul 2019 08:59:31.623 * Parent agreed to stop sending diffs. Finalizing AOF...
25043:C 10 Jul 2019 08:59:31.624 * Concatenating 83.19 MB of AOF diff received from parent.
25002:M 10 Jul 2019 08:59:31.830 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:59:31.937 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
24997:M 10 Jul 2019 08:59:33.809 * AOF rewrite child asks to stop sending diffs.
25044:C 10 Jul 2019 08:59:33.809 * Parent agreed to stop sending diffs. Finalizing AOF...
25044:C 10 Jul 2019 08:59:33.811 * Concatenating 66.75 MB of AOF diff received from parent.
24997:M 10 Jul 2019 08:59:34.007 * Background AOF buffer size: 77 MB
25043:C 10 Jul 2019 08:59:34.504 * SYNC append only file rewrite performed
24992:M 10 Jul 2019 08:59:34.805 * Starting automatic rewriting of AOF on 101% growth
25043:C 10 Jul 2019 08:59:35.068 * AOF rewrite: 399 MB of memory used by copy-on-write
25007:M 10 Jul 2019 08:59:35.251 * Background AOF buffer size: 170 MB
24992:M 10 Jul 2019 08:59:35.447 * Background append only file rewriting started by pid 25046
25044:C 10 Jul 2019 08:59:35.636 * SYNC append only file rewrite performed
25007:M 10 Jul 2019 08:59:36.135 * Background AOF rewrite terminated with success
25044:C 10 Jul 2019 08:59:36.265 * AOF rewrite: 328 MB of memory used by copy-on-write
24997:M 10 Jul 2019 08:59:37.317 * Background AOF buffer size: 177 MB
24997:M 10 Jul 2019 08:59:37.528 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 08:59:37.954 * Residual parent diff successfully flushed to the rewritten AOF (196.13 MB)
25007:M 10 Jul 2019 08:59:38.274 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 08:59:38.392 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
24997:M 10 Jul 2019 08:59:38.991 * Residual parent diff successfully flushed to the rewritten AOF (181.29 MB)
24997:M 10 Jul 2019 08:59:39.575 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 08:59:39.936 * Starting automatic rewriting of AOF on 105% growth
25002:M 10 Jul 2019 08:59:40.456 * Background append only file rewriting started by pid 25053
24992:M 10 Jul 2019 08:59:44.507 * Background AOF buffer size: 74 MB
25002:M 10 Jul 2019 08:59:46.852 * Background AOF buffer size: 71 MB
25007:M 10 Jul 2019 08:59:46.864 * Starting automatic rewriting of AOF on 100% growth
25002:M 10 Jul 2019 08:59:47.300 * Background AOF buffer size: 79 MB
24997:M 10 Jul 2019 08:59:47.460 * Starting automatic rewriting of AOF on 101% growth
25007:M 10 Jul 2019 08:59:47.557 * Background append only file rewriting started by pid 25054
24997:M 10 Jul 2019 08:59:48.164 * Background append only file rewriting started by pid 25055
24992:M 10 Jul 2019 08:59:58.344 * AOF rewrite child asks to stop sending diffs.
25046:C 10 Jul 2019 08:59:58.345 * Parent agreed to stop sending diffs. Finalizing AOF...
25046:C 10 Jul 2019 08:59:58.346 * Concatenating 76.62 MB of AOF diff received from parent.
24992:M 10 Jul 2019 08:59:58.891 * Background AOF buffer size: 178 MB
25046:C 10 Jul 2019 09:00:01.988 * SYNC append only file rewrite performed
25046:C 10 Jul 2019 09:00:02.890 * AOF rewrite: 472 MB of memory used by copy-on-write
24992:M 10 Jul 2019 09:00:04.688 * Background AOF rewrite terminated with success
25002:M 10 Jul 2019 09:00:05.820 * Background AOF buffer size: 170 MB
25002:M 10 Jul 2019 09:00:08.152 * AOF rewrite child asks to stop sending diffs.
25053:C 10 Jul 2019 09:00:08.152 * Parent agreed to stop sending diffs. Finalizing AOF...
25053:C 10 Jul 2019 09:00:08.153 * Concatenating 82.88 MB of AOF diff received from parent.
25002:M 10 Jul 2019 09:00:08.455 * Background AOF buffer size: 180 MB
24992:M 10 Jul 2019 09:00:08.967 * Residual parent diff successfully flushed to the rewritten AOF (265.07 MB)
24992:M 10 Jul 2019 09:00:09.344 * Background AOF rewrite finished successfully
24992:M 10 Jul 2019 09:00:09.476 * 10000 changes in 60 seconds. Saving...
24992:M 10 Jul 2019 09:00:10.509 * Background saving started by pid 25057
25053:C 10 Jul 2019 09:00:10.525 * SYNC append only file rewrite performed
25007:M 10 Jul 2019 09:00:10.569 * Background AOF buffer size: 71 MB
25007:M 10 Jul 2019 09:00:11.039 * Background AOF buffer size: 79 MB
25053:C 10 Jul 2019 09:00:11.248 * AOF rewrite: 559 MB of memory used by copy-on-write
25002:M 10 Jul 2019 09:00:12.514 * Background AOF buffer size: 280 MB
25002:M 10 Jul 2019 09:00:12.675 * Background AOF rewrite terminated with success
24997:M 10 Jul 2019 09:00:14.797 * AOF rewrite child asks to stop sending diffs.
25055:C 10 Jul 2019 09:00:14.797 * Parent agreed to stop sending diffs. Finalizing AOF...
25055:C 10 Jul 2019 09:00:14.799 * Concatenating 92.44 MB of AOF diff received from parent.
25002:M 10 Jul 2019 09:00:16.609 * Residual parent diff successfully flushed to the rewritten AOF (290.88 MB)
25002:M 10 Jul 2019 09:00:17.791 * Background AOF rewrite finished successfully
25055:C 10 Jul 2019 09:00:17.808 * SYNC append only file rewrite performed
25002:M 10 Jul 2019 09:00:17.902 * 10000 changes in 60 seconds. Saving...
25007:M 10 Jul 2019 09:00:18.381 * AOF rewrite child asks to stop sending diffs.
25054:C 10 Jul 2019 09:00:18.381 * Parent agreed to stop sending diffs. Finalizing AOF...
25054:C 10 Jul 2019 09:00:18.382 * Concatenating 98.25 MB of AOF diff received from parent.
24997:M 10 Jul 2019 09:00:18.461 * Background AOF buffer size: 80 MB
25055:C 10 Jul 2019 09:00:18.576 * AOF rewrite: 397 MB of memory used by copy-on-write
25002:M 10 Jul 2019 09:00:18.837 * Background saving started by pid 25058
25007:M 10 Jul 2019 09:00:19.694 * Background AOF buffer size: 179 MB
24997:M 10 Jul 2019 09:00:19.993 * Background AOF rewrite terminated with success
25054:C 10 Jul 2019 09:00:20.446 * SYNC append only file rewrite performed
25054:C 10 Jul 2019 09:00:21.416 * AOF rewrite: 601 MB of memory used by copy-on-write
24997:M 10 Jul 2019 09:00:21.482 * Residual parent diff successfully flushed to the rewritten AOF (130.81 MB)
24997:M 10 Jul 2019 09:00:21.802 * Background AOF rewrite finished successfully
24997:M 10 Jul 2019 09:00:21.903 * 10000 changes in 60 seconds. Saving...
25007:M 10 Jul 2019 09:00:22.471 * Background AOF buffer size: 279 MB
24997:M 10 Jul 2019 09:00:22.644 * Background saving started by pid 25059
25007:M 10 Jul 2019 09:00:22.788 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 09:00:25.913 * Residual parent diff successfully flushed to the rewritten AOF (296.67 MB)
25007:M 10 Jul 2019 09:00:26.899 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 09:00:27.022 * 10000 changes in 60 seconds. Saving...
25007:M 10 Jul 2019 09:00:27.828 * Background saving started by pid 25060
25057:C 10 Jul 2019 09:00:32.533 * DB saved on disk
25057:C 10 Jul 2019 09:00:33.401 * RDB: 898 MB of memory used by copy-on-write
24992:M 10 Jul 2019 09:00:35.807 * Background saving terminated with success
24992:M 10 Jul 2019 09:00:35.925 * Starting automatic rewriting of AOF on 185% growth
24992:M 10 Jul 2019 09:00:36.773 * Background append only file rewriting started by pid 25061
25059:C 10 Jul 2019 09:00:40.921 * DB saved on disk
25059:C 10 Jul 2019 09:00:41.610 * RDB: 739 MB of memory used by copy-on-write
25058:C 10 Jul 2019 09:00:41.743 * DB saved on disk
25058:C 10 Jul 2019 09:00:42.565 * RDB: 1247 MB of memory used by copy-on-write
24997:M 10 Jul 2019 09:00:43.523 * Background saving terminated with success
24997:M 10 Jul 2019 09:00:43.633 * Starting automatic rewriting of AOF on 255% growth
24997:M 10 Jul 2019 09:00:44.401 * Background append only file rewriting started by pid 25062
25002:M 10 Jul 2019 09:00:44.557 * Background saving terminated with success
25002:M 10 Jul 2019 09:00:44.673 * Starting automatic rewriting of AOF on 158% growth
25002:M 10 Jul 2019 09:00:45.429 * Background append only file rewriting started by pid 25063
25060:C 10 Jul 2019 09:00:52.396 * DB saved on disk
25060:C 10 Jul 2019 09:00:53.364 * RDB: 1262 MB of memory used by copy-on-write
24997:M 10 Jul 2019 09:00:54.942 * Background AOF buffer size: 71 MB
24997:M 10 Jul 2019 09:00:56.241 * Background AOF buffer size: 78 MB
25007:M 10 Jul 2019 09:00:56.417 * Background saving terminated with success
25007:M 10 Jul 2019 09:00:56.522 * Starting automatic rewriting of AOF on 148% growth
25007:M 10 Jul 2019 09:00:57.411 * Background append only file rewriting started by pid 25064
24992:M 10 Jul 2019 09:01:08.112 * AOF rewrite child asks to stop sending diffs.
25061:C 10 Jul 2019 09:01:08.112 * Parent agreed to stop sending diffs. Finalizing AOF...
25061:C 10 Jul 2019 09:01:08.113 * Concatenating 144.94 MB of AOF diff received from parent.
24997:M 10 Jul 2019 09:01:09.820 * AOF rewrite child asks to stop sending diffs.
25062:C 10 Jul 2019 09:01:09.821 * Parent agreed to stop sending diffs. Finalizing AOF...
25062:C 10 Jul 2019 09:01:09.822 * Concatenating 72.88 MB of AOF diff received from parent.
25062:C 10 Jul 2019 09:01:11.517 * SYNC append only file rewrite performed
25061:C 10 Jul 2019 09:01:11.788 * SYNC append only file rewrite performed
24997:M 10 Jul 2019 09:01:12.425 * Background AOF buffer size: 179 MB
25062:C 10 Jul 2019 09:01:12.533 * AOF rewrite: 769 MB of memory used by copy-on-write
24992:M 10 Jul 2019 09:01:12.622 * Background AOF buffer size: 80 MB
25061:C 10 Jul 2019 09:01:12.929 * AOF rewrite: 786 MB of memory used by copy-on-write
24997:M 10 Jul 2019 09:01:14.876 * Background AOF rewrite terminated with success
24992:M 10 Jul 2019 09:01:15.429 * Background AOF rewrite terminated with success
24992:M 10 Jul 2019 09:01:16.597 * Residual parent diff successfully flushed to the rewritten AOF (155.35 MB)
24997:M 10 Jul 2019 09:01:16.656 * Residual parent diff successfully flushed to the rewritten AOF (241.00 MB)
24992:M 10 Jul 2019 09:01:16.838 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 09:01:16.992 * Background AOF buffer size: 72 MB
24997:M 10 Jul 2019 09:01:17.141 * Background AOF rewrite finished successfully
25002:M 10 Jul 2019 09:01:19.572 * AOF rewrite child asks to stop sending diffs.
25063:C 10 Jul 2019 09:01:19.573 * Parent agreed to stop sending diffs. Finalizing AOF...
25063:C 10 Jul 2019 09:01:19.573 * Concatenating 210.12 MB of AOF diff received from parent.
25063:C 10 Jul 2019 09:01:22.342 * SYNC append only file rewrite performed
25007:M 10 Jul 2019 09:01:22.377 * AOF rewrite child asks to stop sending diffs.
25064:C 10 Jul 2019 09:01:22.377 * Parent agreed to stop sending diffs. Finalizing AOF...
25064:C 10 Jul 2019 09:01:22.377 * Concatenating 80.95 MB of AOF diff received from parent.
25063:C 10 Jul 2019 09:01:22.687 * AOF rewrite: 631 MB of memory used by copy-on-write
25064:C 10 Jul 2019 09:01:23.342 * SYNC append only file rewrite performed
25002:M 10 Jul 2019 09:01:23.736 * Background AOF rewrite terminated with success
25064:C 10 Jul 2019 09:01:23.749 * AOF rewrite: 278 MB of memory used by copy-on-write
25002:M 10 Jul 2019 09:01:23.756 * Residual parent diff successfully flushed to the rewritten AOF (10.97 MB)
25002:M 10 Jul 2019 09:01:23.759 * Background AOF rewrite finished successfully
25007:M 10 Jul 2019 09:01:24.432 * Background AOF rewrite terminated with success
25007:M 10 Jul 2019 09:01:24.433 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)
25007:M 10 Jul 2019 09:01:24.433 * Background AOF rewrite finished successfully
+ sleep 5
+ ps aux
+ grep redis-server
+ awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
24992
24997
25002
25007
25067
25068
/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/run.sh: line 73: 25066 Done                    ps aux
     25067                       | grep redis-server
     25068 Killed                  | awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf dump.rdb
+ rm -rf appendonly-6378.aof appendonly-6379.aof appendonly-6380.aof appendonly-6381.aof
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ set +x
[ 2089.316190] drop_caches: sh (12003): drop_caches: 3
[ 2098.239182] drop_caches: sh (12011): drop_caches: 3
[51935.516710] nvmemul: ioctl command: 0xc008aa02
[51935.516715] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[51935.516719] nvmemul: ioctl command: 0xc008aa02
[51935.516720] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[51935.516724] nvmemul: ioctl command: 0x8008aa01
[51935.516725] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x800f
[51935.516728] nvmemul: ioctl command: 0x8008aa01
[51935.516729] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x800f
[51935.516731] nvmemul: ioctl command: 0x8008aa01
[51935.516732] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x800f
[51935.516735] nvmemul: ioctl command: 0x8008aa01
[51935.516736] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x800f
[51957.732291] nvmemul: ioctl command: 0xc008aa02
[51957.732323] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x800f
[51957.732357] nvmemul: ioctl command: 0x8008aa01
[51957.732359] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x801e
[51957.732368] nvmemul: ioctl command: 0x8008aa01
[51957.732374] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x801e
[51957.732384] nvmemul: ioctl command: 0x8008aa01
[51957.732390] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x801e
[51957.732399] nvmemul: ioctl command: 0x8008aa01
[51957.732405] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x801e
[51969.831122] nvmemul: ioctl command: 0xc008aa02
[51969.831143] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x801e
[51969.831171] nvmemul: ioctl command: 0x8008aa01
[51969.831174] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x802d
[51969.831176] nvmemul: ioctl command: 0x8008aa01
[51969.831181] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x802d
[51969.831183] nvmemul: ioctl command: 0x8008aa01
[51969.831184] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x802d
[51969.831187] nvmemul: ioctl command: 0x8008aa01
[51969.831188] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x802d
[51978.836205] nvmemul: ioctl command: 0xc008aa02
[51978.836217] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x802d
[51978.836224] nvmemul: ioctl command: 0x8008aa01
[51978.836225] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x803c
[51978.836233] nvmemul: ioctl command: 0x8008aa01
[51978.836234] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x803c
[51978.836237] nvmemul: ioctl command: 0x8008aa01
[51978.836238] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x803c
[51978.836240] nvmemul: ioctl command: 0x8008aa01
[51978.836241] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x803c
[51996.104781] nvmemul: ioctl command: 0xc008aa02
[51996.104787] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x803c
[51996.104792] nvmemul: ioctl command: 0x8008aa01
[51996.104794] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x8fff
[51996.104796] nvmemul: ioctl command: 0x8008aa01
[51996.104797] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x8fff
[51996.104800] nvmemul: ioctl command: 0x8008aa01
[51996.104801] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x8fff
[51996.104803] nvmemul: ioctl command: 0x8008aa01
[51996.104804] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x8fff
[51996.104807] nvmemul: ioctl command: 0xc008aa02
[51996.104808] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[51996.104811] nvmemul: ioctl command: 0x8008aa01
[51996.104811] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x800f
[51996.104814] nvmemul: ioctl command: 0x8008aa01
[51996.104815] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x800f
[51996.104817] nvmemul: ioctl command: 0x8008aa01
[51996.104818] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x800f
[51996.104820] nvmemul: ioctl command: 0x8008aa01
[51996.104821] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x800f
[52001.789437] perf: interrupt took too long (34441 > 33300), lowering kernel.perf_event_max_sample_rate to 5750
[52017.644056] nvmemul: ioctl command: 0xc008aa02
[52017.644062] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x800f
[52017.644108] nvmemul: ioctl command: 0x8008aa01
[52017.644110] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x801e
[52017.644113] nvmemul: ioctl command: 0x8008aa01
[52017.644113] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x801e
[52017.644116] nvmemul: ioctl command: 0x8008aa01
[52017.644117] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x801e
[52017.644120] nvmemul: ioctl command: 0x8008aa01
[52017.644120] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x801e
[52029.760925] nvmemul: ioctl command: 0xc008aa02
[52029.760936] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x801e
[52029.760946] nvmemul: ioctl command: 0x8008aa01
[52029.760947] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x802d
[52029.760950] nvmemul: ioctl command: 0x8008aa01
[52029.760951] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x802d
[52029.760954] nvmemul: ioctl command: 0x8008aa01
[52029.760955] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x802d
[52029.760958] nvmemul: ioctl command: 0x8008aa01
[52029.760958] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x802d
[52038.659503] nvmemul: ioctl command: 0xc008aa02
[52038.659509] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x802d
[52038.659516] nvmemul: ioctl command: 0x8008aa01
[52038.659518] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x803c
[52038.659521] nvmemul: ioctl command: 0x8008aa01
[52038.659521] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x803c
[52038.659524] nvmemul: ioctl command: 0x8008aa01
[52038.659525] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x803c
[52038.659528] nvmemul: ioctl command: 0x8008aa01
[52038.659528] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x803c
[52091.648961] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
[52093.260557] drop_caches: sh (24912): drop_caches: 3
[52094.987610] drop_caches: sh (24920): drop_caches: 3
[52103.074430] drop_caches: sh (24982): drop_caches: 3
[52104.742605] drop_caches: sh (24991): drop_caches: 3
[52104.798276] flag is set to collect hetero allocate  9 
[52104.798278] flag is set to enable HETERO_PGCACHE 11 
[52104.798279] flag is set to enable HETERO_BUFFER 12 
[52104.798279] flag is set to enable HETERO_JOURNAL 13 
[52104.798280] flag is set to enable HETERO_RADIX 14 
[52104.798281] flag is set to enable HETERO_FULLKERN 15 
[52104.798282] flag to set FASTMEM node to 0 
[52104.798283] hetero_pid set to 24992 24992 procname numactl
[52104.798284] flag to set FASTMEM node to 0 
[52104.798285] flag to set MIGRATION FREQ to 10000 
[52104.798286] flag enables HETERO_OBJAFF 1 
[52104.798287] flag to MIGRATE_LISTCNT 1000 
[52104.818715] flag is set to collect hetero allocate  9 
[52104.818717] flag is set to enable HETERO_PGCACHE 11 
[52104.818717] flag is set to enable HETERO_BUFFER 12 
[52104.818718] flag is set to enable HETERO_JOURNAL 13 
[52104.818719] flag is set to enable HETERO_RADIX 14 
[52104.818719] flag is set to enable HETERO_FULLKERN 15 
[52104.818720] flag to set FASTMEM node to 0 
[52104.818722] hetero_pid set to 24992 24992 procname redis-server1
[52104.818722] flag to set FASTMEM node to 0 
[52104.818723] flag to set MIGRATION FREQ to 10000 
[52104.818724] flag enables HETERO_OBJAFF 1 
[52104.818725] flag to MIGRATE_LISTCNT 1000 
[52105.793112] flag is set to collect hetero allocate  9 
[52105.793115] flag is set to enable HETERO_PGCACHE 11 
[52105.793116] flag is set to enable HETERO_BUFFER 12 
[52105.793116] flag is set to enable HETERO_JOURNAL 13 
[52105.793117] flag is set to enable HETERO_RADIX 14 
[52105.793118] flag is set to enable HETERO_FULLKERN 15 
[52105.793119] flag to set FASTMEM node to 0 
[52105.793121] hetero_pid set to 24997 24997 procname numactl
[52105.793122] flag to set FASTMEM node to 0 
[52105.793123] flag to set MIGRATION FREQ to 10000 
[52105.793124] flag enables HETERO_OBJAFF 1 
[52105.793125] flag to MIGRATE_LISTCNT 1000 
[52105.795309] flag is set to collect hetero allocate  9 
[52105.795311] flag is set to enable HETERO_PGCACHE 11 
[52105.795312] flag is set to enable HETERO_BUFFER 12 
[52105.795312] flag is set to enable HETERO_JOURNAL 13 
[52105.795313] flag is set to enable HETERO_RADIX 14 
[52105.795314] flag is set to enable HETERO_FULLKERN 15 
[52105.795315] flag to set FASTMEM node to 0 
[52105.795316] hetero_pid set to 24997 24997 procname redis-server2
[52105.795317] flag to set FASTMEM node to 0 
[52105.795318] flag to set MIGRATION FREQ to 10000 
[52105.795319] flag enables HETERO_OBJAFF 1 
[52105.795320] flag to MIGRATE_LISTCNT 1000 
[52106.794758] flag is set to collect hetero allocate  9 
[52106.794761] flag is set to enable HETERO_PGCACHE 11 
[52106.794762] flag is set to enable HETERO_BUFFER 12 
[52106.794763] flag is set to enable HETERO_JOURNAL 13 
[52106.794764] flag is set to enable HETERO_RADIX 14 
[52106.794765] flag is set to enable HETERO_FULLKERN 15 
[52106.794766] flag to set FASTMEM node to 0 
[52106.794767] hetero_pid set to 25002 25002 procname numactl
[52106.794768] flag to set FASTMEM node to 0 
[52106.794769] flag to set MIGRATION FREQ to 10000 
[52106.794770] flag enables HETERO_OBJAFF 1 
[52106.794772] flag to MIGRATE_LISTCNT 1000 
[52106.796820] flag is set to collect hetero allocate  9 
[52106.796822] flag is set to enable HETERO_PGCACHE 11 
[52106.796822] flag is set to enable HETERO_BUFFER 12 
[52106.796823] flag is set to enable HETERO_JOURNAL 13 
[52106.796824] flag is set to enable HETERO_RADIX 14 
[52106.796824] flag is set to enable HETERO_FULLKERN 15 
[52106.796825] flag to set FASTMEM node to 0 
[52106.796826] hetero_pid set to 25002 25002 procname redis-server3
[52106.796827] flag to set FASTMEM node to 0 
[52106.796828] flag to set MIGRATION FREQ to 10000 
[52106.796829] flag enables HETERO_OBJAFF 1 
[52106.796830] flag to MIGRATE_LISTCNT 1000 
[52107.796315] flag is set to collect hetero allocate  9 
[52107.796318] flag is set to enable HETERO_PGCACHE 11 
[52107.796319] flag is set to enable HETERO_BUFFER 12 
[52107.796320] flag is set to enable HETERO_JOURNAL 13 
[52107.796321] flag is set to enable HETERO_RADIX 14 
[52107.796322] flag is set to enable HETERO_FULLKERN 15 
[52107.796322] flag to set FASTMEM node to 0 
[52107.796324] hetero_pid set to 25007 25007 procname numactl
[52107.796325] flag to set FASTMEM node to 0 
[52107.796326] flag to set MIGRATION FREQ to 10000 
[52107.796327] flag enables HETERO_OBJAFF 1 
[52107.796328] flag to MIGRATE_LISTCNT 1000 
[52107.798718] flag is set to collect hetero allocate  9 
[52107.798719] flag is set to enable HETERO_PGCACHE 11 
[52107.798720] flag is set to enable HETERO_BUFFER 12 
[52107.798721] flag is set to enable HETERO_JOURNAL 13 
[52107.798722] flag is set to enable HETERO_RADIX 14 
[52107.798723] flag is set to enable HETERO_FULLKERN 15 
[52107.798723] flag to set FASTMEM node to 0 
[52107.798725] hetero_pid set to 25007 25007 procname redis-server4
[52107.798725] flag to set FASTMEM node to 0 
[52107.798727] flag to set MIGRATION FREQ to 10000 
[52107.798727] flag enables HETERO_OBJAFF 1 
[52107.798728] flag to MIGRATE_LISTCNT 1000 
[52333.002177] Curr 24992 Currname redis-server1 HeteroProcname redis-server4 cache-hits 346924 cache-miss 934911 buff-hits 21340 buff-miss 1286571 migrated 0 migrate_time 0 avg_buff_life(us) 3377347511 pgbuff-del 689 avg_cache_life(us) 0 pgcache-del 0 active-cache 346924
[52333.002177]  
[52333.002191] Curr 24994 Currname redis-server1 HeteroProcname redis-server4 cache-hits 346924 cache-miss 934911 buff-hits 21340 buff-miss 1286571 migrated 0 migrate_time 0 avg_buff_life(us) 3372460357 pgbuff-del 690 avg_cache_life(us) 0 pgcache-del 0 active-cache 346924
[52333.002191]  
[52333.002266] Curr 24996 Currname redis-server1 HeteroProcname redis-server4 cache-hits 346924 cache-miss 934911 buff-hits 21340 buff-miss 1286571 migrated 0 migrate_time 0 avg_buff_life(us) 3372460357 pgbuff-del 690 avg_cache_life(us) 0 pgcache-del 0 active-cache 346924
[52333.002266]  
[52333.002283] Curr 24995 Currname redis-server1 HeteroProcname redis-server4 cache-hits 346924 cache-miss 934911 buff-hits 21340 buff-miss 1286571 migrated 0 migrate_time 0 avg_buff_life(us) 3362713362 pgbuff-del 692 avg_cache_life(us) 0 pgcache-del 0 active-cache 346924
[52333.002283]  
[52333.009476] Curr 24997 Currname redis-server2 HeteroProcname redis-server4 cache-hits 320893 cache-miss 984588 buff-hits 19694 buff-miss 1306871 migrated 0 migrate_time 0 avg_buff_life(us) 2913878661 pgbuff-del 557 avg_cache_life(us) 0 pgcache-del 0 active-cache 320893
[52333.009476]  
[52333.009496] Curr 24999 Currname redis-server2 HeteroProcname redis-server4 cache-hits 320893 cache-miss 984588 buff-hits 19694 buff-miss 1306871 migrated 0 migrate_time 0 avg_buff_life(us) 2913878661 pgbuff-del 557 avg_cache_life(us) 0 pgcache-del 0 active-cache 320893
[52333.009496]  
[52333.009541] Curr 25001 Currname redis-server2 HeteroProcname redis-server4 cache-hits 320893 cache-miss 984588 buff-hits 19694 buff-miss 1306871 migrated 0 migrate_time 0 avg_buff_life(us) 2913878661 pgbuff-del 557 avg_cache_life(us) 0 pgcache-del 0 active-cache 320893
[52333.009541]  
[52333.009561] Curr 25000 Currname redis-server2 HeteroProcname redis-server4 cache-hits 320893 cache-miss 984588 buff-hits 19694 buff-miss 1306871 migrated 0 migrate_time 0 avg_buff_life(us) 2998888770 pgbuff-del 558 avg_cache_life(us) 0 pgcache-del 0 active-cache 320893
[52333.009561]  
[52333.016397] Curr 25002 Currname redis-server3 HeteroProcname redis-server4 cache-hits 314415 cache-miss 950160 buff-hits 21657 buff-miss 1266421 migrated 0 migrate_time 0 avg_buff_life(us) 2797429900 pgbuff-del 781 avg_cache_life(us) 0 pgcache-del 0 active-cache 314415
[52333.016397]  
[52333.016404] Curr 25005 Currname redis-server3 HeteroProcname redis-server4 cache-hits 314415 cache-miss 950160 buff-hits 21657 buff-miss 1266421 migrated 0 migrate_time 0 avg_buff_life(us) 2797429900 pgbuff-del 781 avg_cache_life(us) 0 pgcache-del 0 active-cache 314415
[52333.016404]  
[52333.016413] Curr 25006 Currname redis-server3 HeteroProcname redis-server4 cache-hits 314415 cache-miss 950160 buff-hits 21657 buff-miss 1266421 migrated 0 migrate_time 0 avg_buff_life(us) 2797429900 pgbuff-del 781 avg_cache_life(us) 0 pgcache-del 0 active-cache 314415
[52333.016413]  
[52333.016450] Curr 25004 Currname redis-server3 HeteroProcname redis-server4 cache-hits 314415 cache-miss 950160 buff-hits 21657 buff-miss 1266421 migrated 0 migrate_time 0 avg_buff_life(us) 2858466932 pgbuff-del 782 avg_cache_life(us) 0 pgcache-del 0 active-cache 314415
[52333.016450]  
[52333.023211] Curr 25009 Currname redis-server4 HeteroProcname redis-server4 cache-hits 364233 cache-miss 929897 buff-hits 22345 buff-miss 1285106 migrated 0 migrate_time 0 avg_buff_life(us) 3571986061 pgbuff-del 722 avg_cache_life(us) 0 pgcache-del 0 active-cache 364233
[52333.023211]  
[52333.023226] Curr 25007 Currname redis-server4 HeteroProcname redis-server4 cache-hits 364233 cache-miss 929897 buff-hits 22345 buff-miss 1285106 migrated 0 migrate_time 0 avg_buff_life(us) 3571986061 pgbuff-del 722 avg_cache_life(us) 0 pgcache-del 0 active-cache 364233
[52333.023226]  
[52333.023255] Curr 25011 Currname redis-server4 HeteroProcname redis-server4 cache-hits 364233 cache-miss 929897 buff-hits 22345 buff-miss 1285106 migrated 0 migrate_time 0 avg_buff_life(us) 3571986061 pgbuff-del 722 avg_cache_life(us) 0 pgcache-del 0 active-cache 364233
[52333.023255]  
