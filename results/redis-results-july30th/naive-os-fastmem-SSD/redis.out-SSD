+ REDISROOT=/users/skannan/ssd/NVM/appbench/redis-5.0.5
+ REDISCONF=/users/skannan/ssd/NVM/appbench/redis-5.0.5/config
+ APPBASE=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ APP=/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/pagerank
+ PARAM=
+ OUTPUT=
+ READS=1000000
+ KEYS=1000000
+ CLIPREFIX='numactl --preferred=0'
+ PHYSCPU=--physcpubind
+ let MAXINST=4
+ let STARTPORT=6378
+ let SERVERCPU=20
+ let DATASIZE=4096
+ let physcpu=0
+ let physcpu2=1
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
redis-server1: no process found
+ appname=redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ sudo killall redis-server1
redis-server1: no process found
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
redis-server2: no process found
+ appname=redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ sudo killall redis-server2
redis-server2: no process found
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
redis-server3: no process found
+ appname=redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ sudo killall redis-server3
redis-server3: no process found
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
redis-server4: no process found
+ appname=redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ sudo killall redis-server4
redis-server4: no process found
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sleep 5
+ PREPARE
+ (( inst=1 ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server1 redis-benchmark1
+ cp redis-server redis-server1
+ cp redis-benchmark redis-benchmark1
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server2 redis-benchmark2
+ cp redis-server redis-server2
+ cp redis-benchmark redis-benchmark2
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server3 redis-benchmark3
+ cp redis-server redis-server3
+ cp redis-benchmark redis-benchmark3
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ cd /users/skannan/ssd/NVM/appbench/redis-5.0.5/src
+ sudo rm redis-server4 redis-benchmark4
+ cp redis-server redis-server4
+ cp redis-benchmark redis-benchmark4
+ cd /users/skannan/ssd/NVM/appbench
+ (( inst++  ))
+ (( inst<=4 ))
+ FlushDisk
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ sudo sh -c sync
+ sudo sh -c sync
+ sudo sh -c 'echo 3 > /proc/sys/vm/drop_caches'
+ cd /users/skannan/ssd/NVM/appbench/shared_data
+ RUN
+ let port=6378
+ let physcpu=20
+ let physcpu2=20+1
+ (( r=1 ))
+ (( r<=4 ))
+ let port=6378+1
+ let physcpu=20+2
+ let physcpu2=21+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=20,21 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server1 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6378.conf
initiating tracing...
initiating tracing...
19913:C 29 Jul 2019 07:00:46.045 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
19913:C 29 Jul 2019 07:00:46.045 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=19913, just started
19913:C 29 Jul 2019 07:00:46.045 # Configuration loaded
19913:M 29 Jul 2019 07:00:46.045 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
19913:M 29 Jul 2019 07:00:46.045 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
19913:M 29 Jul 2019 07:00:46.045 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6378
 |    `-._   `._    /     _.-'    |     PID: 19913
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

19913:M 29 Jul 2019 07:00:46.060 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
19913:M 29 Jul 2019 07:00:46.061 # Server initialized
19913:M 29 Jul 2019 07:00:46.061 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
19913:M 29 Jul 2019 07:00:46.061 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
19913:M 29 Jul 2019 07:00:46.061 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6379+1
+ let physcpu=22+2
+ let physcpu2=23+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=22,23 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server2 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6379.conf
initiating tracing...
initiating tracing...
19918:C 29 Jul 2019 07:00:47.001 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
19918:C 29 Jul 2019 07:00:47.001 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=19918, just started
19918:C 29 Jul 2019 07:00:47.001 # Configuration loaded
19918:M 29 Jul 2019 07:00:47.002 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
19918:M 29 Jul 2019 07:00:47.002 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
19918:M 29 Jul 2019 07:00:47.002 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6379
 |    `-._   `._    /     _.-'    |     PID: 19918
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

19918:M 29 Jul 2019 07:00:47.004 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
19918:M 29 Jul 2019 07:00:47.004 # Server initialized
19918:M 29 Jul 2019 07:00:47.004 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
19918:M 29 Jul 2019 07:00:47.004 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
19918:M 29 Jul 2019 07:00:47.004 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6380+1
+ let physcpu=24+2
+ let physcpu2=25+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=24,25 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server3 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6380.conf
initiating tracing...
initiating tracing...
19923:C 29 Jul 2019 07:00:48.003 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
19923:C 29 Jul 2019 07:00:48.003 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=19923, just started
19923:C 29 Jul 2019 07:00:48.003 # Configuration loaded
19923:M 29 Jul 2019 07:00:48.004 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
19923:M 29 Jul 2019 07:00:48.004 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
19923:M 29 Jul 2019 07:00:48.004 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6380
 |    `-._   `._    /     _.-'    |     PID: 19923
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

19923:M 29 Jul 2019 07:00:48.005 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
19923:M 29 Jul 2019 07:00:48.005 # Server initialized
19923:M 29 Jul 2019 07:00:48.005 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
19923:M 29 Jul 2019 07:00:48.005 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
19923:M 29 Jul 2019 07:00:48.005 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ let port=6381+1
+ let physcpu=26+2
+ let physcpu2=27+2
+ sleep 1
+ LD_PRELOAD=/users/skannan/ssd/NVM/appbench/shared_libs/construct/libmigration.so
+ numactl --preferred=0 --physcpubind=26,27 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-server4 /users/skannan/ssd/NVM/appbench/redis-5.0.5/config/redis-6381.conf
initiating tracing...
initiating tracing...
19928:C 29 Jul 2019 07:00:49.005 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
19928:C 29 Jul 2019 07:00:49.005 # Redis version=5.0.5, bits=64, commit=ca9ca7e7, modified=1, pid=19928, just started
19928:C 29 Jul 2019 07:00:49.005 # Configuration loaded
19928:M 29 Jul 2019 07:00:49.005 # You requested maxclients of 10000 requiring at least 10032 max file descriptors.
19928:M 29 Jul 2019 07:00:49.005 # Server can't set maximum open files to 10032 because of OS error: Operation not permitted.
19928:M 29 Jul 2019 07:00:49.005 # Current maximum open files is 4096. maxclients has been reduced to 4064 to compensate for low ulimit. If you need higher maxclients increase 'ulimit -n'.
                _._                                                  
           _.-``__ ''-._                                             
      _.-``    `.  `_.  ''-._           Redis 5.0.5 (ca9ca7e7/1) 64 bit
  .-`` .-```.  ```\/    _.,_ ''-._                                   
 (    '      ,       .-`  | `,    )     Running in standalone mode
 |`-._`-...-` __...-.``-._|'` _.-'|     Port: 6381
 |    `-._   `._    /     _.-'    |     PID: 19928
  `-._    `-._  `-./  _.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |           http://redis.io        
  `-._    `-._`-.__.-'_.-'    _.-'                                   
 |`-._`-._    `-.__.-'    _.-'_.-'|                                  
 |    `-._`-._        _.-'_.-'    |                                  
  `-._    `-._`-.__.-'_.-'    _.-'                                   
      `-._    `-.__.-'    _.-'                                       
          `-._        _.-'                                           
              `-.__.-'                                               

19928:M 29 Jul 2019 07:00:49.007 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.
19928:M 29 Jul 2019 07:00:49.007 # Server initialized
19928:M 29 Jul 2019 07:00:49.007 # WARNING overcommit_memory is set to 0! Background save may fail under low memory condition. To fix this issue add 'vm.overcommit_memory = 1' to /etc/sysctl.conf and then reboot or run the command 'sysctl vm.overcommit_memory=1' for this to take effect.
19928:M 29 Jul 2019 07:00:49.007 # WARNING you have Transparent Huge Pages (THP) support enabled in your kernel. This will create latency and memory usage issues with Redis. To fix this issue run the command 'echo never > /sys/kernel/mm/transparent_hugepage/enabled' as root, and add it to your /etc/rc.local in order to retain the setting after a reboot. Redis must be restarted after THP is disabled.
19928:M 29 Jul 2019 07:00:49.007 * Ready to accept connections
+ (( r++ ))
+ (( r<=4 ))
+ export LD_PRELOAD=
+ LD_PRELOAD=
+ sleep 10
+ RUNCLIENT
+ let port=6378
+ let physcpu=2
+ let physcpu2=3
+ PARAMS=' -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q  -h 127.0.0.1 -d 4096'
+ (( c=1 ))
+ (( c<4 ))
+ let port=6378+1
+ let physcpu=2+1
+ let physcpu2=3+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6378
+ let port=6379+1
+ let physcpu=3+1
+ let physcpu2=5+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6379
+ let port=6380+1
+ let physcpu=4+1
+ let physcpu2=7+2
+ (( c++ ))
+ (( c<4 ))
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6381
+ numactl --preferred=0 /users/skannan/ssd/NVM/appbench/redis-5.0.5/src/redis-benchmark -r 1000000 -n 1000000 -c 50 -t get,set -P 16 -q -h 127.0.0.1 -d 4096 -p 6380
19928:M 29 Jul 2019 07:01:00.230 * Starting automatic rewriting of AOF on 7305140300% growth
19918:M 29 Jul 2019 07:01:00.231 * Starting automatic rewriting of AOF on 7241368900% growth
19928:M 29 Jul 2019 07:01:00.231 * Background append only file rewriting started by pid 19938
19923:M 29 Jul 2019 07:01:00.232 * Starting automatic rewriting of AOF on 7438480500% growth
19918:M 29 Jul 2019 07:01:00.232 * Background append only file rewriting started by pid 19939
19923:M 29 Jul 2019 07:01:00.233 * Background append only file rewriting started by pid 19940
19913:M 29 Jul 2019 07:01:00.290 * Starting automatic rewriting of AOF on 8430664100% growth
19913:M 29 Jul 2019 07:01:00.291 * Background append only file rewriting started by pid 19941
19928:M 29 Jul 2019 07:01:01.351 * AOF rewrite child asks to stop sending diffs.
19938:C 29 Jul 2019 07:01:01.351 * Parent agreed to stop sending diffs. Finalizing AOF...
19938:C 29 Jul 2019 07:01:01.351 * Concatenating 225.78 MB of AOF diff received from parent.
19923:M 29 Jul 2019 07:01:01.352 * AOF rewrite child asks to stop sending diffs.
19940:C 29 Jul 2019 07:01:01.352 * Parent agreed to stop sending diffs. Finalizing AOF...
19940:C 29 Jul 2019 07:01:01.352 * Concatenating 230.07 MB of AOF diff received from parent.
19918:M 29 Jul 2019 07:01:01.352 * AOF rewrite child asks to stop sending diffs.
19939:C 29 Jul 2019 07:01:01.353 * Parent agreed to stop sending diffs. Finalizing AOF...
19939:C 29 Jul 2019 07:01:01.353 * Concatenating 232.41 MB of AOF diff received from parent.
19913:M 29 Jul 2019 07:01:01.405 * AOF rewrite child asks to stop sending diffs.
19941:C 29 Jul 2019 07:01:01.405 * Parent agreed to stop sending diffs. Finalizing AOF...
19941:C 29 Jul 2019 07:01:01.405 * Concatenating 233.26 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:01:02.360 * Background AOF buffer size: 80 MB
19923:M 29 Jul 2019 07:01:02.446 * Background AOF buffer size: 80 MB
19918:M 29 Jul 2019 07:01:02.467 * Background AOF buffer size: 80 MB
19918:M 29 Jul 2019 07:01:03.003 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:03.019 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19928:M 29 Jul 2019 07:01:03.071 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19923:M 29 Jul 2019 07:01:03.118 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:06.380 * Background AOF buffer size: 80 MB
19928:M 29 Jul 2019 07:01:07.865 * Background AOF buffer size: 180 MB
19923:M 29 Jul 2019 07:01:07.978 * Background AOF buffer size: 180 MB
19923:M 29 Jul 2019 07:01:08.003 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19928:M 29 Jul 2019 07:01:08.050 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19918:M 29 Jul 2019 07:01:08.081 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:08.103 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19918:M 29 Jul 2019 07:01:09.325 * Background AOF buffer size: 180 MB
19913:M 29 Jul 2019 07:01:09.543 * Background AOF buffer size: 180 MB
19923:M 29 Jul 2019 07:01:10.036 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19928:M 29 Jul 2019 07:01:10.040 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:10.085 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19918:M 29 Jul 2019 07:01:10.098 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:12.056 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19923:M 29 Jul 2019 07:01:12.067 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19941:C 29 Jul 2019 07:01:12.076 * SYNC append only file rewrite performed
19940:C 29 Jul 2019 07:01:12.076 * SYNC append only file rewrite performed
19939:C 29 Jul 2019 07:01:12.076 * SYNC append only file rewrite performed
19938:C 29 Jul 2019 07:01:12.076 * SYNC append only file rewrite performed
19941:C 29 Jul 2019 07:01:12.094 * AOF rewrite: 289 MB of memory used by copy-on-write
19939:C 29 Jul 2019 07:01:12.094 * AOF rewrite: 276 MB of memory used by copy-on-write
19940:C 29 Jul 2019 07:01:12.095 * AOF rewrite: 291 MB of memory used by copy-on-write
19938:C 29 Jul 2019 07:01:12.095 * AOF rewrite: 270 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:01:12.142 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:01:12.264 * Background AOF rewrite terminated with success
19913:M 29 Jul 2019 07:01:12.282 * Background AOF rewrite terminated with success
19928:M 29 Jul 2019 07:01:12.287 * Background AOF rewrite terminated with success
19918:M 29 Jul 2019 07:01:13.080 * Residual parent diff successfully flushed to the rewritten AOF (250.57 MB)
19913:M 29 Jul 2019 07:01:13.205 * Residual parent diff successfully flushed to the rewritten AOF (245.94 MB)
19928:M 29 Jul 2019 07:01:13.227 * Residual parent diff successfully flushed to the rewritten AOF (264.78 MB)
19923:M 29 Jul 2019 07:01:13.233 * Residual parent diff successfully flushed to the rewritten AOF (278.39 MB)
19918:M 29 Jul 2019 07:01:13.294 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:01:14.050 * Background AOF rewrite finished successfully
19928:M 29 Jul 2019 07:01:14.538 * Background AOF rewrite finished successfully
19923:M 29 Jul 2019 07:01:15.100 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:01:15.117 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19918:M 29 Jul 2019 07:01:15.208 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19923:M 29 Jul 2019 07:01:15.230 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19923:M 29 Jul 2019 07:01:22.636 * Starting automatic rewriting of AOF on 111% growth
19913:M 29 Jul 2019 07:01:22.689 * Starting automatic rewriting of AOF on 105% growth
19928:M 29 Jul 2019 07:01:22.722 * Starting automatic rewriting of AOF on 106% growth
19923:M 29 Jul 2019 07:01:22.797 * Background append only file rewriting started by pid 19942
19913:M 29 Jul 2019 07:01:22.850 * Background append only file rewriting started by pid 19943
19928:M 29 Jul 2019 07:01:22.889 * Background append only file rewriting started by pid 19944
19928:M 29 Jul 2019 07:01:24.026 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19918:M 29 Jul 2019 07:01:24.879 * Starting automatic rewriting of AOF on 107% growth
19918:M 29 Jul 2019 07:01:25.180 * Background append only file rewriting started by pid 19945
19913:M 29 Jul 2019 07:01:33.312 * AOF rewrite child asks to stop sending diffs.
19943:C 29 Jul 2019 07:01:33.313 * Parent agreed to stop sending diffs. Finalizing AOF...
19943:C 29 Jul 2019 07:01:33.314 * Concatenating 26.81 MB of AOF diff received from parent.
19923:M 29 Jul 2019 07:01:33.394 * AOF rewrite child asks to stop sending diffs.
19942:C 29 Jul 2019 07:01:33.395 * Parent agreed to stop sending diffs. Finalizing AOF...
19942:C 29 Jul 2019 07:01:33.395 * Concatenating 28.19 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:01:33.696 * AOF rewrite child asks to stop sending diffs.
19944:C 29 Jul 2019 07:01:33.696 * Parent agreed to stop sending diffs. Finalizing AOF...
19944:C 29 Jul 2019 07:01:33.697 * Concatenating 38.81 MB of AOF diff received from parent.
19942:C 29 Jul 2019 07:01:34.349 * SYNC append only file rewrite performed
19943:C 29 Jul 2019 07:01:34.349 * SYNC append only file rewrite performed
19943:C 29 Jul 2019 07:01:34.580 * AOF rewrite: 208 MB of memory used by copy-on-write
19942:C 29 Jul 2019 07:01:34.587 * AOF rewrite: 280 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:01:34.727 * Background AOF buffer size: 73 MB
19944:C 29 Jul 2019 07:01:34.763 * SYNC append only file rewrite performed
19923:M 29 Jul 2019 07:01:34.784 * Background AOF buffer size: 72 MB
19923:M 29 Jul 2019 07:01:34.881 * Background AOF rewrite terminated with success
19944:C 29 Jul 2019 07:01:34.908 * AOF rewrite: 279 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:01:34.956 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:01:35.024 * Residual parent diff successfully flushed to the rewritten AOF (78.89 MB)
19913:M 29 Jul 2019 07:01:35.076 * Residual parent diff successfully flushed to the rewritten AOF (91.28 MB)
19928:M 29 Jul 2019 07:01:35.084 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:01:35.123 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:01:35.134 * Background AOF rewrite finished successfully
19928:M 29 Jul 2019 07:01:35.156 * Residual parent diff successfully flushed to the rewritten AOF (72.12 MB)
19918:M 29 Jul 2019 07:01:35.423 * AOF rewrite child asks to stop sending diffs.
19945:C 29 Jul 2019 07:01:35.499 * Parent agreed to stop sending diffs. Finalizing AOF...
19945:C 29 Jul 2019 07:01:35.500 * Concatenating 73.40 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:01:35.507 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:01:36.324 * Background AOF buffer size: 80 MB
19945:C 29 Jul 2019 07:01:36.702 * SYNC append only file rewrite performed
19945:C 29 Jul 2019 07:01:36.910 * AOF rewrite: 360 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:01:37.023 * Background AOF rewrite terminated with success
19913:M 29 Jul 2019 07:01:37.141 * Starting automatic rewriting of AOF on 147% growth
19923:M 29 Jul 2019 07:01:37.148 * Starting automatic rewriting of AOF on 165% growth
19928:M 29 Jul 2019 07:01:37.153 * Starting automatic rewriting of AOF on 151% growth
19913:M 29 Jul 2019 07:01:37.277 * Background append only file rewriting started by pid 19952
19928:M 29 Jul 2019 07:01:37.316 * Background append only file rewriting started by pid 19953
19923:M 29 Jul 2019 07:01:37.322 * Background append only file rewriting started by pid 19954
19918:M 29 Jul 2019 07:01:37.330 * Residual parent diff successfully flushed to the rewritten AOF (127.05 MB)
19918:M 29 Jul 2019 07:01:37.684 * Background AOF rewrite finished successfully
19923:M 29 Jul 2019 07:01:39.382 * Background AOF buffer size: 70 MB
19923:M 29 Jul 2019 07:01:39.677 * Background AOF buffer size: 79 MB
19928:M 29 Jul 2019 07:01:40.667 * Background AOF buffer size: 77 MB
19913:M 29 Jul 2019 07:01:41.552 * Background AOF buffer size: 75 MB
19913:M 29 Jul 2019 07:01:46.628 * AOF rewrite child asks to stop sending diffs.
19952:C 29 Jul 2019 07:01:46.629 * Parent agreed to stop sending diffs. Finalizing AOF...
19952:C 29 Jul 2019 07:01:46.629 * Concatenating 43.31 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:01:46.716 * AOF rewrite child asks to stop sending diffs.
19953:C 29 Jul 2019 07:01:46.716 * Parent agreed to stop sending diffs. Finalizing AOF...
19953:C 29 Jul 2019 07:01:46.717 * Concatenating 46.00 MB of AOF diff received from parent.
19918:M 29 Jul 2019 07:01:46.879 * Starting automatic rewriting of AOF on 110% growth
19918:M 29 Jul 2019 07:01:47.197 * Background append only file rewriting started by pid 19962
19923:M 29 Jul 2019 07:01:47.532 * AOF rewrite child asks to stop sending diffs.
19954:C 29 Jul 2019 07:01:47.533 * Parent agreed to stop sending diffs. Finalizing AOF...
19954:C 29 Jul 2019 07:01:47.534 * Concatenating 43.38 MB of AOF diff received from parent.
19913:M 29 Jul 2019 07:01:47.547 * Background AOF buffer size: 170 MB
19923:M 29 Jul 2019 07:01:48.051 * Background AOF buffer size: 175 MB
19952:C 29 Jul 2019 07:01:48.352 * SYNC append only file rewrite performed
19953:C 29 Jul 2019 07:01:48.437 * SYNC append only file rewrite performed
19928:M 29 Jul 2019 07:01:48.729 * Background AOF buffer size: 170 MB
19952:C 29 Jul 2019 07:01:48.792 * AOF rewrite: 288 MB of memory used by copy-on-write
19953:C 29 Jul 2019 07:01:48.830 * AOF rewrite: 299 MB of memory used by copy-on-write
19954:C 29 Jul 2019 07:01:49.278 * SYNC append only file rewrite performed
19928:M 29 Jul 2019 07:01:49.553 * Background AOF rewrite terminated with success
19954:C 29 Jul 2019 07:01:49.633 * AOF rewrite: 307 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:01:49.639 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:01:50.084 * Background AOF rewrite terminated with success
19928:M 29 Jul 2019 07:01:50.972 * Residual parent diff successfully flushed to the rewritten AOF (193.92 MB)
19928:M 29 Jul 2019 07:01:51.253 * Background AOF rewrite finished successfully
19928:M 29 Jul 2019 07:01:51.359 * 10000 changes in 60 seconds. Saving...
19913:M 29 Jul 2019 07:01:51.432 * Residual parent diff successfully flushed to the rewritten AOF (219.15 MB)
19923:M 29 Jul 2019 07:01:51.649 * Residual parent diff successfully flushed to the rewritten AOF (237.83 MB)
19928:M 29 Jul 2019 07:01:51.666 * Background saving started by pid 19963
19928:M 29 Jul 2019 07:01:51.669 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19913:M 29 Jul 2019 07:01:52.142 * Background AOF rewrite finished successfully
19923:M 29 Jul 2019 07:01:52.652 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:01:52.757 * 10000 changes in 60 seconds. Saving...
19923:M 29 Jul 2019 07:01:52.761 * 10000 changes in 60 seconds. Saving...
19913:M 29 Jul 2019 07:01:53.011 * Background saving started by pid 19964
19918:M 29 Jul 2019 07:01:53.029 * Background AOF buffer size: 70 MB
19923:M 29 Jul 2019 07:01:53.032 * Background saving started by pid 19965
19918:M 29 Jul 2019 07:01:53.171 * Background AOF buffer size: 79 MB
19918:M 29 Jul 2019 07:01:56.689 * AOF rewrite child asks to stop sending diffs.
19962:C 29 Jul 2019 07:01:56.689 * Parent agreed to stop sending diffs. Finalizing AOF...
19962:C 29 Jul 2019 07:01:56.691 * Concatenating 46.19 MB of AOF diff received from parent.
19962:C 29 Jul 2019 07:01:58.378 * SYNC append only file rewrite performed
19962:C 29 Jul 2019 07:01:58.682 * AOF rewrite: 404 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:01:58.944 * Background AOF buffer size: 179 MB
19918:M 29 Jul 2019 07:01:59.237 * Background AOF rewrite terminated with success
19918:M 29 Jul 2019 07:02:01.253 * Residual parent diff successfully flushed to the rewritten AOF (194.27 MB)
19918:M 29 Jul 2019 07:02:01.854 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:02:01.958 * 10000 changes in 60 seconds. Saving...
19918:M 29 Jul 2019 07:02:02.378 * Background saving started by pid 19966
19963:C 29 Jul 2019 07:02:02.853 * DB saved on disk
19963:C 29 Jul 2019 07:02:03.416 * RDB: 566 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:02:04.353 * Background saving terminated with success
19965:C 29 Jul 2019 07:02:04.527 * DB saved on disk
19928:M 29 Jul 2019 07:02:04.804 * Starting automatic rewriting of AOF on 179% growth
19965:C 29 Jul 2019 07:02:04.943 * RDB: 544 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:02:05.214 * Background append only file rewriting started by pid 19967
19923:M 29 Jul 2019 07:02:05.318 * Background saving terminated with success
19964:C 29 Jul 2019 07:02:05.364 * DB saved on disk
19923:M 29 Jul 2019 07:02:05.437 * Starting automatic rewriting of AOF on 115% growth
19964:C 29 Jul 2019 07:02:05.594 * RDB: 548 MB of memory used by copy-on-write
19923:M 29 Jul 2019 07:02:05.887 * Background append only file rewriting started by pid 19968
19913:M 29 Jul 2019 07:02:06.393 * Background saving terminated with success
19913:M 29 Jul 2019 07:02:06.500 * Starting automatic rewriting of AOF on 146% growth
19913:M 29 Jul 2019 07:02:06.963 * Background append only file rewriting started by pid 19969
19928:M 29 Jul 2019 07:02:12.781 * Background AOF buffer size: 74 MB
19966:C 29 Jul 2019 07:02:17.476 * DB saved on disk
19966:C 29 Jul 2019 07:02:17.999 * RDB: 540 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:02:19.285 * Background saving terminated with success
19918:M 29 Jul 2019 07:02:19.394 * Starting automatic rewriting of AOF on 153% growth
19918:M 29 Jul 2019 07:02:19.877 * Background append only file rewriting started by pid 19970
19928:M 29 Jul 2019 07:02:24.304 * AOF rewrite child asks to stop sending diffs.
19967:C 29 Jul 2019 07:02:24.305 * Parent agreed to stop sending diffs. Finalizing AOF...
19967:C 29 Jul 2019 07:02:24.306 * Concatenating 62.62 MB of AOF diff received from parent.
19923:M 29 Jul 2019 07:02:24.834 * AOF rewrite child asks to stop sending diffs.
19968:C 29 Jul 2019 07:02:24.835 * Parent agreed to stop sending diffs. Finalizing AOF...
19968:C 29 Jul 2019 07:02:24.836 * Concatenating 71.12 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:02:24.961 * Background AOF buffer size: 170 MB
19923:M 29 Jul 2019 07:02:26.176 * Background AOF buffer size: 77 MB
19967:C 29 Jul 2019 07:02:26.480 * SYNC append only file rewrite performed
19967:C 29 Jul 2019 07:02:27.191 * AOF rewrite: 439 MB of memory used by copy-on-write
19968:C 29 Jul 2019 07:02:27.494 * SYNC append only file rewrite performed
19913:M 29 Jul 2019 07:02:27.993 * AOF rewrite child asks to stop sending diffs.
19969:C 29 Jul 2019 07:02:27.994 * Parent agreed to stop sending diffs. Finalizing AOF...
19969:C 29 Jul 2019 07:02:27.995 * Concatenating 86.31 MB of AOF diff received from parent.
19968:C 29 Jul 2019 07:02:28.151 * AOF rewrite: 291 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:02:28.438 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:02:29.200 * Background AOF rewrite terminated with success
19969:C 29 Jul 2019 07:02:30.006 * SYNC append only file rewrite performed
19969:C 29 Jul 2019 07:02:30.447 * AOF rewrite: 295 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:02:30.670 * Background AOF buffer size: 80 MB
19923:M 29 Jul 2019 07:02:30.824 * Residual parent diff successfully flushed to the rewritten AOF (148.42 MB)
19928:M 29 Jul 2019 07:02:31.038 * Residual parent diff successfully flushed to the rewritten AOF (243.68 MB)
19913:M 29 Jul 2019 07:02:31.172 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:02:31.202 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:02:31.571 * Background AOF buffer size: 72 MB
19913:M 29 Jul 2019 07:02:31.578 * Residual parent diff successfully flushed to the rewritten AOF (106.95 MB)
19928:M 29 Jul 2019 07:02:31.826 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:02:32.350 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:02:34.916 * AOF rewrite child asks to stop sending diffs.
19970:C 29 Jul 2019 07:02:34.917 * Parent agreed to stop sending diffs. Finalizing AOF...
19970:C 29 Jul 2019 07:02:34.917 * Concatenating 75.75 MB of AOF diff received from parent.
19918:M 29 Jul 2019 07:02:35.008 * Background AOF buffer size: 170 MB
19970:C 29 Jul 2019 07:02:36.999 * SYNC append only file rewrite performed
19970:C 29 Jul 2019 07:02:37.481 * AOF rewrite: 432 MB of memory used by copy-on-write
19923:M 29 Jul 2019 07:02:37.597 * Starting automatic rewriting of AOF on 106% growth
19913:M 29 Jul 2019 07:02:37.858 * Starting automatic rewriting of AOF on 102% growth
19923:M 29 Jul 2019 07:02:38.081 * Background append only file rewriting started by pid 19971
19918:M 29 Jul 2019 07:02:38.173 * Background AOF rewrite terminated with success
19913:M 29 Jul 2019 07:02:38.310 * Background append only file rewriting started by pid 19972
19918:M 29 Jul 2019 07:02:41.356 * Residual parent diff successfully flushed to the rewritten AOF (266.85 MB)
19928:M 29 Jul 2019 07:02:41.363 * Starting automatic rewriting of AOF on 101% growth
19928:M 29 Jul 2019 07:02:41.925 * Background append only file rewriting started by pid 19973
19918:M 29 Jul 2019 07:02:42.383 * Background AOF rewrite finished successfully
19923:M 29 Jul 2019 07:02:47.204 * Background AOF buffer size: 70 MB
19923:M 29 Jul 2019 07:02:49.806 * Background AOF buffer size: 73 MB
19913:M 29 Jul 2019 07:02:53.636 * Background AOF buffer size: 70 MB
19913:M 29 Jul 2019 07:02:55.551 * Background AOF buffer size: 75 MB
19918:M 29 Jul 2019 07:02:55.938 * Starting automatic rewriting of AOF on 100% growth
19918:M 29 Jul 2019 07:02:56.749 * Background append only file rewriting started by pid 19974
19913:M 29 Jul 2019 07:02:59.061 * AOF rewrite child asks to stop sending diffs.
19972:C 29 Jul 2019 07:02:59.067 * Parent agreed to stop sending diffs. Finalizing AOF...
19972:C 29 Jul 2019 07:02:59.069 * Concatenating 78.19 MB of AOF diff received from parent.
19923:M 29 Jul 2019 07:03:00.302 * AOF rewrite child asks to stop sending diffs.
19971:C 29 Jul 2019 07:03:00.303 * Parent agreed to stop sending diffs. Finalizing AOF...
19971:C 29 Jul 2019 07:03:00.303 * Concatenating 84.75 MB of AOF diff received from parent.
19972:C 29 Jul 2019 07:03:01.620 * SYNC append only file rewrite performed
19923:M 29 Jul 2019 07:03:02.367 * Background AOF buffer size: 170 MB
19972:C 29 Jul 2019 07:03:02.399 * AOF rewrite: 400 MB of memory used by copy-on-write
19971:C 29 Jul 2019 07:03:02.803 * SYNC append only file rewrite performed
19971:C 29 Jul 2019 07:03:03.523 * AOF rewrite: 493 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:03:03.546 * Background AOF buffer size: 170 MB
19913:M 29 Jul 2019 07:03:03.811 * Background AOF rewrite terminated with success
19928:M 29 Jul 2019 07:03:04.485 * Background AOF buffer size: 74 MB
19923:M 29 Jul 2019 07:03:04.848 * Background AOF rewrite terminated with success
19913:M 29 Jul 2019 07:03:05.624 * Residual parent diff successfully flushed to the rewritten AOF (184.67 MB)
19913:M 29 Jul 2019 07:03:06.090 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:03:06.211 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19923:M 29 Jul 2019 07:03:06.975 * Residual parent diff successfully flushed to the rewritten AOF (245.45 MB)
19913:M 29 Jul 2019 07:03:07.103 * 10000 changes in 60 seconds. Saving...
19923:M 29 Jul 2019 07:03:07.582 * Background AOF rewrite finished successfully
19913:M 29 Jul 2019 07:03:07.647 * Background saving started by pid 19975
19923:M 29 Jul 2019 07:03:07.691 * 10000 changes in 60 seconds. Saving...
19923:M 29 Jul 2019 07:03:08.482 * Background saving started by pid 19976
19928:M 29 Jul 2019 07:03:09.005 * AOF rewrite child asks to stop sending diffs.
19973:C 29 Jul 2019 07:03:09.005 * Parent agreed to stop sending diffs. Finalizing AOF...
19973:C 29 Jul 2019 07:03:09.006 * Concatenating 100.88 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:03:09.978 * Background AOF buffer size: 170 MB
19973:C 29 Jul 2019 07:03:12.379 * SYNC append only file rewrite performed
19973:C 29 Jul 2019 07:03:13.437 * AOF rewrite: 694 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:03:13.883 * Background AOF buffer size: 72 MB
19928:M 29 Jul 2019 07:03:14.712 * Background AOF buffer size: 270 MB
19928:M 29 Jul 2019 07:03:15.503 * Background AOF rewrite terminated with success
19918:M 29 Jul 2019 07:03:18.446 * AOF rewrite child asks to stop sending diffs.
19974:C 29 Jul 2019 07:03:18.446 * Parent agreed to stop sending diffs. Finalizing AOF...
19974:C 29 Jul 2019 07:03:18.447 * Concatenating 84.69 MB of AOF diff received from parent.
19928:M 29 Jul 2019 07:03:18.934 * Residual parent diff successfully flushed to the rewritten AOF (295.35 MB)
19928:M 29 Jul 2019 07:03:20.079 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:03:20.093 * Background AOF buffer size: 175 MB
19928:M 29 Jul 2019 07:03:20.196 * 10000 changes in 60 seconds. Saving...
19974:C 29 Jul 2019 07:03:20.446 * SYNC append only file rewrite performed
19974:C 29 Jul 2019 07:03:21.043 * AOF rewrite: 670 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:03:21.095 * Background saving started by pid 19977
19918:M 29 Jul 2019 07:03:22.124 * Background AOF rewrite terminated with success
19918:M 29 Jul 2019 07:03:24.460 * Residual parent diff successfully flushed to the rewritten AOF (247.87 MB)
19918:M 29 Jul 2019 07:03:25.681 * Background AOF rewrite finished successfully
19918:M 29 Jul 2019 07:03:25.794 * 10000 changes in 60 seconds. Saving...
19975:C 29 Jul 2019 07:03:26.610 * DB saved on disk
19918:M 29 Jul 2019 07:03:26.643 * Background saving started by pid 19978
19975:C 29 Jul 2019 07:03:27.404 * RDB: 769 MB of memory used by copy-on-write
19976:C 29 Jul 2019 07:03:27.868 * DB saved on disk
19976:C 29 Jul 2019 07:03:28.742 * RDB: 864 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:03:29.138 * Background saving terminated with success
19913:M 29 Jul 2019 07:03:29.352 * Starting automatic rewriting of AOF on 224% growth
19923:M 29 Jul 2019 07:03:29.981 * Background saving terminated with success
19913:M 29 Jul 2019 07:03:30.057 * Background append only file rewriting started by pid 19979
19923:M 29 Jul 2019 07:03:30.086 * Starting automatic rewriting of AOF on 167% growth
19923:M 29 Jul 2019 07:03:30.713 * Background append only file rewriting started by pid 19980
19977:C 29 Jul 2019 07:03:47.739 * DB saved on disk
19977:C 29 Jul 2019 07:03:48.662 * RDB: 1355 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:03:51.380 * Background saving terminated with success
19928:M 29 Jul 2019 07:03:51.483 * Starting automatic rewriting of AOF on 149% growth
19978:C 29 Jul 2019 07:03:51.989 * DB saved on disk
19928:M 29 Jul 2019 07:03:52.588 * Background append only file rewriting started by pid 19982
19978:C 29 Jul 2019 07:03:52.826 * RDB: 995 MB of memory used by copy-on-write
19913:M 29 Jul 2019 07:03:54.664 * AOF rewrite child asks to stop sending diffs.
19979:C 29 Jul 2019 07:03:54.664 * Parent agreed to stop sending diffs. Finalizing AOF...
19979:C 29 Jul 2019 07:03:54.666 * Concatenating 100.50 MB of AOF diff received from parent.
19918:M 29 Jul 2019 07:03:55.044 * Background saving terminated with success
19918:M 29 Jul 2019 07:03:55.153 * Starting automatic rewriting of AOF on 197% growth
19918:M 29 Jul 2019 07:03:56.013 * Background append only file rewriting started by pid 19983
19979:C 29 Jul 2019 07:03:57.120 * SYNC append only file rewrite performed
19913:M 29 Jul 2019 07:03:57.259 * Background AOF buffer size: 79 MB
19923:M 29 Jul 2019 07:03:57.802 * Background AOF buffer size: 70 MB
19979:C 29 Jul 2019 07:03:57.974 * AOF rewrite: 723 MB of memory used by copy-on-write
19923:M 29 Jul 2019 07:03:58.617 * AOF rewrite child asks to stop sending diffs.
19980:C 29 Jul 2019 07:03:58.617 * Parent agreed to stop sending diffs. Finalizing AOF...
19980:C 29 Jul 2019 07:03:58.618 * Concatenating 106.56 MB of AOF diff received from parent.
19923:M 29 Jul 2019 07:03:58.827 * Background AOF buffer size: 77 MB
19928:M 29 Jul 2019 07:03:59.550 * Background AOF buffer size: 74 MB
19913:M 29 Jul 2019 07:03:59.994 * Background AOF rewrite terminated with success
19980:C 29 Jul 2019 07:04:00.912 * SYNC append only file rewrite performed
19913:M 29 Jul 2019 07:04:01.371 * Residual parent diff successfully flushed to the rewritten AOF (141.63 MB)
19913:M 29 Jul 2019 07:04:01.610 * Background AOF rewrite finished successfully
19980:C 29 Jul 2019 07:04:01.633 * AOF rewrite: 857 MB of memory used by copy-on-write
19923:M 29 Jul 2019 07:04:02.916 * Background AOF buffer size: 177 MB
19923:M 29 Jul 2019 07:04:03.517 * Background AOF rewrite terminated with success
19923:M 29 Jul 2019 07:04:04.674 * Residual parent diff successfully flushed to the rewritten AOF (203.41 MB)
19923:M 29 Jul 2019 07:04:05.081 * Background AOF rewrite finished successfully
19923:M 29 Jul 2019 07:04:05.195 * Asynchronous AOF fsync is taking too long (disk is busy?). Writing the AOF buffer without waiting for fsync to complete, this may slow down Redis.
19928:M 29 Jul 2019 07:04:12.105 * AOF rewrite child asks to stop sending diffs.
19982:C 29 Jul 2019 07:04:12.105 * Parent agreed to stop sending diffs. Finalizing AOF...
19982:C 29 Jul 2019 07:04:12.105 * Concatenating 156.07 MB of AOF diff received from parent.
19918:M 29 Jul 2019 07:04:12.123 * AOF rewrite child asks to stop sending diffs.
19983:C 29 Jul 2019 07:04:12.123 * Parent agreed to stop sending diffs. Finalizing AOF...
19983:C 29 Jul 2019 07:04:12.123 * Concatenating 2.88 MB of AOF diff received from parent.
19983:C 29 Jul 2019 07:04:12.158 * SYNC append only file rewrite performed
19983:C 29 Jul 2019 07:04:12.440 * AOF rewrite: 29 MB of memory used by copy-on-write
19918:M 29 Jul 2019 07:04:13.002 * Background AOF rewrite terminated with success
19918:M 29 Jul 2019 07:04:13.002 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)
19918:M 29 Jul 2019 07:04:13.002 * Background AOF rewrite finished successfully
19982:C 29 Jul 2019 07:04:13.782 * SYNC append only file rewrite performed
19982:C 29 Jul 2019 07:04:14.143 * AOF rewrite: 521 MB of memory used by copy-on-write
19928:M 29 Jul 2019 07:04:14.681 * Background AOF rewrite terminated with success
19928:M 29 Jul 2019 07:04:14.681 * Residual parent diff successfully flushed to the rewritten AOF (0.00 MB)
19928:M 29 Jul 2019 07:04:14.681 * Background AOF rewrite finished successfully
+ sleep 5
+ ps aux
+ grep redis-server
+ awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
19913
19918
19923
19928
19987
19988
/users/skannan/ssd/NVM/appbench/redis-5.0.5/src/run.sh: line 76: 19986 Done                    ps aux
     19987                       | grep redis-server
     19988 Killed                  | awk '{print $2; system("sudo kill -9 " $2); kill $(pgrep -f redis-server)}'
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf dump.rdb
+ rm -rf appendonly-6378.aof appendonly-6379.aof appendonly-6380.aof appendonly-6381.aof
+ sudo killall redis-server1
+ appname=redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ appname=redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ appname=redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ appname=redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ CLEAN
+ (( b=1 ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server1
+ appname=redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ sudo killall redis-server1
+ echo 'KILLING redis-server1'
KILLING redis-server1
+ sudo kill -9 redis-server1
kill: failed to parse argument: 'redis-server1'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server2
+ appname=redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ sudo killall redis-server2
+ echo 'KILLING redis-server2'
KILLING redis-server2
+ sudo kill -9 redis-server2
kill: failed to parse argument: 'redis-server2'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server3
+ appname=redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ sudo killall redis-server3
+ echo 'KILLING redis-server3'
KILLING redis-server3
+ sudo kill -9 redis-server3
kill: failed to parse argument: 'redis-server3'
+ (( b++  ))
+ (( b<=4 ))
+ rm -rf '*.rdb'
+ rm -rf '*.aof'
+ sudo killall redis-server4
+ appname=redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ sudo killall redis-server4
+ echo 'KILLING redis-server4'
KILLING redis-server4
+ sudo kill -9 redis-server4
kill: failed to parse argument: 'redis-server4'
+ (( b++  ))
+ (( b<=4 ))
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ sudo killall redis-benchmark
redis-benchmark: no process found
+ set +x
[32267.078412] drop_caches: sh (18940): drop_caches: 3
[32269.091120] drop_caches: sh (18948): drop_caches: 3
[32615.820911] nvmemul: ioctl command: 0xc008aa02
[32615.820916] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[32615.820920] nvmemul: ioctl command: 0xc008aa02
[32615.820921] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[32615.820926] nvmemul: ioctl command: 0x8008aa01
[32615.820928] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x800f
[32615.820930] nvmemul: ioctl command: 0x8008aa01
[32615.820931] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x800f
[32615.820934] nvmemul: ioctl command: 0x8008aa01
[32615.820935] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x800f
[32615.820937] nvmemul: ioctl command: 0x8008aa01
[32615.820938] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x800f
[32623.286858] INFO: NMI handler (perf_event_nmi_handler) took too long to run: 1.263 msecs
[32638.782622] nvmemul: ioctl command: 0xc008aa02
[32638.782651] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x800f
[32638.782714] nvmemul: ioctl command: 0x8008aa01
[32638.782728] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x801e
[32638.782737] nvmemul: ioctl command: 0x8008aa01
[32638.782738] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x801e
[32638.782741] nvmemul: ioctl command: 0x8008aa01
[32638.782742] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x801e
[32638.782744] nvmemul: ioctl command: 0x8008aa01
[32638.782745] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x801e
[32651.105969] nvmemul: ioctl command: 0xc008aa02
[32651.105978] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x801e
[32651.105991] nvmemul: ioctl command: 0x8008aa01
[32651.105992] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x802d
[32651.105995] nvmemul: ioctl command: 0x8008aa01
[32651.105996] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x802d
[32651.105998] nvmemul: ioctl command: 0x8008aa01
[32651.105999] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x802d
[32651.106002] nvmemul: ioctl command: 0x8008aa01
[32651.106003] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x802d
[32660.235694] nvmemul: ioctl command: 0xc008aa02
[32660.235700] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x802d
[32660.235709] nvmemul: ioctl command: 0x8008aa01
[32660.235710] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x803c
[32660.235713] nvmemul: ioctl command: 0x8008aa01
[32660.235714] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x803c
[32660.235717] nvmemul: ioctl command: 0x8008aa01
[32660.235718] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x803c
[32660.235720] nvmemul: ioctl command: 0x8008aa01
[32660.235721] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x803c
[32677.606226] nvmemul: ioctl command: 0xc008aa02
[32677.606231] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x803c
[32677.606238] nvmemul: ioctl command: 0x8008aa01
[32677.606240] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x8fff
[32677.606242] nvmemul: ioctl command: 0x8008aa01
[32677.606243] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x8fff
[32677.606246] nvmemul: ioctl command: 0x8008aa01
[32677.606247] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x8fff
[32677.606249] nvmemul: ioctl command: 0x8008aa01
[32677.606250] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x8fff
[32677.606253] nvmemul: ioctl command: 0xc008aa02
[32677.606254] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x8fff
[32677.606257] nvmemul: ioctl command: 0x8008aa01
[32677.606257] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x800f
[32677.606260] nvmemul: ioctl command: 0x8008aa01
[32677.606261] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x800f
[32677.606263] nvmemul: ioctl command: 0x8008aa01
[32677.606264] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x800f
[32677.606267] nvmemul: ioctl command: 0x8008aa01
[32677.606268] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x800f
[32693.787483] perf: interrupt took too long (95681 > 92558), lowering kernel.perf_event_max_sample_rate to 2000
[32700.518474] nvmemul: ioctl command: 0xc008aa02
[32700.518481] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x800f
[32700.518511] nvmemul: ioctl command: 0x8008aa01
[32700.518512] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x801e
[32700.518519] nvmemul: ioctl command: 0x8008aa01
[32700.518520] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x801e
[32700.518526] nvmemul: ioctl command: 0x8008aa01
[32700.518533] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x801e
[32700.518541] nvmemul: ioctl command: 0x8008aa01
[32700.518548] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x801e
[32713.142928] nvmemul: ioctl command: 0xc008aa02
[32713.142936] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x801e
[32713.142974] nvmemul: ioctl command: 0x8008aa01
[32713.142988] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x802d
[32713.142997] nvmemul: ioctl command: 0x8008aa01
[32713.142998] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x802d
[32713.143001] nvmemul: ioctl command: 0x8008aa01
[32713.143003] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x802d
[32713.143006] nvmemul: ioctl command: 0x8008aa01
[32713.143006] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x802d
[32722.638889] nvmemul: ioctl command: 0xc008aa02
[32722.638895] nvmemul: getpci bus_id 0xff device_id 0x14, function_id 0x0, offset 0x190, val 0x802d
[32722.638904] nvmemul: ioctl command: 0x8008aa01
[32722.638906] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x0, val=0x803c
[32722.638908] nvmemul: ioctl command: 0x8008aa01
[32722.638910] nvmemul: setpci bus_id=0xff device_id=0x14, function_id=0x1, val=0x803c
[32722.638913] nvmemul: ioctl command: 0x8008aa01
[32722.638914] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x0, val=0x803c
[32722.638917] nvmemul: ioctl command: 0x8008aa01
[32722.638917] nvmemul: setpci bus_id=0xff device_id=0x17, function_id=0x1, val=0x803c
[32764.202821] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
[32765.080106] drop_caches: sh (19817): drop_caches: 3
[32766.994841] drop_caches: sh (19826): drop_caches: 3
[32774.777336] drop_caches: sh (19904): drop_caches: 3
[32777.673993] drop_caches: sh (19912): drop_caches: 3
[32777.729432] flag is set to collect hetero allocate  9 
[32777.729434] flag is set to enable HETERO_PGCACHE 11 
[32777.729434] flag is set to enable HETERO_BUFFER 12 
[32777.729435] flag is set to enable HETERO_JOURNAL 13 
[32777.729436] flag is set to enable HETERO_RADIX 14 
[32777.729437] flag is set to enable HETERO_FULLKERN 15 
[32777.729438] flag to set FASTMEM node to 0 
[32777.729439] hetero_pid set to 19913 19913 procname numactl
[32777.729440] flag to set FASTMEM node to 0 
[32777.729441] flag to set MIGRATION FREQ to 410065408 
[32777.729443] flag to disable migration 19 
[32777.729444] flag to MIGRATE_LISTCNT 410065408 
[32777.762212] flag is set to collect hetero allocate  9 
[32777.762214] flag is set to enable HETERO_PGCACHE 11 
[32777.762215] flag is set to enable HETERO_BUFFER 12 
[32777.762216] flag is set to enable HETERO_JOURNAL 13 
[32777.762217] flag is set to enable HETERO_RADIX 14 
[32777.762218] flag is set to enable HETERO_FULLKERN 15 
[32777.762219] flag to set FASTMEM node to 0 
[32777.762220] hetero_pid set to 19913 19913 procname redis-server1
[32777.762221] flag to set FASTMEM node to 0 
[32777.762222] flag to set MIGRATION FREQ to 410065408 
[32777.762223] flag to disable migration 19 
[32777.762224] flag to MIGRATE_LISTCNT 410065408 
[32778.726368] flag is set to collect hetero allocate  9 
[32778.726370] flag is set to enable HETERO_PGCACHE 11 
[32778.726371] flag is set to enable HETERO_BUFFER 12 
[32778.726371] flag is set to enable HETERO_JOURNAL 13 
[32778.726372] flag is set to enable HETERO_RADIX 14 
[32778.726373] flag is set to enable HETERO_FULLKERN 15 
[32778.726374] flag to set FASTMEM node to 0 
[32778.726375] hetero_pid set to 19918 19918 procname numactl
[32778.726376] flag to set FASTMEM node to 0 
[32778.726377] flag to set MIGRATION FREQ to 410065408 
[32778.726378] flag to disable migration 19 
[32778.726379] flag to MIGRATE_LISTCNT 410065408 
[32778.728990] flag is set to collect hetero allocate  9 
[32778.728993] flag is set to enable HETERO_PGCACHE 11 
[32778.728994] flag is set to enable HETERO_BUFFER 12 
[32778.728995] flag is set to enable HETERO_JOURNAL 13 
[32778.728995] flag is set to enable HETERO_RADIX 14 
[32778.728996] flag is set to enable HETERO_FULLKERN 15 
[32778.728997] flag to set FASTMEM node to 0 
[32778.728999] hetero_pid set to 19918 19918 procname redis-server2
[32778.728999] flag to set FASTMEM node to 0 
[32778.729000] flag to set MIGRATION FREQ to 410065408 
[32778.729001] flag to disable migration 19 
[32778.729002] flag to MIGRATE_LISTCNT 410065408 
[32779.727619] flag is set to collect hetero allocate  9 
[32779.727621] flag is set to enable HETERO_PGCACHE 11 
[32779.727622] flag is set to enable HETERO_BUFFER 12 
[32779.727622] flag is set to enable HETERO_JOURNAL 13 
[32779.727623] flag is set to enable HETERO_RADIX 14 
[32779.727624] flag is set to enable HETERO_FULLKERN 15 
[32779.727625] flag to set FASTMEM node to 0 
[32779.727626] hetero_pid set to 19923 19923 procname numactl
[32779.727627] flag to set FASTMEM node to 0 
[32779.727628] flag to set MIGRATION FREQ to 410065408 
[32779.727629] flag to disable migration 19 
[32779.727630] flag to MIGRATE_LISTCNT 410065408 
[32779.730360] flag is set to collect hetero allocate  9 
[32779.730364] flag is set to enable HETERO_PGCACHE 11 
[32779.730364] flag is set to enable HETERO_BUFFER 12 
[32779.730365] flag is set to enable HETERO_JOURNAL 13 
[32779.730366] flag is set to enable HETERO_RADIX 14 
[32779.730367] flag is set to enable HETERO_FULLKERN 15 
[32779.730368] flag to set FASTMEM node to 0 
[32779.730371] hetero_pid set to 19923 19923 procname redis-server3
[32779.730372] flag to set FASTMEM node to 0 
[32779.730373] flag to set MIGRATION FREQ to 410065408 
[32779.730374] flag to disable migration 19 
[32779.730375] flag to MIGRATE_LISTCNT 410065408 
[32780.728894] flag is set to collect hetero allocate  9 
[32780.728896] flag is set to enable HETERO_PGCACHE 11 
[32780.728897] flag is set to enable HETERO_BUFFER 12 
[32780.728897] flag is set to enable HETERO_JOURNAL 13 
[32780.728898] flag is set to enable HETERO_RADIX 14 
[32780.728899] flag is set to enable HETERO_FULLKERN 15 
[32780.728900] flag to set FASTMEM node to 0 
[32780.728901] hetero_pid set to 19928 19928 procname numactl
[32780.728902] flag to set FASTMEM node to 0 
[32780.728903] flag to set MIGRATION FREQ to 410065408 
[32780.728904] flag to disable migration 19 
[32780.728905] flag to MIGRATE_LISTCNT 410065408 
[32780.731509] flag is set to collect hetero allocate  9 
[32780.731512] flag is set to enable HETERO_PGCACHE 11 
[32780.731513] flag is set to enable HETERO_BUFFER 12 
[32780.731513] flag is set to enable HETERO_JOURNAL 13 
[32780.731514] flag is set to enable HETERO_RADIX 14 
[32780.731515] flag is set to enable HETERO_FULLKERN 15 
[32780.731516] flag to set FASTMEM node to 0 
[32780.731518] hetero_pid set to 19928 19928 procname redis-server4
[32780.731518] flag to set FASTMEM node to 0 
[32780.731519] flag to set MIGRATION FREQ to 410065408 
[32780.731546] flag to disable migration 19 
[32780.731547] flag to MIGRATE_LISTCNT 410065408 
[32993.941841] Curr 19913 Currname redis-server1 HeteroProcname redis-server4 cache-hits 416412 cache-miss 844822 buff-hits 23266 buff-miss 1171044 migrated 0 migrate_time 0 avg_buff_life(us) 47401704 pgbuff-del 7933 avg_cache_life(us) 0 pgcache-del 0 active-cache 416412
[32993.941841]  
[32993.941846] Curr 19917 Currname redis-server1 HeteroProcname redis-server4 cache-hits 416412 cache-miss 844822 buff-hits 23266 buff-miss 1171044 migrated 0 migrate_time 0 avg_buff_life(us) 47401704 pgbuff-del 7933 avg_cache_life(us) 0 pgcache-del 0 active-cache 416412
[32993.941846]  
[32993.941968] Curr 19915 Currname redis-server1 HeteroProcname redis-server4 cache-hits 416412 cache-miss 844822 buff-hits 23266 buff-miss 1171044 migrated 0 migrate_time 0 avg_buff_life(us) 47401704 pgbuff-del 7933 avg_cache_life(us) 0 pgcache-del 0 active-cache 416412
[32993.941968]  
[32993.941974] Curr 19916 Currname redis-server1 HeteroProcname redis-server4 cache-hits 416412 cache-miss 844822 buff-hits 23266 buff-miss 1171044 migrated 0 migrate_time 0 avg_buff_life(us) 47401704 pgbuff-del 7933 avg_cache_life(us) 0 pgcache-del 0 active-cache 416412
[32993.941974]  
[32993.949394] Curr 19921 Currname redis-server2 HeteroProcname redis-server4 cache-hits 344309 cache-miss 929025 buff-hits 19670 buff-miss 1356760 migrated 0 migrate_time 0 avg_buff_life(us) 43393363 pgbuff-del 7382 avg_cache_life(us) 0 pgcache-del 0 active-cache 344309
[32993.949394]  
[32993.949410] Curr 19922 Currname redis-server2 HeteroProcname redis-server4 cache-hits 344309 cache-miss 929025 buff-hits 19670 buff-miss 1356760 migrated 0 migrate_time 0 avg_buff_life(us) 43393363 pgbuff-del 7382 avg_cache_life(us) 0 pgcache-del 0 active-cache 344309
[32993.949410]  
[32993.949440] Curr 19920 Currname redis-server2 HeteroProcname redis-server4 cache-hits 344309 cache-miss 929025 buff-hits 19670 buff-miss 1356760 migrated 0 migrate_time 0 avg_buff_life(us) 43393363 pgbuff-del 7382 avg_cache_life(us) 0 pgcache-del 0 active-cache 344309
[32993.949440]  
[32993.949448] Curr 19918 Currname redis-server2 HeteroProcname redis-server4 cache-hits 344309 cache-miss 929025 buff-hits 19670 buff-miss 1356760 migrated 0 migrate_time 0 avg_buff_life(us) 43393363 pgbuff-del 7382 avg_cache_life(us) 0 pgcache-del 0 active-cache 344309
[32993.949448]  
[32993.956825] Curr 19927 Currname redis-server3 HeteroProcname redis-server4 cache-hits 457078 cache-miss 858589 buff-hits 24364 buff-miss 1194674 migrated 0 migrate_time 0 avg_buff_life(us) 41214325 pgbuff-del 8223 avg_cache_life(us) 0 pgcache-del 0 active-cache 457078
[32993.956825]  
[32993.956828] Curr 19926 Currname redis-server3 HeteroProcname redis-server4 cache-hits 457078 cache-miss 858589 buff-hits 24364 buff-miss 1194674 migrated 0 migrate_time 0 avg_buff_life(us) 41214325 pgbuff-del 8223 avg_cache_life(us) 0 pgcache-del 0 active-cache 457078
[32993.956828]  
[32993.956861] Curr 19923 Currname redis-server3 HeteroProcname redis-server4 cache-hits 457078 cache-miss 858589 buff-hits 24364 buff-miss 1194674 migrated 0 migrate_time 0 avg_buff_life(us) 41214325 pgbuff-del 8223 avg_cache_life(us) 0 pgcache-del 0 active-cache 457078
[32993.956861]  
[32993.956869] Curr 19925 Currname redis-server3 HeteroProcname redis-server4 cache-hits 457078 cache-miss 858589 buff-hits 24364 buff-miss 1194674 migrated 0 migrate_time 0 avg_buff_life(us) 41214325 pgbuff-del 8223 avg_cache_life(us) 0 pgcache-del 0 active-cache 457078
[32993.956869]  
[32993.964659] Curr 19928 Currname redis-server4 HeteroProcname redis-server4 cache-hits 356070 cache-miss 927052 buff-hits 21621 buff-miss 1309486 migrated 0 migrate_time 0 avg_buff_life(us) 43643536 pgbuff-del 7530 avg_cache_life(us) 0 pgcache-del 0 active-cache 356070
[32993.964659]  
[32993.964673] Curr 19932 Currname redis-server4 HeteroProcname redis-server4 cache-hits 356070 cache-miss 927052 buff-hits 21621 buff-miss 1309486 migrated 0 migrate_time 0 avg_buff_life(us) 43643536 pgbuff-del 7530 avg_cache_life(us) 0 pgcache-del 0 active-cache 356070
[32993.964673]  
[32993.964779] Curr 19930 Currname redis-server4 HeteroProcname redis-server4 cache-hits 356070 cache-miss 927052 buff-hits 21621 buff-miss 1309486 migrated 0 migrate_time 0 avg_buff_life(us) 43631947 pgbuff-del 7532 avg_cache_life(us) 0 pgcache-del 0 active-cache 356070
[32993.964779]  
