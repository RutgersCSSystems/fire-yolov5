
This small benchmark checks prefetching performance wrt increasing thread count.

In this, there is a single target file generated by write.c . Read programs will read this target file.


Compile time Flags in read.c
FILESZ : size of file in GB
NR_RA_PAGES : Number of pages to be readahead in each request
NR_BG_THREADS : Number of background worker prefetching threads
ONLYAPP : Disables OS internal prefetching (FADV_RANDOM)
PREFETCH : Enables Application level prefetching
DONT_READ_FILE : Disables the main reader thread


Compile Time Flags in Makefile
SIZE: Desired filesize to test
NR_RA_PG: Desired size of each readahead request in number of pages
NR_BG_THREADS: desired number of bg worker prefetching threads


#######
Example Use:

```
make SIZE=20 NR_RA_PG=1280 NR_BG_THREADS=8
```

This will compile the benchmark to use a 20GB file, will readahead 1280 pages in each req 
and will have 8 BG threads to readahead in addition to the main thread which does reads

Binaries will be produced in ./bin folder. Might have to mkdir bin before make


## List of binaries compiled
read_onlyospfetch - Disables app level prefetching. OS prefetching is enabled while reading
read_noprefetch - Disables os and  app level prefetching while reading.
read_onlypfetch - Disables OS prefetching. Only runs app level prefetcher threads while reading.
read_os_smallpfetch - OS prefetching enabled, app prefetcher threads use NR_RA_PG sized requests for each readahead
read_os_fullpfetch - OS prefetching enabled, app prefetcher threads prefetch complete file in one readahead
dont_read_os_pfetch - OS prefetching enabled, app prefetcher enabled, main reader thread is disabled
