This small bench checks if compiling the read program with libaio increases performance.

Compile time Flags in read.c
FILESZ : size of file in GB
NR_RA_PAGES : Number of pages to be readahead in each request
NR_BG_THREADS : Number of background worker prefetching threads
ONLYAPP : Disables OS internal prefetching (FADV_RANDOM)
PREFETCH : Enables Application level prefetching
DONT_READ_FILE : Disables the main reader thread
PREAD : main thread reads using pread syscall, else uses read syscall



Compile time Flags in Makefile
SIZE : total desired filesize
NR_RA_PG : desired size of each readahead request
NR_BG_THREADS : desired number of bg worker prefetching threads


#######
Example Use:

```
make SIZE=20 NR_RA_PG=1280 NR_BG_THREADS=8
```

This will compile the benchmark to use 20GB file, will readahead 1280 pages in each req 
and will have 8 BG threads to readahead in addition to the main thread which does reads


## List of binaries compiled

./bin/write : Writes a file of size specified at compile time. bigfakefile.txt
./bin/read_onlyospfetch : Enables OS prefetching, disables app prefetching, reads bigfakefile.txt and reports the time taken in microseconds
./bin/read_libaio : compiles with -laio, same as read_onlyospfetch. Should use aio_read etc.
