cscope 15 /localhome/sudarsun/projects/HPC/NVM/appbench/apps/filebench               0001100846
	@aslr.c

19 
	~<sys/≥rs⁄Æôy.h
>

21 
	~"fûebích.h
"

22 
	~"a¶r.h
"

24 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

26 
	$löux_dißbÀ_a¶r
()

28 
r
;

30 (Ë
	`≥rs⁄Æôy
(0xffffffff);

31 
r
 = 
	`≥rs⁄Æôy
(0xfffffff‡| 
ADDR_NO_RANDOMIZE
);

32 i‡(
r
 == -1)

33 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot disable ASLR");

34 
	}
}

37 
	$Ÿhî_dißbÀ_a¶r
()

39 
	`fûebích_log
(
LOG_INFO
, "Per-process disabling of ASLR isÇot "

46 
	}
}

	@aslr.h

1 #i‚de‡
_ASLR_H


2 
	#_ASLR_H


	)

4 
	~<fûebích.h
>

6 #i‡
deföed
(
HAVE_SYS_PERSONALITY_H
Ë&& deföed(
HAVE_ADDR_NO_RANDOMIZE
)

8 
löux_dißbÀ_a¶r
();

10 
ölöe
 

11 
	$dißbÀ_a¶r
()

13  
	`löux_dißbÀ_a¶r
();

14 
	}
}

17 
Ÿhî_dißbÀ_a¶r
();

19 
ölöe
 

20 
	$dißbÀ_a¶r
() {

21  
	`Ÿhî_dißbÀ_a¶r
();

22 
	}
}

	@config.h

16 
	#HAVE_ADDR_NO_RANDOMIZE
 1

	)

19 
	#HAVE_AIO
 1

	)

25 
	#HAVE_AIO_ERROR64
 1

	)

28 
	#HAVE_AIO_RETURN64
 1

	)

31 
	#HAVE_AIO_WRITE64
 1

	)

34 
	#HAVE_ALLOCA
 1

	)

38 
	#HAVE_ALLOCA_H
 1

	)

41 
	#HAVE_ARPA_INET_H
 1

	)

54 
	#HAVE_DIRENT_H
 1

	)

57 
	#HAVE_DLFCN_H
 1

	)

63 
	#HAVE_FADVISE
 1

	)

66 
	#HAVE_FCNTL_H
 1

	)

69 
	#HAVE_FORK
 1

	)

75 
	#HAVE_FSTAT64
 1

	)

78 
	#HAVE_FTOK
 1

	)

81 
	#HAVE_FTRUNCATE
 1

	)

84 
	#HAVE_FTRUNCATE64
 1

	)

87 
	#HAVE_GETCWD
 1

	)

90 
	#HAVE_GETHOSTNAME
 1

	)

96 
	#HAVE_GETPAGESIZE
 1

	)

99 
	#HAVE_GETRLIMIT
 1

	)

102 
	#HAVE_GETTIMEOFDAY
 1

	)

105 
	#HAVE_INTTYPES_H
 1

	)

108 
	#HAVE_IOPRIO
 1

	)

111 
	#HAVE_LIBDL
 1

	)

114 
	#HAVE_LIBINTL_H
 1

	)

117 
	#HAVE_LIBM
 1

	)

120 
	#HAVE_LIBPTHREAD
 1

	)

123 
	#HAVE_LIBRT
 1

	)

126 
	#HAVE_LIMITS_H
 1

	)

129 
	#HAVE_LOCALE_H
 1

	)

132 
	#HAVE_LSEEK64
 1

	)

139 
	#HAVE_MALLOC
 1

	)

142 
	#HAVE_MALLOC_H
 1

	)

145 
	#HAVE_MATH_H
 1

	)

148 
	#HAVE_MEMORY_H
 1

	)

151 
	#HAVE_MEMSET
 1

	)

154 
	#HAVE_MKDIR
 1

	)

157 
	#HAVE_MMAP
 1

	)

160 
	#HAVE_MMAP64
 1

	)

163 
	#HAVE_MUNMAP
 1

	)

169 
	#HAVE_NETDB_H
 1

	)

172 
	#HAVE_NETINET_IN_H
 1

	)

178 
	#HAVE_OFF64_T
 1

	)

181 
	#HAVE_OPEN64
 1

	)

184 
	#HAVE_O_DIRECT
 1

	)

190 
	#HAVE_PREAD64
 1

	)

193 
	#HAVE_PROCSCOPE_PTHREADS
 1

	)

196 
	#HAVE_PROC_SYS_KERNEL_SHMMAX
 1

	)

199 
	#HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL
 1

	)

202 
	#HAVE_PWRITE64
 1

	)

206 
	#HAVE_REALLOC
 1

	)

209 
	#HAVE_RMDIR
 1

	)

212 
	#HAVE_ROBUST_MUTEX
 1

	)

215 
	#HAVE_SEMGET
 1

	)

218 
	#HAVE_SEMOP
 1

	)

221 
	#HAVE_SEMTIMEDOP
 1

	)

224 
	#HAVE_SEM_RMID
 1

	)

227 
	#HAVE_SETRLIMIT
 1

	)

233 
	#HAVE_SIGIGNORE
 1

	)

239 
	#HAVE_SOCKET
 1

	)

245 
	#HAVE_STAT64
 1

	)

252 
	#HAVE_STDBOOL_H
 1

	)

255 
	#HAVE_STDDEF_H
 1

	)

258 
	#HAVE_STDINT_H
 1

	)

261 
	#HAVE_STDLIB_H
 1

	)

264 
	#HAVE_STRCHR
 1

	)

267 
	#HAVE_STRDUP
 1

	)

270 
	#HAVE_STRERROR
 1

	)

273 
	#HAVE_STRFTIME
 1

	)

276 
	#HAVE_STRINGS_H
 1

	)

279 
	#HAVE_STRING_H
 1

	)

288 
	#HAVE_STRNCASECMP
 1

	)

291 
	#HAVE_STRSTR
 1

	)

294 
	#HAVE_STRUCT_STAT_ST_RDEV
 1

	)

297 
	#HAVE_SYSV_SEM
 1

	)

308 
	#HAVE_SYS_PARAM_H
 1

	)

311 
	#HAVE_SYS_PERSONALITY_H
 1

	)

314 
	#HAVE_SYS_SOCKET_H
 1

	)

317 
	#HAVE_SYS_STATVFS_H
 1

	)

320 
	#HAVE_SYS_STAT_H
 1

	)

323 
	#HAVE_SYS_TIME_H
 1

	)

326 
	#HAVE_SYS_TYPES_H
 1

	)

329 
	#HAVE_SYS_WAIT_H
 1

	)

335 
	#HAVE_UNISTD_H
 1

	)

341 
	#HAVE_VFORK
 1

	)

347 
	#HAVE_VPRINTF
 1

	)

350 
	#HAVE_WAITID
 1

	)

353 
	#HAVE_WORKING_FORK
 1

	)

356 
	#HAVE_WORKING_VFORK
 1

	)

359 
	#HAVE__BOOL
 1

	)

363 
	#LSTAT_FOLLOWS_SLASHED_SYMLINK
 1

	)

366 
	#LT_OBJDIR
 ".libs/"

	)

369 
	#PACKAGE
 "fûebích"

	)

372 
	#PACKAGE_BUGREPORT
 ""

	)

375 
	#PACKAGE_NAME
 "fûebích"

	)

378 
	#PACKAGE_STRING
 "fûebích 1.5-Æpha3"

	)

381 
	#PACKAGE_TARNAME
 "fûebích"

	)

384 
	#PACKAGE_URL
 ""

	)

387 
	#PACKAGE_VERSION
 "1.5-Æpha3"

	)

390 
	#RETSIGTYPE
 

	)

401 
	#STDC_HEADERS
 1

	)

404 
	#TIME_WITH_SYS_TIME
 1

	)

413 
	#VERSION
 "1.5-Æpha3"

	)

417 
	#YYTEXT_POINTER
 1

	)

	@cvars/cvar-erlang.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-îœng.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©oi
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RER_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RER_RATE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
øã
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
øã
 = 
RER_RATE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%d,Ñ©ê%lf", 
h™dÀ
.
sh≠e
, h™dÀ.
øã
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %d. shape isá "

56 "n⁄-zîÿposôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
øã
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value:Ñate = %lf.Ñate isá "

62 "n⁄-zîÿposôivêøti⁄ÆÇumbî", 
h™dÀ
.
øã
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_îœng
(&
h
->
°©e
, h->
sh≠e
, h->
øã
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%d\n", 
RER_SHAPE
, 
RER_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RER_RATE
, 
RER_RATE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RER_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RER_RATE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RER_RATE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-erlang.h

10 #i‚de‡
_RAND_ERLANG_H


11 
	#_RAND_ERLANG_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RER_SHAPE
 "sh≠e"

	)

17 
	#RER_RATE
 "øã"

	)

20 
	#RER_SHAPE_DEFAULT
 1

	)

21 
	#RER_RATE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	møã
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-exponential.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-exp⁄ítül.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RE_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RE_MEAN_DEFAULT
;

44 
	`cv¨_åa˚
("mó¿%lf", 
h™dÀ
.
món
);

47 i‡(
h™dÀ
.
món
 < 0) {

48 
	`cv¨_åa˚
("Setting meanÅo 0");

49 
h™dÀ
.
món
 = 0;

52 
t
 = 
	`unu£d_tokís
(
li°_hód
);

53 i‡(
t
) {

54 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

55 
out
;

59 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

63 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

64 i‡(!
°©e
) {

65 
	`cv¨_log_îr‹
("Out of memory");

66 
out
;

69 *
°©e
 = 
h™dÀ
;

71 
out
:

72 
	`‰ì_tokís
(
li°_hód
);

74 
	`cv¨_åa˚
("exit");

75  
°©e
;

76 
	}
}

78 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

80 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

82 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

85 
	}
}

87 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

89 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

91 i‡(!
h
) {

92 
	`cv¨_åa˚
("NULL cvar_handle");

96 i‡(!
vÆue
) {

97 
	`cv¨_åa˚
("NULL value");

101 *
vÆue
 = 
	`rds_exp⁄ítül
(&
h
->
°©e
, h->
món
);

104 
	}
}

106 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

108 
	`cv¨_‰ì
(
h™dÀ
);

109 
	}
}

111 c⁄° *
	$cv¨_ußge
()

113 
off£t
;

115 i‡(
ußge
[0])

116  
ußge
;

118 
off£t
 = 0;

120 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

122 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

125 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 "\t%s\t\t%.1f\n", 
RE_MEAN
, 
RE_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "U£ '%c' f‹ássignmít.\n", 
DEFAULT_KEY_VALUE_DELIMITER
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 
RE_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RE_MEAN_DEFAULT
);

135  
ußge
;

136 
	}
}

138 c⁄° *
	$cv¨_vîsi⁄
()

140  
VERSION
;

141 
	}
}

	@cvars/cvar-exponential.h

10 #i‚de‡
_RAND_EXPONENTIAL_H


11 
	#_RAND_EXPONENTIAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RE_MEAN
 "món"

	)

19 
	#RE_MEAN_DEFAULT
 1.0

	)

21 
	#VERSION
 "0.1.1 (Æpha)"

	)

24 
	sh™dÀ
 {

25 
mt_°©e
 
	m°©e
;

26 
	mmón
;

27 } 
	th™dÀ_t
;

30 
	#USAGE_LEN
 2048

	)

32 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-gamma.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<m©h.h
>

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

17 
	#VERSION
 "0.1.1 (Æpha)"

	)

19 
	#USAGE_LEN
 2048

	)

20 
	gußge
[
USAGE_LEN
 + 1];

22 
	#MEAN
 "món"

	)

23 
	#GAMMA
 "gamma"

	)

25 
	#MEAN_DEFAULT
 4096.0

	)

26 
	#GAMMA_DEFAULT
 1.5

	)

28 
	sh™dÀ
 {

29 
	mmón
;

30 
	msˇÀdmón
;

31 
	mgamma
;

32 } 
	th™dÀ_t
;

42 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

43 *
xi
)

45 
p
, 
U
, 
V
, 
X
, 
q
;

47 
p
 = 
M_E
/(
a
 + M_E);

48 
G2
:

50 
U
 = (*
§c
)(
xi
);

54 
V
 = (*
§c
)(
xi
);

56 } 
V
 == 0);

58 i‡(
U
 < 
p
) {

59 
X
 = 
	`pow
(
V
, 1/
a
);

61 
q
 = 
	`exp
(-
X
);

63 
X
 = 1 - 
	`log
(
V
);

64 
q
 = 
	`pow
(
X
, 
a
-1);

72 
U
 = (*
§c
)(
xi
);

74 i‡(
U
 >
q
)

75 
G2
;

76  (
X
);

77 
	}
}

85 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

86 *
xi
)

88 
U
, 
Y
, 
X
, 
V
;

90 
A1
:

92 
U
 = (*
§c
)(
xi
);

94 
Y
 = 
	`èn
(
M_PI
*
U
);

95 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

97 i‡(
X
 <= 0)

98 
A1
;

101 
V
 = (*
§c
)(
xi
);

103 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

104 
A1
;

106  (
X
);

107 
	}
}

114 
	$deÁu…_§c
(*
xi
)

116  (
	`dønd48
());

117 
	}
}

125 
	$gamma_di°_knuth
(
a
, 
b
)

127 i‡(
a
 <= 1.0)

128  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

130  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

131 
	}
}

140 
	$gamma_di°_knuth_§c
(
a
, 
b
,

141 (*
§c
)(*), *
xi
)

143 i‡(
a
 <= 1.0)

144  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

146  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

147 
	}
}

150 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

151 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

153 
cv¨_tokí_t
 *
li°_hód
;;

154 
cv¨_tokí_t
 *
t
;

155 
h™dÀ_t
 
h™dÀ
;

156 
h™dÀ_t
 *
°©e
 = 
NULL
;

157 
ªt
 = 0;

159 
	`cv¨_åa˚
("entry");

162 
li°_hód
 = 
NULL
;

163 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

164 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

165 i‡(
ªt
)

166 
out
;

169 
t
 = 
	`föd_tokí
(
li°_hód
, 
MEAN
);

170 i‡(
t
 &&Å->
vÆue
) {

171 
t
->
u£d
 = 1;

172 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

174 
h™dÀ
.
món
 = 
MEAN_DEFAULT
;

176 
t
 = 
	`föd_tokí
(
li°_hód
, 
GAMMA
);

177 i‡(
t
 &&Å->
vÆue
) {

178 
t
->
u£d
 = 1;

179 
h™dÀ
.
gamma
 = 
	`©of
(
t
->
vÆue
);

181 
h™dÀ
.
gamma

GAMMA_DEFAULT
;

183 i‡(!
h™dÀ
.
gamma
) {

184 
	`cv¨_log_îr‹
("InvalidÖarameter values: mean = %lf "

186 "th™ 0", 
h™dÀ
.
món
, h™dÀ.
gamma
);

187 
out
;

190 
h™dÀ
.
sˇÀdmón
 = h™dÀ.
món
 / h™dÀ.
gamma
;

192 
	`cv¨_åa˚
("mó¿%lf, gamm®%lf", 
h™dÀ
.
món
, h™dÀ.
gamma
);

194 
t
 = 
	`unu£d_tokís
(
li°_hód
);

195 i‡(
t
) {

196 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

197 
out
;

202 
°©e
 = (
h™dÀ_t
 *)
	`cv¨_mÆloc
((handle_t));

203 i‡(!
°©e
) {

204 
	`cv¨_log_îr‹
("Out of memory");

205 
out
;

208 *
°©e
 = 
h™dÀ
;

210 
out
:

211 
	`‰ì_tokís
(
li°_hód
);

213 
	`cv¨_åa˚
("exit");

214  
°©e
;

215 
	}
}

217 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

219 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

222 
	}
}

224 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

226 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

228 i‡(!
h
) {

229 
	`cv¨_log_îr‹
("NULL cvar_handle");

233 i‡(!
vÆue
) {

234 
	`cv¨_log_îr‹
("NULL value");

238 *
vÆue
 = 
	`gamma_di°_knuth
(
h
->
gamma
, h->
sˇÀdmón
);

241 
	}
}

243 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

245 
	`cv¨_‰ì
(
h™dÀ
);

246 
	}
}

248 c⁄° *
	$cv¨_ußge
()

250 
off£t
;

252 i‡(
ußge
[0])

253  
ußge
;

255 
off£t
 = 0;

257 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

259 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

262 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

263 "\t%s\t\t%.1f\n", 
MEAN
, 
MEAN_DEFAULT
);

264 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

265 "\t%s\t\t%.1f\n", 
GAMMA
, 
GAMMA_DEFAULT
);

267 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

269 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

270 
DEFAULT_KEY_VALUE_DELIMITER
);

271 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

273 
MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
MEAN_DEFAULT
,

274 
DEFAULT_PARAMETER_DELIMITER
,

275 
GAMMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
GAMMA_DEFAULT
);

277  
ußge
;

278 
	}
}

280 c⁄° *
	$cv¨_vîsi⁄
()

282  
VERSION
;

283 
	}
}

	@cvars/cvar-lognormal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-logn‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RLN_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RLN_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RLN_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

53 i‡(
h™dÀ
.
sh≠e
 < 0) {

54 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

55 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sh≠e
);

56 
out
;

59 i‡(
h™dÀ
.
sˇÀ
 < 0) {

60 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

61 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

62 
out
;

65 
t
 = 
	`unu£d_tokís
(
li°_hód
);

66 i‡(
t
) {

67 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

68 
out
;

72 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

76 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

77 i‡(!
°©e
) {

78 
	`cv¨_log_îr‹
("Out of memory");

79 
out
;

82 *
°©e
 = 
h™dÀ
;

84 
out
:

85 
	`‰ì_tokís
(
li°_hód
);

87 
	`cv¨_åa˚
("exit");

88  
°©e
;

89 
	}
}

91 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

93 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

95 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

98 
	}
}

100 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

102 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

104 i‡(!
h
) {

105 
	`cv¨_åa˚
("NULL cvar_handle");

109 i‡(!
vÆue
) {

110 
	`cv¨_åa˚
("NULL value");

114 *
vÆue
 = 
	`rds_logn‹mÆ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

117 
	}
}

119 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

121 
	`cv¨_‰ì
(
h™dÀ
);

122 
	}
}

124 c⁄° *
	$cv¨_ußge
()

126 
off£t
;

128 i‡(
ußge
[0])

129  
ußge
;

131 
off£t
 = 0;

133 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "\t%s\t\t%.1f\n", 
RLN_SHAPE
, 
RLN_SHAPE_DEFAULT
);

140 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

141 "\t%s\t\t%.1f\n", 
RLN_SCALE
, 
RLN_SCALE_DEFAULT
);

143 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

145 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

146 
DEFAULT_KEY_VALUE_DELIMITER
);

148 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 
RLN_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SHAPE_DEFAULT
,

151 
DEFAULT_PARAMETER_DELIMITER
,

152 
RLN_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RLN_SCALE_DEFAULT
);

154  
ußge
;

155 
	}
}

157 c⁄° *
	$cv¨_vîsi⁄
()

159  
VERSION
;

160 
	}
}

	@cvars/cvar-lognormal.h

10 #i‚de‡
_RAND_LOGNORMAL_H


11 
	#_RAND_LOGNORMAL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RLN_SHAPE
 "sh≠e"

	)

17 
	#RLN_SCALE
 "sˇÀ"

	)

20 
	#RLN_SHAPE_DEFAULT
 1.0

	)

21 
	#RLN_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-normal.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-n‹mÆ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_MEAN
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
món
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
món
 = 
RN_MEAN_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RN_SIGMA
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sigma
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sigma
 = 
RN_SIGMA_DEFAULT
;

51 
	`cv¨_åa˚
("mó¿%lf, sigm®%lf", 
h™dÀ
.
món
, h™dÀ.
sigma
);

53 
t
 = 
	`unu£d_tokís
(
li°_hód
);

54 i‡(
t
) {

55 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

56 
out
;

60 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

64 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

65 i‡(!
°©e
) {

66 
	`cv¨_log_îr‹
("Out of memory");

67 
out
;

70 *
°©e
 = 
h™dÀ
;

72 
out
:

73 
	`‰ì_tokís
(
li°_hód
);

75 
	`cv¨_åa˚
("exit");

76  
°©e
;

77 
	}
}

79 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

81 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

83 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

86 
	}
}

88 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

90 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

92 i‡(!
h
) {

93 
	`cv¨_åa˚
("NULL cvar_handle");

97 i‡(!
vÆue
) {

98 
	`cv¨_åa˚
("NULL value");

102 *
vÆue
 = 
	`rds_n‹mÆ
(&
h
->
°©e
, h->
món
, h->
sigma
);

105 
	}
}

107 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

109 
	`cv¨_‰ì
(
h™dÀ
);

110 
	}
}

112 c⁄° *
	$cv¨_ußge
()

114 
off£t
;

116 i‡(
ußge
[0])

117  
ußge
;

119 
off£t
 = 0;

121 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

123 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

126 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

127 "\t%s\t\t%.1f\n", 
RN_MEAN
, 
RN_MEAN_DEFAULT
);

128 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 "\t%s\t\t%.1f\n", 
RN_SIGMA
, 
RN_SIGMA_DEFAULT
);

131 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

134 
DEFAULT_KEY_VALUE_DELIMITER
);

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

138 
RN_MEAN
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_MEAN_DEFAULT
,

139 
DEFAULT_PARAMETER_DELIMITER
,

140 
RN_SIGMA
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RN_SIGMA_DEFAULT
);

142  
ußge
;

143 
	}
}

145 c⁄° *
	$cv¨_vîsi⁄
()

147  
VERSION
;

148 
	}
}

	@cvars/cvar-normal.h

9 #i‚de‡
_RAND_NORMAL_H


10 
	#_RAND_NORMAL_H


	)

12 
	~"mtwi°/mtwi°.h
"

15 
	#RN_MEAN
 "món"

	)

16 
	#RN_SIGMA
 "sigma"

	)

19 
	#RN_MEAN_DEFAULT
 0.0

	)

20 
	#RN_SIGMA_DEFAULT
 1.0

	)

22 
	#VERSION
 "0.1.1 (Æpha)"

	)

25 
	sh™dÀ
 {

26 
mt_°©e
 
	m°©e
;

27 
	mmón
;

28 
	msigma
;

29 } 
	th™dÀ_t
;

32 
	#USAGE_LEN
 2048

	)

34 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-triangular.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-åünguœr.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RT_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RT_UPPER_DEFAULT
;

51 
t
 = 
	`föd_tokí
(
li°_hód
, 
RT_MODE
);

52 i‡(
t
 &&Å->
vÆue
) {

53 
t
->
u£d
 = 1;

54 
h™dÀ
.
mode
 = 
	`©of
(
t
->
vÆue
);

56 
h™dÀ
.
mode
 = 
RT_MODE_DEFAULT
;

58 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf, modê%lf", 
h™dÀ
.
lowî
,

59 
h™dÀ
.
uµî
, h™dÀ.
mode
);

62 i‡(
h™dÀ
.
uµî
 < h™dÀ.
lowî
) {

63 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

64 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

65 
out
;

68 i‡((
h™dÀ
.
mode
 > h™dÀ.
uµî
Ë|| (h™dÀ.modê< h™dÀ.
lowî
)) {

69 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lf, mode = %lfánd "

71 
h™dÀ
.
lowî
, h™dÀ.
mode
, h™dÀ.
uµî
);

72 
out
;

76 
t
 = 
	`unu£d_tokís
(
li°_hód
);

77 i‡(
t
) {

78 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

79 
out
;

83 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

87 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

88 i‡(!
°©e
) {

89 
	`cv¨_log_îr‹
("Out of memory");

90 
out
;

93 *
°©e
 = 
h™dÀ
;

95 
out
:

96 
	`‰ì_tokís
(
li°_hód
);

98 
	`cv¨_åa˚
("exit");

99  
°©e
;

100 
	}
}

102 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

104 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

106 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

109 
	}
}

111 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

113 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

115 i‡(!
h
) {

116 
	`cv¨_log_îr‹
("NULL cvar_handle");

120 i‡(!
vÆue
) {

121 
	`cv¨_log_îr‹
("NULL value");

125 *
vÆue
 = 
	`rds_åünguœr
(&
h
->
°©e
, h->
lowî
, h->
uµî
, h->
mode
);

128 
	}
}

130 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

132 
	`cv¨_‰ì
(
h™dÀ
);

133 
	}
}

135 c⁄° *
	$cv¨_ußge
()

137 
off£t
;

139 i‡(
ußge
[0])

140  
ußge
;

142 
off£t
 = 0;

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

150 "\t%s\t\t%.1f\n", 
RT_LOWER
, 
RT_LOWER_DEFAULT
);

151 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

152 "\t%s\t\t%.1f\n", 
RT_UPPER
, 
RT_UPPER_DEFAULT
);

153 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

154 "\t%s\t\t%.1f\n", 
RT_MODE
, 
RT_MODE_DEFAULT
);

156 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

158 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

159 
DEFAULT_KEY_VALUE_DELIMITER
);

161 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

163 
RT_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_LOWER_DEFAULT
,

164 
DEFAULT_PARAMETER_DELIMITER
,

165 
RT_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_UPPER_DEFAULT
,

166 
DEFAULT_PARAMETER_DELIMITER
,

167 
RT_MODE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RT_MODE_DEFAULT
);

169  
ußge
;

170 
	}
}

172 c⁄° *
	$cv¨_vîsi⁄
()

174  
VERSION
;

175 
	}
}

	@cvars/cvar-triangular.h

10 #i‚de‡
_RAND_TRIANGULAR_H


11 
	#_RAND_TRIANGULAR_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RT_LOWER
 "lowî"

	)

17 
	#RT_UPPER
 "uµî"

	)

18 
	#RT_MODE
 "mode"

	)

21 
	#RT_LOWER_DEFAULT
 0.0

	)

22 
	#RT_UPPER_DEFAULT
 1.0

	)

23 
	#RT_MODE_DEFAULT
 0.5

	)

25 
	#VERSION
 "0.1.1 (Æpha)"

	)

28 
	sh™dÀ
 {

29 
mt_°©e
 
	m°©e
;

30 
	mlowî
;

31 
	muµî
;

32 
	mmode
;

33 } 
	th™dÀ_t
;

36 
	#USAGE_LEN
 2048

	)

38 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-uniform.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-unif‹m.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_LOWER
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
lowî
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
lowî
 = 
RU_LOWER_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RU_UPPER
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
uµî
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
uµî
 = 
RU_UPPER_DEFAULT
;

51 
	`cv¨_åa˚
("lowî = %lf, uµî = %lf", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

54 i‡(
h™dÀ
.
lowî
 > h™dÀ.
uµî
) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter values:Üower = %lfánd upper = %lf. "

56 "uµî mu° bêgª©îÅh™Üowî", 
h™dÀ
.
lowî
, h™dÀ.
uµî
);

59 
t
 = 
	`unu£d_tokís
(
li°_hód
);

60 i‡(
t
) {

61 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

62 
out
;

66 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

70 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

71 i‡(!
°©e
) {

72 
	`cv¨_log_îr‹
("Out of memory");

73 
out
;

76 *
°©e
 = 
h™dÀ
;

78 
out
:

79 
	`‰ì_tokís
(
li°_hód
);

81 
	`cv¨_åa˚
("exit");

82  
°©e
;

83 
	}
}

85 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

87 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

89 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

92 
	}
}

94 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

96 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

98 i‡(!
h
) {

99 
	`cv¨_log_îr‹
("NULL cvar_handle");

103 i‡(!
vÆue
) {

104 
	`cv¨_log_îr‹
("NULL value");

108 *
vÆue
 = 
	`rds_unif‹m
(&
h
->
°©e
, h->
lowî
, h->
uµî
);

111 
	}
}

113 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

115 
	`cv¨_‰ì
(
h™dÀ
);

116 
	}
}

118 c⁄° *
	$cv¨_ußge
()

120 
off£t
;

122 i‡(
ußge
[0])

123  
ußge
;

125 
off£t
 = 0;

127 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

129 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

132 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

133 "\t%s\t\t%.1f\n", 
RU_LOWER
, 
RU_LOWER_DEFAULT
);

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

135 "\t%s\t\t%.1f\n", 
RU_UPPER
, 
RU_UPPER_DEFAULT
);

137 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

140 
DEFAULT_KEY_VALUE_DELIMITER
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

143 
RU_LOWER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_LOWER_DEFAULT
,

144 
DEFAULT_PARAMETER_DELIMITER
,

145 
RU_UPPER
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RU_UPPER_DEFAULT
);

147  
ußge
;

148 
	}
}

150 c⁄° *
	$cv¨_vîsi⁄
()

152  
VERSION
;

153 
	}
}

	@cvars/cvar-uniform.h

10 #i‚de‡
_RAND_UNIFORM_H


11 
	#_RAND_UNIFORM_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RU_LOWER
 "lowî"

	)

17 
	#RU_UPPER
 "uµî"

	)

20 
	#RU_LOWER_DEFAULT
 0.0

	)

21 
	#RU_UPPER_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	mlowî
;

29 
	muµî
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar-weibull.c

10 
	~<°dio.h
>

11 
	~"mtwi°/mtwi°.h
"

12 
	~"mtwi°/øndi°rs.h
"

13 
	~"cv¨.h
"

14 
	~"cv¨_åa˚.h
"

15 
	~"cv¨_tokís.h
"

16 
	~"cv¨-weibuŒ.h
"

18 *
	$cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

19 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
cv¨_±r
))

21 
cv¨_tokí_t
 *
li°_hód
;;

22 
cv¨_tokí_t
 *
t
;

23 
h™dÀ_t
 
h™dÀ
;

24 
h™dÀ_t
 *
°©e
 = 
NULL
;

25 
ªt
 = 0;

27 
	`cv¨_åa˚
("entry");

30 
li°_hód
 = 
NULL
;

31 
ªt
 = 
	`tokíize
(
cv¨_∑ømëîs
, 
DEFAULT_PARAMETER_DELIMITER
,

32 
DEFAULT_KEY_VALUE_DELIMITER
, &
li°_hód
);

33 i‡(
ªt
)

34 
out
;

37 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SHAPE
);

38 i‡(
t
 &&Å->
vÆue
) {

39 
t
->
u£d
 = 1;

40 
h™dÀ
.
sh≠e
 = 
	`©of
(
t
->
vÆue
);

42 
h™dÀ
.
sh≠e
 = 
RW_SHAPE_DEFAULT
;

44 
t
 = 
	`föd_tokí
(
li°_hód
, 
RW_SCALE
);

45 i‡(
t
 &&Å->
vÆue
) {

46 
t
->
u£d
 = 1;

47 
h™dÀ
.
sˇÀ
 = 
	`©of
(
t
->
vÆue
);

49 
h™dÀ
.
sˇÀ
 = 
RW_SCALE_DEFAULT
;

51 
	`cv¨_åa˚
("sh≠ê%lf, sˇÀ = %lf", 
h™dÀ
.
sh≠e
, h™dÀ.
sˇÀ
);

54 i‡(
h™dÀ
.
sh≠e
 < 0) {

55 
	`cv¨_log_îr‹
("InvalidÖarameter value: shape = %lf. shape isá "

56 "n⁄-zîo,Öosôivêöãgî", 
h™dÀ
.
sh≠e
);

57 
out
;

60 i‡(
h™dÀ
.
sˇÀ
 < 0) {

61 
	`cv¨_log_îr‹
("InvalidÖarameter value: scale = %lf. scale isá "

62 "n⁄-zîo,Öosôivêøti⁄ÆÇumbî", 
h™dÀ
.
sˇÀ
);

63 
out
;

66 
t
 = 
	`unu£d_tokís
(
li°_hód
);

67 i‡(
t
) {

68 
	`cv¨_log_îr‹
("Unsuµ‹ãdÖ¨amëî %s", 
t
->
key
);

69 
out
;

73 
	`mts_good£ed
(&
h™dÀ
.
°©e
);

77 
°©e
 = (
h™dÀ_t
 *Ë
	`cv¨_mÆloc
((handle_t));

78 i‡(!
°©e
) {

79 
	`cv¨_log_îr‹
("Out of memory");

80 
out
;

83 *
°©e
 = 
h™dÀ
;

85 
out
:

86 
	`‰ì_tokís
(
li°_hód
);

88 
	`cv¨_åa˚
("exit");

89  
°©e
;

90 
	}
}

92 
	$cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
)

94 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

96 
	`mts_m¨k_öôülized
(&
h
->
°©e
);

99 
	}
}

101 
	$cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
)

103 
h™dÀ_t
 *
h
 = (h™dÀ_à*Ë
cv¨_h™dÀ
;

105 i‡(!
h
) {

106 
	`cv¨_åa˚
("NULL cvar_handle");

110 i‡(!
vÆue
) {

111 
	`cv¨_åa˚
("NULL value");

115 *
vÆue
 = 
	`rds_weibuŒ
(&
h
->
°©e
, h->
sh≠e
, h->
sˇÀ
);

118 
	}
}

120 
	$cv¨_‰ì_h™dÀ
(*
h™dÀ
, (*
cv¨_‰ì
)(*
±r
))

122 
	`cv¨_‰ì
(
h™dÀ
);

123 
	}
}

125 c⁄° *
	$cv¨_ußge
()

127 
off£t
;

129 i‡(
ußge
[0])

130  
ußge
;

132 
off£t
 = 0;

134 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

136 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

139 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

140 "\t%s\t\t%.1f\n", 
RW_SHAPE
, 
RW_SHAPE_DEFAULT
);

141 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

142 "\t%s\t\t%.1f\n", 
RW_SCALE
, 
RW_SCALE_DEFAULT
);

144 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

146 "∑ús.\n", 
DEFAULT_PARAMETER_DELIMITER
,

147 
DEFAULT_KEY_VALUE_DELIMITER
);

149 
off£t
 +
	`¢¥ötf
(
ußge
 + off£t, 
USAGE_LEN
 - offset,

151 
RW_SHAPE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SHAPE_DEFAULT
,

152 
DEFAULT_PARAMETER_DELIMITER
,

153 
RW_SCALE
, 
DEFAULT_KEY_VALUE_DELIMITER
, 
RW_SCALE_DEFAULT
);

155  
ußge
;

156 
	}
}

158 c⁄° *
	$cv¨_vîsi⁄
()

160  
VERSION
;

161 
	}
}

	@cvars/cvar-weibull.h

10 #i‚de‡
_RAND_WEIBULL_H


11 
	#_RAND_WEIBULL_H


	)

13 
	~"mtwi°/mtwi°.h
"

16 
	#RW_SHAPE
 "sh≠e"

	)

17 
	#RW_SCALE
 "sˇÀ"

	)

20 
	#RW_SHAPE_DEFAULT
 1.0

	)

21 
	#RW_SCALE_DEFAULT
 1.0

	)

23 
	#VERSION
 "0.1.1 (Æpha)"

	)

26 
	sh™dÀ
 {

27 
mt_°©e
 
	m°©e
;

28 
	msh≠e
;

29 
	msˇÀ
;

30 } 
	th™dÀ_t
;

33 
	#USAGE_LEN
 2048

	)

35 
	gußge
[
USAGE_LEN
 + 1] = {0};

	@cvars/cvar.h

9 #i‚de‡
_CVAR_H


10 
	#_CVAR_H


	)

22 
cv¨_moduÀ_öô
();

37 *
cv¨_Æloc_h™dÀ
(c⁄° *
cv¨_∑ømëîs
,

38 *(*
cv¨_mÆloc
)(
size_t
 
size
), (*
cv¨_‰ì
)(*
±r
));

51 
	`cv¨_ªvÆid©e_h™dÀ
(*
cv¨_h™dÀ
);

62 
	`cv¨_√xt_vÆue
(*
cv¨_h™dÀ
, *
vÆue
);

74 
	`cv¨_‰ì_h™dÀ
(*
cv¨_h™dÀ
, (*
cv¨_‰ì
)(*
±r
));

87 
	`cv¨_moduÀ_exô
();

98 c⁄° *
	`cv¨_ußge
();

108 c⁄° *
	`cv¨_vîsi⁄
();

	@cvars/cvar_tokens.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"cv¨_åa˚.h
"

12 
	~"cv¨_tokís.h
"

19 
	$tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

20 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
)

22 *
∑øm
;

23 *
∑øm_°¨t
, *
∑øm_íd
;

24 *
key_°¨t
, *
key_íd
;

25 
cv¨_tokí_t
 *
lhód
, *
¥ev
, *
cuº
;

26 
m‹e_∑øms
;

27 
no_vÆue
;

28 
ªt
 = 0;

30 i‡(!
∑ømëîs
)

31 
out
;

33 
ªt
 = -1;

35 
lhód
 = 
¥ev
 = 
NULL
;

37 
∑øm
 = 
	`°rdup
(
∑ømëîs
);

38 i‡(!
∑øm
) {

39 
	`cv¨_log_îr‹
("Out of memory");

40 
˛ónup
;

43 
∑øm_°¨t
 = 
∑øm
;

44 
m‹e_∑øms
 = 1;

46 
m‹e_∑øms
) {

47 
∑øm_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
∑ømëî_dñimôî
);

48 i‡(
∑øm_íd
)

49 *
∑øm_íd
 = '\0';

51 
∑øm_íd
 = 
∑øm_°¨t
 + 
	`°æí
(param_start);

52 
m‹e_∑øms
 = 0;

55 i‡(
∑øm_°¨t
 !
∑øm_íd
) {

56 
key_°¨t
 = 
∑øm_°¨t
;

57 
key_íd
 = 
	`°rchr
(
∑øm_°¨t
, 
key_vÆue_dñimôî
);

58 i‡(
key_íd
) {

59 *
key_íd
 = '\0';

60 
no_vÆue
 = 0;

62 
key_íd
 = 
∑øm_íd
;

63 
no_vÆue
 = 1;

66 i‡(
key_°¨t
 =
key_íd
) {

67 
	`cv¨_log_îr‹
("Empty keyátÖosition %lu inÖarameter string "

68 "\"%s\"", (
key_°¨t
 - 
∑øm
)/() + 1,

69 
∑ømëîs
);

70 
˛ónup
;

74 
cuº
 = (
cv¨_tokí_t
 *Ë
	`mÆloc
((cvar_token_t));

75 i‡(!
cuº
) {

76 
	`cv¨_log_îr‹
("Out of memory");

77 
˛ónup
;

80 
	`mem£t
(
cuº
, 0x00, (
cv¨_tokí_t
));

82 
cuº
->
key
 = 
	`°rdup
(
key_°¨t
);

83 i‡(!
cuº
->
key
) {

84 
	`cv¨_log_îr‹
("Out of memory");

85 
˛ónup
;

88 i‡(!
no_vÆue
) {

89 
cuº
->
vÆue
 = 
	`°rdup
(
key_íd
+1);

90 i‡(!
cuº
->
vÆue
) {

91 
	`cv¨_log_îr‹
("Out of memory");

92 
˛ónup
;

96 i‡(!
¥ev
)

97 
lhód
 = 
¥ev
 = 
cuº
;

99 
¥ev
->
√xt
 = 
cuº
;

100 
¥ev
 = 
cuº
;

104 i‡(
m‹e_∑øms
)

105 
∑øm_°¨t
 = 
∑øm_íd
 + 1;

108 *
li°_hód
 = 
lhód
;

109 
ªt
 = 0;

111 
out
:

112  
ªt
;

114 
˛ónup
:

115 
	`‰ì_tokís
(
lhód
);

116 
lhód
 = 
NULL
;

117 
out
;

118 
	}
}

125 
cv¨_tokí_t
 *
	$föd_tokí
(
cv¨_tokí_t
 *
li°_hód
, c⁄° *
key
)

127 
cv¨_tokí_t
 *
t
;

129 i‡(!
li°_hód
 || !
key
)

130  
NULL
;

132 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

133 i‡(
t
->
key
 && !
	`°rcmp
(t->key, key))

134  
t
;

137  
NULL
;

138 
	}
}

145 
cv¨_tokí_t
 *
	$unu£d_tokís
(
cv¨_tokí_t
 *
li°_hód
)

147 
cv¨_tokí_t
 *
t
;

149 
t
 = 
li°_hód
;Å !
NULL
;Å =Å->
√xt
) {

150 i‡(!
t
->
u£d
)

154  
t
;

155 
	}
}

157 
	$‰ì_tokí
(
cv¨_tokí_t
 *
tokí
)

159 i‡(!
tokí
)

162 i‡(
tokí
->
key
)

163 
	`‰ì
(
tokí
->
key
);

164 i‡(
tokí
->
vÆue
)

165 
	`‰ì
(
tokí
->
vÆue
);

167 
	`‰ì
(
tokí
);

170 
	}
}

176 
	$‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
)

178 
cv¨_tokí_t
 *
cuº
;

180 i‡(!
li°_hód
)

183 (
cuº
 = 
li°_hód
->
√xt
Ë!
NULL
) {

184 
li°_hód
->
√xt
 = 
cuº
->next;

185 
	`‰ì_tokí
(
cuº
);

188 
	`‰ì_tokí
(
li°_hód
);

191 
	}
}

	@cvars/cvar_tokens.h

9 #i‚de‡
_CVAR_TOKENS_H


10 
	#_CVAR_TOKENS_H


	)

12 
	#DEFAULT_PARAMETER_DELIMITER
 ';'

	)

13 
	#DEFAULT_KEY_VALUE_DELIMITER
 ':'

	)

16 
	scv¨_tokí
 {

17 *
	mkey
;

18 *
	mvÆue
;

19 
	mu£d
;

20 
cv¨_tokí
 *
	m√xt
;

21 } 
	tcv¨_tokí_t
;

27 
tokíize
(c⁄° *
∑ømëîs
, c⁄° 
∑ømëî_dñimôî
,

28 c⁄° 
key_vÆue_dñimôî
, 
cv¨_tokí_t
 **
li°_hód
);

34 
cv¨_tokí_t
 *
föd_tokí
(cv¨_tokí_à*
li°_hód
, c⁄° *
key
);

40 
cv¨_tokí_t
 *
unu£d_tokís
(cv¨_tokí_à*
li°_hód
);

46 
‰ì_tokís
(
cv¨_tokí_t
 *
li°_hód
);

	@cvars/cvar_trace.h

9 #i‚de‡
_CVAR_TRACE_H


10 
	#_CVAR_TRACE_H


	)

12 
	~<°dio.h
>

13 
	~<°dlib.h
>

15 
	#cv¨_log_îr‹
(
fmt
, ...Ë
	`Ârötf
(
°dîr
, fmà".\n", ##
__VA_ARGS__
)

	)

17 #ifde‡
DEBUG


19 
	#cv¨_åa˚
(
fmt
, ...Ë
	`Ârötf
(
°dout
, "%s: %d: %s: " fmt ".\n",\

20 
__FILE__
, 
__LINE__
, 
__func__
, ##
__VA_ARGS__
)

	)

23 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

25 *
buf
 = (*)
buff
;

26 
i
;

27 *
sbuf
 = 
NULL
;

29 i‡(
Àn
 == 0)

32 
sbuf
 = (*)
	`mÆloc
(2 + 2*
Àn
 + 1);

33 i‡(
sbuf
 =
NULL
) {

34 
	`Ârötf
(
°dout
, "out of memory. unableÅoÖrint "

39 
sbuf
[2*
Àn
 + 2] = '\0';

41 
	`•rötf
(
sbuf
, "%s", "0x");

43 
i
 = 0; i < 
Àn
; i++) {

44 i‡(((
buf
[
i
] & 0xF0) >> 4) < 0x0A)

45 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", '0' +

46 ()((
buf
[
i
] & 0xF0) >> 4));

48 
	`•rötf
(
sbuf
 + 2 + 2*
i
, "%c", 'a' +

49 (Ë(((
buf
[
i
] & 0xF0) >> 4) - 0x0A));

51 i‡((
buf
[
i
] & 0x0F) < 0x0A)

52 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", '0' +

53 ()(
buf
[
i
] & 0x0F));

55 
	`•rötf
(
sbuf
 + 2 + 2*
i
 + 1, "%c", 'a' +

56 (Ë((
buf
[
i
] & 0x0F) - 0x0A));

59 
	`Ârötf
(
°dout
, "%s.\n", 
sbuf
);

60 
	`‰ì
(
sbuf
);

63 
	}
}

67 
	#cv¨_åa˚
(
fmt
, ...)

	)

69 
ölöe
 
	$cv¨_åa˚buf
(c⁄° *
buff
, 
Àn
)

72 
	}
}

	@cvars/mtwist/mtcctest.cc

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

41 
	~"mtwi°.h
"

42 
	~<f°ªam
>

43 
	~<iom™ù
>

44 
	~<io°ªam
>

45 
	~<uni°d.h
>

46 
	~<°dlib.h
>

47 
	~<sys/ªsour˚.h
>

48 
	~<sys/time.h
>

50 
usög
 
«me•a˚
 
	g°d
;

52 
maö
 (
¨gc
, * 
¨gv
[]);

53 
ªp‹t_timög
(
lo›s
, 
rußge
 * 
thí
);

58 
	#TIMING_LOOP_BASE
 1000000

	)

63 
	#TIMING_LOOPS
 (300 * 
TIMING_LOOP_BASE
)

	)

73 
	gc‹ª˘_vÆues
[] =

1077 
	$maö
(
¨gc
, * 
¨gv
[])

1079 vﬁ©ûê
dummy_doubÀ
;

1081 
dummy_l⁄g
;

1083 
dummy_l⁄gl⁄g
;

1084 
mt_¥ng
 
∫g
;

1085 
timög_lo›s
 = 
TIMING_LOOPS
;

1090 i‡(
¨gc
 > 1)

1091 
timög_lo›s
 = 
	`©ﬁ
(
¨gv
[1]Ë* 
TIMING_LOOP_BASE
;

1098 
cout
 << "ValidityÅest...";

1099 
∫g
.
	`£ed32
(4357);

1100 
of°ªam
 
	`ßve
("mtccsave");

1101 
ßve
 << 
∫g
 << '\n';

1102 
ßve
.
	`˛o£
();

1103 
∫g
.
	`£ed32
(1);

1104 
if°ªam
 
	`ª°‹e
("mtccsave");

1105 
ª°‹e
 >> 
∫g
;

1106 
ª°‹e
.
	`˛o£
();

1107 
	`u∆ök
("mtccsave");

1108 
i
 = 0;

1109 
i
 <  
c‹ª˘_vÆues
 /  correct_values[0];

1110 
i
++)

1112 
øndom_vÆue
 = 
∫g
.
	`Ã™d
();

1113 i‡(
øndom_vÆue
 !
c‹ª˘_vÆues
[
i
])

1115 
˚º
 << "FaûuªáàvÆuê" << 
i
 << ":Éxpected "

1116 << 
c‹ª˘_vÆues
[
i
] << ", gŸ " << 
øndom_vÆue
 << '\n';

1120 
cout
 << "passed.\n";

1125 
rußge
 
thí
;

1126 
cout
 << 
timög_lo›s
 << "ÜongsÅook ";

1127 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1128 
øndom_vÆue
 = 0;

1129 
i
 = 0; i < 
timög_lo›s
; i++)

1130 
øndom_vÆue
 +
∫g
.
	`Ã™d
();

1131 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1132 
dummy_l⁄g
 = 
øndom_vÆue
;

1134 
l⁄gl⁄g_vÆue
 = 0;

1135 
cout
 << 
timög_lo›s
 << "ÜongÜongsÅook ";

1136 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1137 
i
 = 0; i < 
timög_lo›s
; i++)

1138 
l⁄gl⁄g_vÆue
 +
∫g
.
	`Œønd
();

1139 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1140 
dummy_l⁄gl⁄g
 = 
l⁄gl⁄g_vÆue
;

1142 
doubÀ_vÆue
 = 0.0;

1143 
cout
 << 
timög_lo›s
 << " fast doublesÅook ";

1144 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1145 
i
 = 0; i < 
timög_lo›s
; i++)

1146 
doubÀ_vÆue
 +
∫g
.
	`dønd
();

1147 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1149 
cout
 << 
timög_lo›s
 << "Üong doublesÅook ";

1150 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1151 
i
 = 0; i < 
timög_lo›s
; i++)

1152 
doubÀ_vÆue
 +
∫g
.
	`ldønd
();

1153 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1155 
cout
 << 
timög_lo›s
 << " call doublesÅook ";

1156 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1157 
i
 = 0; i < 
timög_lo›s
; i++)

1158 
doubÀ_vÆue
 +
	`∫g
();

1159 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1161 
dummy_doubÀ
 = 
doubÀ_vÆue
;

1164 
	}
}

1166 
	$ªp‹t_timög
(

1167 
lo›s
,

1168 
rußge
 * 
thí
)

1170 
diff
;

1171 
mi¸odiff
;

1172 
rußge
 
now
;

1173 
£cs
;

1175 
	`gërußge
(
RUSAGE_SELF
, &
now
);

1176 
diff
 = 
now
.
ru_utime
.
tv_£c
 - 
thí
->ru_utime.tv_sec;

1177 
mi¸odiff
 = 
now
.
ru_utime
.
tv_u£c
 - 
thí
->ru_utime.tv_usec;

1178 i‡(
mi¸odiff
 < 0)

1180 
diff
--;

1181 
mi¸odiff
 += 1000000;

1183 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1184 
cout
 << 
	`£tw
(3Ë<< 
diff
 << "." << sëw(6Ë<< 
	`£çªcisi⁄
(6Ë<< 
mi¸odiff
;

1185 
cout
 << 
	`£tw
(0Ë<< 
	`£çªcisi⁄
(0Ë<< " sec⁄d†(" << ()(
lo›s
 / 
£cs
)

1187 
	}
}

	@cvars/mtwist/mttest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

72 
	~"mtwi°.h
"

73 
	~<öây≥s.h
>

74 
	~<uni°d.h
>

75 
	~<°dio.h
>

76 
	~<°dlib.h
>

77 
	~<sys/ªsour˚.h
>

78 
	~<sys/time.h
>

80 
maö
(
¨gc
, * 
¨gv
[]);

81 
ªp‹t_timög
(
lo›s
, 
rußge
 * 
thí
);

82 
ªp‹t_˛ock_timög
(
timevÆ
 * 
thí
);

87 
	#TIMING_LOOP_BASE
 1000000

	)

92 
	#TIMING_LOOPS
 (300 * 
TIMING_LOOP_BASE
)

	)

102 
uöt32_t
 
	gc‹ª˘_vÆues
[] =

1106 
	$maö
(

1107 
¨gc
,

1108 * 
¨gv
[])

1110 
i
;

1111 
	`uöt32_t
 (*
fun˝å
)();

1112 
uöt32_t
 
øndom_vÆue
;

1113 
uöt64_t
 
l⁄gl⁄g_vÆue
;

1114 
doubÀ_vÆue
;

1115 vﬁ©ûê
uöt32_t
 
dummy_l⁄g
;

1116 vﬁ©ûê
uöt64_t
 
dummy_l⁄gl⁄g
;

1117 vﬁ©ûê
dummy_doubÀ
;

1118 
uöt32_t
 
good£edªsu…
;

1119 
FILE
* 
ßvefûe
;

1120 
uöt32_t
 
£edªsu…
;

1121 
mt_°©e
 
°©e
;

1122 
rußge
 
thí
;

1123 
timevÆ
 
timeofday
;

1125 
timög_lo›s
 = 
TIMING_LOOPS
;

1127 
	`£tbuf
(
°dout
, (*Ë
NULL
);

1132 i‡(
¨gc
 > 1)

1133 
timög_lo›s
 = 
	`©ﬁ
(
¨gv
[1]Ë* 
TIMING_LOOP_BASE
;

1140 (Ë
	`¥ötf
 ("ValidityÅest...");

1141 
	`mt_£ed32√w
(5489);

1142 
ßvefûe
 = 
	`f›í
("mtsave", "w");

1143 
	`mt_ßve°©e
(
ßvefûe
);

1144 
	`f˛o£
(
ßvefûe
);

1145 
	`mt_£ed32√w
(1);

1146 
ßvefûe
 = 
	`f›í
("mtsave", "r");

1147 
	`mt_lﬂd°©e
(
ßvefûe
);

1148 
	`f˛o£
(
ßvefûe
);

1149 
	`u∆ök
("mtsave");

1150 
i
 = 0; i <  
c‹ª˘_vÆues
 /  correct_values[0]; i++)

1152 
øndom_vÆue
 = 
	`mt_Ã™d
();

1153 i‡(
øndom_vÆue
 !
c‹ª˘_vÆues
[
i
])

1155 (Ë
	`Ârötf
 (
°dîr
,

1156 "FaûuªáàvÆuê%ld:Éx≥˘ed %" 
PRIu32
 ", got %" PRIu32 "\n",

1157 
i
, 
c‹ª˘_vÆues
[i], 
øndom_vÆue
);

1161 (Ë
	`¥ötf
 ("passed.\n");

1166 
fun˝å
 = &
mt_Ã™d
;

1167 
øndom_vÆue
 = (*
fun˝å
)();

1176 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g†took ", 
timög_lo›s
);

1177 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1178 
i
 = 0; i < 
timög_lo›s
; i++)

1179 
øndom_vÆue
 +
	`mt_Ã™d
();

1180 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1182 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g†took ", 
timög_lo›s
);

1183 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1184 
i
 = 0; i < 
timög_lo›s
; i++)

1185 
øndom_vÆue
 +
	`mts_Ã™d
(&
°©e
);

1186 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1188 
dummy_l⁄g
 = 
øndom_vÆue
;

1189 ()
dummy_l⁄g
;

1191 
l⁄gl⁄g_vÆue
 = 0;

1202 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄gÜ⁄g†took ", 
timög_lo›s
);

1203 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1204 
i
 = 0; i < 
timög_lo›s
; i++)

1205 
l⁄gl⁄g_vÆue
 +
	`mt_Œønd
();

1206 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1208 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄gÜ⁄g†took ", 
timög_lo›s
);

1209 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1210 
i
 = 0; i < 
timög_lo›s
; i++)

1211 
l⁄gl⁄g_vÆue
 +
	`mts_Œønd
(&
°©e
);

1212 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1214 
dummy_l⁄gl⁄g
 = 
l⁄gl⁄g_vÆue
;

1215 ()
dummy_l⁄gl⁄g
;

1217 
doubÀ_vÆue
 = 0.0;

1223 (Ë
	`¥ötf
 ("%ld deÁu… fa° doubÀ†took ", 
timög_lo›s
);

1224 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1225 
i
 = 0; i < 
timög_lo›s
; i++)

1226 
doubÀ_vÆue
 +
	`mt_dønd
();

1227 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1229 (Ë
	`¥ötf
 ("%ld sèã-ba£d fa° doubÀ†took ", 
timög_lo›s
);

1230 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1231 
i
 = 0; i < 
timög_lo›s
; i++)

1232 
doubÀ_vÆue
 +
	`mts_dønd
(&
°©e
);

1233 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1235 (Ë
	`¥ötf
 ("%ld deÁu…Ü⁄g doubÀ†took ", 
timög_lo›s
);

1236 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1237 
i
 = 0; i < 
timög_lo›s
; i++)

1238 
doubÀ_vÆue
 +
	`mt_ldønd
();

1239 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1241 (Ë
	`¥ötf
 ("%ld sèã-ba£dÜ⁄g doubÀ†took ", 
timög_lo›s
);

1242 
	`gërußge
(
RUSAGE_SELF
, &
thí
);

1243 
i
 = 0; i < 
timög_lo›s
; i++)

1244 
doubÀ_vÆue
 +
	`mts_ldønd
(&
°©e
);

1245 
	`ªp‹t_timög
(
timög_lo›s
, &
thí
);

1247 
dummy_doubÀ
 = 
doubÀ_vÆue
;

1248 ()
dummy_doubÀ
;

1253 (Ë
	`¥ötf
 ("Initializing from mt_seedÅook ");

1254 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1255 
£edªsu…
 = 
	`mt_£ed
();

1256 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1257 i‡(
£edªsu…
 == 0)

1258 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_seed!\n");

1260 (Ë
	`¥ötf
 ("Initializing from mt_goodseedÅook ");

1261 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1262 
good£edªsu…
 = 
	`mt_good£ed
();

1263 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1264 i‡(
good£edªsu…
 == 0)

1265 (Ë
	`¥ötf
 ("OOPS! Got zero seed from mt_goodseed!\n");

1266 i‡(
£edªsu…
 =
good£edªsu…
)

1267 (Ë
	`¥ötf
 ("OOPS! mt_seedánd mt_goodseed bothÑeturned 0x%x!\n",

1268 
£edªsu…
);

1270 (Ë
	`¥ötf
 ("Initializing from mt_bestseedÅook ");

1271 
	`gëtimeofday
(&
timeofday
, 
NULL
);

1272 
	`mt_be°£ed
();

1273 
	`ªp‹t_˛ock_timög
(&
timeofday
);

1276 
	}
}

1278 
	$ªp‹t_timög
(

1279 
lo›s
,

1280 
rußge
 * 
thí
)

1282 
diff
;

1283 
mi¸odiff
;

1284 
rußge
 
now
;

1285 
£cs
;

1287 
	`gërußge
(
RUSAGE_SELF
, &
now
);

1288 
diff
 = 
now
.
ru_utime
.
tv_£c
 - 
thí
->ru_utime.tv_sec;

1289 
mi¸odiff
 = 
now
.
ru_utime
.
tv_u£c
 - 
thí
->ru_utime.tv_usec;

1290 i‡(
mi¸odiff
 < 0)

1292 
diff
--;

1293 
mi¸odiff
 += 1000000;

1295 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1296 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄d†(%ld/£c).\n", 
diff
, 
mi¸odiff
,

1297 ()(
lo›s
 / 
£cs
));

1298 
	}
}

1300 
	$ªp‹t_˛ock_timög
(

1301 
timevÆ
 * 
thí
)

1303 
diff
;

1304 
mi¸odiff
;

1305 
timevÆ
 
now
;

1306 
£cs
;

1308 
	`gëtimeofday
(&
now
, 
NULL
);

1309 
diff
 = 
now
.
tv_£c
 - 
thí
->tv_sec;

1310 
mi¸odiff
 = 
now
.
tv_u£c
 - 
thí
->tv_usec;

1311 i‡(
mi¸odiff
 < 0)

1313 
diff
--;

1314 
mi¸odiff
 += 1000000;

1316 
£cs
 = 
diff
 + (
mi¸odiff
 / 1000000.0);

1317 (Ë
	`¥ötf
 ("%3ld.%6.6ld sec⁄ds.\n", 
diff
, 
mi¸odiff
);

1318 
	}
}

	@cvars/mtwist/mtwist.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

179 #ifde‡
_WIN32


180 #unde‡
WIN32


181 
	#WIN32


	)

184 
	~<öây≥s.h
>

185 
	~<°dio.h
>

186 
	~<°dlib.h
>

187 #ifde‡
WIN32


188 
	~<sys/timeb.h
>

190 
	~<sys/time.h
>

193 
	~"mtwi°.h
"

203 
uöt32_t
 
	$mts_Ã™d
(

204 
mt_°©e
* 
°©e
)

206 
uöt32_t
 
øndom_vÆue
;

208 i‡(
°©e
->
°©ïå
 <= 0)

209 
	`mts_ª‰esh
(
°©e
);

211 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

212 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

213  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

214 
	}
}

216 #ifde‡
UINT64_MAX


232 
uöt64_t
 
	$mts_Œønd
(

233 
mt_°©e
* 
°©e
)

235 
uöt32_t
 
øndom_vÆue_1
;

236 
uöt32_t
 
øndom_vÆue_2
;

243 i‡(--
°©e
->
°©ïå
 <= 0)

245 i‡(
°©e
->
°©ïå
 < 0)

247 
	`mts_ª‰esh
(
°©e
);

248 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

252 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

253 
	`mts_ª‰esh
(
°©e
);

257 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

259 
	`MT_TEMPER
(
øndom_vÆue_1
);

261 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

262 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

264  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

265 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

266 
	}
}

274 
	$mts_dønd
(

275 
mt_°©e
* 
°©e
)

277 
uöt32_t
 
øndom_vÆue
;

279 i‡(
°©e
->
°©ïå
 <= 0)

280 
	`mts_ª‰esh
(
°©e
);

282 
øndom_vÆue
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

283 
	`MT_TEMPER
(
øndom_vÆue
);

285  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

286 
	}
}

293 
	$mts_ldønd
(

294 
mt_°©e
* 
°©e
)

296 #ifde‡
UINT64_MAX


297 
uöt64_t
 
föÆ_vÆue
;

299 
uöt32_t
 
øndom_vÆue_1
;

300 
uöt32_t
 
øndom_vÆue_2
;

307 i‡(--
°©e
->
°©ïå
 <= 0)

309 i‡(
°©e
->
°©ïå
 < 0)

311 
	`mts_ª‰esh
(
°©e
);

312 
øndom_vÆue_1
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

316 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

317 
	`mts_ª‰esh
(
°©e
);

321 
øndom_vÆue_1
 = 
°©e
->
°©evec
[°©e->
°©ïå
];

323 
	`MT_TEMPER
(
øndom_vÆue_1
);

325 
øndom_vÆue_2
 = 
°©e
->
°©evec
[--°©e->
°©ïå
];

326 
	`MT_TEMPER
(
øndom_vÆue_2
);

328 #ifde‡
UINT64_MAX


329 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

330  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

332  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

334 
	}
}

342 
uöt32_t
 
	$mt_Ã™d
()

344 
uöt32_t
 
øndom_vÆue
;

346 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

347 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

349 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

350 
	`MT_PRE_TEMPER
(
øndom_vÆue
);

352  
	`MT_FINAL_TEMPER
(
øndom_vÆue
);

353 
	}
}

355 #ifde‡
UINT64_MAX


362 
uöt64_t
 
	$mt_Œønd
()

364 
uöt32_t
 
øndom_vÆue_1
;

365 
uöt32_t
 
øndom_vÆue_2
;

372 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

374 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

376 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

377 
øndom_vÆue_1
 =

378 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

382 
øndom_vÆue_1
 =

383 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

384 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

388 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

390 
	`MT_TEMPER
(
øndom_vÆue_1
);

392 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

393 
	`MT_PRE_TEMPER
(
øndom_vÆue_2
);

395  ((
uöt64_t
Ë
øndom_vÆue_1
 << 32)

396 | (
uöt64_t
Ë
	`MT_FINAL_TEMPER
(
øndom_vÆue_2
);

397 
	}
}

405 
	$mt_dønd
()

407 
uöt32_t
 
øndom_vÆue
;

409 i‡(
mt_deÁu…_°©e
.
°©ïå
 <= 0)

410 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

412 
øndom_vÆue
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

413 
	`MT_TEMPER
(
øndom_vÆue
);

415  
øndom_vÆue
 * 
mt_32_to_doubÀ
;

416 
	}
}

423 
	$mt_ldønd
()

425 #ifde‡
UINT64_MAX


426 
uöt64_t
 
föÆ_vÆue
;

428 
uöt32_t
 
øndom_vÆue_1
;

429 
uöt32_t
 
øndom_vÆue_2
;

436 i‡(--
mt_deÁu…_°©e
.
°©ïå
 <= 0)

438 i‡(
mt_deÁu…_°©e
.
°©ïå
 < 0)

440 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

441 
øndom_vÆue_1
 =

442 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

446 
øndom_vÆue_1
 =

447 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

448 
	`mts_ª‰esh
(&
mt_deÁu…_°©e
);

452 
øndom_vÆue_1
 = 
mt_deÁu…_°©e
.
°©evec
[mt_deÁu…_°©e.
°©ïå
];

454 
	`MT_TEMPER
(
øndom_vÆue_1
);

456 
øndom_vÆue_2
 = 
mt_deÁu…_°©e
.
°©evec
[--mt_deÁu…_°©e.
°©ïå
];

457 
	`MT_TEMPER
(
øndom_vÆue_2
);

459 #ifde‡
UINT64_MAX


460 
föÆ_vÆue
 = ((
uöt64_t
Ë
øndom_vÆue_1
 << 32Ë| (uöt64_tË
øndom_vÆue_2
;

461  
föÆ_vÆue
 * 
mt_64_to_doubÀ
;

463  
øndom_vÆue_1
 * 
mt_32_to_doubÀ
 + 
øndom_vÆue_2
 * 
mt_64_to_doubÀ
;

465 
	}
}

467 #ifde‡
__˝lu•lus


471 
	g°d
::
o°ªam
& 
›î©‹
<<(

472 
°d
::
o°ªam
& 
°ªam
,

473 c⁄° 
	gmt_¥ng
& 
	g∫g
)

475 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

477 i‡(!(
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©evec
[
i
] << ' '))

478  
	g°ªam
;

481  
	g°ªam
 << 
	g∫g
.
	g°©e
.
	g°©ïå
;

487 
	g°d
::
i°ªam
& 
›î©‹
>>(

488 
°d
::
i°ªam
& 
°ªam
,

489 
	gmt_¥ng
& 
	g∫g
)

491 
	g∫g
.
	g°©e
.
	göôülized
 = 
∫g
.
°©e
.
°©ïå
 = 0;

492 
	gi
 = 
MT_STATE_SIZE
; --i >= 0; )

494 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©evec
[
i
]))

495  
	g°ªam
;

498 i‡(!(
	g°ªam
 >> 
	g∫g
.
	g°©e
.
	g°©ïå
))

500 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

501  
	g°ªam
;

507 i‡(
	g∫g
.
	g°©e
.
	g°©ïå
 < 0 ||Ñng.°©e.°©ïå > 
	gMT_STATE_SIZE
)

509 
	g∫g
.
	g°©e
.
	g°©ïå
 = 0;

510  
	g°ªam
;

513 
mts_m¨k_öôülized
(&
∫g
.
°©e
);

515  
	g°ªam
;

522 
uöt32_t
 
mts_dev£ed
(
mt_°©e
* 
°©e
, * 
£ed_dev
);

533 
	#RECURRENCE_OFFSET
 397

	)

539 
	#MATRIX_A
 0x9908b0d‡

	)

549 
	#BIT_WIDTH
 32

	)

557 
	#UPPER_MASK
 0x80000000

	)

558 
	#LOWER_MASK
 0x7ffffff‡

	)

564 
	#COMBINE_BITS
(
x
, 
y
) \

565 (((
x
Ë& 
UPPER_MASK
Ë| ((
y
Ë& 
LOWER_MASK
))

	)

571 
	#MATRIX_MULTIPLY
(
‹igöÆ
, 
√w
) \

572 ((
‹igöÆ
Ë^ ((
√w
) >> 1) \

573 ^ 
m©rix_decidî
[(
√w
Ë& 0x1])

	)

579 
	#KNUTH_MULTIPLIER_OLD
 \

580 69069

	)

586 
	#KNUTH_MULTIPLIER_NEW
 \

587 1812433253ul

	)

588 
	#KNUTH_SHIFT
 30

589 

	)

593 
	#DEFAULT_SEED32_OLD
 \

594 4357

	)

595 
	#DEFAULT_SEED32_NEW
 \

596 5489ul

	)

601 
	#DEVRANDOM
 "/dev/øndom"

	)

602 
	#DEVURANDOM
 "/dev/uøndom"

	)

609 
mt_°©e
 
	gmt_deÁu…_°©e
;

620 
	gmt_32_to_doubÀ
;

622 
	gmt_64_to_doubÀ
;

632 
uöt32_t
 
	gm©rix_decidî
[2] =

633 {0x0, 
MATRIX_A
};

645 
	$mts_m¨k_öôülized
(

646 
mt_°©e
* 
°©e
)

648 
i
;

655 
mt_32_to_doubÀ
 = 1.0;

656 
i
 = 0; i < 
BIT_WIDTH
; i++)

657 
mt_32_to_doubÀ
 /= 2.0;

658 
mt_64_to_doubÀ
 = 
mt_32_to_doubÀ
;

659 
i
 = 0; i < 
BIT_WIDTH
; i++)

660 
mt_64_to_doubÀ
 /= 2.0;

662 
°©e
->
öôülized
 = 1;

663 
	}
}

682 
	$mts_£ed32
(

683 
mt_°©e
* 
°©e
,

684 
uöt32_t
 
£ed
)

686 
i
;

688 i‡(
£ed
 == 0)

689 
£ed
 = 
DEFAULT_SEED32_OLD
;

696 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffff;

697 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

698 
°©e
->
°©evec
[
i
] =

699 (
KNUTH_MULTIPLIER_OLD
 * 
°©e
->
°©evec
[
i
 + 1]) & 0xffffffff;

701 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

702 
	`mts_m¨k_öôülized
(
°©e
);

710 
	`mts_ª‰esh
(
°©e
);

711 
	}
}

718 
	$mts_£ed32√w
(

719 
mt_°©e
* 
°©e
,

720 
uöt32_t
 
£ed
)

722 
i
;

723 
uöt32_t
 
√xtvÆ
;

730 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1] = 
£ed
 & 0xffffffffUL;

731 
i
 = 
MT_STATE_SIZE
 - 2; i >= 0; i--)

733 
√xtvÆ
 = 
°©e
->
°©evec
[
i
 + 1] >> 
KNUTH_SHIFT
;

734 
√xtvÆ
 ^
°©e
->
°©evec
[
i
 + 1];

735 
√xtvÆ
 *
KNUTH_MULTIPLIER_NEW
;

736 
√xtvÆ
 +(
MT_STATE_SIZE
 - 1Ë- 
i
;

737 
°©e
->
°©evec
[
i
] = 
√xtvÆ
 & 0xffffffffUL;

740 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

741 
	`mts_m¨k_öôülized
(
°©e
);

749 
	`mts_ª‰esh
(
°©e
);

750 
	}
}

769 
	$mts_£edfuŒ
(

770 
mt_°©e
* 
°©e
,

771 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

774 
had_nz
 = 0;

775 
i
;

777 
i
 = 0; i < 
MT_STATE_SIZE
; i++)

779 i‡(
£eds
[
i
] != 0)

780 
had_nz
 = 1;

781 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 
i
 - 1] = 
£eds
[i];

784 i‡(!
had_nz
)

794 
	`ab‹t
();

797 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

798 
	`mts_m¨k_öôülized
(
°©e
);

799 
	}
}

807 
uöt32_t
 
	$mts_£ed
(

808 
mt_°©e
* 
°©e
)

810  
	`mts_dev£ed
(
°©e
, 
DEVURANDOM
);

811 
	}
}

819 
uöt32_t
 
	$mts_good£ed
(

820 
mt_°©e
* 
°©e
)

822  
	`mts_dev£ed
(
°©e
, 
DEVRANDOM
);

823 
	}
}

830 
uöt32_t
 
	$mts_dev£ed
(

831 
mt_°©e
* 
°©e
,

832 * 
£ed_dev
)

834 
byã§ód
;

835 
√xtbyã
;

836 
FILE
* 
ønfûe
;

839 
ønbuf„r
[ (
uöt32_t
)];

841 
uöt32_t
 
øndomvÆue
;

843 
øndomuni⁄
;

844 #ifde‡
WIN32


845 
_timeb
 
tb
;

847 
timevÆ
 
tv
;

850 
ønfûe
 = 
	`f›í
(
£ed_dev
, "rb");

856 i‡(
ønfûe
 =
NULL
)

857 
ønfûe
 = 
	`f›í
(
DEVRANDOM
, "rb");

858 i‡(
ønfûe
 !
NULL
)

860 
	`£tbuf
(
ønfûe
, 
NULL
);

861 
√xtbyã
 = 0;

862 
√xtbyã
 < () 
øndomuni⁄
.
ønbuf„r
;

863 
√xtbyã
 +
byã§ód
)

865 
byã§ód
 = 
	`‰ód
(&
øndomuni⁄
.
ønbuf„r
[
√xtbyã
], (
size_t
)1,

866  
øndomuni⁄
.
ønbuf„r
 - 
√xtbyã
, 
ønfûe
);

867 i‡(
byã§ód
 == 0)

870 
	`f˛o£
(
ønfûe
);

871 i‡(
√xtbyã
 = 
øndomuni⁄
.
ønbuf„r
)

873 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

874  
øndomuni⁄
.
øndomvÆue
;

883 #ifde‡
WIN32


884 (Ë
	`_·ime
 (&
tb
);

886 (Ë
	`gëtimeofday
 (&
tv
, 
NULL
);

892 #ifde‡
WIN32


893 
øndomuni⁄
.
øndomvÆue
 = 
tb
.
time
 * 1000 +Åb.
mûlôm
;

895 
øndomuni⁄
.
øndomvÆue
 = 
tv
.
tv_£c
 * 1000000 +Åv.
tv_u£c
;

897 
	`mts_£ed32√w
(
°©e
, 
øndomuni⁄
.
øndomvÆue
);

898  
øndomuni⁄
.
øndomvÆue
;

899 
	}
}

910 
	$mts_be°£ed
(

911 
mt_°©e
* 
°©e
)

913 
byã§ód
;

914 
√xtbyã
;

915 
FILE
* 
ønfûe
;

917 
ønfûe
 = 
	`f›í
("/dev/random", "rb");

918 i‡(
ønfûe
 =
NULL
)

920 
	`mts_good£ed
(
°©e
);

924 
√xtbyã
 = 0;

925 
√xtbyã
 < () 
°©e
->
°©evec
;

926 
√xtbyã
 +
byã§ód
)

928 
byã§ód
 = 
	`‰ód
((*)&
°©e
->
°©evec
[0] + 
√xtbyã
, (
size_t
)1,

929  
°©e
->
°©evec
 - 
√xtbyã
, 
ønfûe
);

930 i‡(
byã§ód
 == 0)

935 
	`f˛o£
(
ønfûe
);

936 
	`mts_good£ed
(
°©e
);

940 
	`f˛o£
(
ønfûe
);

941 
	}
}

950 
	$mts_ª‰esh
(

951 
mt_°©e
* 
°©e
)

953 
i
;

954 
uöt32_t
*

955 
°©e_±r
;

956 
uöt32_t


957 
vÆue1
;

958 
uöt32_t


959 
vÆue2
;

965 i‡(!
°©e
->
öôülized
)

967 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1058 
°©e_±r
 = &
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1];

1059 
vÆue1
 = *
°©e_±r
;

1060 
i
 = (
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
) / 2; --i >= 0; )

1062 
°©e_±r
 -= 2;

1063 
vÆue2
 = 
°©e_±r
[1];

1064 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1065 
°©e_±r
[2] =

1066 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 2], 
vÆue1
);

1067 
vÆue1
 = 
°©e_±r
[0];

1068 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1069 
°©e_±r
[1] =

1070 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue2
);

1072 
vÆue2
 = *--
°©e_±r
;

1073 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1074 
°©e_±r
[1] =

1075 
	`MATRIX_MULTIPLY
(
°©e_±r
[-
RECURRENCE_OFFSET
 + 1], 
vÆue1
);

1077 
i
 = (
RECURRENCE_OFFSET
 - 1) / 2; --i >= 0; )

1079 
°©e_±r
 -= 2;

1080 
vÆue1
 = 
°©e_±r
[1];

1081 
vÆue2
 = 
	`COMBINE_BITS
(vÆue2, 
vÆue1
);

1082 
°©e_±r
[2] =

1083 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 2],

1084 
vÆue2
);

1085 
vÆue2
 = 
°©e_±r
[0];

1086 
vÆue1
 = 
	`COMBINE_BITS
(vÆue1, 
vÆue2
);

1087 
°©e_±r
[1] =

1088 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
 + 1],

1089 
vÆue1
);

1097 
vÆue1
 = 
	`COMBINE_BITS
(
vÆue2
, 
°©e
->
°©evec
[
MT_STATE_SIZE
 - 1]);

1098 *
°©e_±r
 =

1099 
	`MATRIX_MULTIPLY
(
°©e_±r
[
MT_STATE_SIZE
 - 
RECURRENCE_OFFSET
], 
vÆue1
);

1105 
°©e
->
°©ïå
 = 
MT_STATE_SIZE
;

1106 
	}
}

1114 
	$mts_ßve°©e
(

1115 
FILE
* 
°©efûe
,

1116 
mt_°©e
* 
°©e
)

1118 
i
;

1120 i‡(!
°©e
->
öôülized
)

1121 
	`mts_£ed32
(
°©e
, 
DEFAULT_SEED32_OLD
);

1126 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1128 
	`Ârötf
(
°dîr
,

1130 
°©e
->
°©ïå
);

1131 
	`mts_ª‰esh
(
°©e
);

1134 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1136 i‡(
	`Ârötf
(
°©efûe
, "%" 
PRIu32
 " ", 
°©e
->
°©evec
[
i
]) < 0)

1140 i‡(
	`Ârötf
(
°©efûe
, "%d\n", 
°©e
->
°©ïå
) < 0)

1144 
	}
}

1149 
	$mts_lﬂd°©e
(

1150 
FILE
* 
°©efûe
,

1151 
mt_°©e
* 
°©e
)

1153 
i
;

1158 
°©e
->
öôülized
 = sèã->
°©ïå
 = 0;

1160 
i
 = 
MT_STATE_SIZE
; --i >= 0; )

1162 i‡(
	`fsˇnf
(
°©efûe
, "%" 
SCNu32
, &
°©e
->
°©evec
[
i
]) != 1)

1166 i‡(
	`fsˇnf
(
°©efûe
, "%d", &
°©e
->
°©ïå
) != 1)

1173 i‡(
°©e
->
°©ïå
 < 0 || sèã->°©ïå > 
MT_STATE_SIZE
)

1175 
°©e
->
°©ïå
 = 0;

1179 
	`mts_m¨k_öôülized
(
°©e
);

1182 
	}
}

1189 
	$mt_£ed32
(

1190 
uöt32_t
 
£ed
)

1192 
	`mts_£ed32
(&
mt_deÁu…_°©e
, 
£ed
);

1193 
	}
}

1200 
	$mt_£ed32√w
(

1201 
uöt32_t
 
£ed
)

1203 
	`mts_£ed32√w
(&
mt_deÁu…_°©e
, 
£ed
);

1204 
	}
}

1211 
	$mt_£edfuŒ
(

1212 
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

1214 
	`mts_£edfuŒ
(&
mt_deÁu…_°©e
, 
£eds
);

1215 
	}
}

1220 
uöt32_t
 
	$mt_£ed
()

1222  
	`mts_£ed
(&
mt_deÁu…_°©e
);

1223 
	}
}

1228 
uöt32_t
 
	$mt_good£ed
()

1230  
	`mts_good£ed
(&
mt_deÁu…_°©e
);

1231 
	}
}

1236 
	$mt_be°£ed
()

1238 
	`mts_be°£ed
(&
mt_deÁu…_°©e
);

1239 
	}
}

1247 
mt_°©e
* 
	$mt_gë°©e
()

1249  &
mt_deÁu…_°©e
;

1250 
	}
}

1256 
	$mt_ßve°©e
(

1257 
FILE
* 
°©efûe
)

1259  
	`mts_ßve°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1260 
	}
}

1265 
	$mt_lﬂd°©e
(

1266 
FILE
* 
°©efûe
)

1268  
	`mts_lﬂd°©e
(
°©efûe
, &
mt_deÁu…_°©e
);

1269 
	}
}

	@cvars/mtwist/mtwist.h

1 #i‚de‡
MTWIST_H


2 
	#MTWIST_H


	)

144 
	~<°dio.h
>

145 #ifde‡
__˝lu•lus


146 
	~<io°ªam
>

149 
	#__STDC_LIMIT_MACROS


	)

150 
	~<°döt.h
>

157 
	#MT_STATE_SIZE
 624

	)

177 
uöt32_t
 
	m°©evec
[
MT_STATE_SIZE
];

179 
	m°©ïå
;

180 
	möôülized
;

182 
	tmt_°©e
;

184 #ifde‡
__˝lu•lus


192 
mts_m¨k_öôülized
(
mt_°©e
* 
°©e
);

194 
mts_£ed32
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

196 
mts_£ed32√w
(
mt_°©e
* 
°©e
, 
uöt32_t
 
£ed
);

198 
mts_£edfuŒ
(
mt_°©e
* 
°©e
,

199 
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

201 
uöt32_t
 
mts_£ed
(
mt_°©e
* 
°©e
);

207 
uöt32_t
 
mts_good£ed
(
mt_°©e
* 
°©e
);

214 
mts_be°£ed
(
mt_°©e
* 
°©e
);

222 
mts_ª‰esh
(
mt_°©e
* 
°©e
);

224 
mts_ßve°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

227 
mts_lﬂd°©e
(
FILE
* 
°©efûe
, 
mt_°©e
* 
°©e
);

234 
mt_£ed32
(
uöt32_t
 
£ed
);

236 
mt_£ed32√w
(
uöt32_t
 
£ed
);

238 
mt_£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
]);

240 
uöt32_t
 
mt_£ed
();

244 
uöt32_t
 
mt_good£ed
();

250 
mt_be°£ed
();

258 
mt_°©e
* 
mt_gë°©e
();

261 
mt_ßve°©e
(
FILE
* 
°©efûe
);

264 
mt_lﬂd°©e
(
FILE
* 
°©efûe
);

268 #ifde‡
__˝lu•lus


280 #ifde‡
__˝lu•lus


283 
uöt32_t
 
mts_Ã™d
(
mt_°©e
* 
°©e
);

285 #ifde‡
UINT64_MAX


286 
uöt64_t
 
mts_Œønd
(
mt_°©e
* 
°©e
);

289 
mts_dønd
(
mt_°©e
* 
°©e
);

292 
mts_ldønd
(
mt_°©e
* 
°©e
);

296 
uöt32_t
 
mt_Ã™d
();

297 #ifde‡
UINT64_MAX


298 
uöt64_t
 
mt_Œønd
();

301 
mt_dønd
();

304 
mt_ldønd
();

316 
	#MT_TEMPERING_MASK_B
 0x9d2c5680

	)

317 
	#MT_TEMPERING_MASK_C
 0xefc60000

	)

318 
	#MT_TEMPERING_SHIFT_U
(
y
) \

319 (
y
 >> 11)

	)

320 
	#MT_TEMPERING_SHIFT_S
(
y
) \

321 (
y
 << 7)

	)

322 
	#MT_TEMPERING_SHIFT_T
(
y
) \

323 (
y
 << 15)

	)

324 
	#MT_TEMPERING_SHIFT_L
(
y
) \

325 (
y
 >> 18)

	)

334 
	#MT_PRE_TEMPER
(
vÆue
) \

337 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

338 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

339 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

341 0)

	)

342 
	#MT_FINAL_TEMPER
(
vÆue
) \

343 ((
vÆue
Ë^ 
	`MT_TEMPERING_SHIFT_L
(vÆue))

	)

344 
	#MT_TEMPER
(
vÆue
) \

347 
vÆue
 ^
	`MT_TEMPERING_SHIFT_U
(value); \

348 
vÆue
 ^
	`MT_TEMPERING_SHIFT_S
(vÆueË& 
MT_TEMPERING_MASK_B
; \

349 
vÆue
 ^
	`MT_TEMPERING_SHIFT_T
(vÆueË& 
MT_TEMPERING_MASK_C
; \

350 
vÆue
 ^
	`MT_TEMPERING_SHIFT_L
(value); \

352 0)

	)

362 
mt_°©e
 
mt_deÁu…_°©e
;

364 
mt_32_to_doubÀ
;

366 
mt_64_to_doubÀ
;

369 #ifde‡
__˝lu•lus


376 ˛as†
	cmt_¥ng


378 
‰õnd
 
˛ass
 
	gmt_empúiˇl_di°ributi⁄
;

379 
	gpublic
:

388 
mt_¥ng
(

389 
boﬁ
 
pickSìd
 = 
Ál£
)

393 
°©e
.
°©ïå
 = 0;

394 
	g°©e
.
	göôülized
 = 0;

395 i‡(
	gpickSìd
)

396 ()
mts_£ed
(&
°©e
);

398 
mt_¥ng
(
uöt32_t
 
√w£ed
)

401 
	g°©e
.
	g°©ïå
 = 0;

402 
	g°©e
.
	göôülized
 = 0;

403 
mts_£ed32
(&
°©e
, 
√w£ed
);

405 
mt_¥ng
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

408 
	g°©e
.
	g°©ïå
 = 0;

409 
	g°©e
.
	göôülized
 = 0;

410 
mts_£edfuŒ
(&
°©e
, 
£eds
);

412 ~
mt_¥ng
() { }

421 
£ed32
(
uöt32_t
 
√w£ed
)

424 
mts_£ed32
(&
°©e
, 
√w£ed
);

426 
£ed32√w
(
uöt32_t
 
√w£ed
)

429 
mts_£ed32√w
(&
°©e
, 
√w£ed
);

431 
£edfuŒ
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

434 
mts_£edfuŒ
(&
°©e
, 
£eds
);

436 
uöt32_t
 
£ed
()

438  
mts_£ed
(&
°©e
);

440 
uöt32_t
 
good£ed
()

442  
mts_good£ed
(&
°©e
);

444 
be°£ed
()

446 
mts_be°£ed
(&
°©e
);

448 
‰õnd
 
	g°d
::
o°ªam
&

449 
›î©‹
<<(
°d
::
o°ªam
& 
°ªam
, c⁄° 
	gmt_¥ng
& 
	g∫g
);

450 
‰õnd
 
	g°d
::
i°ªam
&

451 
›î©‹
>>(
°d
::
i°ªam
& 
°ªam
, 
	gmt_¥ng
& 
	g∫g
);

456 
uöt32_t
 
Ã™d
()

458  
mts_Ã™d
(&
°©e
);

460 #ifde‡
UINT64_MAX


461 
uöt64_t
 
Œønd
()

463  
mts_Œønd
(&
°©e
);

466 
dønd
()

468  
mts_dønd
(&
°©e
);

470 
ldønd
()

472  
mts_ldønd
(&
°©e
);

485 
›î©‹
()()

487  
mts_dønd
(&
°©e
);

489 
	g¥Ÿe˘ed
:

493 
mt_°©e
 
°©e
;

	@cvars/mtwist/randistrs.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

105 
	~"mtwi°.h
"

106 
	~"øndi°rs.h
"

107 
	~<m©h.h
>

108 
	~<°dlib.h
>

149 #i‚de‡
RD_MAX_BIAS


150 
	#RD_MAX_BIAS
 0.0001

	)

152 #i‚de‡
RD_UNIFORM_THRESHOLD


153 
	#RD_UNIFORM_THRESHOLD
 (()(()(1u << 31Ë* 2.0 * 
RD_MAX_BIAS
))

	)

163 
öt32_t
 
	$rds_iunif‹m
(

164 
mt_°©e
 * 
°©e
,

165 
öt32_t
 
lowî
,

166 
öt32_t
 
uµî
)

168 
uöt32_t
 
ønge
 = 
uµî
 - 
lowî
;

171 i‡(
ønge
 <
RD_UNIFORM_THRESHOLD
)

172  
lowî
 + (
öt32_t
)(
	`mts_ldønd
(
°©e
Ë* 
ønge
);

190 #ifde‡
MT_CACHING


191 
uöt32_t
 
œ°ønge
 = 0;

192 
uöt32_t
 
øngemask
 = 0;

194 
uöt32_t
 
øngemask
 = 0;

196 
uöt32_t


197 
ønvÆ
;

199 #ifde‡
MT_CACHING


200 i‡(
ønge
 !
œ°ønge
)

212 #ifde‡
MT_CACHING


213 
œ°ønge
 = 
ønge
;

215 
øngemask
 = 1;

216 
øngemask
 < 
ønge
 &&Ñangemask != 0;

217 
øngemask
 <<= 1)

225 
øngemask
 -= 1;

233 
ønvÆ
 = 
	`mts_Ã™d
(
°©e
Ë& 
øngemask
;

235 
ønvÆ
 >
ønge
);

236  
lowî
 + 
ønvÆ
;

238 
	}
}

240 #ifde‡
INT64_MAX


245 
öt64_t
 
	$rds_liunif‹m
(

246 
mt_°©e
 * 
°©e
,

247 
öt64_t
 
lowî
,

248 
öt64_t
 
uµî
)

250 
uöt64_t
 
ønge
 = 
uµî
 - 
lowî
;

260 #ifde‡
MT_CACHING


261 
uöt32_t
 
œ°ønge
 = 0;

262 
uöt32_t
 
øngemask
 = 0;

264 
uöt32_t
 
øngemask
 = 0;

266 
uöt32_t
 
ønvÆ
;

268 #ifde‡
MT_CACHING


269 i‡(
ønge
 !
œ°ønge
)

275 #ifde‡
MT_CACHING


276 
œ°ønge
 = 
ønge
;

278 
øngemask
 = 1;

279 
øngemask
 < 
ønge
 &&Ñangemask != 0;

280 
øngemask
 <<= 1)

288 
øngemask
 -= 1;

296 
ønvÆ
 = 
	`mts_Œønd
(
°©e
Ë& 
øngemask
;

298 
ønvÆ
 >
ønge
);

299  
lowî
 + 
ønvÆ
;

300 
	}
}

306 
	$rds_unif‹m
(

307 
mt_°©e
 * 
°©e
,

308 
lowî
,

309 
uµî
)

311  
lowî
 + 
	`mts_dønd
(
°©e
Ë* (
uµî
 -Üower);

312 
	}
}

317 
	$rds_lunif‹m
(

318 
mt_°©e
 * 
°©e
,

319 
lowî
,

320 
uµî
)

322  
lowî
 + 
	`mts_ldønd
(
°©e
Ë* (
uµî
 -Üower);

323 
	}
}

328 
	$rds_exp⁄ítül
(

329 
mt_°©e
 * 
°©e
,

330 
món
)

332 
øndom_vÆue
;

335 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

336 
øndom_vÆue
 == 0.0);

337  -
món
 * 
	`log
(
øndom_vÆue
);

338 
	}
}

343 
	$rds_Àxp⁄ítül
(

344 
mt_°©e
 * 
°©e
,

345 
món
)

347 
øndom_vÆue
;

350 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

351 
øndom_vÆue
 == 0.0);

352  -
món
 * 
	`log
(
øndom_vÆue
);

353 
	}
}

358 
	$rds_îœng
(

359 
mt_°©e
 * 
°©e
,

360 
p
,

361 
món
)

363 
‹dî
;

364 
øndom_vÆue
;

368 i‡(
p
 <= 1)

369 
p
 = 1;

370 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

371 
‹dî
 = 1; ordî < 
p
; order++)

372 
øndom_vÆue
 *
	`mts_dønd
(
°©e
);

374 
øndom_vÆue
 == 0.0);

375  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

376 
	}
}

381 
	$rds_Àæ™g
(

382 
mt_°©e
 * 
°©e
,

383 
p
,

384 
món
)

386 
‹dî
;

387 
øndom_vÆue
;

391 i‡(
p
 <= 1)

392 
p
 = 1;

393 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

394 
‹dî
 = 1; ordî < 
p
; order++)

395 
øndom_vÆue
 *
	`mts_ldønd
(
°©e
);

397 
øndom_vÆue
 == 0.0);

398  -
món
 * 
	`log
(
øndom_vÆue
Ë/ 
p
;

399 
	}
}

404 
	$rds_weibuŒ
(

405 
mt_°©e
 * 
°©e
,

406 
sh≠e
,

407 
sˇÀ
)

409 
øndom_vÆue
;

412 
øndom_vÆue
 = 
	`mts_dønd
(
°©e
);

413 
øndom_vÆue
 == 0.0);

414  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

415 
	}
}

420 
	$rds_lweibuŒ
(

421 
mt_°©e
 * 
°©e
,

422 
sh≠e
,

423 
sˇÀ
)

425 
øndom_vÆue
;

428 
øndom_vÆue
 = 
	`mts_ldønd
(
°©e
);

429 
øndom_vÆue
 == 0.0);

430  
sˇÀ
 * 
	`exp
(
	`log
(-log(
øndom_vÆue
)Ë/ 
sh≠e
);

431 
	}
}

437 
	$rds_n‹mÆ
(

438 
mt_°©e
 * 
°©e
,

439 
món
,

440 
sigma
)

442 
mag
;

443 
off£t
;

444 
xønvÆ
;

445 
yønvÆ
;

455 
xønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

456 
yønvÆ
 = 2.0 * 
	`mts_dønd
(
°©e
) - 1.0;

457 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

459 
mag
 > 1.0 || mag == 0.0);

461 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

462  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

473 
	}
}

479 
	$rds_ ‹mÆ
(

480 
mt_°©e
 * 
°©e
,

481 
món
,

482 
sigma
)

484 
mag
;

485 
off£t
;

486 
xønvÆ
;

487 
yønvÆ
;

497 
xønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

498 
yønvÆ
 = 2.0 * 
	`mts_ldønd
(
°©e
) - 1.0;

499 
mag
 = 
xønvÆ
 * xønvÆ + 
yønvÆ
 * yranval;

501 
mag
 > 1.0 || mag == 0.0);

503 
off£t
 = 
	`sqπ
((-2.0 * 
	`log
(
mag
)) / mag);

504  
món
 + 
sigma
 * 
xønvÆ
 * 
off£t
;

515 
	}
}

521 
	$rds_logn‹mÆ
(

522 
mt_°©e
 * 
°©e
,

523 
sh≠e
,

524 
sˇÀ
)

526  
	`exp
(
	`rds_n‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

527 
	}
}

533 
	$rds_Œogn‹mÆ
(

534 
mt_°©e
 * 
°©e
,

535 
sh≠e
,

536 
sˇÀ
)

538  
	`exp
(
	`rds_ ‹mÆ
(
°©e
, 
sˇÀ
, 
sh≠e
));

539 
	}
}

545 
	$rds_åünguœr
(

546 
mt_°©e
 * 
°©e
,

547 
lowî
,

548 
uµî
,

549 
mode
)

551 
øn_vÆue
;

552 
sˇÀd_mode
;

554 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

555 
øn_vÆue
 = 
	`mts_dønd
(
°©e
);

556 i‡(
øn_vÆue
 <
sˇÀd_mode
)

557 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

559 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

560  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

561 
	}
}

567 
	$rds_…rünguœr
(

568 
mt_°©e
 * 
°©e
,

569 
lowî
,

570 
uµî
,

571 
mode
)

573 
øn_vÆue
;

574 
sˇÀd_mode
;

576 
sˇÀd_mode
 = (
mode
 - 
lowî
Ë/ (
uµî
 -Üower);

577 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

578 i‡(
øn_vÆue
 <
sˇÀd_mode
)

579 
øn_vÆue
 = 
	`sqπ
(
sˇÀd_mode
 *Ñan_value);

581 
øn_vÆue
 = 1.0 - 
	`sqπ
((1.0 - 
sˇÀd_mode
) * (1.0 -Ñan_value));

582  
lowî
 + (
uµî
 -ÜowîË* 
øn_vÆue
;

583 
	}
}

589 
size_t
 
	$rds_öt_empúiˇl
(

590 
mt_°©e
 * 
°©e
,

591 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

593 
øn_vÆue
;

594 
size_t
 
ªsu…
;

596 
øn_vÆue
 = 
	`mts_ldønd
(
°©e
);

597 
øn_vÆue
 *
c⁄åﬁ
->
n
;

598 
ªsu…
 = (
size_t
)
øn_vÆue
;

599 i‡(
øn_vÆue
 < 
c⁄åﬁ
->
cutoff
[
ªsu…
])

600  
ªsu…
;

602  
c⁄åﬁ
->
ªm≠
[
ªsu…
];

603 
	}
}

610 
	$rds_doubÀ_empúiˇl
(

611 
mt_°©e
 * 
°©e
,

612 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

614  
c⁄åﬁ
->
vÆues
[
	`rds_öt_empúiˇl
(
°©e
, control)];

615 
	}
}

623 
	$rds_c⁄töuous_empúiˇl
(

624 
mt_°©e
 * 
°©e
,

625 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

627 
size_t
 
ödex
;

629 
ödex
 = 
	`rds_öt_empúiˇl
(
°©e
, 
c⁄åﬁ
);

630  
c⁄åﬁ
->
vÆues
[
ödex
]

631 + 
	`mts_ldønd
(
°©e
)

632 * (
c⁄åﬁ
->
vÆues
[
ödex
 + 1] - control->values[index]);

633 
	}
}

639 
öt32_t
 
	$rd_iunif‹m
(

640 
öt32_t
 
lowî
,

641 
öt32_t
 
uµî
)

643  
	`rds_iunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

644 
	}
}

646 #ifde‡
INT64_MAX


651 
öt64_t
 
	$rd_liunif‹m
(

652 
öt64_t
 
lowî
,

653 
öt64_t
 
uµî
)

655  
	`rds_liunif‹m
(&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

656 
	}
}

662 
	$rd_unif‹m
(

663 
lowî
,

664 
uµî
)

666  
	`rds_unif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

667 
	}
}

672 
	$rd_lunif‹m
(

673 
lowî
,

674 
uµî
)

676  
	`rds_lunif‹m
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
);

677 
	}
}

682 
	$rd_exp⁄ítül
(

683 
món
)

685  
	`rds_exp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

686 
	}
}

691 
	$rd_Àxp⁄ítül
(

692 
món
)

694  
	`rds_Àxp⁄ítül
 (&
mt_deÁu…_°©e
, 
món
);

695 
	}
}

700 
	$rd_îœng
(

701 
p
,

702 
món
)

704  
	`rds_îœng
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

705 
	}
}

710 
	$rd_Àæ™g
(

711 
p
,

712 
món
)

714  
	`rds_Àæ™g
 (&
mt_deÁu…_°©e
, 
p
, 
món
);

715 
	}
}

720 
	$rd_weibuŒ
(

721 
sh≠e
,

722 
sˇÀ
)

724  
	`rds_weibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

725 
	}
}

730 
	$rd_lweibuŒ
(

731 
sh≠e
,

732 
sˇÀ
)

734  
	`rds_lweibuŒ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

735 
	}
}

741 
	$rd_n‹mÆ
(

742 
món
,

743 
sigma
)

745  
	`rds_n‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

746 
	}
}

752 
	$rd_ ‹mÆ
(

753 
món
,

754 
sigma
)

756  
	`rds_ ‹mÆ
 (&
mt_deÁu…_°©e
, 
món
, 
sigma
);

757 
	}
}

763 
	$rd_logn‹mÆ
(

764 
sh≠e
,

765 
sˇÀ
)

767  
	`rds_logn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

768 
	}
}

774 
	$rd_Œogn‹mÆ
(

775 
sh≠e
,

776 
sˇÀ
)

778  
	`rds_Œogn‹mÆ
 (&
mt_deÁu…_°©e
, 
sh≠e
, 
sˇÀ
);

779 
	}
}

785 
	$rd_åünguœr
(

786 
lowî
,

787 
uµî
,

788 
mode
)

790  
	`rds_åünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

791 
	}
}

797 
	$rd_…rünguœr
(

798 
lowî
,

799 
uµî
,

800 
mode
)

802  
	`rds_…rünguœr
 (&
mt_deÁu…_°©e
, 
lowî
, 
uµî
, 
mode
);

803 
	}
}

881 
rd_empúiˇl_c⁄åﬁ
* 
	$rd_empúiˇl_£tup
(

882 
size_t
 
n_¥obs
,

883 c⁄° * 
¥obs
,

884 c⁄° * 
vÆues
)

886 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
;

887 
size_t
 
i
;

888 
size_t
 
j
;

889 
size_t
 
n_high
;

890 
size_t
 
n_low
;

891 
size_t
* 
°ack_high
;

892 
size_t
* 
°ack_low
;

893 
¥ob_tŸÆ
;

895 
c⁄åﬁ
 = (
rd_empúiˇl_c⁄åﬁ
*)
	`mÆloc
( *control);

896 i‡(
c⁄åﬁ
 =
NULL
)

897  
NULL
;

898 
c⁄åﬁ
->
n
 = 
n_¥obs
;

899 
c⁄åﬁ
->
cutoff
 = (*)
	`mÆloc
(
n_¥obs
 *  ());

900 
c⁄åﬁ
->
ªm≠
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

901 
c⁄åﬁ
->
vÆues
 = (*)
	`mÆloc
((
n_¥obs
 + 1) *  ());

902 i‡(
c⁄åﬁ
->
cutoff
 =
NULL
 || c⁄åﬁ->
ªm≠
 == NULL

903 || 
c⁄åﬁ
->
vÆues
 =
NULL
)

905 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

906  
NULL
;

908 i‡(
vÆues
 !
NULL
)

918 
i
 = 0; i <
n_¥obs
; i++)

919 
c⁄åﬁ
->
vÆues
[
i
] = values[i];

926 
i
 = 0; i <
n_¥obs
; i++)

927 
c⁄åﬁ
->
vÆues
[
i
] = ()ò/ 
n_¥obs
;

929 
°ack_high
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

930 i‡(
°ack_high
 =
NULL
)

932 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

933  
NULL
;

935 
°ack_low
 = (
size_t
*)
	`mÆloc
(
n_¥obs
 *  (size_t));

936 i‡(
°ack_low
 =
NULL
)

938 
	`‰ì
(
°ack_high
);

939 
	`rd_empúiˇl_‰ì
(
c⁄åﬁ
);

940  
NULL
;

942 
n_high
 = 
n_low
 = 0;

953 
i
 = 0, 
¥ob_tŸÆ
 = 0.0; i < 
n_¥obs
; i++)

954 
¥ob_tŸÆ
 +
¥obs
[
i
];

955 
i
 = 0; i < 
n_¥obs
; i++)

957 
c⁄åﬁ
->
ªm≠
[
i
] = i;

958 
c⁄åﬁ
->
cutoff
[
i
] = 
¥obs
[i] / 
¥ob_tŸÆ
 - 1.0 / 
n_¥obs
;

959 i‡(
c⁄åﬁ
->
cutoff
[
i
] >= 0.0)

960 
°ack_high
[
n_high
++] = 
i
;

962 
°ack_low
[
n_low
++] = 
i
;

970 
n_low
 > 0)

972 
i
 = 
°ack_low
[--
n_low
];

973 
j
 = 
°ack_high
[
n_high
 - 1];

1000 
c⁄åﬁ
->
cutoff
[
j
] +c⁄åﬁ->cutoff[
i
];

1001 
c⁄åﬁ
->
cutoff
[
i
] = i + 1.0 + c⁄åﬁ->cutoff[i] * 
n_¥obs
;

1002 
c⁄åﬁ
->
ªm≠
[
i
] = 
j
;

1006 i‡(
c⁄åﬁ
->
cutoff
[
j
] < 0.0)

1008 
°ack_low
[
n_low
++] = 
j
;

1009 --
n_high
;

1018 
i
 = 0; i < 
n_high
; i++)

1020 
j
 = 
°ack_high
[
i
];

1021 
c⁄åﬁ
->
cutoff
[
j
] = j + 1.0;

1023 
	`‰ì
(
°ack_high
);

1024 
	`‰ì
(
°ack_low
);

1025  
c⁄åﬁ
;

1026 
	}
}

1031 
	$rd_empúiˇl_‰ì
(

1032 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1034 i‡(
c⁄åﬁ
 =
NULL
)

1036 i‡(
c⁄åﬁ
->
cutoff
 !
NULL
)

1037 
	`‰ì
(
c⁄åﬁ
->
cutoff
);

1038 i‡(
c⁄åﬁ
->
ªm≠
 !
NULL
)

1039 
	`‰ì
(
c⁄åﬁ
->
ªm≠
);

1040 i‡(
c⁄åﬁ
->
vÆues
 !
NULL
)

1041 
	`‰ì
(
c⁄åﬁ
->
vÆues
);

1042 
	`‰ì
(
c⁄åﬁ
);

1043 
	}
}

1049 
size_t
 
	$rd_öt_empúiˇl
(

1050 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1052  
	`rds_öt_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1053 
	}
}

1059 
	$rd_doubÀ_empúiˇl
(

1060 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1062  
	`rds_doubÀ_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1063 
	}
}

1069 
	$rd_c⁄töuous_empúiˇl
(

1070 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
)

1072  
	`rds_c⁄töuous_empúiˇl
(&
mt_deÁu…_°©e
, 
c⁄åﬁ
);

1073 
	}
}

	@cvars/mtwist/randistrs.h

1 #i‚de‡
RANDISTRS_H


2 
	#RANDISTRS_H


	)

189 
	~"mtwi°.h
"

190 #ifde‡
__˝lu•lus


191 
	~<°dex˚±
>

192 
	~<ve˘‹
>

201 
size_t
 
	mn
;

202 * 
	mcutoff
;

205 
size_t
* 
	mªm≠
;

206 * 
	mvÆues
;

208 
	trd_empúiˇl_c⁄åﬁ
;

210 #ifde‡
__˝lu•lus


218 
öt32_t
 
rds_iunif‹m
(
mt_°©e
* 
°©e
, i¡32_à
lowî
,

219 
öt32_t
 
uµî
);

221 #ifde‡
INT64_MAX


222 
öt64_t
 
rds_liunif‹m
(
mt_°©e
* 
°©e
, i¡64_à
lowî
,

223 
öt64_t
 
uµî
);

226 
rds_unif‹m
(
mt_°©e
* 
°©e
,

227 
lowî
, 
uµî
);

229 
rds_lunif‹m
(
mt_°©e
* 
°©e
,

230 
lowî
, 
uµî
);

232 
rds_exp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

234 
rds_Àxp⁄ítül
(
mt_°©e
* 
°©e
, 
món
);

236 
rds_îœng
(
mt_°©e
* 
°©e
, 
p
, 
món
);

238 
rds_Àæ™g
(
mt_°©e
* 
°©e
, 
p
, 
món
);

240 
rds_weibuŒ
(
mt_°©e
* 
°©e
,

241 
sh≠e
, 
sˇÀ
);

243 
rds_lweibuŒ
(
mt_°©e
* 
°©e
,

244 
sh≠e
, 
sˇÀ
);

246 
rds_n‹mÆ
(
mt_°©e
* 
°©e
,

247 
món
, 
sigma
);

249 
rds_ ‹mÆ
(
mt_°©e
* 
°©e
,

250 
món
, 
sigma
);

252 
rds_logn‹mÆ
(
mt_°©e
* 
°©e
,

253 
sh≠e
, 
sˇÀ
);

255 
rds_Œogn‹mÆ
(
mt_°©e
* 
°©e
,

256 
sh≠e
, 
sˇÀ
);

258 
rds_åünguœr
(
mt_°©e
* 
°©e
,

259 
lowî
, 
uµî
, 
mode
);

261 
rds_…rünguœr
(
mt_°©e
* 
°©e
,

262 
lowî
, 
uµî
, 
mode
);

264 
size_t
 
rds_öt_empúiˇl
(
mt_°©e
* 
°©e
,

265 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

267 
rds_doubÀ_empúiˇl
(
mt_°©e
* 
°©e
,

268 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

270 
rds_c⁄töuous_empúiˇl
(
mt_°©e
* 
°©e
,

271 
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

277 
öt32_t
 
rd_iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
);

279 #ifde‡
INT64_MAX


280 
öt64_t
 
rd_liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
);

283 
rd_unif‹m
(
lowî
, 
uµî
);

285 
rd_lunif‹m
(
lowî
, 
uµî
);

287 
rd_exp⁄ítül
(
món
);

289 
rd_Àxp⁄ítül
(
món
);

291 
rd_îœng
(
p
, 
món
);

293 
rd_Àæ™g
(
p
, 
món
);

295 
rd_weibuŒ
(
sh≠e
, 
sˇÀ
);

297 
rd_lweibuŒ
(
sh≠e
, 
sˇÀ
);

299 
rd_n‹mÆ
(
món
, 
sigma
);

301 
rd_ ‹mÆ
(
món
, 
sigma
);

303 
rd_logn‹mÆ
(
sh≠e
, 
sˇÀ
);

305 
rd_Œogn‹mÆ
(
sh≠e
, 
sˇÀ
);

307 
rd_åünguœr
(
lowî
, 
uµî
, 
mode
);

309 
rd_…rünguœr
(
lowî
, 
uµî
,

310 
mode
);

311 
rd_empúiˇl_c⁄åﬁ
*

312 
rd_empúiˇl_£tup
(
size_t
 
n_¥obs
,

313 c⁄° * 
¥obs
, c⁄° * 
vÆues
);

315 
rd_empúiˇl_‰ì
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

317 
size_t
 
rd_öt_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

319 
rd_doubÀ_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

321 
rd_c⁄töuous_empúiˇl
(
rd_empúiˇl_c⁄åﬁ
* 
c⁄åﬁ
);

324 #ifde‡
__˝lu•lus


328 #ifde‡
__˝lu•lus


334 ˛as†
	cmt_di°ributi⁄
 : 
public
 
mt_¥ng


336 
public
:

341 
mt_di°ributi⁄
(

343 
boﬁ
 
pickSìd
 = 
Ál£
)

346 : 
mt_¥ng
(
pickSìd
)

349 
mt_di°ributi⁄
(
uöt32_t
 
√w£ed
)

351 : 
mt_¥ng
(
√w£ed
)

354 
mt_di°ributi⁄
(
uöt32_t
 
£eds
[
MT_STATE_SIZE
])

356 : 
mt_¥ng
(
£eds
)

359 ~
mt_di°ributi⁄
() { }

365 
öt32_t
 
iunif‹m
(öt32_à
lowî
, i¡32_à
uµî
)

368  
rds_iunif‹m
(&
°©e
, 
lowî
, 
uµî
);

370 #ifde‡
INT64_MAX


371 
öt64_t
 
liunif‹m
(öt64_à
lowî
, i¡64_à
uµî
)

374  
rds_liunif‹m
(&
°©e
, 
lowî
, 
uµî
);

377 
unif‹m
(
lowî
, 
uµî
)

380  
rds_unif‹m
(&
°©e
, 
lowî
, 
uµî
);

382 
lunif‹m
(
lowî
, 
uµî
)

385  
rds_lunif‹m
(&
°©e
, 
lowî
, 
uµî
);

387 
exp⁄ítül
(
món
)

390  
rds_exp⁄ítül
(&
°©e
, 
món
);

392 
Àxp⁄ítül
(
món
)

395  
rds_Àxp⁄ítül
(&
°©e
, 
món
);

397 
îœng
(
p
, 
món
)

400  
rds_îœng
(&
°©e
, 
p
, 
món
);

402 
Àæ™g
(
p
, 
món
)

405  
rds_Àæ™g
(&
°©e
, 
p
, 
món
);

407 
weibuŒ
(
sh≠e
, 
sˇÀ
)

410  
rds_weibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

412 
lweibuŒ
(
sh≠e
, 
sˇÀ
)

415  
rds_lweibuŒ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

417 
n‹mÆ
(
món
, 
sigma
)

420  
rds_n‹mÆ
(&
°©e
, 
món
, 
sigma
);

422 
 ‹mÆ
(
món
, 
sigma
)

425  
rds_ ‹mÆ
(&
°©e
, 
món
, 
sigma
);

427 
logn‹mÆ
(
sh≠e
, 
sˇÀ
)

430  
rds_logn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

432 
Œogn‹mÆ
(
sh≠e
, 
sˇÀ
)

435  
rds_Œogn‹mÆ
(&
°©e
, 
sh≠e
, 
sˇÀ
);

437 
åünguœr
(
lowî
, 
uµî
, 
mode
)

440  
rds_åünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

442 
…rünguœr
(
lowî
, 
uµî
, 
mode
)

445  
rds_…rünguœr
(&
°©e
, 
lowî
, 
uµî
, 
mode
);

456 ˛as†
	cmt_empúiˇl_di°ributi⁄


458 
	gpublic
:

459 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
,

460 c⁄° 
°d
::
ve˘‹
<>& 
vÆues
)

461 : 
c
(
NULL
)

463 i‡(
vÆues
.
size
(Ë!
¥obs
.size() + 1)

464 
throw
 
°d
::
övÆid_¨gumít
(

466 
	gc
 = 
rd_empúiˇl_£tup
(
¥obs
.
size
(),

467 &
¥obs
.
‰⁄t
(), &
vÆues
.front());

469 
mt_empúiˇl_di°ributi⁄
(c⁄° 
°d
::
ve˘‹
<>& 
¥obs
)

470 : 
c
(
rd_empúiˇl_£tup
(
¥obs
.
size
(), &¥obs.
‰⁄t
(), 
NULL
))

473 ~
mt_empúiˇl_di°ributi⁄
()

475 
rd_empúiˇl_‰ì
(
c
);

478 
size_t
 
öt_empúiˇl
(
mt_¥ng
& 
∫g
)

481  
rds_öt_empúiˇl
(&
∫g
.
°©e
, 
c
);

483 
doubÀ_empúiˇl
(
mt_¥ng
& 
∫g
)

486  
rds_doubÀ_empúiˇl
(&
∫g
.
°©e
, 
c
);

488 
c⁄töuous_empúiˇl
(
mt_¥ng
& 
∫g
)

491  
rds_c⁄töuous_empúiˇl
(&
∫g
.
°©e
, 
c
);

493 
	g¥iv©e
:

500 
mt_empúiˇl_di°ributi⁄
(

501 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
sour˚
);

502 
	gmt_empúiˇl_di°ributi⁄
& 
	g›î©‹
=(

503 c⁄° 
mt_empúiˇl_di°ributi⁄
& 
rhs
);

508 
rd_empúiˇl_c⁄åﬁ
*

509 
	gc
;

	@cvars/mtwist/rdcctest.cc

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

71 
	~"øndi°rs.h
"

72 
	~<io°ªam
>

73 
	~<°dlib.h
>

74 
	~<°rög.h
>

75 
	~<ve˘‹
>

77 
usög
 
«me•a˚
 
	g°d
;

79 
maö
(
¨gc
, * 
¨gv
[]);

80 
ußge
();

82 
	#SEED_PARAM
 1

	)

83 
	#COUNT_PARAM
 2

	)

84 
	#DISTR_PARAM
 3

	)

85 
	#PARAM_OFFSET
 4

	)

87 
	$maö
(

88 
¨gc
,

89 * 
¨gv
[])

91 i‡(
¨gc
 <
PARAM_OFFSET
)

92 
	`ußge
();

94 
£ed
 = 
	`©oi
 (
¨gv
[
SEED_PARAM
]);

95 
size_t
 
how_m™y
 = 
	`©oi
(
¨gv
[
COUNT_PARAM
]);

97 
size_t
 
n_∑øms
 = 
¨gc
 - 
PARAM_OFFSET
;

98 * 
∑øms
 = 
√w
 [
n_∑øms
];

100 
mt_empúiˇl_di°ributi⁄
* 
empúiˇl
 = 
NULL
;

101 
size_t
 
√eded_∑øms
 = 0;

102 
size_t
 
n_¥obs
 = 0;

104 
size_t
 
i
 = 0; i < 
n_∑øms
; i++)

105 
∑øms
[
i
] = 
	`©of
(
¨gv
[ò+ 
PARAM_OFFSET
]);

107 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

108 
√eded_∑øms
 = 2;

109 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "uniform") == 0)

110 
√eded_∑øms
 = 2;

111 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "exponential") == 0)

112 
√eded_∑øms
 = 1;

113 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "erlang") == 0)

115 i‡(
n_∑øms
 < 2 || 
∑øms
[0] < 1.0)

116 
	`ußge
();

117 
√eded_∑øms
 = 2;

119 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "weibull") == 0)

120 
√eded_∑øms
 = 2;

121 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "normal") == 0)

122 
√eded_∑øms
 = 2;

123 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

124 
√eded_∑øms
 = 2;

125 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "triangular") == 0)

126 
√eded_∑øms
 = 3;

127 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "empirical") == 0)

129 i‡(
n_∑øms
 % 2 != 0 ||Ç_params < 4)

130 
	`ußge
();

132 
n_¥obs
 = 
n_∑øms
 / 2;

133 
ve˘‹
<> 
¥obs
;

134 
ve˘‹
<> 
vÆues
;

136 
size_t
 
i
 = 0; i < 
n_¥obs
; i++)

138 
vÆues
.
	`push_back
(
∑øms
[
i
 * 2]);

139 
¥obs
.
	`push_back
(
∑øms
[
i
 * 2 + 1]);

140 i‡(
¥obs
[
i
] < 0)

142 ()
	`Ârötf
(
°dîr
, "rdcctest:ÇegativeÖrobability given\n");

143 
	`exô
(2);

146 
vÆues
.
	`push_back
(0.0);

147 
√eded_∑øms
 = 
n_∑øms
;

148 
empúiˇl
 = 
√w
 
	`mt_empúiˇl_di°ributi⁄
(
¥obs
, 
vÆues
);

150 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

152 i‡(
n_∑øms
 % 2 == 0 ||Ç_params < 5)

153 
	`ußge
();

154 
n_¥obs
 = (
n_∑øms
 - 1) / 2;

155 
ve˘‹
<> 
¥obs
;

156 
ve˘‹
<> 
vÆues
;

158 
size_t
 
i
 = 0; i < 
n_¥obs
; i++)

160 
vÆues
.
	`push_back
(
∑øms
[
i
 * 2]);

161 
¥obs
.
	`push_back
(
∑øms
[
i
 * 2 + 1]);

162 i‡(
¥obs
[
i
] < 0)

164 ()
	`Ârötf
(
°dîr
, "rdcctest:ÇegativeÖrobability given\n");

165 
	`exô
(2);

168 
vÆues
.
	`push_back
(
∑øms
[
n_¥obs
 * 2]);

169 
√eded_∑øms
 = 
n_∑øms
;

170 
empúiˇl
 = 
√w
 
	`mt_empúiˇl_di°ributi⁄
(
¥obs
, 
vÆues
);

173 
	`ußge
();

175 i‡(
n_∑øms
 !
√eded_∑øms
)

176 
	`ußge
();

181 
mt_di°ributi⁄
 
	`di°r
(
£ed
 == 0);

182 i‡(
£ed
 != 0)

183 
di°r
.
	`£ed32
(
£ed
);

185 
size_t
 
i
 = 0; i < 
how_m™y
; i++)

187 
øn_vÆue
 = 0.0;

188 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

189 
øn_vÆue
 = 
di°r
.
	`iunif‹m
(()
∑øms
[0], ()params[1]);

190 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "uniform") == 0)

191 
øn_vÆue
 = 
di°r
.
	`unif‹m
(
∑øms
[0],Öarams[1]);

192 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "exponential") == 0)

193 
øn_vÆue
 = 
di°r
.
	`exp⁄ítül
(
∑øms
[0]);

194 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "erlang") == 0)

195 
øn_vÆue
 = 
di°r
.
	`îœng
((Ë
∑øms
[0],Öarams[1]);

196 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "weibull") == 0)

197 
øn_vÆue
 = 
di°r
.
	`weibuŒ
(
∑øms
[0],Öarams[1]);

198 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "normal") == 0)

199 
øn_vÆue
 = 
di°r
.
	`n‹mÆ
(
∑øms
[0],Öarams[1]);

200 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

201 
øn_vÆue
 = 
di°r
.
	`logn‹mÆ
(
∑øms
[0],Öarams[1]);

202 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "triangular") == 0)

203 
øn_vÆue
 = 
di°r
.
	`åünguœr
(
∑øms
[0],Öarams[1],Öarams[2]);

204 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "empirical") == 0)

205 
øn_vÆue
 = 
empúiˇl
->
	`doubÀ_empúiˇl
(
di°r
);

206 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

207 
øn_vÆue
 = 
empúiˇl
->
	`c⁄töuous_empúiˇl
(
di°r
);

208 
cout
 << 
øn_vÆue
 << '\n';

211 
	}
}

213 
	$ußge
()

215 
˚º
 << "Usage:Ñdcctest count distributionÖ0 ...\n";

216 
˚º
 << "Distributions:\n";

217 
˚º
 << "\tiuniformÜower upper\n";

218 
˚º
 << "\tuniformÜower upper\n";

219 
˚º
 << "\texponential mean\n";

220 
˚º
 << "\terlangÖ mean\n";

221 
˚º
 << "\tweibull shape scale\n";

222 
˚º
 << "\tnormal mean sigma\n";

223 
˚º
 << "\tlognormal shape scale\n";

224 
˚º
 << "\ttriangularÜower upper mode\n";

225 
˚º
 << "\tempirical v0Ö0 v1Ö1 ... vn-1Ön-1\n";

226 
˚º
 << "\tcontinuous_empirical v0Ö0 v1Ö1 ... vn-1Ön-1 vn\n";

227 
	`exô
(2);

228 
	}
}

	@cvars/mtwist/rdtest.c

1 #i‚de‡
löt


2 #ifde‡
__GNUC__


3 
	#ATTRIBUTE
(
©ås
Ë
	`__©åibuã__
◊ârs)

	)

5 
	#ATTRIBUTE
(
©ås
)

	)

7 
	gRcs_Id
[] 
ATTRIBUTE
((
u£d
)) =

83 
	~"øndi°rs.h
"

84 
	~<°dio.h
>

85 
	~<°dlib.h
>

86 
	~<°rög.h
>

88 
maö
(
¨gc
, * 
¨gv
[]);

89 
ußge
();

91 
	#SEED_PARAM
 1

	)

92 
	#COUNT_PARAM
 2

	)

93 
	#DISTR_PARAM
 3

	)

94 
	#PARAM_OFFSET
 4

	)

96 
	$maö
(

97 
¨gc
,

98 * 
¨gv
[])

100 
rd_empúiˇl_c⁄åﬁ
*

101 
c⁄åﬁ
 = 
NULL
;

102 
size_t
 
how_m™y
;

103 
size_t
 
i
;

104 
size_t
 
√eded_∑øms
 = 0;

106 
size_t
 
n_∑øms
;

107 
size_t
 
n_¥obs
 = 0;

108 * 
∑øms
;

109 * 
¥obs
 = 
NULL
;

110 
øn_vÆue
 = 0.0;

112 
uöt32_t
 
£ed
;

113 * 
vÆues
 = 
NULL
;

115 i‡(
¨gc
 <
PARAM_OFFSET
)

116 
	`ußge
();

118 
£ed
 = 
	`©oi
 (
¨gv
[
SEED_PARAM
]);

119 
how_m™y
 = 
	`©oi
 (
¨gv
[
COUNT_PARAM
]);

121 
n_∑øms
 = 
¨gc
 - 
PARAM_OFFSET
;

122 
∑øms
 = (*Ë
	`mÆloc
 ( (Ë* 
n_∑øms
);

123 i‡(
∑øms
 =
NULL
)

125 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖarams\n");

128 
i
 = 0; i < 
n_∑øms
; i++)

129 
∑øms
[
i
] = 
	`©of
 (
¨gv
[ò+ 
PARAM_OFFSET
]);

131 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

132 
√eded_∑øms
 = 2;

133 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

134 
√eded_∑øms
 = 2;

135 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

136 
√eded_∑øms
 = 1;

137 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

139 i‡(
n_∑øms
 < 2 || 
∑øms
[0] < 1.0)

140 
	`ußge
();

141 
√eded_∑øms
 = 2;

143 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

144 
√eded_∑øms
 = 2;

145 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

146 
√eded_∑øms
 = 2;

147 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

148 
√eded_∑øms
 = 2;

149 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

150 
√eded_∑øms
 = 3;

151 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

153 i‡(
n_∑øms
 % 2 != 0 ||Ç_params < 4)

154 
	`ußge
();

155 
n_¥obs
 = 
n_∑øms
 / 2;

156 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

157 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

158 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

160 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

163 
i
 = 0; i < 
n_¥obs
; i++)

165 
vÆues
[
i
] = 
∑øms
[i * 2];

166 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

167 i‡(
¥obs
[
i
] < 0)

169 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

170 
	`exô
(2);

173 
vÆues
[
n_¥obs
] = 0.0;

174 
√eded_∑øms
 = 
n_∑øms
;

175 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

177 i‡(
	`°rcmp
(
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

179 i‡(
n_∑øms
 % 2 == 0 ||Ç_params < 5)

180 
	`ußge
();

181 
n_¥obs
 = (
n_∑øms
 - 1) / 2;

182 
¥obs
 = (*Ë
	`mÆloc
 ( (Ë* 
n_¥obs
);

183 
vÆues
 = (*Ë
	`mÆloc
 ( (Ë* (
n_¥obs
 + 1));

184 i‡(
¥obs
 =
NULL
 || 
vÆues
 == NULL)

186 (Ë
	`Ârötf
 (
°dîr
, "rdtest: can't mallocÖrobs/values\n");

189 
i
 = 0; i < 
n_¥obs
; i++)

191 
vÆues
[
i
] = 
∑øms
[i * 2];

192 
¥obs
[
i
] = 
∑øms
[i * 2 + 1];

193 i‡(
¥obs
[
i
] < 0)

195 ()
	`Ârötf
(
°dîr
, "rdtest:ÇegativeÖrobability given\n");

196 
	`exô
(2);

199 
vÆues
[
n_¥obs
] = 
∑øms
[n_probs * 2];

200 
√eded_∑øms
 = 
n_∑øms
;

201 
c⁄åﬁ
 = 
	`rd_empúiˇl_£tup
(
n_¥obs
, 
¥obs
, 
vÆues
);

204 
	`ußge
();

206 i‡(
n_∑øms
 !
√eded_∑øms
)

207 
	`ußge
();

212 i‡(
£ed
 == 0)

213 
	`mt_good£ed
();

215 
	`mt_£ed32
(
£ed
);

217 
i
 = 0; i < 
how_m™y
; i++)

219 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "iuniform") == 0)

220 
øn_vÆue
 = 
	`rd_iunif‹m
 ((
öt32_t
)
∑øms
[0], (int32_t)params[1]);

221 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "uniform") == 0)

222 
øn_vÆue
 = 
	`rd_unif‹m
 (
∑øms
[0],Öarams[1]);

223 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "exponential") == 0)

224 
øn_vÆue
 = 
	`rd_exp⁄ítül
 (
∑øms
[0]);

225 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "erlang") == 0)

226 
øn_vÆue
 = 
	`rd_îœng
 ((Ë
∑øms
[0],Öarams[1]);

227 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "weibull") == 0)

228 
øn_vÆue
 = 
	`rd_weibuŒ
 (
∑øms
[0],Öarams[1]);

229 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "normal") == 0)

230 
øn_vÆue
 = 
	`rd_n‹mÆ
 (
∑øms
[0],Öarams[1]);

231 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "lognormal") == 0)

232 
øn_vÆue
 = 
	`rd_logn‹mÆ
 (
∑øms
[0],Öarams[1]);

233 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "triangular") == 0)

234 
øn_vÆue
 = 
	`rd_åünguœr
 (
∑øms
[0],Öarams[1],Öarams[2]);

235 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "empirical") == 0)

236 
øn_vÆue
 = 
	`rd_doubÀ_empúiˇl
 (
c⁄åﬁ
);

237 i‡(
	`°rcmp
 (
¨gv
[
DISTR_PARAM
], "continuous_empirical") == 0)

238 
øn_vÆue
 = 
	`rd_c⁄töuous_empúiˇl
 (
c⁄åﬁ
);

239 (Ë
	`¥ötf
 ("%f\n", 
øn_vÆue
);

242 
	}
}

244 
	$ußge
()

246 (Ë
	`Ârötf
 (
°dîr
, "Usage:Ñdtest seed count distributionÖ0 ...\n");

247 (Ë
	`Ârötf
 (
°dîr
, "Distributions:\n");

248 (Ë
	`Ârötf
 (
°dîr
, "\tiuniformÜower upper\n");

249 (Ë
	`Ârötf
 (
°dîr
, "\tuniformÜower upper\n");

250 (Ë
	`Ârötf
 (
°dîr
, "\texponential mean\n");

251 (Ë
	`Ârötf
 (
°dîr
, "\terlangÖ mean\n");

252 (Ë
	`Ârötf
 (
°dîr
, "\tweibull shape scale\n");

253 (Ë
	`Ârötf
 (
°dîr
, "\tnormal mean sigma\n");

254 (Ë
	`Ârötf
 (
°dîr
, "\tlognormal shape scale\n");

255 (Ë
	`Ârötf
 (
°dîr
, "\ttriangularÜower upper mode\n");

256 (Ë
	`Ârötf
 (
°dîr
, "\tempirical v0Ö0 v1Ö1 ... vn-1Ön-1\n");

257 (Ë
	`Ârötf
 (
°dîr
,

259 
	`exô
(2);

260 
	}
}

	@cvars/test/sanity.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<dlf˙.h
>

12 
	~<°döt.h
>

13 
	~<fb_cv¨.h
>

15 *
	gpgm«me
;

17 
	$¥öt_ußge
()

19 
	`¥ötf
("Usage: %s <libraryÇame> <parameter string> "

20 "<cou¡>\n", 
pgm«me
);

21 
	`¥ötf
("Example: %sÜibrand-triangular.so.1 "

23 " 10\n", 
pgm«me
);

25 
	}
}

27 
	$maö
(
¨gc
, *
¨gv
[])

29 *
cv¨_lib
;

30 *
cv¨_h™dÀ
;

31 *
lib«me
;

32 *
∑ømëîs
;

33 
cou¡
;

34 
ªt
;

35 
cv¨_›î©i⁄s_t
 
cv¨_›
;

36 
d
;

39 
pgm«me
 = 
¨gv
[0];

41 i‡(
¨gc
 < 4) {

42 
	`¥ötf
("InsufficientÖarameters.\n");

43 
	`¥öt_ußge
();

44 
ªt
 = -1;

45 
exô
;

49 
lib«me
 = 
¨gv
[1];

50 
cv¨_lib
 = 
	`dl›í
(
lib«me
, 
RTLD_NOW
 | 
RTLD_GLOBAL
);

51 i‡(!
cv¨_lib
) {

52 
	`¥ötf
("U«bÀÅÿlﬂdÜibøry: %s.\n", 
	`dÀº‹
());

53 
ªt
 = -2;

54 
exô
;

58 
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_INIT
);

60 
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_ALLOC_HANDLE
);

61 i‡(!
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

62 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

63 
ªt
 = -3;

64 
dl˛o£
;

67 
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_REVALIDATE_HANDLE
);

68 i‡(!
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

69 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE
 ": %s.\n", 
	`dÀº‹
());

70 
ªt
 = -4;

71 
dl˛o£
;

74 
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_NEXT_VALUE
);

75 i‡(!
cv¨_›
.
cv¨_√xt_vÆue
) {

76 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE
 ": %s.\n", 
	`dÀº‹
());

77 
ªt
 = -5;

78 
dl˛o£
;

81 
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_FREE_HANDLE
);

82 i‡(!
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

83 
	`¥ötf
("U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE
 ": %s.\n", 
	`dÀº‹
());

84 
ªt
 = -6;

85 
dl˛o£
;

88 
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_MODULE_EXIT
);

90 
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_USAGE
);

92 
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(
cv¨_lib
, 
FB_CVAR_VERSION
);

94 i‡(
cv¨_›
.
cv¨_moduÀ_öô
) {

95 
ªt
 = 
cv¨_›
.
	`cv¨_moduÀ_öô
();

96 i‡(
ªt
) {

97 
	`¥ötf
("Custom variable module initialization failed.\n");

98 
dl˛o£
;

102 i‡(
cv¨_›
.
cv¨_vîsi⁄
)

103 
	`¥ötf
("V¨übÀ: %†(%s)\n", 
lib«me
, 
cv¨_›
.
	`cv¨_vîsi⁄
());

105 
	`¥ötf
("V¨übÀ: %s\n", 
lib«me
);

107 i‡(
cv¨_›
.
cv¨_ußge
)

108 
	`¥ötf
("%s\n", 
cv¨_›
.
	`cv¨_ußge
());

111 
∑ømëîs
 = 
¨gv
[2];

112 
cv¨_h™dÀ
 = 
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
, 
mÆloc
, 
‰ì
);

113 i‡(!
cv¨_h™dÀ
) {

114 
	`¥ötf
("Custom variable handleállocation failed.\n");

115 
ªt
 = -7;

116 
cv¨_‰ì
;

120 
ªt
 = 
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
cv¨_h™dÀ
);

121 i‡(
ªt
) {

122 
	`¥ötf
("Custom variable handleÑevalidation failed.\n");

123 
ªt
 = -10;

124 
cv¨_‰ì
;

127 
cou¡
 = 
	`©oi
(
¨gv
[3]);

128 i‡(
cou¡
 > 0) {

129 
cou¡
 > 1) {

130 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

131 i‡(
ªt
) {

132 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

133 
ªt
 = -11;

134 
cv¨_‰ì
;

136 
	`¥ötf
("%lf,", 
d
);

137 
cou¡
--;

139 
ªt
 = 
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨_h™dÀ
, &
d
);

140 i‡(
ªt
) {

141 
	`¥ötf
("U«bÀÅÿgëÅhê√xàvÆue. Eº‹ %d.\n" ,
ªt
);

142 
ªt
 = -11;

143 
cv¨_‰ì
;

145 
	`¥ötf
("%lf.\n", 
d
);

148 
ªt
 = 0;

149 
	`¥ötf
("\nAll done.\n");

151 
cv¨_‰ì
:

152 
cv¨_›
.
	`cv¨_‰ì_h™dÀ
(
cv¨_h™dÀ
, 
‰ì
);

154 i‡(
cv¨_›
.
cv¨_moduÀ_exô
)

155 
cv¨_›
.
	`cv¨_moduÀ_exô
();

157 
dl˛o£
:

158 
	`dl˛o£
(
cv¨_lib
);

160 
exô
:

161  
ªt
;

162 
	}
}

	@eventgen.c

42 
	~<sys/time.h
>

44 
	~"fûebích.h
"

45 
	~"v¨s.h
"

46 
	~"evítgí.h
"

47 
	~"Êow›.h
"

48 
	~"ùc.h
"

50 
	#FB_SEC2NSEC
 1000000000UL

	)

66 
	$evítgí_thªad
()

68 
hπime_t
 
œ°
;

70 
œ°
 = 
	`gëhπime
();

71 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
FALSE
;

74 
time•ec
 
¶ì±ime
;

75 
hπime_t
 
dñè
;

76 
cou¡
, 
øã
;

78 i‡(
fûebích_shm
->
shm_evítgí_hz
 =
NULL
) {

79 (Ë
	`¶ìp
(1);

82 
øã
 = 
	`avd_gë_öt
(
fûebích_shm
->
shm_evítgí_hz
);

83 i‡(
øã
 > 0)

84 
fûebích_shm
->
shm_evítgí_íabÀd
 = 
TRUE
;

90 
¶ì±ime
.
tv_£c
 = 0;

91 
¶ì±ime
.
tv_n£c
 = 
FB_SEC2NSEC
 / 
øã
;

93 
¶ì±ime
.
tv_n£c
 *= 10;

94 i‡(
¶ì±ime
.
tv_n£c
 < 1000UL)

95 
¶ì±ime
.
tv_n£c
 = 1000UL;

97 
¶ì±ime
.
tv_£c
 = sÀïtime.
tv_n£c
 / 
FB_SEC2NSEC
;

98 i‡(
¶ì±ime
.
tv_£c
 > 0)

99 
¶ì±ime
.
tv_n£c
 -(¶ì±ime.
tv_£c
 * 
FB_SEC2NSEC
);

101 ()
	`«no¶ìp
(&
¶ì±ime
, 
NULL
);

103 
dñè
 = 
	`gëhπime
(Ë- 
œ°
;

104 
œ°
 = 
	`gëhπime
();

106 
cou¡
 = (
øã
 * 
dñè
Ë/ 
FB_SEC2NSEC
;

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "delta %lluns count %d",

109 (
u_l⁄gl⁄g_t
)
dñè
, 
cou¡
);

112 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

121 i‡(
fûebích_shm
->
shm_evítgí_q
 < (5 * 
øã
))

122 
fûebích_shm
->
shm_evítgí_q
 +
cou¡
;

124 ()
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_evítgí_cv
);

126 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

128 
	}
}

134 
	$evítgí_öô
()

136 
±hªad_t
 
tid
;

138 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

139 (*(*)(*))
evítgí_thªad
, 0) != 0) {

140 
	`fûebích_log
(
LOG_ERROR
, "createÅimerÅhread failed: %s",

141 
	`°ªº‹
(
î∫o
));

142 
	`exô
(1);

144 
	}
}

151 
	$evítgí_£å©e
(
avd_t
 
øã
)

153 
fûebích_shm
->
shm_evítgí_hz
 = 
øã
;

154 i‡(
øã
 =
NULL
) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	}
}

165 
	$evítgí_ª£t
()

167 
fûebích_shm
->
shm_evítgí_q
 = 0;

168 
	}
}

	@eventgen.h

26 #i‚def 
_FB_EVENTGEN_H


27 
	#_FB_EVENTGEN_H


	)

29 
	~"fûebích.h
"

31 
evítgí_öô
();

32 
evítgí_£å©e
(
avd_t
 
øã
);

33 
evítgí_ª£t
();

	@fb_avl.c

93 
	~"fûebích.h
"

94 
	~"fb_avl.h
"

107 c⁄° 
	gavl_chûd2bÆ™˚
[2] = {-1, 1};

108 c⁄° 
	gavl_bÆ™˚2chûd
[] = {0, 0, 1};

124 
	$avl_wÆk
(
avl_åì_t
 *
åì
, *
ﬁdnode
, 
À·
)

126 
size_t
 
off
 = 
åì
->
avl_off£t
;

127 
avl_node_t
 *
node
 = 
	`AVL_DATA2NODE
(
ﬁdnode
, 
off
);

128 
right
 = 1 - 
À·
;

129 
was_chûd
;

135 i‡(
node
 =
NULL
)

136  (
NULL
);

144 i‡(
node
->
avl_chûd
[
À·
] !
NULL
) {

145 
node
 =Çode->
avl_chûd
[
À·
];

146 
node
->
avl_chûd
[
right
] !
NULL
;

147 
node
 =Çode->
avl_chûd
[
right
])

154 
was_chûd
 = 
	`AVL_XCHILD
(
node
);

155 
node
 = 
	`AVL_XPARENT
(node);

156 i‡(
node
 =
NULL
)

157  (
NULL
);

158 i‡(
was_chûd
 =
right
)

163  (
	`AVL_NODE2DATA
(
node
, 
off
));

164 
	}
}

171 
	$avl_fú°
(
avl_åì_t
 *
åì
)

173 
avl_node_t
 *
node
;

174 
avl_node_t
 *
¥ev
 = 
NULL
;

175 
size_t
 
off
 = 
åì
->
avl_off£t
;

177 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[0])

178 
¥ev
 = 
node
;

180 i‡(
¥ev
 !
NULL
)

181  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

182  (
NULL
);

183 
	}
}

190 
	$avl_œ°
(
avl_åì_t
 *
åì
)

192 
avl_node_t
 *
node
;

193 
avl_node_t
 *
¥ev
 = 
NULL
;

194 
size_t
 
off
 = 
åì
->
avl_off£t
;

196 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;Çodênode->
avl_chûd
[1])

197 
¥ev
 = 
node
;

199 i‡(
¥ev
 !
NULL
)

200  (
	`AVL_NODE2DATA
(
¥ev
, 
off
));

201  (
NULL
);

202 
	}
}

214 
	$avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
)

216 
chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

217 
avl_node_t
 *
node
 = 
	`AVL_INDEX2NODE
(
whîe
);

218 *
d©a
;

219 
size_t
 
off
 = 
åì
->
avl_off£t
;

221 i‡(
node
 =
NULL
) {

222 i‡(
åì
->
avl_roŸ
 !
NULL
)

223 
	`fûebích_log
(
LOG_ERROR
,

225  (
NULL
);

227 
d©a
 = 
	`AVL_NODE2DATA
(
node
, 
off
);

228 i‡(
chûd
 !
dúe˘i⁄
)

229  (
d©a
);

231  (
	`avl_wÆk
(
åì
, 
d©a
, 
dúe˘i⁄
));

232 
	}
}

245 
	$avl_föd
(
avl_åì_t
 *
åì
, *
vÆue
, 
avl_ödex_t
 *
whîe
)

247 
avl_node_t
 *
node
;

248 
avl_node_t
 *
¥ev
 = 
NULL
;

249 
chûd
 = 0;

250 
diff
;

251 
size_t
 
off
 = 
åì
->
avl_off£t
;

253 
node
 = 
åì
->
avl_roŸ
;Çodê!
NULL
;

254 
node
 =Çode->
avl_chûd
[
chûd
]) {

256 
¥ev
 = 
node
;

258 
diff
 = 
åì
->
	`avl_com∑r
(
vÆue
, 
	`AVL_NODE2DATA
(
node
, 
off
));

259 i‡(!((-1 <
diff
) && (diff <= 1))) {

260 
	`fûebích_log
(
LOG_ERROR
, "avl compareÉrror");

261  (
NULL
);

263 i‡(
diff
 == 0) {

264 i‡(
whîe
 !
NULL
)

265 *
whîe
 = 0;

267  (
	`AVL_NODE2DATA
(
node
, 
off
));

269 
chûd
 = 
avl_bÆ™˚2chûd
[1 + 
diff
];

273 i‡(
whîe
 !
NULL
)

274 *
whîe
 = 
	`AVL_MKINDEX
(
¥ev
, 
chûd
);

276  (
NULL
);

277 
	}
}

295 
	$avl_rŸ©i⁄
(
avl_åì_t
 *
åì
, 
avl_node_t
 *
node
, 
bÆ™˚
)

297 
À·
 = !(
bÆ™˚
 < 0);

298 
right
 = 1 - 
À·
;

299 
À·_hóvy
 = 
bÆ™˚
 >> 1;

300 
right_hóvy
 = -
À·_hóvy
;

301 
avl_node_t
 *
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

302 
avl_node_t
 *
chûd
 = 
node
->
avl_chûd
[
À·
];

303 
avl_node_t
 *
¸ight
;

304 
avl_node_t
 *
gchûd
;

305 
avl_node_t
 *
gright
;

306 
avl_node_t
 *
gÀ·
;

307 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

308 
chûd_bÆ
 = 
	`AVL_XBALANCE
(
chûd
);

337 i‡(
chûd_bÆ
 !
right_hóvy
) {

345 
chûd_bÆ
 +
right_hóvy
;

350 
¸ight
 = 
chûd
->
avl_chûd
[
right
];

351 
node
->
avl_chûd
[
À·
] = 
¸ight
;

352 i‡(
¸ight
 !
NULL
) {

353 
	`AVL_SETPARENT
(
¸ight
, 
node
);

354 
	`AVL_SETCHILD
(
¸ight
, 
À·
);

360 
chûd
->
avl_chûd
[
right
] = 
node
;

361 
	`AVL_SETBALANCE
(
node
, -
chûd_bÆ
);

362 
	`AVL_SETCHILD
(
node
, 
right
);

363 
	`AVL_SETPARENT
(
node
, 
chûd
);

368 
	`AVL_SETBALANCE
(
chûd
, 
chûd_bÆ
);

369 
	`AVL_SETCHILD
(
chûd
, 
which_chûd
);

370 
	`AVL_SETPARENT
(
chûd
, 
∑ª¡
);

371 i‡(
∑ª¡
 !
NULL
)

372 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
chûd
;

374 
åì
->
avl_roŸ
 = 
chûd
;

376  (
chûd_bÆ
 == 0);

412 
gchûd
 = 
chûd
->
avl_chûd
[
right
];

413 
gÀ·
 = 
gchûd
->
avl_chûd
[
À·
];

414 
gright
 = 
gchûd
->
avl_chûd
[
right
];

421 
node
->
avl_chûd
[
À·
] = 
gright
;

422 i‡(
gright
 !
NULL
) {

423 
	`AVL_SETPARENT
(
gright
, 
node
);

424 
	`AVL_SETCHILD
(
gright
, 
À·
);

427 
chûd
->
avl_chûd
[
right
] = 
gÀ·
;

428 i‡(
gÀ·
 !
NULL
) {

429 
	`AVL_SETPARENT
(
gÀ·
, 
chûd
);

430 
	`AVL_SETCHILD
(
gÀ·
, 
right
);

440 
bÆ™˚
 = 
	`AVL_XBALANCE
(
gchûd
);

441 
gchûd
->
avl_chûd
[
À·
] = 
chûd
;

442 
	`AVL_SETBALANCE
(
chûd
, (
bÆ™˚
 =
right_hóvy
 ? 
À·_hóvy
 : 0));

443 
	`AVL_SETPARENT
(
chûd
, 
gchûd
);

444 
	`AVL_SETCHILD
(
chûd
, 
À·
);

446 
gchûd
->
avl_chûd
[
right
] = 
node
;

447 
	`AVL_SETBALANCE
(
node
, (
bÆ™˚
 =
À·_hóvy
 ? 
right_hóvy
 : 0));

448 
	`AVL_SETPARENT
(
node
, 
gchûd
);

449 
	`AVL_SETCHILD
(
node
, 
right
);

451 
	`AVL_SETBALANCE
(
gchûd
, 0);

452 
	`AVL_SETPARENT
(
gchûd
, 
∑ª¡
);

453 
	`AVL_SETCHILD
(
gchûd
, 
which_chûd
);

454 i‡(
∑ª¡
 !
NULL
)

455 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
gchûd
;

457 
åì
->
avl_roŸ
 = 
gchûd
;

460 
	}
}

474 
	$avl_ö£π
(
avl_åì_t
 *
åì
, *
√w_d©a
, 
avl_ödex_t
 
whîe
)

476 
avl_node_t
 *
node
;

477 
avl_node_t
 *
∑ª¡
 = 
	`AVL_INDEX2NODE
(
whîe
);

478 
ﬁd_bÆ™˚
;

479 
√w_bÆ™˚
;

480 
which_chûd
 = 
	`AVL_INDEX2CHILD
(
whîe
);

481 
size_t
 
off
 = 
åì
->
avl_off£t
;

483 i‡(
åì
 =
NULL
) {

484 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

487 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

488 i‡(((
uöçå_t
)
√w_d©a
 & 0x7) != 0) {

489 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

494 
node
 = 
	`AVL_DATA2NODE
(
√w_d©a
, 
off
);

499 ++
åì
->
avl_numnodes
;

501 
node
->
avl_chûd
[0] = 
NULL
;

502 
node
->
avl_chûd
[1] = 
NULL
;

504 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

505 
	`AVL_SETBALANCE
(
node
, 0);

506 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

507 i‡(
∑ª¡
 !
NULL
) {

508 i‡(
∑ª¡
->
avl_chûd
[
which_chûd
] !
NULL
)

509 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

512 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

514 i‡(
åì
->
avl_roŸ
 !
NULL
)

515 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

518 
åì
->
avl_roŸ
 = 
node
;

527 
node
 = 
∑ª¡
;

528 i‡(
node
 =
NULL
)

534 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

535 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 + 
avl_chûd2bÆ™˚
[
which_chûd
];

540 i‡(
√w_bÆ™˚
 == 0) {

541 
	`AVL_SETBALANCE
(
node
, 0);

549 i‡(
ﬁd_bÆ™˚
 != 0)

552 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

553 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

554 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

560 (Ë
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
);

561 
	}
}

576 
	$avl_ö£π_hîe
(

577 
avl_åì_t
 *
åì
,

578 *
√w_d©a
,

579 *
hîe
,

580 
dúe˘i⁄
)

582 
avl_node_t
 *
node
;

583 
chûd
 = 
dúe˘i⁄
;

585 i‡((
åì
 =
NULL
Ë|| (
√w_d©a
 =NULLË|| (
hîe
 == NULL) ||

586 !((
dúe˘i⁄
 =
AVL_BEFORE
Ë|| (dúe˘i⁄ =
AVL_AFTER
))) {

587 
	`fûebích_log
(
LOG_ERROR
,

596 
node
 = 
	`AVL_DATA2NODE
(
hîe
, 
åì
->
avl_off£t
);

598 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
) {

599 
node
 =Çode->
avl_chûd
[
chûd
];

600 
chûd
 = 1 - child;

601 
node
->
avl_chûd
[
chûd
] !
NULL
)

602 
node
 =Çode->
avl_chûd
[
chûd
];

605 i‡(
node
->
avl_chûd
[
chûd
] !
NULL
)

606 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "OverwritingÉxistingÖointer");

608 
	`avl_ö£π
(
åì
, 
√w_d©a
, 
	`AVL_MKINDEX
(
node
, 
chûd
));

609 
	}
}

615 
	$avl_add
(
avl_åì_t
 *
åì
, *
√w_node
)

617 
avl_ödex_t
 
whîe
;

622 i‡(
	`avl_föd
(
åì
, 
√w_node
, &
whîe
Ë!
NULL
) {

623 
	`fûebích_log
(
LOG_ERROR
,

627 
	`avl_ö£π
(
åì
, 
√w_node
, 
whîe
);

628 
	}
}

654 
	$avl_ªmove
(
avl_åì_t
 *
åì
, *
d©a
)

656 
avl_node_t
 *
dñëe
;

657 
avl_node_t
 *
∑ª¡
;

658 
avl_node_t
 *
node
;

659 
avl_node_t
 
tmp
;

660 
ﬁd_bÆ™˚
;

661 
√w_bÆ™˚
;

662 
À·
;

663 
right
;

664 
which_chûd
;

665 
size_t
 
off
 = 
åì
->
avl_off£t
;

667 i‡(
åì
 =
NULL
) {

668 
	`fûebích_log
(
LOG_ERROR
, "No Tree Supplied");

672 
dñëe
 = 
	`AVL_DATA2NODE
(
d©a
, 
off
);

684 i‡(
dñëe
->
avl_chûd
[0] !
NULL
 && delete->avl_child[1] != NULL) {

689 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
dñëe
);

690 
À·
 = 
avl_bÆ™˚2chûd
[
ﬁd_bÆ™˚
 + 1];

691 
right
 = 1 - 
À·
;

697 
node
 = 
dñëe
->
avl_chûd
[
À·
];

698 
node
->
avl_chûd
[
right
] !
NULL
;

699 
node
 =Çode->
avl_chûd
[
right
])

706 
tmp
 = *
node
;

708 *
node
 = *
dñëe
;

709 i‡(
node
->
avl_chûd
[
À·
] ==Çode)

710 
node
->
avl_chûd
[
À·
] = &
tmp
;

712 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

713 i‡(
∑ª¡
 !
NULL
)

714 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
node
)] =Çode;

716 
åì
->
avl_roŸ
 = 
node
;

717 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
À·
],Çode);

718 
	`AVL_SETPARENT
(
node
->
avl_chûd
[
right
],Çode);

724 
dñëe
 = &
tmp
;

725 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

726 
∑ª¡
->
avl_chûd
[
	`AVL_XCHILD
(
dñëe
)] = delete;

727 
which_chûd
 = (
dñëe
->
avl_chûd
[1] != 0);

728 i‡(
dñëe
->
avl_chûd
[
which_chûd
] !
NULL
)

729 
	`AVL_SETPARENT
(
dñëe
->
avl_chûd
[
which_chûd
], delete);

737 i‡(
åì
->
avl_numnodes
 == 0) {

738 
	`fûebích_log
(
LOG_ERROR
,

743 --
åì
->
avl_numnodes
;

744 
∑ª¡
 = 
	`AVL_XPARENT
(
dñëe
);

745 
which_chûd
 = 
	`AVL_XCHILD
(
dñëe
);

746 i‡(
dñëe
->
avl_chûd
[0] !
NULL
)

747 
node
 = 
dñëe
->
avl_chûd
[0];

749 
node
 = 
dñëe
->
avl_chûd
[1];

754 i‡(
node
 !
NULL
) {

755 
	`AVL_SETPARENT
(
node
, 
∑ª¡
);

756 
	`AVL_SETCHILD
(
node
, 
which_chûd
);

758 i‡(
∑ª¡
 =
NULL
) {

759 
åì
->
avl_roŸ
 = 
node
;

762 
∑ª¡
->
avl_chûd
[
which_chûd
] = 
node
;

777 
node
 = 
∑ª¡
;

778 
ﬁd_bÆ™˚
 = 
	`AVL_XBALANCE
(
node
);

779 
√w_bÆ™˚
 = 
ﬁd_bÆ™˚
 - 
avl_chûd2bÆ™˚
[
which_chûd
];

780 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

781 
which_chûd
 = 
	`AVL_XCHILD
(
node
);

788 i‡(
ﬁd_bÆ™˚
 == 0) {

789 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

800 i‡(
√w_bÆ™˚
 == 0)

801 
	`AVL_SETBALANCE
(
node
, 
√w_bÆ™˚
);

802 i‡(!
	`avl_rŸ©i⁄
(
åì
, 
node
, 
√w_bÆ™˚
))

804 } 
∑ª¡
 !
NULL
);

805 
	}
}

807 
	#AVL_REINSERT
(
åì
, 
obj
) \

808 
	`avl_ªmove
((
åì
), (
obj
)); \

809 
	`avl_add
((
åì
), (
obj
))

	)

811 
boﬁón_t


812 
	$avl_upd©e_…
(
avl_åì_t
 *
t
, *
obj
)

814 *
√ighb‹
;

816 i‡(!(((
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
)Ë=
NULL
) ||

817 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) <= 0))) {

818 
	`fûebích_log
(
LOG_ERROR
,

820  (
B_FALSE
);

823 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

824 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

825 
	`AVL_REINSERT
(
t
, 
obj
);

826  (
B_TRUE
);

829  (
B_FALSE
);

830 
	}
}

832 
boﬁón_t


833 
	$avl_upd©e_gt
(
avl_åì_t
 *
t
, *
obj
)

835 *
√ighb‹
;

837 i‡(!(((
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
)Ë=
NULL
) ||

838 (
t
->
	`avl_com∑r
(
obj
, 
√ighb‹
) >= 0))) {

839 
	`fûebích_log
(
LOG_ERROR
,

841  (
B_FALSE
);

844 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

845 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

846 
	`AVL_REINSERT
(
t
, 
obj
);

847  (
B_TRUE
);

850  (
B_FALSE
);

851 
	}
}

853 
boﬁón_t


854 
	$avl_upd©e
(
avl_åì_t
 *
t
, *
obj
)

856 *
√ighb‹
;

858 
√ighb‹
 = 
	`AVL_PREV
(
t
, 
obj
);

859 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) < 0)) {

860 
	`AVL_REINSERT
(
t
, 
obj
);

861  (
B_TRUE
);

864 
√ighb‹
 = 
	`AVL_NEXT
(
t
, 
obj
);

865 i‡((
√ighb‹
 !
NULL
Ë&& (
t
->
	`avl_com∑r
(
obj
,Çeighbor) > 0)) {

866 
	`AVL_REINSERT
(
t
, 
obj
);

867  (
B_TRUE
);

870  (
B_FALSE
);

871 
	}
}

877 
	$avl_¸óã
(
avl_åì_t
 *
åì
, (*
com∑r
) (const *, const *),

878 
size_t
 
size
, size_à
off£t
)

880 i‡((
åì
 =
NULL
Ë|| (
com∑r
 =NULLË|| (
size
 == 0) ||

881 (
size
 < (
off£t
 +  (
avl_node_t
)))) {

882 
	`fûebích_log
(
LOG_ERROR
,

887 #i‡
	`deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

888 i‡((
off£t
 & 0x7) != 0) {

889 
	`fûebích_log
(
LOG_ERROR
, "MissalignedÖointerÅoÇew data");

894 
åì
->
avl_com∑r
 = 
com∑r
;

895 
åì
->
avl_roŸ
 = 
NULL
;

896 
åì
->
avl_numnodes
 = 0;

897 
åì
->
avl_size
 = 
size
;

898 
åì
->
avl_off£t
 = 
off£t
;

899 
	}
}

906 
	$avl_de°roy
(
avl_åì_t
 *
åì
)

908 i‡((
åì
 =
NULL
Ë|| (åì->
avl_numnodes
 != 0) ||

909 (
åì
->
avl_roŸ
 !
NULL
))

910 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "avl_tree: TreeÇot destroyed");

911 
	}
}

918 
	$avl_numnodes
(
avl_åì_t
 *
åì
)

920 i‡(
åì
 =
NULL
) {

921 
	`fûebích_log
(
LOG_ERROR
, "avl_numnodes: NullÅreeÖointer");

924  (
åì
->
avl_numnodes
);

925 
	}
}

927 
boﬁón_t


928 
	$avl_is_em±y
(
avl_åì_t
 *
åì
)

930 i‡(
åì
 =
NULL
) {

931 
	`fûebích_log
(
LOG_ERROR
, "avl_is_empty: NullÅreeÖointer");

934  (
åì
->
avl_numnodes
 == 0);

935 
	}
}

937 
	#CHILDBIT
 (1L)

	)

959 
	$avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
)

961 
avl_node_t
 *
node
;

962 
avl_node_t
 *
∑ª¡
;

963 
chûd
;

964 *
fú°
;

965 
size_t
 
off
 = 
åì
->
avl_off£t
;

970 i‡(*
cookõ
 =
NULL
) {

971 
fú°
 = 
	`avl_fú°
(
åì
);

976 i‡(
fú°
 =
NULL
) {

977 *
cookõ
 = (*)
CHILDBIT
;

978  (
NULL
);

981 
node
 = 
	`AVL_DATA2NODE
(
fú°
, 
off
);

982 
∑ª¡
 = 
	`AVL_XPARENT
(
node
);

983 
check_right_side
;

989 
∑ª¡
 = (
avl_node_t
 *)((
uöçå_t
)(*
cookõ
Ë& ~
CHILDBIT
);

990 i‡(
∑ª¡
 =
NULL
) {

991 i‡(
åì
->
avl_roŸ
 !
NULL
) {

992 i‡(
åì
->
avl_numnodes
 != 1) {

993 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

997 
åì
->
avl_roŸ
 = 
NULL
;

998 
åì
->
avl_numnodes
 = 0;

1000  (
NULL
);

1006 
chûd
 = (
uöçå_t
)(*
cookõ
Ë& 
CHILDBIT
;

1007 
∑ª¡
->
avl_chûd
[
chûd
] = 
NULL
;

1008 i‡(
åì
->
avl_numnodes
 <= 1)

1009 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1012 --
åì
->
avl_numnodes
;

1017 i‡(
chûd
 =1 || 
∑ª¡
->
avl_chûd
[1] =
NULL
) {

1018 
node
 = 
∑ª¡
;

1019 
∑ª¡
 = 
	`AVL_XPARENT
(parent);

1020 
d⁄e
;

1026 
node
 = 
∑ª¡
->
avl_chûd
[1];

1027 
node
->
avl_chûd
[0] !
NULL
) {

1028 
∑ª¡
 = 
node
;

1029 
node
 =Çode->
avl_chûd
[0];

1036 
check_right_side
:

1037 i‡(
node
->
avl_chûd
[1] !
NULL
) {

1038 i‡(
	`AVL_XBALANCE
(
node
) != 1)

1039 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1041 
∑ª¡
 = 
node
;

1042 
node
 =Çode->
avl_chûd
[1];

1043 i‡(
node
->
avl_chûd
[0] !
NULL
 ||

1044 
node
->
avl_chûd
[1] !
NULL
)

1045 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1049 i‡(
	`AVL_XBALANCE
(
node
) > 0)

1050 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1054 
d⁄e
:

1055 i‡(
∑ª¡
 =
NULL
) {

1056 *
cookõ
 = (*)
CHILDBIT
;

1057 i‡(
node
 !
åì
->
avl_roŸ
)

1058 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1061 *
cookõ
 = (*)((
uöçå_t
)
∑ª¡
 | 
	`AVL_XCHILD
(
node
));

1064  (
	`AVL_NODE2DATA
(
node
, 
off
));

1065 
	}
}

	@fb_avl.h

27 #i‚def 
_FB_AVL_H


28 
	#_FB_AVL_H


	)

30 
	~"fûebích.h
"

74 #i‡!
deföed
(
_LP64
Ë&& !(
__WORDSIZE
 == 64)

76 
	savl_node
 {

77 
avl_node
 *
	mavl_chûd
[2];

78 
avl_node
 *
	mavl_∑ª¡
;

79 
	mavl_chûd_ödex
;

80 
	mavl_bÆ™˚
;

83 
	#AVL_XPARENT
(
n
Ë(“)->
avl_∑ª¡
)

	)

84 
	#AVL_SETPARENT
(
n
, 
p
Ë(“)->
avl_∑ª¡
 = (p))

	)

86 
	#AVL_XCHILD
(
n
Ë(“)->
avl_chûd_ödex
)

	)

87 
	#AVL_SETCHILD
(
n
, 
c
Ë(“)->
avl_chûd_ödex
 = ()(c))

	)

89 
	#AVL_XBALANCE
(
n
Ë(“)->
avl_bÆ™˚
)

	)

90 
	#AVL_SETBALANCE
(
n
, 
b
Ë(“)->
avl_bÆ™˚
 = ()(b))

	)

105 
	savl_node
 {

106 
avl_node
 *
	mavl_chûd
[2];

107 
uöçå_t
 
	mavl_pcb
;

115 
	#AVL_XPARENT
(
n
Ë((
avl_node
 *)(“)->
avl_pcb
 & ~7))

	)

116 
	#AVL_SETPARENT
(
n
, 
p
) \

117 ((
n
)->
avl_pcb
 = ((“)->avl_pcb & 7Ë| (
uöçå_t
)(
p
)))

	)

122 
	#AVL_XCHILD
(
n
Ë((“)->
avl_pcb
 >> 2Ë& 1)

	)

123 
	#AVL_SETCHILD
(
n
, 
c
) \

124 ((
n
)->
avl_pcb
 = (
uöçå_t
)((“)->avl_pcb & ~4Ë| ((
c
Ë<< 2)))

	)

131 
	#AVL_XBALANCE
(
n
Ë(()((“)->
avl_pcb
 & 3Ë- 1))

	)

132 
	#AVL_SETBALANCE
(
n
, 
b
) \

133 ((
n
)->
avl_pcb
 = (
uöçå_t
)(((“)->avl_pcb & ~3Ë| ((
b
Ë+ 1))))

	)

141 
	#AVL_NODE2DATA
(
n
, 
o
Ë((*)((
uöçå_t
)“Ë- (o)))

	)

142 
	#AVL_DATA2NODE
(
d
, 
o
Ë((
avl_node
 *)((
uöçå_t
)(dË+ (o)))

	)

148 
	#AVL_INDEX2NODE
(
x
Ë((
avl_node_t
 *)((xË& ~1))

	)

149 
	#AVL_INDEX2CHILD
(
x
Ë((xË& 1)

	)

150 
	#AVL_MKINDEX
(
n
, 
c
Ë((
avl_ödex_t
)“Ë| (c))

	)

158 
	savl_åì
 {

159 
avl_node
 *
	mavl_roŸ
;

160 (*
	mavl_com∑r
)(const *, const *);

161 
size_t
 
	mavl_off£t
;

162 
	mavl_numnodes
;

163 
size_t
 
	mavl_size
;

170 *
avl_wÆk
(
avl_åì
 *, *, );

216 
avl_åì
 
	tavl_åì_t
;

221 
avl_node
 
	tavl_node_t
;

227 
uöçå_t
 
	tavl_ödex_t
;

233 
	#AVL_BEFORE
 (0)

	)

234 
	#AVL_AFTER
 (1)

	)

260 
avl_¸óã
(
avl_åì_t
 *
åì
,

261 (*
com∑r
Ë(c⁄° *, c⁄° *), 
size_t
 
size
, size_à
off£t
);

272 *
	`avl_föd
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 *
whîe
);

280 
	`avl_ö£π
(
avl_åì_t
 *
åì
, *
node
, 
avl_ödex_t
 
whîe
);

293 
	`avl_ö£π_hîe
(
avl_åì_t
 *
åì
, *
√w_d©a
, *
hîe
,

294 
dúe˘i⁄
);

302 *
	`avl_fú°
(
avl_åì_t
 *
åì
);

303 *
	`avl_œ°
(
avl_åì_t
 *
åì
);

313 
	#AVL_NEXT
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_AFTER
)

	)

314 
	#AVL_PREV
(
åì
, 
node
Ë
	`avl_wÆk
—ªe,Çode, 
AVL_BEFORE
)

	)

339 *
	`avl_√¨e°
(
avl_åì_t
 *
åì
, 
avl_ödex_t
 
whîe
, 
dúe˘i⁄
);

349 
	`avl_add
(
avl_åì_t
 *
åì
, *
node
);

357 
	`avl_ªmove
(
avl_åì_t
 *
åì
, *
node
);

366 
boﬁón_t
 
	`avl_upd©e
(
avl_åì_t
 *, *);

367 
boﬁón_t
 
	`avl_upd©e_…
(
avl_åì_t
 *, *);

368 
boﬁón_t
 
	`avl_upd©e_gt
(
avl_åì_t
 *, *);

373 
	`avl_numnodes
(
avl_åì_t
 *
åì
);

378 
boﬁón_t
 
	`avl_is_em±y
(
avl_åì_t
 *
åì
);

401 *
	`avl_de°roy_nodes
(
avl_åì_t
 *
åì
, **
cookõ
);

409 
	`avl_de°roy
(
avl_åì_t
 *
åì
);

	@fb_cvar.c

9 
	~<sys/ty≥s.h
>

10 
	~<dúít.h
>

11 
	~<limôs.h
>

12 
	~<dlf˙.h
>

14 
	~"ùc.h
"

15 
	~"fb_cv¨.h
"

18 
Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
);

19 *
gëty≥
(c⁄° *
fûíame
);

20 
cv¨_libøry_t
 *
öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
);

21 *
lﬂd_libøry
(c⁄° *
fûíame
);

22 
‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
);

23 
öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
);

26 
cv¨_libøry_t
 **
	gcv¨_libørõs
;

31 
cv¨_t
 *

32 
	$cv¨_Æloc
()

34 
cv¨_t
 *
cv¨
;

36 i‡((
cv¨
 = (
cv¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_CVAR
)Ë=
NULL
) {

37 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for custom variable");

38  (
NULL
);

42 
cv¨
->
√xt
 = 
fûebích_shm
->
shm_cv¨_li°
;

43 
fûebích_shm
->
shm_cv¨_li°
 = 
cv¨
;

45  (
cv¨
);

46 
	}
}

53 
	$öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
)

55 
DIR
 *
libdú
 = 
NULL
;

56 
dúít
 *dirent;

57 *
fûíame
 = 
NULL
;

58 
ªt
 = -1;

59 
dú∑th_Àn
 = 
	`°æí
(
dú∑th
);

60 
dúíéí
;

62 
fûíame
 = (*Ë
	`mÆloc
(
dú∑th_Àn
 + 1 + 
NAME_MAX
 + 1);

63 i‡(!
fûíame
) {

64 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

65 
out
;

68 
	`°r˝y
(
fûíame
, 
dú∑th
);

69 
fûíame
[
dú∑th_Àn
] = '/';

71 
fûíame
[
dú∑th_Àn
 + 
NAME_MAX
] = '\0';

73 
libdú
 = 
	`›ídú
(
dú∑th
);

74 i‡(!
libdú
) {

75 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo open cvar directory");

76 
ªt
 = 0;

77 
out
;

80 (
dúít
 = 
	`ªaddú
(
libdú
)Ë!
NULL
) {

81 i‡(!
	`°rcmp
(".", 
dúít
->
d_«me
) || !strcmp("..", dirent->d_name))

84 
dúíéí
 = 
	`°æí
(
dúít
->
d_«me
);

85 i‡(
	`°rcmp
(".so", 
dúít
->
d_«me
 + 
dúíéí
 - 3))

88 
	`°∫˝y
(
fûíame
 + 
dú∑th_Àn
 + 1, 
dúít
->
d_«me
, 
NAME_MAX
);

89 
ªt
 = 
	`Æloc_cv¨_lib_öfo
(
fûíame
);

90 i‡(
ªt
)

91 
out
;

94 
ªt
 = 0;

96 
out
:

97 i‡(
fûíame
)

98 
	`‰ì
(
fûíame
);

100 i‡(
libdú
)

101 
	`˛o£dú
(
libdú
);

103  
ªt
;

104 
	}
}

110 
	$Æloc_cv¨_lib_öfo
(c⁄° *
fûíame
)

112 
ªt
 = -1;

113 
cv¨_libøry_öfo_t
 *
˛i
 = 
NULL
;

114 
cv¨_libøry_öfo_t
 *
t
;

116 
˛i
 = (
cv¨_libøry_öfo_t
 *Ë
	`ùc_mÆloc
(
FILEBENCH_CVAR_LIB_INFO
);

117 i‡(!
˛i
)

118 
out
;

120 
˛i
->
fûíame
 = 
	`ùc_°øŒoc
(filename);

121 i‡(!
˛i
->
fûíame
)

122 
out
;

124 
˛i
->
ty≥
 = 
	`ùc_°øŒoc
(
	`gëty≥
(
fûíame
));

125 i‡(!
˛i
->
ty≥
)

126 
out
;

128 
˛i
->
√xt
 = 
NULL
;

130 i‡(
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

131 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å->
√xt
 !
NULL
;

132 
t
 =Å->
√xt
);

134 
˛i
->
ödex
 = 
t
->index + 1;

135 
t
->
√xt
 = 
˛i
;

137 
˛i
->
ödex
 = 0;

138 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
 = 
˛i
;

141 
ªt
 = 0;

143 
out
:

144 i‡(
ªt
 && 
˛i
) {

146 
	`ùc_‰ì
(
FILEBENCH_CVAR_LIB_INFO
, (*Ë
˛i
);

149  
ªt
;

150 
	}
}

156 *
	$gëty≥
(c⁄° *
fûíame
)

158 
lib¥efix
[] = "lib";

159 c⁄° *
lib«me
;

160 *
ty≥
;

161 
ty≥_Àn
;

162 c⁄° *
t
;

164 
lib«me
 = 
	`°ºchr
(
fûíame
, '/');

165 i‡(!
lib«me
)

166 
lib«me
 = 
fûíame
;

168 
lib«me
++;

170 i‡(!
lib«me
) {

171 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

172  
NULL
;

178 i‡(!
	`°∫cmp
(
lib¥efix
, 
lib«me
, (libprefix) - 1))

179 
lib«me
 +(Ë* ((
lib¥efix
) - 1);

181 i‡(!
lib«me
) {

182 
	`fûebích_log
(
LOG_ERROR
, "Malformed cvarÜibrary filename");

183  
NULL
;

187 
ty≥_Àn
 = 0;

188 
t
 = 
lib«me
; *t != '\0' && *t != '.';Å++)

189 
ty≥_Àn
++;

191 
ty≥
 = (*Ë
	`mÆloc
(
ty≥_Àn
 + 1);

192 i‡(!
ty≥
) {

193 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

194  
NULL
;

196 
	`°∫˝y
(
ty≥
, 
lib«me
, 
ty≥_Àn
);

197 
ty≥
[
ty≥_Àn
] = '\0';

199  
ty≥
;

200 
	}
}

207 
	$öô_cv¨_libørõs
()

209 
cou¡
;

210 
ªt
 = -1;

211 
i
;

213 
cv¨_libøry_öfo_t
 *
t
;

215 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

220 
cou¡
 = 0;

221 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;

222 
t
 =Å->
√xt
)

223 
cou¡
++;

225 
cv¨_libørõs
 = (
cv¨_libøry_t
 **)

226 
	`mÆloc
((
cv¨_libøry_t
 *Ë* 
cou¡
);

228 i‡(!
cv¨_libørõs
) {

229 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

230 
out
;

233 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
, 
i
 = 0;Å !
NULL
;

234 
t
 =Å->
√xt
, 
i
++) {

235 i‡((
cv¨_libørõs
[
i
] = 
	`öô_cv¨_libøry
(
t
)Ë=
NULL
) {

236 
out
;

240 
ªt
 = 0;

242 
out
:

243  
ªt
;

244 
	}
}

246 
cv¨_libøry_t


247 *
	$öô_cv¨_libøry
(
cv¨_libøry_öfo_t
 *
cv¨_lib_öfo
)

249 
cv¨_libøry_t
 *
c
 = 
NULL
;

250 
ªt
;

252 
c
 = (
cv¨_libøry_t
 *Ë
	`mÆloc
((cvar_library_t));

253 i‡(!
c
) {

254 
	`fûebích_log
(
LOG_ERROR
, "Out of memory");

255 
out
;

258 
c
->
cv¨_lib_öfo
 = cvar_lib_info;

259 
c
->
lib_h™dÀ
 = 
	`lﬂd_libøry
(
cv¨_lib_öfo
->
fûíame
);

260 i‡(!
c
->
lib_h™dÀ
)

261 
˛ónup
;

263 
ªt
 = 
	`öô_cv¨_libøry_›s
(
c
);

264 i‡(
ªt
)

265 
˛ónup
;

267 i‡(
c
->
cv¨_›
.
cv¨_moduÀ_öô
) {

268 
ªt
 = 
c
->
cv¨_›
.
	`cv¨_moduÀ_öô
();

269 i‡(
ªt
) {

270 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo initialize custom variable ofÅype"

272 
cv¨_lib_öfo
->
ty≥
, 
ªt
);

273 
˛ónup
;

277 
out
:

278  
c
;

280 
˛ónup
:

281 i‡(
c
) {

282 
	`‰ì_cv¨_libøry
(
c
);

283 
	`‰ì
(
c
);

284 
c
 = 
NULL
;

286 
out
;

287 
	}
}

290 *
	$lﬂd_libøry
(c⁄° *
fûíame
)

292 *
lib_h™dÀ
 = 
	`dl›í
(
fûíame
, 
RTLD_LOCAL
 | 
RTLD_NOW
);

293 i‡(!
lib_h™dÀ
)

294 
	`fûebích_log
(
LOG_ERROR
, "UnableÅoÜoadÜibrary %s: %s",

295 
fûíame
, 
	`dÀº‹
());

297  
lib_h™dÀ
;

298 
	}
}

301 
	$‰ì_cv¨_libøry
(
cv¨_libøry_t
 *
c
)

303 i‡(
c
) {

304 i‡(
c
->
lib_h™dÀ
) {

305 
	`dl˛o£
(
c
->
lib_h™dÀ
);

308 
	}
}

311 
	$öô_cv¨_libøry_›s
(
cv¨_libøry_t
 *
c
)

313 
ªt
 = -1;

315 
c
->
cv¨_›
.
cv¨_moduÀ_öô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_INIT
);

317 
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_ALLOC_HANDLE
);

318 i‡(!
c
->
cv¨_›
.
cv¨_Æloc_h™dÀ
) {

319 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_ALLOC_HANDLE


320 ": %s.", 
	`dÀº‹
());

321 
out
;

324 
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
,

325 
FB_CVAR_REVALIDATE_HANDLE
);

326 i‡(!
c
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

327 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_REVALIDATE_HANDLE


328 ": %s", 
	`dÀº‹
());

331 
c
->
cv¨_›
.
cv¨_√xt_vÆue
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_NEXT_VALUE
);

332 i‡(!
c
->
cv¨_›
.
cv¨_√xt_vÆue
) {

333 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_NEXT_VALUE


334 ": %s.", 
	`dÀº‹
());

335 
out
;

338 
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_FREE_HANDLE
);

339 i‡(!
c
->
cv¨_›
.
cv¨_‰ì_h™dÀ
) {

340 
	`fûebích_log
(
LOG_ERROR
, "U«bÀÅÿföd " 
FB_CVAR_FREE_HANDLE


341 ": %s.", 
	`dÀº‹
());

342 
out
;

345 
c
->
cv¨_›
.
cv¨_moduÀ_exô
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_MODULE_EXIT
);

347 
c
->
cv¨_›
.
cv¨_ußge
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_USAGE
);

349 
c
->
cv¨_›
.
cv¨_vîsi⁄
 = 
	`dlsym
(c->
lib_h™dÀ
, 
FB_CVAR_VERSION
);

351 
ªt
 = 0;

353 
out
:

354  
ªt
;

355 
	}
}

358 
	$öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
)

360 
ªt
 = -1;

361 
cv¨_libøry_t
 *
cv¨_lib
;

362 
cv¨_libøry_öfo_t
 *
t
;

364 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

365 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

369 i‡(!
t
) {

370 
	`fûebích_log
(
LOG_ERROR
, "Undeföed cu°om v¨übÀ %s", 
ty≥
);

371 
out
;

374 
cv¨
->
cv¨_lib_öfo
 = 
t
;

376 
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

377 
cv¨
->
cv¨_h™dÀ
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_Æloc_h™dÀ
(
∑ømëîs
,

378 
ùc_cv¨_hó∑Œoc
, 
ùc_cv¨_hóp‰ì
);

379 i‡(!
cv¨
->
cv¨_h™dÀ
)

380 
out
;

382 
ªt
 = 0;

384 
out
:

385  
ªt
;

386 
	}
}

389 
	$gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
)

391 
ªt
;

392 
vÆue
 = 0.0;

393 
fböt_t
 
round
 = 
cv¨
->round;

395 
	`ùc_muãx_lock
(&
cv¨
->
cv¨_lock
);

396 
cv¨_libøry_t
 *
cv¨_lib
 = 
cv¨_libørõs
[
cv¨
->
cv¨_lib_öfo
->
ödex
];

397 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_√xt_vÆue
(
cv¨
->
cv¨_h™dÀ
, &
vÆue
);

398 
	`ùc_muãx_u∆ock
(&
cv¨
->
cv¨_lock
);

400 i‡(
ªt
) {

401 
	`fûebích_log
(
LOG_ERROR
, "UnableÅo getÇext_value from custom variable"

402 " o‡ty≥ %s", 
cv¨
->
cv¨_lib_öfo
->
ty≥
);

403 
	`fûebích_shutdown
(1);

406 i‡(
round
) {

407 
fböt_t
 
num
, 
lowî
, 
uµî
;

409 
num
 = (
fböt_t
Ë
vÆue
;

410 
lowî
 = 
num
 - (num % 
round
);

411 
uµî
 = 
lowî
 + 
round
;

413 
vÆue
 = (
num
 - 
lowî
Ë> (
uµî
 -Çum) ? upper :Üower;

416 i‡(
vÆue
 < 
cv¨
->
mö
)

417 
vÆue
 = 
cv¨
->
mö
;

418 i‡(
vÆue
 > 
cv¨
->
max
)

419 
vÆue
 = 
cv¨
->
max
;

421  
vÆue
;

422 
	}
}

428 
	$ªvÆid©e_cv¨_h™dÀs
()

430 
cv¨_t
 *
t
;

431 
cv¨_libøry_t
 *
cv¨_lib
;

432 
ªt
;

434 i‡(!
fûebích_shm
->
shm_cv¨_li°
)

437 
t
 = 
fûebích_shm
->
shm_cv¨_li°
;Å !
NULL
;Å =Å->
√xt
) {

438 
cv¨_lib
 = 
cv¨_libørõs
[
t
->
cv¨_lib_öfo
->
ödex
];

439 i‡(
cv¨_lib
->
cv¨_›
.
cv¨_ªvÆid©e_h™dÀ
) {

440 
	`ùc_muãx_lock
(&
t
->
cv¨_lock
);

441 
ªt
 = 
cv¨_lib
->
cv¨_›
.
	`cv¨_ªvÆid©e_h™dÀ
(
t
->
cv¨_h™dÀ
);

442 
	`ùc_muãx_u∆ock
(&
t
->
cv¨_lock
);

444 i‡(
ªt
) {

445 
	`fûebích_log
(
LOG_ERROR
, "Revalidation failed for cvar_handle "

446 "o‡ty≥ %†wôhÉº‹ codê%d", 
t
->
cv¨_lib_öfo
->
ty≥
,

447 
ªt
);

448  
ªt
;

454 
	}
}

	@fb_cvar.h

9 #i‚de‡
_FB_CVAR_H


10 
	#_FB_CVAR_H


	)

12 
	~<°döt.h
>

13 
	~<sys/ty≥s.h
>

16 
	#FB_CVAR_MODULE_INIT
 "cv¨_moduÀ_öô"

	)

17 
	#FB_CVAR_ALLOC_HANDLE
 "cv¨_Æloc_h™dÀ"

	)

18 
	#FB_CVAR_REVALIDATE_HANDLE
 "cv¨_ªvÆid©e_h™dÀ"

	)

19 
	#FB_CVAR_NEXT_VALUE
 "cv¨_√xt_vÆue"

	)

20 
	#FB_CVAR_FREE_HANDLE
 "cv¨_‰ì_h™dÀ"

	)

21 
	#FB_CVAR_MODULE_EXIT
 "cv¨_moduÀ_exô"

	)

22 
	#FB_CVAR_USAGE
 "cv¨_ußge"

	)

23 
	#FB_CVAR_VERSION
 "cv¨_vîsi⁄"

	)

27 
	scv¨_libøry_öfo
 {

28 *
	mfûíame
;

31 *
	mty≥
;

34 
	mödex
;

35 
cv¨_libøry_öfo
 *
	m√xt
;

36 } 
	tcv¨_libøry_öfo_t
;

40 
	scv¨
 {

43 
±hªad_muãx_t
 
	mcv¨_lock
;

45 *
	mcv¨_h™dÀ
;

46 
	mmö
;

47 
	mmax
;

48 
uöt64_t
 
	mround
;

49 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

50 
cv¨
 *
	m√xt
;

51 } 
	tcv¨_t
;

55 
	scv¨_›î©i⁄s
 {

56 (*
	mcv¨_moduÀ_öô
)();

57 *(*
	mcv¨_Æloc_h™dÀ
)(c⁄° *
	mcv¨_∑ømëîs
,

58 *(*
	mcv¨_mÆloc
)(
size_t
 
	msize
), (*
	mcv¨_‰ì
)(*
	m±r
));

59 (*
	mcv¨_ªvÆid©e_h™dÀ
)(*
	mcv¨_h™dÀ
);

60 (*
	mcv¨_√xt_vÆue
)(*
	mcv¨_h™dÀ
, *
	mvÆue
);

61 (*
	mcv¨_‰ì_h™dÀ
)(*
	mcv¨_h™dÀ
, (*
	mcv¨_‰ì
)(*
	m±r
));

62 (*
	mcv¨_moduÀ_exô
)();

63 c⁄° *(*
	mcv¨_ußge
)();

64 c⁄° *(*
	mcv¨_vîsi⁄
)();

65 } 
	tcv¨_›î©i⁄s_t
;

70 
	scv¨_libøry
 {

71 
cv¨_libøry_öfo_t
 *
	mcv¨_lib_öfo
;

72 *
	mlib_h™dÀ
;

73 
cv¨_›î©i⁄s_t
 
	mcv¨_›
;

74 } 
	tcv¨_libøry_t
;

77 
cv¨_libøry_t
 **
cv¨_libørõs
;

79 
cv¨_t
 * 
cv¨_Æloc
();

80 
öô_cv¨_libøry_öfo
(c⁄° *
dú∑th
);

81 
öô_cv¨_libørõs
();

82 
öô_cv¨_h™dÀ
(
cv¨_t
 *
cv¨
, c⁄° *
ty≥
, c⁄° *
∑ømëîs
);

83 
gë_cv¨_vÆue
(
cv¨_t
 *
cv¨
);

84 
ªvÆid©e_cv¨_h™dÀs
();

	@fb_localfs.c

28 
	~"c⁄fig.h
"

29 
	~"fûebích.h
"

30 
	~"Êow›.h
"

31 
	~"thªadÊow.h
"

33 
	~<f˙é.h
>

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 
	~<uni°d.h
>

37 
	~<libgí.h
>

38 
	~<sys/mm™.h
>

39 
	~<sys/°©.h
>

40 
	~<sys/ty≥s.h
>

41 
	~<sys/∑øm.h
>

42 
	~<sys/ªsour˚.h
>

43 
	~<°rögs.h
>

45 
	~"fûebích.h
"

46 
	~"f•lug.h
"

48 #ifde‡
HAVE_AIO


49 
	~<aio.h
>

59 
fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
);

60 
fb_lfs_›í
(
fb_fdesc_t
 *, *, , );

61 
fb_lfs_¥ód
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

62 
fb_lfs_ªad
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

63 
fb_lfs_pwrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
, 
off64_t
);

64 
fb_lfs_wrôe
(
fb_fdesc_t
 *, 
ˇddr_t
, 
fböt_t
);

65 
fb_lfs_l£ek
(
fb_fdesc_t
 *, 
off64_t
, );

66 
fb_lfs_åunˇã
(
fb_fdesc_t
 *, 
off64_t
);

67 
fb_lfs_ª«me
(const *, const *);

68 
fb_lfs_˛o£
(
fb_fdesc_t
 *);

69 
fb_lfs_lök
(const *, const *);

70 
fb_lfs_symlök
(const *, const *);

71 
fb_lfs_u∆ök
(*);

72 
ssize_t
 
fb_lfs_ªadlök
(c⁄° *, *, 
size_t
);

73 
fb_lfs_mkdú
(*, );

74 
fb_lfs_rmdú
(*);

75 
DIR
 *
fb_lfs_›ídú
(*);

76 
dúít
 *
fb_lfs_ªaddú
(
DIR
 *);

77 
fb_lfs_˛o£dú
(
DIR
 *);

78 
fb_lfs_fsync
(
fb_fdesc_t
 *);

79 
fb_lfs_°©
(*, 
°©64
 *);

80 
fb_lfs_f°©
(
fb_fdesc_t
 *, 
°©64
 *);

81 
fb_lfs_ac˚ss
(const *, );

82 
fb_lfs_ªcur_rm
(*);

84 
f•lug_func_t
 
	gfb_lfs_funcs
 =

87 
fb_lfs_‰ìmem
,

88 
fb_lfs_›í
,

89 
fb_lfs_¥ód
,

90 
fb_lfs_ªad
,

91 
fb_lfs_pwrôe
,

92 
fb_lfs_wrôe
,

93 
fb_lfs_l£ek
,

94 
fb_lfs_åunˇã
,

95 
fb_lfs_ª«me
,

96 
fb_lfs_˛o£
,

97 
fb_lfs_lök
,

98 
fb_lfs_symlök
,

99 
fb_lfs_u∆ök
,

100 
fb_lfs_ªadlök
,

101 
fb_lfs_mkdú
,

102 
fb_lfs_rmdú
,

103 
fb_lfs_›ídú
,

104 
fb_lfs_ªaddú
,

105 
fb_lfs_˛o£dú
,

106 
fb_lfs_fsync
,

107 
fb_lfs_°©
,

108 
fb_lfs_f°©
,

109 
fb_lfs_ac˚ss
,

110 
fb_lfs_ªcur_rm


113 #ifde‡
HAVE_AIO


118 
fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

119 
fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

121 
Êow›_¥Ÿo_t
 
	gfb_lfsÊow_funcs
[] = {

122 {
FLOW_TYPE_AIO
, 
FLOW_ATTR_WRITE
, "aiowrôe", 
Êow›_öô_gíîic
,

123 
fb_lfsÊow_aiowrôe
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_AIO
, 0, "aiowaô", 
Êow›_öô_gíîic
,

125 
fb_lfsÊow_aiowaô
, 
Êow›_de°ru˘_gíîic
}

136 
	$fb_lfs_funcvecöô
()

138 
fs_fun˘i⁄s_vec
 = &
fb_lfs_funcs
;

139 
	}
}

146 
	$fb_lfs_√wÊow›s
()

148 #ifde‡
HAVE_AIO


149 
n›s
;

150 
n›s
 =  (
fb_lfsÊow_funcs
Ë/  (
Êow›_¥Ÿo_t
);

151 
	`Êow›_add_‰om_¥Ÿo
(
fb_lfsÊow_funcs
, 
n›s
);

153 
	}
}

162 
	$fb_lfs_‰ìmem
(
fb_fdesc_t
 *
fd
, 
off64_t
 
size
)

164 
off64_t
 
À·
;

165 
ªt
 = 0;

167 
À·
 = 
size
;Üe· > 0;Üe· -
MMAP_SIZE
) {

168 
off64_t
 
thism≠size
;

169 
ˇddr_t
 
addr
;

171 
thism≠size
 = 
	`MIN
(
MMAP_SIZE
, 
À·
);

172 
addr
 = 
	`mm≠64
(0, 
thism≠size
, 
PROT_READ
|
PROT_WRITE
,

173 
MAP_SHARED
, 
fd
->
fd_num
, 
size
 - 
À·
);

174 
ªt
 +
	`msync
(
addr
, 
thism≠size
, 
MS_INVALIDATE
);

175 (Ë
	`munm≠
(
addr
, 
thism≠size
);

177  (
ªt
);

178 
	}
}

184 
	$fb_lfs_¥ód
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
fûeoff£t
)

186  (
	`¥ód64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
fûeoff£t
));

187 
	}
}

193 
	$fb_lfs_ªad
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

195  (
	`ªad
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

196 
	}
}

198 #ifde‡
HAVE_AIO


216 
aiﬁi°_t
 *

217 
	$aio_Æloˇã
(
Êow›_t
 *
Êow›
)

219 
aiﬁi°_t
 *
aiﬁi°
;

221 i‡((
aiﬁi°
 = 
	`mÆloc
( (
aiﬁi°_t
))Ë=
NULL
) {

222 
	`fûebích_log
(
LOG_ERROR
, "mallocáiolist failed");

223 
	`fûebích_shutdown
(1);

226 
	`bzîo
(
aiﬁi°
, (*aiolist));

229 i‡(
Êow›
->
fo_thªad
->
tf_aiﬁi°
 =
NULL
) {

230 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

231 
aiﬁi°
->
Æ_√xt
 = 
NULL
;

233 
aiﬁi°
->
Æ_√xt
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

234 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
aiﬁi°
;

236  (
aiﬁi°
);

237 
	}
}

246 
	$aio_dóŒoˇã
(
Êow›_t
 *
Êow›
, 
aiocb64
 *
aiocb
)

248 
aiﬁi°_t
 *
aiﬁi°
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

249 
aiﬁi°_t
 *
¥evious
 = 
NULL
;

250 
aiﬁi°_t
 *
m©ch
 = 
NULL
;

252 i‡(
aiocb
 =
NULL
) {

253 
	`fûebích_log
(
LOG_ERROR
, "nulláiocb deallocate");

254  (
FILEBENCH_OK
);

257 
aiﬁi°
) {

258 i‡(
aiocb
 =&(
aiﬁi°
->
Æ_aiocb
)) {

259 
m©ch
 = 
aiﬁi°
;

262 
¥evious
 = 
aiﬁi°
;

263 
aiﬁi°
 =áiﬁi°->
Æ_√xt
;

266 i‡(
m©ch
 =
NULL
)

267  (
FILEBENCH_ERROR
);

270 i‡(
¥evious
)

271 
¥evious
->
Æ_√xt
 = 
m©ch
->al_next;

273 
Êow›
->
fo_thªad
->
tf_aiﬁi°
 = 
m©ch
->
Æ_√xt
;

275  (
FILEBENCH_OK
);

276 
	}
}

290 
	$fb_lfsÊow_aiowrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

292 
ˇddr_t
 
iobuf
;

293 
fböt_t
 
wss
;

294 
fböt_t
 
iosize
;

295 
fb_fdesc_t
 *
fdesc
;

296 
ªt
;

298 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

300 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

301 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

302  (
ªt
);

304 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

305 
uöt64_t
 
fûeoff£t
;

306 
aiocb64
 *
aiocb
;

307 
aiﬁi°_t
 *
aiﬁi°
;

309 i‡(
wss
 < 
iosize
) {

310 
	`fûebích_log
(
LOG_ERROR
,

312 
Êow›
->
fo_«me
);

313  (
FILEBENCH_ERROR
);

316 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

318 
aiﬁi°
 = 
	`aio_Æloˇã
(
Êow›
);

319 
aiﬁi°
->
Æ_ty≥
 = 
AL_WRITE
;

320 
aiocb
 = &
aiﬁi°
->
Æ_aiocb
;

322 
aiocb
->
aio_fûdes
 = 
fdesc
->
fd_num
;

323 
aiocb
->
aio_buf
 = 
iobuf
;

324 
aiocb
->
aio_nbyãs
 = (
size_t
)
iosize
;

325 
aiocb
->
aio_off£t
 = (
off64_t
)
fûeoff£t
;

326 
aiocb
->
aio_ªq¥io
 = 0;

328 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

330 
fdesc
->
fd_num
, (
u_l⁄gl⁄g_t
)
iosize
,

331 (
u_l⁄gl⁄g_t
)
fûeoff£t
);

333 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

334 i‡(
	`aio_wrôe64
(
aiocb
) < 0) {

335 
	`fûebích_log
(
LOG_ERROR
, "aiowrite failed: %s",

336 
	`°ªº‹
(
î∫o
));

337 
	`fûebích_shutdown
(1);

339 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

341  (
FILEBENCH_ERROR
);

344  (
FILEBENCH_OK
);

345 
	}
}

349 
	#MAXREAP
 4096

	)

360 
	$fb_lfsÊow_aiowaô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

362 
aiocb64
 **
w‹kli°
;

363 
aiﬁi°_t
 *
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

364 
uncom∂ëed
 = 0;

365 #ifde‡
HAVE_AIOWAITN


366 
i
;

369 
w‹kli°
 = 
	`ˇŒoc
(
MAXREAP
,  (
aiocb64
 *));

372 
aio
) {

373 
uncom∂ëed
++;

374 
aio
 =áio->
Æ_√xt
;

378 
uöt_t
 
ncom∂ëed
 = 0;

379 
uöt_t
 
todo
;

380 
ö¥ogªss
;

381 #ifde‡
HAVE_AIOWAITN


382 
time•ec
 
timeout
;

385 
timeout
.
tv_£c
 = 1;

386 
timeout
.
tv_n£c
 = 0;

389 i‡(
uncom∂ëed
 > 
MAXREAP
)

390 
todo
 = 
MAXREAP
;

392 
todo
 = 
uncom∂ëed
 / 2;

394 i‡(
todo
 == 0)

395 
todo
 = 1;

397 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

399 #ifde‡
HAVE_AIOWAITN


400 i‡(((
	`aio_waôn64
((
aiocb64
 **)
w‹kli°
,

401 
MAXREAP
, &
todo
, &
timeout
)) == -1) &&

402 
î∫o
 && (î∫ÿ!
ETIME
)) {

403 
	`fûebích_log
(
LOG_ERROR
,

406 
	`°ªº‹
(
î∫o
), 
uncom∂ëed
, 
todo
);

409 
ncom∂ëed
 = 
todo
;

411 
ö¥ogªss
 = 0;

412 
i
 = 0; i < 
ncom∂ëed
; i++) {

413 i‡((
	`aio_ªtu∫64
(
w‹kli°
[
i
]) == -1) &&

414 (
î∫o
 =
EINPROGRESS
)) {

415 
ö¥ogªss
++;

418 i‡(
	`aio_dóŒoˇã
(
Êow›
, 
w‹kli°
[
i
])

419 =
FILEBENCH_ERROR
) {

420 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

422 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

423  (
FILEBENCH_ERROR
);

427 
uncom∂ëed
 -
ncom∂ëed
;

428 
uncom∂ëed
 +
ö¥ogªss
;

432 
ncom∂ëed
 = 0, 
ö¥ogªss
 = 0,

433 
aio
 = 
Êow›
->
fo_thªad
->
tf_aiﬁi°
;

434 
ncom∂ëed
 < 
todo
 && 
aio
 !
NULL
;áiÿaio->
Æ_√xt
) {

435 
ªsu…
 = 
	`aio_îr‹64
(&
aio
->
Æ_aiocb
);

437 i‡(
ªsu…
 =
EINPROGRESS
) {

438 
ö¥ogªss
++;

442 i‡((
	`aio_ªtu∫64
(&
aio
->
Æ_aiocb
Ë=-1Ë|| 
ªsu…
) {

443 
	`fûebích_log
(
LOG_ERROR
, "aio failed: %s",

444 
	`°ªº‹
(
ªsu…
));

448 
ncom∂ëed
++;

450 i‡(
	`aio_dóŒoˇã
(
Êow›
, &
aio
->
Æ_aiocb
) < 0) {

451 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotÑemove "

453 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

454  (
FILEBENCH_ERROR
);

458 
uncom∂ëed
 -
ncom∂ëed
;

461 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

463 
ncom∂ëed
, 
uncom∂ëed
, 
ö¥ogªss
);

465 } 
uncom∂ëed
 > 
MAXREAP
);

467 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

469 
	`‰ì
(
w‹kli°
);

471  (
FILEBENCH_OK
);

472 
	}
}

483 
	$fb_lfs_›í
(
fb_fdesc_t
 *
fd
, *
∑th
, 
Êags
, 
≥rms
)

485 i‡((
fd
->
fd_num
 = 
	`›í64
(
∑th
, 
Êags
, 
≥rms
)) < 0)

486  (
FILEBENCH_ERROR
);

488  (
FILEBENCH_OK
);

489 
	}
}

495 
	$fb_lfs_u∆ök
(*
∑th
)

497  (
	`u∆ök
(
∑th
));

498 
	}
}

503 
ssize_t


504 
	$fb_lfs_ªadlök
(c⁄° *
∑th
, *
buf
, 
size_t
 
buf_size
)

506  (
	`ªadlök
(
∑th
, 
buf
, 
buf_size
));

507 
	}
}

513 
	$fb_lfs_fsync
(
fb_fdesc_t
 *
fd
)

515  (
	`fsync
(
fd
->
fd_num
));

516 
	}
}

522 
	$fb_lfs_l£ek
(
fb_fdesc_t
 *
fd
, 
off64_t
 
off£t
, 
whí˚
)

524  (
	`l£ek64
(
fd
->
fd_num
, 
off£t
, 
whí˚
));

525 
	}
}

531 
	$fb_lfs_ª«me
(c⁄° *
ﬁd
, c⁄° *
√w
)

533  (
	`ª«me
(
ﬁd
, 
√w
));

534 
	}
}

541 
	$fb_lfs_˛o£
(
fb_fdesc_t
 *
fd
)

543  (
	`˛o£
(
fd
->
fd_num
));

544 
	}
}

550 
	$fb_lfs_mkdú
(*
∑th
, 
≥rm
)

552  (
	`mkdú
(
∑th
, 
≥rm
));

553 
	}
}

559 
	$fb_lfs_rmdú
(*
∑th
)

561  (
	`rmdú
(
∑th
));

562 
	}
}

569 
	$fb_lfs_ªcur_rm
(*
∑th
)

571 
cmd
[
MAXPATHLEN
];

573 (Ë
	`¢¥ötf
(
cmd
,  (cmd), "rm -r‡%s", 
∑th
);

576 i‡(
	`sy°em
(
cmd
));

578 
	}
}

584 
DIR
 *

585 
	$fb_lfs_›ídú
(*
∑th
)

587  (
	`›ídú
(
∑th
));

588 
	}
}

594 
dúít
 *

595 
	$fb_lfs_ªaddú
(
DIR
 *
dúp
)

597  (
	`ªaddú
(
dúp
));

598 
	}
}

604 
	$fb_lfs_˛o£dú
(
DIR
 *
dúp
)

606  (
	`˛o£dú
(
dúp
));

607 
	}
}

613 
	$fb_lfs_f°©
(
fb_fdesc_t
 *
fd
, 
°©64
 *
°©buÂ
)

615  (
	`f°©64
(
fd
->
fd_num
, 
°©buÂ
));

616 
	}
}

622 
	$fb_lfs_°©
(*
∑th
, 
°©64
 *
°©buÂ
)

624  (
	`°©64
(
∑th
, 
°©buÂ
));

625 
	}
}

631 
	$fb_lfs_pwrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
, 
off64_t
 
off£t
)

633  (
	`pwrôe64
(
fd
->
fd_num
, 
iobuf
, 
iosize
, 
off£t
));

634 
	}
}

640 
	$fb_lfs_wrôe
(
fb_fdesc_t
 *
fd
, 
ˇddr_t
 
iobuf
, 
fböt_t
 
iosize
)

642  (
	`wrôe
(
fd
->
fd_num
, 
iobuf
, 
iosize
));

643 
	}
}

649 
	$fb_lfs_åunˇã
(
fb_fdesc_t
 *
fd
, 
off64_t
 
f£_size
)

651 #ifde‡
HAVE_FTRUNCATE64


652  (
	`·runˇã64
(
fd
->
fd_num
, 
f£_size
));

654 
	`fûebích_log
(
LOG_ERROR
, "Converting off64_tÅo off_t in ftruncate,"

656  (
	`·runˇã
(
fd
->
fd_num
, (
off_t
)
f£_size
));

658 
	}
}

664 
	$fb_lfs_lök
(c⁄° *
exi°ög
, c⁄° *
√w
)

666  (
	`lök
(
exi°ög
, 
√w
));

667 
	}
}

673 
	$fb_lfs_symlök
(c⁄° *
exi°ög
, c⁄° *
√w
)

675  (
	`symlök
(
exi°ög
, 
√w
));

676 
	}
}

682 
	$fb_lfs_ac˚ss
(c⁄° *
∑th
, 
amode
)

684  (
	`ac˚ss
(
∑th
, 
amode
));

685 
	}
}

	@fb_random.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

30 
	~<m©h.h
>

31 
	~"fûebích.h
"

32 
	~"ùc.h
"

33 
	~"gamma_di°.h
"

34 
	~"cv¨s/mtwi°/mtwi°.h
"

45 
	$fb_øndom64
(
uöt64_t
 *
øndp
, uöt64_à
max
, uöt64_à
round
, 
avd_t
 
avd
)

47 
øndom_n‹mÆized
;

48 
uöt64_t
 
øndom
 = 0;

50 i‡(
avd
) {

52 i‡(!
	`AVD_IS_RANDOM
(
avd
)) {

55 
	`fûebích_log
(
LOG_ERROR
, "filebench_randomno64:Årying"

57 
	`fûebích_shutdown
(1);

60 
øndom
 = 
	`avd_gë_öt
(
avd
);

63 
øndom
 = 
	`mt_Œønd
();

73 
max
 = max - 
round
;

75 
øndom_n‹mÆized
 = ()
øndom
 / 
UINT64_MAX
;

76 
øndom
 = 
øndom_n‹mÆized
 * 
max
;

78 i‡(
round
) {

79 
øndom
 =Ñ™dom / 
round
;

80 
øndom
 =Ñ™dom * 
round
;

83 *
øndp
 = 
øndom
;

84 
	}
}

91 
	$fb_øndom32
(
uöt32_t
 *
øndp
,

92 
uöt32_t
 
max
, uöt32_à
round
, 
avd_t
 
avd
)

94 
uöt64_t
 
ønd64
;

96 
	`fb_øndom64
(&
ønd64
, 
max
, 
round
, 
avd
);

99 *
øndp
 = (
uöt32_t
)
ønd64
;

100 
	}
}

106 
	$fb_øndom_¥obabûôy
()

108 
uöt64_t
 
øndnum
;

110 
	`fb_øndom64
(&
øndnum
, 
UINT64_MAX
, 0, 
NULL
);

113  ()
øndnum
 / ()(
UINT64_MAX
);

114 
	}
}

123 
	$fb_ønd_§c_ønd48
(*
xi
)

125  (
	`î™d48
(
xi
));

126 
	}
}

129 
	$fb_ønd_§c_øndom
(*
xi
)

131  
	`fb_øndom_¥obabûôy
();

132 
	}
}

139 
	$ønd_unif‹m_gë
(
ønddi°_t
 *
∫dp
)

141 
d¥ob
, 
dmö
, 
dªs
, 
dround
;

143 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

144 
dround
 = ()
∫dp
->
∫d_vöt_round
;

146 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

148 
dªs
 = (
d¥ob
 * (2.0 * (
∫dp
->
∫d_dbl_món
 - 
dmö
))) + dmin;

150 i‡(
dround
 == 0.0)

151  (
dªs
);

153  (
	`round
(
dªs
 / 
dround
) * dround);

154 
	}
}

161 
	$ønd_gamma_gë
(
ønddi°_t
 *
∫dp
)

163 
dmu…
, 
dªs
, 
dmö
, 
dround
;

165 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

166 
dround
 = ()
∫dp
->
∫d_vöt_round
;

168 
dmu…
 = (
∫dp
->
∫d_dbl_món
 - 
dmö
Ë/Ñndp->
∫d_dbl_gamma
;

170 
dªs
 = 
	`gamma_di°_knuth_§c
(
∫dp
->
∫d_dbl_gamma
,

171 
dmu…
, 
∫dp
->
∫d_§c
,Ñndp->
∫d_xi
Ë+ 
dmö
;

173 i‡(
dround
 == 0.0)

174  (
dªs
);

176  (
	`round
(
dªs
 / 
dround
) * dround);

177 
	}
}

184 
	$ønd_èbÀ_gë
(
ønddi°_t
 *
∫dp
)

186 
d¥ob
, 
d¥˙t
, 
dèbªs
, 
ds˛ªs
, 
dmö
, 
dround
;

187 
idx
;

189 
dmö
 = ()
∫dp
->
∫d_vöt_mö
;

190 
dround
 = ()
∫dp
->
∫d_vöt_round
;

192 
d¥ob
 = (*
∫dp
->
∫d_§c
)‘ndp->
∫d_xi
);

194 
d¥˙t
 = (
d¥ob
 * ()(
PF_TAB_SIZE
));

195 
idx
 = ()
d¥˙t
;

197 
dèbªs
 = (
∫dp
->
∫d_r·
[
idx
].
rf_ba£
 +

198 (
∫dp
->
∫d_r·
[
idx
].
rf_ønge
 * (
d¥˙t
 - ()idx)));

200 
ds˛ªs
 = (
dèbªs
 * (
∫dp
->
∫d_dbl_món
 - 
dmö
)) + dmin;

202 i‡(
dround
 == 0.0)

203  (
ds˛ªs
);

205  (
	`round
(
ds˛ªs
 / 
dround
) * dround);

206 
	}
}

212 
	$ønd_£ed_£t
(
ønddi°_t
 *
∫dp
)

215 
uöt64_t
 
Œ
;

216 
uöt16_t
 
w
[4];

217 } 
ãmp1
;

218 
idx
;

220 
ãmp1
.
Œ
 = (
uöt64_t
)
	`avd_gë_öt
(
∫dp
->
∫d_£ed
);

222 
idx
 = 0; idx < 3; idx++) {

224 #ifde‡
_BIG_ENDIAN


225 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[3-idx];

227 
∫dp
->
∫d_xi
[
idx
] = 
ãmp1
.
w
[idx];

230 
	}
}

236 
ønddi°_t
 *

237 
	$ønddi°_Æloc
()

239 
ønddi°_t
 *
∫dp
;

241 i‡((
∫dp
 = (
ønddi°_t
 *)
	`ùc_mÆloc
(
FILEBENCH_RANDDIST
)Ë=
NULL
) {

242 
	`fûebích_log
(
LOG_ERROR
, "Out of memory forÑandom dist");

243  (
NULL
);

247 
∫dp
->
∫d_√xt
 = 
fûebích_shm
->
shm_ønd_li°
;

248 
fûebích_shm
->
shm_ønd_li°
 = 
∫dp
;

250  (
∫dp
);

251 
	}
}

259 
	$ønddi°_öô
(
ønddi°_t
 *
∫dp
)

261 
¥obèbít_t
 *
rdã_hdp
, *
±ï
;

262 
èbÀmón
, 
èbÀmö
 = 0;

263 
±eidx
;

266 
∫dp
->
∫d_dbl_gamma
 = ()
	`avd_gë_öt
‘ndp->
∫d_gamma
) / 1000.0;

267 i‡(
∫dp
->
∫d_món
 !
NULL
)

268 
∫dp
->
∫d_dbl_món
 = ()
	`avd_gë_öt
‘ndp->
∫d_món
);

270 
∫dp
->
∫d_dbl_món
 =Ñndp->
∫d_dbl_gamma
;

273 
∫dp
->
∫d_vöt_mö
 = 
	`avd_gë_öt
‘ndp->
∫d_mö
);

274 
∫dp
->
∫d_vöt_round
 = 
	`avd_gë_öt
‘ndp->
∫d_round
);

276 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

278 
∫dp
->
∫d_dbl_món
,Ñndp->
∫d_dbl_gamma
,

279 (
u_l⁄gl⁄g_t
)
∫dp
->
∫d_vöt_mö
);

282 
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

283 
RAND_TYPE_UNIFORM
:

284 
∫dp
->
∫d_gë
 = 
ønd_unif‹m_gë
;

287 
RAND_TYPE_GAMMA
:

288 
∫dp
->
∫d_gë
 = 
ønd_gamma_gë
;

291 
RAND_TYPE_TABLE
:

292 
∫dp
->
∫d_gë
 = 
ønd_èbÀ_gë
;

296 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Random TypeÇot Specified");

297 
	`fûebích_shutdown
(1);

302 i‡(
∫dp
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
) {

303 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_ønd48
;

304 
	`ønd_£ed_£t
(
∫dp
);

306 
∫dp
->
∫d_§c
 = 
fb_ønd_§c_øndom
;

310 i‡((
rdã_hdp
 = 
∫dp
->
∫d_¥obèbs
Ë=
NULL
)

314 
±eidx
 = 0;

315 
èbÀmón
 = 0.0;

316 
±ï
 = 
rdã_hdp
;Öãp;Öã∞±ï->
±e_√xt
) {

317 
dmö
, 
dmax
;

318 
ít˙t
;

320 
dmax
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmax
);

321 
dmö
 = ()
	`avd_gë_öt
(
±ï
->
±e_£gmö
);

324 i‡(
±eidx
 == 0)

325 
èbÀmö
 = 
dmö
;

328 i‡(
èbÀmö
 > 
dmö
)

329 
èbÀmö
 = 
dmö
;

331 
ít˙t
 = ()
	`avd_gë_öt
(
±ï
->
±e_≥r˚¡
);

332 
èbÀmón
 +(((
dmö
 + 
dmax
)/2.0Ë* ()
ít˙t
);

336 ; 
ít˙t
 > 0;Éntcnt--) {

337 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 
dmö
;

338 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 
dmax
 - 
dmö
;

339 
±eidx
++;

344 i‡(
±eidx
 !
PF_TAB_SIZE
)

345 
	`fûebích_log
(
LOG_ERROR
,

346 "ProbÅabÀ o∆yÅŸÆ†%d%%", 
±eidx
);

349 i‡(
∫dp
->
∫d_dbl_món
 == 0.0)

350 
∫dp
->
∫d_dbl_món
 = ()
èbÀmón
 / ()
PF_TAB_SIZE
;

353 
èbÀmón
 = (èbÀmó¿/ 100.0Ë- 
èbÀmö
;

356 i‡(
èbÀmón
 == 0.0) {

357 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

358 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 = 0.0;

359 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 = 0.0;

364 
±eidx
 = 0;Öãidx < 
PF_TAB_SIZE
;Öteidx++) {

366 
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 =

367 ((
∫dp
->
∫d_r·
[
±eidx
].
rf_ba£
 - 
èbÀmö
Ë/ 
èbÀmón
);

368 
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 =

369 (
∫dp
->
∫d_r·
[
±eidx
].
rf_ønge
 / 
èbÀmón
);

371 
	}
}

	@fb_random.h

26 #i‚de‡
_FB_RANDOM_H


27 
	#_FB_RANDOM_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

37 
	s¥obèbít
 {

38 
¥obèbít
 *
	m±e_√xt
;

39 
avd_t
 
	m±e_≥r˚¡
;

40 
avd_t
 
	m±e_£gmö
;

41 
avd_t
 
	m±e_£gmax
;

42 } 
	t¥obèbít_t
;

49 
	søndfunc
 {

50 
	mrf_ba£
;

51 
	mrf_ønge
;

52 } 
	tøndfunc_t
;

55 
	#PF_TAB_SIZE
 100

	)

63 
	sønddi°
 {

64 (*
	m∫d_gë
)(
	mønddi°
 *);

65 (*
	m∫d_§c
)(*);

66 
ønddi°
 *
	m∫d_√xt
;

67 
avd_t
 
	m∫d_£ed
;

68 
avd_t
 
	m∫d_món
;

69 
avd_t
 
	m∫d_gamma
;

70 
avd_t
 
	m∫d_mö
;

71 
avd_t
 
	m∫d_round
;

72 
	m∫d_dbl_món
;

73 
	m∫d_dbl_gamma
;

74 
fböt_t
 
	m∫d_vöt_mö
;

75 
fböt_t
 
	m∫d_vöt_round
;

76 
¥obèbít_t
 *
	m∫d_¥obèbs
;

77 
øndfunc_t
 
	m∫d_r·
[
PF_TAB_SIZE
];

78 
uöt16_t
 
	m∫d_xi
[3];

79 
uöt16_t
 
	m∫d_ty≥
;

80 } 
	tønddi°_t
;

82 
	#RAND_TYPE_UNIFORM
 0x1

	)

83 
	#RAND_TYPE_GAMMA
 0x2

	)

84 
	#RAND_TYPE_TABLE
 0x3

	)

85 
	#RAND_TYPE_MASK
 0x0fff

	)

86 
	#RAND_SRC_URANDOM
 0x0000

	)

87 
	#RAND_SRC_GENERATOR
 0x1000

	)

89 
	#RAND_PARAM_TYPE
 1

	)

90 
	#RAND_PARAM_SRC
 2

	)

91 
	#RAND_PARAM_SEED
 3

	)

92 
	#RAND_PARAM_MIN
 4

	)

93 
	#RAND_PARAM_MEAN
 5

	)

94 
	#RAND_PARAM_GAMMA
 6

	)

95 
	#RAND_PARAM_ROUND
 7

	)

98 
fb_øndom64
(
uöt64_t
 *, uöt64_t, uöt64_t, 
avd_t
);

99 
fb_øndom32
(
uöt32_t
 *, uöt32_t, uöt32_t, 
avd_t
);

101 
ønddi°_t
 *
ønddi°_Æloc
();

102 
ønddi°_öô
(
ønddi°_t
 *
∫dp
);

	@fbtime.c

1 
	~<sys/time.h
>

2 
	~<°dlib.h
>

3 
	~<°dio.h
>

4 
	~"fbtime.h
"

5 
	~"c⁄fig.h
"

6 
	~"fûebích.h
"

13 #i‚de‡
HAVE_GETHRTIME


14 
hπime_t


15 
	$gëhπime
()

17 
timevÆ
 
tv
;

18 
hπime_t
 
hπ
;

20 
	`gëtimeofday
(&
tv
, 
NULL
);

22 
hπ
 = (
hπime_t
)
tv
.
tv_£c
 * 1000000000UL +

23 (
hπime_t
)
tv
.
tv_u£c
 * 1000UL;

25  
hπ
;

26 
	}
}

	@fbtime.h

1 #i‚de‡
_FBTIME_H


2 
	#_FBTIME_H


	)

4 
	~"c⁄fig.h
"

6 #ifde‡
HAVE_STDINT_H


7 
	~<°döt.h
>

10 #i‚de‡
HAVE_GETHRTIME


11 
uöt64_t
 
	thπime_t
;

12 
hπime_t
 
gëhπime
();

15 
	#SEC2NS_FLOAT
 ()1000000000.0

	)

16 
	#SEC2MS_FLOAT
 ()1000000.0

	)

	@filebench.h

28 #i‚de‡
_FB_FILEBENCH_H


29 
	#_FB_FILEBENCH_H


	)

31 
	~"c⁄fig.h
"

33 
	~<°dlib.h
>

34 
	~<uni°d.h
>

35 
	~<sys/°©.h
>

36 
	~<sys/ty≥s.h
>

37 
	~<sys/∑øm.h
>

38 
	~<sys/ªsour˚.h
>

39 
	~<±hªad.h
>

40 
	~<sig«l.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

46 
	~<î∫o.h
>

47 
	~<sys/times.h
>

48 #ifde‡
HAVE_STDINT_H


49 
	~<°döt.h
>

55 #ifde‡
__STDC__


56 
	~<°d¨g.h
>

57 
	#__V
(
x
Ë
	)
x

58 #i‚de‡
__P


59 
	#__P
(
x
Ë
	)
x

62 
	~<v¨¨gs.h
>

63 
	#__V
(
x
Ë(
va_Æi°
Ë
va_d˛


	)

64 
	#__P
(
x
Ë()

	)

65 c⁄°

	)

67 #ifde‡
HAVE_AIO


68 
	~<aio.h
>

70 
	~<dúít.h
>

73 
uöt64_t
 
	tfböt_t
;

74 #i‚de‡
HAVE_BOOLEAN_T


75 íum { 
	mB_FALSE
, 
	mB_TRUE
 } 
	tboﬁón_t
;

77 
	#TRUE
 1

	)

78 
	#FALSE
 0

	)

79 #i‚de‡
HAVE_U_LONGLONG_T


80 
	tu_l⁄gl⁄g_t
;

82 #i‚de‡
HAVE_UINT_T


83 
	tuöt_t
;

85 #i‚de‡
MIN


87 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

91 #i‚de‡
HAVE_OFF64_T


92 
	#off64_t
 
off_t


	)

94 #i‚de‡
HAVE_STAT64


96 
	#°©64
 
°©


	)

98 #i‚de‡
HAVE_AIO_ERROR64


99 
	#aio_îr‹64
 
aio_îr‹


	)

101 #i‚de‡
HAVE_AIO_WRITE64


102 
	#aio_wrôe64
 
aio_wrôe


	)

103 
	#aiocb64
 
aiocb


	)

105 #i‚de‡
HAVE_AIO_RETURN64


106 
	#aio_ªtu∫64
 
aio_ªtu∫


	)

108 #i‚de‡
HAVE_OPEN64


109 
	#›í64
 
›í


	)

111 #i‚de‡
HAVE_MMAP64


112 
	#mm≠64
 
mm≠


	)

114 #i‚de‡
HAVE_FSTAT64


115 
	#f°©64
 
f°©


	)

117 #i‚de‡
HAVE_LSEEK64


118 
	#l£ek64
 
l£ek


	)

120 #i‚de‡
HAVE_PWRITE64


121 
	#pwrôe64
 
pwrôe


	)

123 #i‚de‡
HAVE_PREAD64


124 
	#¥ód64
 
¥ód


	)

127 
	~"Êag.h
"

128 
	~"v¨s.h
"

129 
	~"fb_cv¨.h
"

130 
	~"fb_avl.h
"

131 
	~"°©s.h
"

132 
	~"¥ocÊow.h
"

133 
	~"misc.h
"

134 
	~"f•lug.h
"

135 
	~"fûe£t.h
"

136 
	~"thªadÊow.h
"

137 
	~"Êow›.h
"

138 
	~"fb_øndom.h
"

139 
	~"ùc.h
"

141 
pid_t
 
my_pid
;

142 
¥ocÊow_t
 *
my_¥ocÊow
;

143 
î∫o
;

144 *
exe˙ame
;

146 
fûebích_log
 
__V
((
Àvñ
, c⁄° *
fmt
, ...));

147 
fûebích_shutdown
(
îr‹
);

148 
fûebích_∂ugö_funcvecöô
();

150 
	#FILEBENCH_RANDMAX64
 
UINT64_MAX


	)

151 
	#FILEBENCH_RANDMAX32
 
UINT32_MAX


	)

153 #i‡
deföed
(
_LP64
Ë|| (
__WORDSIZE
 == 64)

154 
	#fb_øndom
 
fb_øndom64


	)

155 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX64


	)

157 
	#fb_øndom
 
fb_øndom32


	)

158 
	#FILEBENCH_RANDMAX
 
FILEBENCH_RANDMAX32


	)

161 #i‚de‡
HAVE_SIGIGNORE


163 
ölöe
 
	$sigign‹e
(
sig
) {

164 
siga˘i⁄
 
ß
;

165 
	`bzîo
(&
ß
, (sa));

166 
ß
.
ß_h™dÀr
 = 
SIG_IGN
;

167  (
	`siga˘i⁄
(
sig
, &
ß
, 
NULL
));

168 
	}
}

171 
	#KB
 (1024LL)

	)

172 
	#MB
 (
KB
 * KB)

	)

173 
	#GB
 (
KB
 * 
MB
)

	)

175 
	#KB_FLOAT
 (()1024.0)

	)

176 
	#MB_FLOAT
 (
KB_FLOAT
 * KB_FLOAT)

	)

177 
	#GB_FLOAT
 (
KB_FLOAT
 * 
MB_FLOAT
)

	)

179 
	#MMAP_SIZE
 (1024UL * 1024UL * 1024UL)

	)

181 
	#FILEBENCH_VERSION
 
VERSION


	)

182 
	#FILEBENCH_PROMPT
 "fûebích> "

	)

183 
	#MAX_LINE_LEN
 1024

	)

184 
	#MAX_CMD_HIST
 128

	)

185 
	#SHUTDOWN_WAIT_SECONDS
 3

	)

187 
	#FILEBENCH_DONE
 1

	)

188 
	#FILEBENCH_OK
 0

	)

189 
	#FILEBENCH_ERROR
 -1

	)

190 
	#FILEBENCH_NORSC
 -2

	)

	@fileset.c

28 
	~<f˙é.h
>

29 
	~<±hªad.h
>

30 
	~<î∫o.h
>

31 
	~<m©h.h
>

32 
	~<libgí.h
>

33 
	~<sys/mm™.h
>

34 
	~<sys/shm.h
>

36 
	~"fûebích.h
"

37 
	~"fûe£t.h
"

38 
	~"gamma_di°.h
"

39 
	~"utûs.h
"

40 
	~"f•lug.h
"

42 
	gfûe¸óã_d⁄e
;

69 
	#MAX_PARALLOC_THREADS
 32

	)

76 
	$fûe£t_ítôy_«me
(
fûe£t_t
 *
fûe£t
)

78 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)

82 
	}
}

91 
	$åunc_dú«me
(*
dú
)

93 *
s
 = 
dú
 + 
	`°æí
(dir);

95 
s
 !
dú
) {

96 
c
 = *
s
;

98 *
s
 = 0;

99 i‡(
c
 == '/')

101 
s
--;

103  (
dú
);

104 
	}
}

114 
	$fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
)

116 
fûe£ã¡ry_t
 *
f£p
 = 
íåy
;

117 
∑th
[
MAXPATHLEN
];

118 
∑thtmp
[
MAXPATHLEN
];

119 *
s
;

121 
∑th
[0] = '\0';

122 
f£p
->
f£_∑ª¡
) {

123 (Ë
	`°r˝y
(
∑thtmp
, "/");

124 (Ë
	`fb_°æˇt
(
∑thtmp
, 
f£p
->
f£_∑th
, 
MAXPATHLEN
);

125 (Ë
	`fb_°æˇt
(
∑thtmp
, 
∑th
, 
MAXPATHLEN
);

126 (Ë
	`fb_°æ˝y
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

127 
f£p
 = f£p->
f£_∑ª¡
;

130 
s
 = 
	`mÆloc
(
	`°æí
(
∑th
) + 1);

131 (Ë
	`fb_°æ˝y
(
s
, 
∑th
, 
MAXPATHLEN
);

132  (
s
);

133 
	}
}

142 
	$fûe£t_mkdú
(*
∑th
, 
mode
)

144 *
p
;

145 *
dús
[65536];

146 
i
 = 0;

148 i‡((
p
 = 
	`°rdup
(
∑th
)Ë=
NULL
)

149 
nuŒ_°r
;

157 
°©64
 
sb
;

159 i‡(
	`°©64
(
p
, &
sb
) == 0)

161 i‡(
	`°æí
(
p
) < 3)

163 i‡((
dús
[
i
] = 
	`°rdup
(
p
)Ë=
NULL
) {

164 
	`‰ì
(
p
);

165 
nuŒ_°r
;

168 (Ë
	`åunc_dú«me
(
p
);

169 
i
++;

173 --
i
; i >= 0; i--) {

174 (Ë
	`FB_MKDIR
(
dús
[
i
], 
mode
);

175 
	`‰ì
(
dús
[
i
]);

178 
	`‰ì
(
p
);

179  (
FILEBENCH_OK
);

181 
nuŒ_°r
:

183 --
i
; i >= 0; i--)

184 
	`‰ì
(
dús
[
i
]);

186 
	`fûebích_log
(
LOG_ERROR
,

187 "FaûedÅÿ¸óã dúe˘‹yÖ©h %s: Ouào‡mem‹y", 
∑th
);

188  (
FILEBENCH_ERROR
);

189 
	}
}

195 
	$fûe£t_¸óã_subdús
(
fûe£t_t
 *
fûe£t
, *
fûe£ç©h
)

197 
fûe£ã¡ry_t
 *
dúíåy
;

198 
fuŒ_∑th
[
MAXPATHLEN
];

199 *
∑π_∑th
;

202 
dúíåy
 = 
fûe£t
->
fs_dúli°
;

203 
dúíåy
) {

204 (Ë
	`fb_°æ˝y
(
fuŒ_∑th
, 
fûe£ç©h
, 
MAXPATHLEN
);

205 
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dúíåy
);

206 (Ë
	`fb_°æˇt
(
fuŒ_∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

207 
	`‰ì
(
∑π_∑th
);

210 i‡(
	`fûe£t_mkdú
(
fuŒ_∑th
, 0755Ë=
FILEBENCH_ERROR
)

211  (
FILEBENCH_ERROR
);

213 
dúíåy
 = dúíåy->
f£_√xto·y≥
;

215  (
FILEBENCH_OK
);

216 
	}
}

223 
	$fûe£t_move_íåy
(
avl_åì_t
 *
§c_åì
,ávl_åì_à*
d°_åì
,

224 
fûe£ã¡ry_t
 *
íåy
)

226 
	`avl_ªmove
(
§c_åì
, 
íåy
);

227 
	`avl_add
(
d°_åì
, 
íåy
);

228 
	}
}

235 
	$fûe£t_Æloc_Àafdú
(
fûe£ã¡ry_t
 *
íåy
)

237 
fûe£t_t
 *
fûe£t
;

238 
∑th
[
MAXPATHLEN
];

239 
°©64
 
sb
;

240 *
∑thtmp
;

242 
fûe£t
 = 
íåy
->
f£_fûe£t
;

243 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

244 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

245 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

246 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

247 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

248 
	`‰ì
(
∑thtmp
);

250 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

253 i‡(!((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
	`°©64
(
∑th
, &
sb
) == 0))) {

256 i‡(
	`FB_MKDIR
(
∑th
, 0755) < 0) {

257 
	`fûebích_log
(
LOG_ERROR
,

259 
∑th
, 
	`°ªº‹
(
î∫o
));

260 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

261  (
FILEBENCH_ERROR
);

266 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

267  (
FILEBENCH_OK
);

268 
	}
}

275 
	$fûe£t_Æloc_fûe
(
fûe£ã¡ry_t
 *
íåy
)

277 
fûe£t_t
 *
fûe£t
;

278 
∑th
[
MAXPATHLEN
];

279 *
buf
;

280 
°©64
 
sb
;

281 *
∑thtmp
;

282 
off64_t
 
£ek
;

283 
fb_fdesc_t
 
fdesc
;

284 
åu°_åì
;

286 
fûe£t
 = 
íåy
->
f£_fûe£t
;

287 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

288 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

289 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

290 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

291 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

292 
	`‰ì
(
∑thtmp
);

294 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "P›uœãd %s", 
íåy
->
f£_∑th
);

297 
åu°_åì
 = 
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
);

298 i‡((
íåy
->
f£_Êags
 & 
FSE_REUSING
Ë&& (
åu°_åì
 ||

299 (
	`FB_STAT
(
∑th
, &
sb
) == 0))) {

300 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
, 0Ë=
FILEBENCH_ERROR
) {

301 
	`fûebích_log
(
LOG_INFO
,

303 
∑th
);

304 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

305  (
FILEBENCH_ERROR
);

308 i‡(
åu°_åì
 || (
sb
.
°_size
 =(
off64_t
)
íåy
->
f£_size
)) {

309 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

310 "Reusög fûê%s", 
∑th
);

312 (Ë
	`FB_CLOSE
(&
fdesc
);

315 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

316  (
FILEBENCH_OK
);

318 } i‡(
sb
.
°_size
 > (
off64_t
)
íåy
->
f£_size
) {

320 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

321 "Trunˇtög &Ñe-usög fûê%s", 
∑th
);

323 (Ë
	`FB_FTRUNC
(&
fdesc
, (
off64_t
)
íåy
->
f£_size
);

325 (Ë
	`FB_CLOSE
(&
fdesc
);

328 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

329  (
FILEBENCH_OK
);

334 i‡(
	`FB_OPEN
(&
fdesc
, 
∑th
, 
O_RDWR
 | 
O_CREAT
, 0644) ==

335 
FILEBENCH_ERROR
) {

336 
	`fûebích_log
(
LOG_ERROR
,

338 
∑th
, 
	`°ªº‹
(
î∫o
));

341 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

342  (
FILEBENCH_ERROR
);

346 i‡((
buf
 = (*)
	`mÆloc
(
FILE_ALLOC_BLOCK
)Ë=
NULL
) {

348 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

349  (
FILEBENCH_ERROR
);

352 
£ek
 = 0; sìk < 
íåy
->
f£_size
; ) {

353 
off64_t
 
wsize
;

354 
ªt
 = 0;

360 
wsize
 = 
	`MIN
(
íåy
->
f£_size
 - 
£ek
, 
FILE_ALLOC_BLOCK
);

362 
ªt
 = 
	`FB_WRITE
(&
fdesc
, 
buf
, 
wsize
);

363 i‡(
ªt
 !
wsize
) {

364 
	`fûebích_log
(
LOG_ERROR
,

366 
∑th
, 
	`°ªº‹
(
î∫o
));

367 (Ë
	`FB_CLOSE
(&
fdesc
);

368 
	`‰ì
(
buf
);

369 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

370  (
FILEBENCH_ERROR
);

372 
£ek
 +
wsize
;

375 (Ë
	`FB_CLOSE
(&
fdesc
);

377 
	`‰ì
(
buf
);

380 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 0);

382 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

384 
∑th
, (
u_l⁄gl⁄g_t
)
íåy
->
f£_size
);

386  (
FILEBENCH_OK
);

387 
	}
}

395 
	$fûe£t_Æloc_thªad
(
fûe£ã¡ry_t
 *
íåy
)

397 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
) {

398 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

399 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = -1;

401 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

402 
fûebích_shm
->
shm_f•¨Æloc_cou¡
--;

405 (Ë
	`±hªad_c⁄d_sig«l
(&
fûebích_shm
->
shm_f•¨Æloc_cv
);

406 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

408 
	`±hªad_exô
(
NULL
);

409  (
NULL
);

410 
	}
}

423 
	$fûe£t_›ífûe
(
fb_fdesc_t
 *
fdesc
, 
fûe£t_t
 *
fûe£t
,

424 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
fûemode
, 
©ås
)

426 
∑th
[
MAXPATHLEN
];

427 
dú
[
MAXPATHLEN
];

428 *
∑thtmp
;

429 
°©64
 
sb
;

430 
›í_©ås
 = 0;

432 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

433 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

434 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

435 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
íåy
);

436 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

437 (Ë
	`fb_°æ˝y
(
dú
, 
∑th
, 
MAXPATHLEN
);

438 
	`‰ì
(
∑thtmp
);

439 (Ë
	`åunc_dú«me
(
dú
);

442 i‡((
Êag
 & 
O_CREAT
Ë&& (
	`°©64
(
dú
, &
sb
) != 0)) {

443 i‡(
	`fûe£t_mkdú
(
dú
, 0755Ë=
FILEBENCH_ERROR
)

444  (
FILEBENCH_ERROR
);

447 i‡(
©ås
 & 
FLOW_ATTR_DSYNC
)

448 
›í_©ås
 |
O_SYNC
;

450 #ifde‡
HAVE_O_DIRECT


451 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

452 
›í_©ås
 |
O_DIRECT
;

455 i‡(
	`FB_OPEN
(
fdesc
, 
∑th
, 
Êag
 | 
›í_©ås
, 
fûemode
)

456 =
FILEBENCH_ERROR
) {

457 
	`fûebích_log
(
LOG_ERROR
,

459 
íåy
->
f£_ödex
, 
∑th
,É¡ry->
f£_Êags
, 
	`°ªº‹
(
î∫o
));

461 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

462  (
FILEBENCH_ERROR
);

465 #ifde‡
HAVE_DIRECTIO


466 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

467 ()
	`dúe˘io
(
fdesc
->
fd_num
, 
DIRECTIO_ON
);

470 #ifde‡
HAVE_NOCACHE_FCNTL


471 i‡(
©ås
 & 
FLOW_ATTR_DIRECTIO
)

472 ()
	`f˙é
(
fdesc
->
fd_num
, 
F_NOCACHE
, 1);

476 i‡(
©ås
 & 
FLOW_ATTR_FADV_RANDOM
) {

477 #ifde‡
HAVE_FADVISE


478 i‡(
	`posix_Ádvi£
(
fdesc
->
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

479 !
FILEBENCH_OK
) {

480 
	`fûebích_log
(
LOG_ERROR
,

482 
∑th
, 
	`°ªº‹
(
î∫o
));

483 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 0);

484  (
FILEBENCH_ERROR
);

486 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled **");

488 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

493 i‡(
Êag
 & 
O_CREAT
)

494 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, TRUE, 1);

496 
	`fûe£t_unbusy
(
íåy
, 
FALSE
, FALSE, 1);

498  (
FILEBENCH_OK
);

499 
	}
}

507 
	$fûe£t_pickª£t
(
fûe£t_t
 *
fûe£t
, 
íåy_ty≥
)

509 
fûe£ã¡ry_t
 *
íåy
;

511 
íåy_ty≥
 & 
FILESET_PICKMASK
) {

512 
FILESET_PICKFILE
:

513 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_n€x_fûes
);

516 
íåy
) {

517 
íåy
->
f£_Êags
 |
FSE_FREE
;

518 
íåy
->
f£_›í_˙t
 = 0;

519 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_fûes
,

520 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

521 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_fûes
,Éntry);

525 
íåy
 = (
fûe£ã¡ry_t
 *)
	`avl_fú°
(&
fûe£t
->
fs_exi°_fûes
);

527 
íåy
) {

528 
íåy
->
f£_Êags
 |
FSE_FREE
;

529 
íåy
->
f£_›í_˙t
 = 0;

530 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_fûes
,

531 &
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

533 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_fûes
,Éntry);

538 
FILESET_PICKDIR
:

542 
FILESET_PICKLEAFDIR
:

543 
íåy
 = (
fûe£ã¡ry_t
 *)

544 
	`avl_fú°
(&
fûe£t
->
fs_n€x_Àaf_dús
);

547 
íåy
) {

548 
íåy
->
f£_Êags
 |
FSE_FREE
;

549 
íåy
->
f£_›í_˙t
 = 0;

550 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_n€x_Àaf_dús
,

551 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

552 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_n€x_Àaf_dús
,Éntry);

556 
íåy
 = (
fûe£ã¡ry_t
 *)

557 
	`avl_fú°
(&
fûe£t
->
fs_exi°_Àaf_dús
);

559 
íåy
) {

560 
íåy
->
f£_Êags
 |
FSE_FREE
;

561 
íåy
->
f£_›í_˙t
 = 0;

562 
	`fûe£t_move_íåy
(&
fûe£t
->
fs_exi°_Àaf_dús
,

563 &
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

565 
íåy
 = 
	`AVL_NEXT
(&
fûe£t
->
fs_exi°_Àaf_dús
,Éntry);

570 
	}
}

575 
fûe£ã¡ry_t
 *

576 
	$fûe£t_föd_íåy
(
avl_åì_t
 *
©p
, 
uöt_t
 
ödex
)

578 
avl_ödex_t
 
found_loc
;

579 
fûe£ã¡ry_t
 
desúed_f£
, *
found_f£
;

582 
desúed_f£
.
f£_ödex
 = 
ödex
;

583 
found_f£
 = 
	`avl_föd
(
©p
, (*)(&
desúed_f£
), &
found_loc
);

584 i‡(
found_f£
 !
NULL
)

585  (
found_f£
);

588 
found_f£
 = 
	`avl_√¨e°
(
©p
, 
found_loc
, 
AVL_AFTER
);

589 i‡(
found_f£
 !
NULL
)

590  (
found_f£
);

593 
found_f£
 = 
	`avl_fú°
(
©p
);

594  (
found_f£
);

595 
	}
}

612 
fûe£ã¡ry_t
 *

613 
	$fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
, 
ödex
)

615 
fûe£ã¡ry_t
 *
íåy
 = 
NULL
;

616 
fûe£ã¡ry_t
 *
°¨t_poöt
;

617 
avl_åì_t
 *
©p
 = 
NULL
;

618 
fböt_t
 
max_íåõs
 = 0;

620 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

623 
Êags
 & 
FILESET_PICKMASK
) {

624 
FILESET_PICKFILE
:

626 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking file");

628 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
)

629 
em±y
;

631 
fûe£t
->
fs_idÀ_fûes
 == 0) {

632 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_fûes_cv
,

633 &
fûe£t
->
fs_pick_lock
);

636 
max_íåõs
 = 
fûe£t
->
fs_c⁄°íåõs
;

637 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

638 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking unique");

639 
©p
 = &
fûe£t
->
fs_‰ì_fûes
;

640 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

641 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÇotÉxisting");

642 
©p
 = &
fûe£t
->
fs_n€x_fûes
;

644 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÉxisting");

645 
©p
 = &
fûe£t
->
fs_exi°_fûes
;

649 
FILESET_PICKDIR
:

651 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picking directory");

653 i‡(
fûe£t
->
fs_dúli°
 =
NULL
)

654 
em±y
;

656 
fûe£t
->
fs_idÀ_dús
 == 0) {

657 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_dús_cv
,

658 &
fûe£t
->
fs_pick_lock
);

661 
max_íåõs
 = 1;

662 
©p
 = &
fûe£t
->
fs_dús
;

665 
FILESET_PICKLEAFDIR
:

667 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "PickingÜeaf directory");

669 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
)

670 
em±y
;

672 
fûe£t
->
fs_idÀ_Àafdús
 == 0) {

673 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
,

674 &
fûe£t
->
fs_pick_lock
);

677 
max_íåõs
 = 
fûe£t
->
fs_c⁄°Àafdús
;

678 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

679 
©p
 = &
fûe£t
->
fs_‰ì_Àaf_dús
;

680 } i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

681 
©p
 = &
fûe£t
->
fs_n€x_Àaf_dús
;

683 
©p
 = &
fûe£t
->
fs_exi°_Àaf_dús
;

689 i‡(
	`avl_is_em±y
(
©p
)) {

690 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "atp isÉmpty");

691 
em±y
;

694 i‡(
Êags
 & 
FILESET_PICKUNIQUE
) {

695 
uöt64_t
 
ödex64
;

704 i‡(
ödex
) {

705 
ödex64
 = 
ödex
;

707 
	`fb_øndom64
(&
ödex64
, 
max_íåõs
, 0, 
NULL
);

710 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, ()
ödex64
);

712 i‡(
íåy
 =
NULL
)

713 
em±y
;

715 } i‡(
Êags
 & 
FILESET_PICKBYINDEX
) {

717 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
ödex
);

721 
Êags
 & 
FILESET_PICKMASK
) {

722 
FILESET_PICKFILE
:

723 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

724 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

725 
fûe£t
->
fs_fûe_√rŸ‹
);

726 
fûe£t
->
fs_fûe_√rŸ‹
 =

727 
íåy
->
f£_ödex
 + 1;

729 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

730 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
]);

731 
fûe£t
->
fs_fûe_exrŸ‹
[
tid
] =

732 
íåy
->
f£_ödex
 + 1;

736 
FILESET_PICKDIR
:

737 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
, 
fûe£t
->
fs_dúrŸ‹
);

738 
fûe£t
->
fs_dúrŸ‹
 = 
íåy
->
f£_ödex
 + 1;

741 
FILESET_PICKLEAFDIR
:

742 i‡(
Êags
 & 
FILESET_PICKNOEXIST
) {

743 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

744 
fûe£t
->
fs_Àafdú_√rŸ‹
);

745 
fûe£t
->
fs_Àafdú_√rŸ‹
 =

746 
íåy
->
f£_ödex
 + 1;

748 
íåy
 = 
	`fûe£t_föd_íåy
(
©p
,

749 
fûe£t
->
fs_Àafdú_exrŸ‹
);

750 
fûe£t
->
fs_Àafdú_exrŸ‹
 =

751 
íåy
->
f£_ödex
 + 1;

757 i‡(
íåy
 =
NULL
)

758 
em±y
;

761 
°¨t_poöt
 = 
íåy
;

762 
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

765 
íåy
 = 
	`AVL_NEXT
(
©p
,Éntry);

766 i‡(
íåy
 =
NULL
)

767 
íåy
 = 
	`avl_fú°
(
©p
);

770 i‡((
íåy
 =
NULL
Ë|| (íåy =
°¨t_poöt
)) {

771 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

772 "AŒ %d fûe†¨êbusy", 
	`avl_numnodes
(
©p
));

773 
em±y
;

779 
Êags
 & 
FILESET_PICKMASK
) {

780 
FILESET_PICKFILE
:

781 
fûe£t
->
fs_idÀ_fûes
--;

783 
FILESET_PICKDIR
:

784 
fûe£t
->
fs_idÀ_dús
--;

786 
FILESET_PICKLEAFDIR
:

787 
fûe£t
->
fs_idÀ_Àafdús
--;

792 
íåy
->
f£_Êags
 |
FSE_BUSY
;

794 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

795 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Picked fûê%s", 
íåy
->
f£_∑th
);

796  (
íåy
);

798 
em±y
:

799 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "No file found");

800 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

801  (
NULL
);

802 
	}
}

810 
	$fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

811 
√w_exi°_vÆ
, 
›í_˙t_ö¸
)

813 
fûe£t_t
 *
fûe£t
 = 
NULL
;

815 i‡(
íåy
)

816 
fûe£t
 = 
íåy
->
f£_fûe£t
;

818 i‡(
fûe£t
 =
NULL
) {

819 
	`fûebích_log
(
LOG_ERROR
, "fileset_unbusy: NO FILESET!");

823 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

826 i‡(
upd©e_exi°
) {

827 i‡(
√w_exi°_vÆ
 =
TRUE
) {

828 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

831 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

832 
íåy
->
f£_Êags
 &(~
FSE_FREE
);

833 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

834 
FSE_TYPE_FILE
:

835 
	`fûe£t_move_íåy
(

836 &
fûe£t
->
fs_‰ì_fûes
,

837 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

840 
FSE_TYPE_DIR
:

843 
FSE_TYPE_LEAFDIR
:

844 
	`fûe£t_move_íåy
(

845 &
fûe£t
->
fs_‰ì_Àaf_dús
,

846 &
fûe£t
->
fs_exi°_Àaf_dús
,

847 
íåy
);

851 } i‡(!(
íåy
->
f£_Êags
 & 
FSE_EXISTS
)) {

854 
íåy
->
f£_Êags
 |
FSE_EXISTS
;

855 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

856 
FSE_TYPE_FILE
:

857 
	`fûe£t_move_íåy
(

858 &
fûe£t
->
fs_n€x_fûes
,

859 &
fûe£t
->
fs_exi°_fûes
, 
íåy
);

861 
FSE_TYPE_DIR
:

863 
FSE_TYPE_LEAFDIR
:

864 
	`fûe£t_move_íåy
(

865 &
fûe£t
->
fs_n€x_Àaf_dús
,

866 &
fûe£t
->
fs_exi°_Àaf_dús
,

867 
íåy
);

872 i‡(
íåy
->
f£_Êags
 & 
FSE_FREE
) {

874 
íåy
->
f£_Êags
 &(~(
FSE_FREE
 | 
FSE_EXISTS
));

875 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

876 
FSE_TYPE_FILE
:

877 
	`fûe£t_move_íåy
(

878 &
fûe£t
->
fs_‰ì_fûes
,

879 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

882 
FSE_TYPE_DIR
:

885 
FSE_TYPE_LEAFDIR
:

886 
	`fûe£t_move_íåy
(

887 &
fûe£t
->
fs_‰ì_Àaf_dús
,

888 &
fûe£t
->
fs_n€x_Àaf_dús
,

889 
íåy
);

892 } i‡(
íåy
->
f£_Êags
 & 
FSE_EXISTS
) {

895 
íåy
->
f£_Êags
 &(~
FSE_EXISTS
);

896 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

897 
FSE_TYPE_FILE
:

898 
	`fûe£t_move_íåy
(

899 &
fûe£t
->
fs_exi°_fûes
,

900 &
fûe£t
->
fs_n€x_fûes
, 
íåy
);

902 
FSE_TYPE_DIR
:

904 
FSE_TYPE_LEAFDIR
:

905 
	`fûe£t_move_íåy
(

906 &
fûe£t
->
fs_exi°_Àaf_dús
,

907 &
fûe£t
->
fs_n€x_Àaf_dús
,

908 
íåy
);

916 
íåy
->
f£_›í_˙t
 +
›í_˙t_ö¸
;

919 i‡(
íåy
->
f£_Êags
 & 
FSE_BUSY
) {

922 
íåy
->
f£_Êags
 &(~
FSE_BUSY
);

925 i‡(
íåy
->
f£_Êags
 & 
FSE_THRD_WAITNG
) {

926 
íåy
->
f£_Êags
 &(~
FSE_THRD_WAITNG
);

927 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(

928 &
fûe£t
->
fs_thrd_waô_cv
);

932 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

933 
FSE_TYPE_FILE
:

934 
fûe£t
->
fs_idÀ_fûes
++;

935 i‡(
fûe£t
->
fs_idÀ_fûes
 >= 1) {

936 (Ë
	`±hªad_c⁄d_sig«l
(

937 &
fûe£t
->
fs_idÀ_fûes_cv
);

941 
FSE_TYPE_DIR
:

942 
fûe£t
->
fs_idÀ_dús
++;

943 i‡(
fûe£t
->
fs_idÀ_dús
 >= 1) {

944 (Ë
	`±hªad_c⁄d_sig«l
(

945 &
fûe£t
->
fs_idÀ_dús_cv
);

949 
FSE_TYPE_LEAFDIR
:

950 
fûe£t
->
fs_idÀ_Àafdús
++;

951 i‡(
fûe£t
->
fs_idÀ_Àafdús
 >= 1) {

952 (Ë
	`±hªad_c⁄d_sig«l
(

953 &
fûe£t
->
fs_idÀ_Àafdús_cv
);

959 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

960 
	}
}

975 
	$fûe£t_¸óã
(
fûe£t_t
 *
fûe£t
)

977 
fûe£ã¡ry_t
 *
íåy
;

978 
∑th
[
MAXPATHLEN
];

979 
°©64
 
sb
;

980 
hπime_t
 
°¨t
 = 
	`gëhπime
();

981 *
fûe£t_∑th
;

982 *
fûe£t_«me
;

983 
øndno
;

984 
¥óŒoˇãd
 = 0;

985 
ªusög
;

986 
uöt64_t
 
¥óŒo˝î˚¡
;

988 
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
);

989 i‡(!
fûe£t_∑th
) {

990 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

991 
	`fûe£t_ítôy_«me
(
fûe£t
));

992  
FILEBENCH_ERROR
;

995 
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
);

996 i‡(!
fûe£t_«me
) {

997 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

998 
	`fûe£t_ítôy_«me
(
fûe£t
));

999  
FILEBENCH_ERROR
;

1003 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1004  
FILEBENCH_OK
;

1009 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1010 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1011 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1014 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_åu°_åì
)) {

1015 
ªusög
 = 1;

1017 } i‡(((
	`°©64
(
∑th
, &
sb
Ë=0)&& (
	`°æí
(path) > 3) &&

1018 (
	`°æí
(
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)) > 2)) &&

1019 
	`avd_gë_boﬁ
(
fûe£t
->
fs_ªu£
)) {

1020 
ªusög
 = 1;

1022 
ªusög
 = 0;

1025 i‡(!
ªusög
) {

1027 
	`fûebích_log
(
LOG_INFO
,

1028 "Removög %†åì (i‡exi°s)", 
fûe£t_«me
);

1030 
	`FB_RECUR_RM
(
∑th
);

1033 
	`fûebích_log
(
LOG_INFO
, "ReusingÉxisting %sÅree",

1034 
fûe£t_«me
);

1038 i‡(!
ªusög
) {

1039 
	`fûebích_log
(
LOG_INFO
,

1040 "Pª-Æloˇtög dúe˘‹õ†ö %†åì", 
fûe£t_«me
);

1042 (Ë
	`FB_MKDIR
(
∑th
, 0755);

1044 i‡(
	`fûe£t_¸óã_subdús
(
fûe£t
, 
∑th
Ë=
FILEBENCH_ERROR
)

1045  (
FILEBENCH_ERROR
);

1048 
°¨t
 = 
	`gëhπime
();

1050 
	`fûebích_log
(
LOG_INFO
,

1051 "Pª-Æloˇtög fûe†ö %†åì", 
fûe£t_«me
);

1053 i‡(
	`AVD_IS_BOOL
(
fûe£t
->
fs_¥óŒo˝î˚¡
)) {

1054 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_¥óŒo˝î˚¡
))

1055 
¥óŒo˝î˚¡
 = 100;

1057 
¥óŒo˝î˚¡
 = 0;

1059 
¥óŒo˝î˚¡
 = 
	`avd_gë_öt
(
fûe£t
->
fs_¥óŒo˝î˚¡
);

1061 
øndno
 = ((
RAND_MAX
 * (100 - 
¥óŒo˝î˚¡
)) / 100);

1064 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKFILE
);

1065 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1066 
FILESET_PICKFREE
 | 
FILESET_PICKFILE
, 0, 0))) {

1067 
±hªad_t
 
tid
;

1068 
√wønd
;

1070 
√wønd
 = 
	`ønd
();

1072 i‡(
øndno
 && 
√wønd
 <=Ñandno) {

1074 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1078 
¥óŒoˇãd
++;

1080 i‡(
ªusög
)

1081 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1083 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1086 i‡(
	`avd_gë_boﬁ
(
fûe£t
->
fs_∑øŒoc
)) {

1089 (Ë
	`±hªad_muãx_lock
(

1090 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1091 
fûebích_shm
->
shm_f•¨Æloc_cou¡


1092 >
MAX_PARALLOC_THREADS
) {

1093 (Ë
	`±hªad_c⁄d_waô
(

1094 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1095 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1099 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0) {

1100 (Ë
	`±hªad_muãx_u∆ock
(

1101 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1102  (
FILEBENCH_ERROR
);

1105 
fûebích_shm
->
shm_f•¨Æloc_cou¡
++;

1106 (Ë
	`±hªad_muãx_u∆ock
(

1107 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1114 i‡(
	`±hªad_¸óã
(&
tid
, 
NULL
,

1115 (*(*)(*))
fûe£t_Æloc_thªad
,

1116 
íåy
) == 0) {

1121 (Ë
	`±hªad_dëach
(
tid
);

1123 
	`fûebích_log
(
LOG_ERROR
,

1125 
	`fûebích_shutdown
(1);

1129 i‡(
	`fûe£t_Æloc_fûe
(
íåy
Ë=
FILEBENCH_ERROR
)

1130  
FILEBENCH_ERROR
;

1135 
	`fûe£t_pickª£t
(
fûe£t
, 
FILESET_PICKLEAFDIR
);

1136 (
íåy
 = 
	`fûe£t_pick
(
fûe£t
,

1137 
FILESET_PICKFREE
 | 
FILESET_PICKLEAFDIR
, 0, 0))) {

1139 i‡(
	`ønd
(Ë< 
øndno
) {

1141 
	`fûe£t_unbusy
(
íåy
, 
TRUE
, 
FALSE
, 0);

1145 
¥óŒoˇãd
++;

1147 i‡(
ªusög
)

1148 
íåy
->
f£_Êags
 |
FSE_REUSING
;

1150 
íåy
->
f£_Êags
 &(~
FSE_REUSING
);

1152 i‡(
	`fûe£t_Æloc_Àafdú
(
íåy
Ë=
FILEBENCH_ERROR
)

1153  (
FILEBENCH_ERROR
);

1156 
	`fûebích_log
(
LOG_VERBOSE
,

1158 
¥óŒoˇãd
,

1159 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
,

1160 
fûe£t_«me
,

1161 (
u_l⁄gl⁄g_t
)(((
	`gëhπime
(Ë- 
°¨t
) / 1000000000) + 1));

1163  (
FILEBENCH_OK
);

1164 
	}
}

1171 
	$fûe£t_dñëe_°‹age
(
fûe£t_t
 *
fûe£t
)

1173 
∑th
[
MAXPATHLEN
];

1174 *
fûe£t_∑th
;

1175 *
fûe£t_«me
;

1177 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
)

1180 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
)

1184 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1188 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1189 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1190 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1193 
	`FB_RECUR_RM
(
∑th
);

1194 
	}
}

1200 
	$fûe£t_dñëe_fûe£t
(
fûe£t_t
 *
fûe£t
)

1202 
fûe£ã¡ry_t
 *
íåy
, *
√xt_íåy
;

1205 
íåy
 = 
fûe£t
->
fs_fûñi°
;É¡ry;É¡ry = 
√xt_íåy
) {

1208 
√xt_íåy
 = 
íåy
->
f£_√xt
;

1211 
íåy
->
f£_Êags
 & 
FSE_TYPE_MASK
) {

1212 
FSE_TYPE_FILE
:

1213 
FSE_TYPE_LEAFDIR
:

1214 
FSE_TYPE_DIR
:

1215 
	`ùc_‰ì
(
FILEBENCH_FILESETENTRY
, (*)
íåy
);

1218 
	`fûebích_log
(
LOG_ERROR
,

1224 
	`ùc_‰ì
(
FILEBENCH_FILESET
, (*)
fûe£t
);

1225 
	}
}

1228 
	$fûe£t_dñëe_Æl_fûe£ts
()

1230 
fûe£t_t
 *
fûe£t
, *
√xt_fûe£t
;

1232 
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1233 
fûe£t
; fûe£à
√xt_fûe£t
) {

1234 
√xt_fûe£t
 = 
fûe£t
->
fs_√xt
;

1235 
	`fûe£t_dñëe_°‹age
(
fûe£t
);

1236 
	`fûe£t_dñëe_fûe£t
(
fûe£t
);

1239 
fûebích_shm
->
shm_fûe£éi°
 = 
NULL
;

1240 
	}
}

1246 
	$fûe£t_ösfûñi°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1248 
íåy
->
f£_Êags
 = 
FSE_TYPE_FILE
 | 
FSE_FREE
;

1249 
	`avl_add
(&
fûe£t
->
fs_‰ì_fûes
, 
íåy
);

1251 i‡(
fûe£t
->
fs_fûñi°
 =
NULL
) {

1252 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1253 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1255 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_fûñi°
;

1256 
fûe£t
->
fs_fûñi°
 = 
íåy
;

1258 
	}
}

1265 
	$fûe£t_ösdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1267 
íåy
->
f£_Êags
 = 
FSE_TYPE_DIR
 | 
FSE_EXISTS
;

1268 
	`avl_add
(&
fûe£t
->
fs_dús
, 
íåy
);

1270 i‡(
fûe£t
->
fs_dúli°
 =
NULL
) {

1271 
fûe£t
->
fs_dúli°
 = 
íåy
;

1272 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1274 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_dúli°
;

1275 
fûe£t
->
fs_dúli°
 = 
íåy
;

1277 
	}
}

1284 
	$fûe£t_ö¶ófdúli°
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
íåy
)

1286 
íåy
->
f£_Êags
 = 
FSE_TYPE_LEAFDIR
 | 
FSE_FREE
;

1287 
	`avl_add
(&
fûe£t
->
fs_‰ì_Àaf_dús
, 
íåy
);

1289 i‡(
fûe£t
->
fs_Àafdúli°
 =
NULL
) {

1290 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1291 
íåy
->
f£_√xto·y≥
 = 
NULL
;

1293 
íåy
->
f£_√xto·y≥
 = 
fûe£t
->
fs_Àafdúli°
;

1294 
fûe£t
->
fs_Àafdúli°
 = 
íåy
;

1296 
	}
}

1302 
	$fûe£t_íåy_com∑ª
(c⁄° *
node_1
, c⁄° *
node_2
)

1304 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 <

1305 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1308 i‡(((
fûe£ã¡ry_t
 *)
node_1
)->
f£_ödex
 ==

1309 ((
fûe£ã¡ry_t
 *)
node_2
)->
f£_ödex
)

1313 
	}
}

1328 
	$fûe£t_p›uœã_fûe
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1330 
tm≤ame
[16];

1331 
fûe£ã¡ry_t
 *
íåy
;

1332 
uöt_t
 
ödex
;

1334 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1335 =
NULL
) {

1336 
	`fûebích_log
(
LOG_ERROR
,

1338  (
FILEBENCH_ERROR
);

1342 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1343 
ödex
 = 
fûe£t
->
fs_idÀ_fûes
++;

1344 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1346 
íåy
->
f£_ödex
 = 
ödex
;

1347 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1348 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1349 
	`fûe£t_ösfûñi°
(
fûe£t
, 
íåy
);

1351 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1352 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1353 
	`fûebích_log
(
LOG_ERROR
,

1355  (
FILEBENCH_ERROR
);

1358 
íåy
->
f£_size
 = (
off64_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
);

1359 
fûe£t
->
fs_byãs
 +
íåy
->
f£_size
;

1361 
fûe£t
->
fs_ªÆfûes
++;

1362  (
FILEBENCH_OK
);

1363 
	}
}

1376 
	$fûe£t_p›uœã_Àafdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
, 
£rül
)

1378 
tm≤ame
[16];

1379 
fûe£ã¡ry_t
 *
íåy
;

1380 
uöt_t
 
ödex
;

1382 i‡((
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
))

1383 =
NULL
) {

1384 
	`fûebích_log
(
LOG_ERROR
,

1386  (
FILEBENCH_ERROR
);

1390 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1391 
ödex
 = 
fûe£t
->
fs_idÀ_Àafdús
++;

1392 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1394 
íåy
->
f£_ödex
 = 
ödex
;

1395 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1396 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1397 
	`fûe£t_ö¶ófdúli°
(
fûe£t
, 
íåy
);

1399 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1400 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1401 
	`fûebích_log
(
LOG_ERROR
,

1403  (
FILEBENCH_ERROR
);

1406 
fûe£t
->
fs_ªÆÀafdús
++;

1407  (
FILEBENCH_OK
);

1408 
	}
}

1427 
	$fûe£t_p›uœã_subdú
(
fûe£t_t
 *
fûe£t
, 
fûe£ã¡ry_t
 *
∑ª¡
,

1428 
£rül
, 
dïth
)

1430 
øndïth
, 
dønd
, 
ønwidth
;

1431 
i¶óf
 = 0;

1432 
tm≤ame
[16];

1433 
fûe£ã¡ry_t
 *
íåy
;

1434 
i
;

1435 
uöt_t
 
ödex
;

1437 
dïth
 += 1;

1440 
íåy
 = (
fûe£ã¡ry_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESETENTRY
);

1441 i‡(!
íåy
) {

1442 
	`fûebích_log
(
LOG_ERROR
,

1444  (
FILEBENCH_ERROR
);

1448 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1449 
ödex
 = 
fûe£t
->
fs_idÀ_dús
++;

1450 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1452 (Ë
	`¢¥ötf
(
tm≤ame
,  (tm≤ame), "%08d", 
£rül
);

1453 i‡((
íåy
->
f£_∑th
 = (*)
	`ùc_∑thÆloc
(
tm≤ame
)Ë=
NULL
) {

1454 
	`fûebích_log
(
LOG_ERROR
,

1456  (
FILEBENCH_ERROR
);

1459 
íåy
->
f£_ödex
 = 
ödex
;

1460 
íåy
->
f£_∑ª¡
 = 
∑ª¡
;

1461 
íåy
->
f£_fûe£t
 = 
fûe£t
;

1462 
	`fûe£t_ösdúli°
(
fûe£t
, 
íåy
);

1464 i‡(
fûe£t
->
fs_dúdïthrv
) {

1465 
øndïth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúdïthrv
);

1467 
gamma
;

1469 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1470 i‡(
gamma
 > 0) {

1471 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1472 
fûe£t
->
fs_móndïth
 / 
gamma
);

1473 
øndïth
 = ()
dønd
;

1475 
øndïth
 = ()
fûe£t
->
fs_móndïth
;

1479 i‡(
fûe£t
->
fs_mónwidth
 == -1) {

1480 
ønwidth
 = 
	`avd_gë_dbl
(
fûe£t
->
fs_dúwidth
);

1482 
gamma
;

1484 
gamma
 = 
	`avd_gë_öt
(
fûe£t
->
fs_dúgamma
) / 1000.0;

1485 i‡(
gamma
 > 0) {

1486 
dønd
 = 
	`gamma_di°_knuth
(
gamma
,

1487 
fûe£t
->
fs_mónwidth
 / 
gamma
);

1488 
ønwidth
 = 
dønd
;

1490 
ønwidth
 = 
fûe£t
->
fs_mónwidth
;

1494 i‡(
øndïth
 == 0)

1495 
øndïth
 = 1;

1496 i‡(
ønwidth
 == 0)

1497 
ønwidth
 = 1;

1498 i‡(
dïth
 >
øndïth
)

1499 
i¶óf
 = 1;

1505 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1506 (
fûe£t
->
fs_ªÆfûes
 < fûe£t->
fs_c⁄°íåõs
);

1507 
i
++) {

1508 
ªt
 = 0;

1510 i‡(
∑ª¡
 && 
i¶óf
)

1511 
ªt
 = 
	`fûe£t_p›uœã_fûe
(
fûe£t
, 
íåy
, 
i
);

1513 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1515 i‡(
ªt
 != 0)

1516  (
ªt
);

1524 
i
 = 1; ((
∑ª¡
 =
NULL
Ë|| (ò< 
ønwidth
 + 1)) &&

1525 (
fûe£t
->
fs_ªÆÀafdús
 < fûe£t->
fs_c⁄°Àafdús
);

1526 
i
++) {

1527 
ªt
 = 0;

1529 i‡(
∑ª¡
 && 
i¶óf
)

1530 
ªt
 = 
	`fûe£t_p›uœã_Àafdú
(
fûe£t
, 
íåy
, 
i
);

1532 
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
íåy
, 
i
, 
dïth
);

1534 i‡(
ªt
 != 0)

1535  (
ªt
);

1538  (
FILEBENCH_OK
);

1539 
	}
}

1552 
	$fûe£t_p›uœã
(
fûe£t_t
 *
fûe£t
)

1554 
fböt_t
 
íåõs
 = 
	`avd_gë_öt
(
fûe£t
->
fs_íåõs
);

1555 
fböt_t
 
Àafdús
 = 
	`avd_gë_öt
(
fûe£t
->
fs_Àafdús
);

1556 
móndúwidth
 = 0;

1557 
ªt
;

1560 i‡(
fûe£t
->
fs_byãs
 > 0)

1561 
exi°s
;

1564 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)

1565  (
FILEBENCH_OK
);

1571 
fûe£t
->
fs_c⁄°íåõs
 = 
íåõs
;

1572 
fûe£t
->
fs_c⁄°Àafdús
 = 
Àafdús
;

1575 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_fûes_cv
, 
	`ùc_c⁄d©å
());

1576 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_dús_cv
, 
	`ùc_c⁄d©å
());

1577 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_idÀ_Àafdús_cv
, 
	`ùc_c⁄d©å
());

1580 
fûe£t
->
fs_idÀ_fûes
 = 0;

1581 
fûe£t
->
fs_idÀ_dús
 = 0;

1582 
fûe£t
->
fs_idÀ_Àafdús
 = 0;

1585 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_pick_lock
,

1586 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1587 (Ë
	`±hªad_muãx_öô
(&
fûe£t
->
fs_hi°o_lock
,

1588 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

1589 (Ë
	`±hªad_c⁄d_öô
(&
fûe£t
->
fs_thrd_waô_cv
, 
	`ùc_c⁄d©å
());

1592 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_fûes
), 
fûe£t_íåy_com∑ª
,

1593  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1594 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_fûes
), 
fûe£t_íåy_com∑ª
,

1595  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1596 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_fûes
), 
fûe£t_íåy_com∑ª
,

1597  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1598 
	`avl_¸óã
(&(
fûe£t
->
fs_‰ì_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1599  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1600 
	`avl_¸óã
(&(
fûe£t
->
fs_n€x_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1601  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1602 
	`avl_¸óã
(&(
fûe£t
->
fs_exi°_Àaf_dús
), 
fûe£t_íåy_com∑ª
,

1603  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1604 
	`avl_¸óã
(&(
fûe£t
->
fs_dús
), 
fûe£t_íåy_com∑ª
,

1605  (
fûe£ã¡ry_t
), 
	`FSE_OFFSETOF
(
f£_lök
));

1608 i‡(
	`AVD_IS_RANDOM
(
fûe£t
->
fs_dúwidth
)) {

1609 
móndúwidth
 =

1610 ()
fûe£t
->
fs_dúwidth
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
;

1611 
fûe£t
->
fs_mónwidth
 = -1;

1613 
móndúwidth
 = ()
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
);

1614 
fûe£t
->
fs_mónwidth
 = ()
móndúwidth
;

1625 
fûe£t
->
fs_móndïth
 = 
	`log
(
íåõs
+
Àafdús
Ë/Üog(
móndúwidth
);

1628 i‡(
fûe£t
->
fs_dúdïthrv
) {

1630 
fûe£t
->
fs_dúdïthrv
->
avd_vÆ
.
ønd±r
->
∫d_dbl_món
 =

1631 
fûe£t
->
fs_móndïth
;

1634 i‡((
ªt
 = 
	`fûe£t_p›uœã_subdú
(
fûe£t
, 
NULL
, 1, 0)) != 0)

1635  (
ªt
);

1637 
exi°s
:

1638 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1639 
	`fûebích_log
(
LOG_VERBOSE
, "File %s: %.3lfMB",

1640 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

1641 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1643 
	`fûebích_log
(
LOG_INFO
, "%sÖopulated: %llu files, "

1646 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
íåõs
,

1647 
móndúwidth
, 
fûe£t
->
fs_móndïth
,

1648 
Àafdús
,

1649 ()
fûe£t
->
fs_byãs
 / 1024UL / 1024UL);

1652  
FILEBENCH_OK
;

1653 
	}
}

1665 
fûe£t_t
 *

1666 
	$fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
)

1668 
fûe£t_t
 *
fûe£t
;

1670 
fûe£t
 = (
fûe£t_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FILESET
);

1671 i‡(!
fûe£t
) {

1672 
	`fûebích_log
(
LOG_ERROR
, "can'tállocate fileset %s",

1673 
	`avd_gë_°r
(
«me
));

1674  
NULL
;

1677 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1678 "deföög fûe[£t] %s", 
	`avd_gë_°r
(
«me
));

1680 
fûe£t
->
fs_«me
 = 
«me
;

1681 
fûe£t
->
fs_∑th
 = 
∑th
;

1684 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1686 i‡(
fûebích_shm
->
shm_fûe£éi°
 =
NULL
) {

1687 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1688 
fûe£t
->
fs_√xt
 = 
NULL
;

1690 
fûe£t
->
fs_√xt
 = 
fûebích_shm
->
shm_fûe£éi°
;

1691 
fûebích_shm
->
shm_fûe£éi°
 = 
fûe£t
;

1694 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1696  
fûe£t
;

1697 
	}
}

1706 
	$fûe£t_checkøw
(
fûe£t_t
 *
fûe£t
)

1708 
∑th
[
MAXPATHLEN
];

1709 
°©64
 
sb
;

1710 *
∑th«me
;

1711 *
£äame
;

1713 
fûe£t
->
fs_©ås
 &(~
FILESET_IS_RAW_DEV
);

1715 i‡((
∑th«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1716 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1717 
	`fûe£t_ítôy_«me
(
fûe£t
));

1718 
	`fûebích_shutdown
(1);

1721 i‡((
£äame
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1722 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1723 
	`fûe£t_ítôy_«me
(
fûe£t
));

1724 
	`fûebích_shutdown
(1);

1727 (Ë
	`fb_°æ˝y
(
∑th
, 
∑th«me
, 
MAXPATHLEN
);

1728 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1729 (Ë
	`fb_°æˇt
(
∑th
, 
£äame
, 
MAXPATHLEN
);

1730 i‡((
	`°©64
(
∑th
, &
sb
) == 0) &&

1731 ((
sb
.
°_mode
 & 
S_IFMT
Ë=
S_IFBLK
)) {

1732 
fûe£t
->
fs_©ås
 |
FILESET_IS_RAW_DEV
;

1733 i‡(!(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
)) {

1734 
	`fûebích_log
(
LOG_ERROR
,

1736 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

1737 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

1738 
	`fûebích_shutdown
(1);

1744 
	}
}

1752 
	$fûe£t_¸óã£ts
()

1754 
fûe£t_t
 *
li°
;

1755 
ªt
 = 0;

1757 i‡(
fûe¸óã_d⁄e
) {

1760 
	`fûebích_log
(
LOG_INFO
,

1765 
fûe¸óã_d⁄e
 = 1;

1768 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 = 0;

1769 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_f•¨Æloc_cv
,

1770 
	`ùc_c⁄d©å
());

1772 
	`fûebích_log
(
LOG_INFO
, "PopulatingándÖre-allocating filesets");

1774 
li°
 = 
fûebích_shm
->
shm_fûe£éi°
;

1775 
li°
) {

1777 i‡((
	`avd_gë_öt
(
li°
->
fs_íåõs
) == 0) &&

1778 (
	`avd_gë_öt
(
li°
->
fs_Àafdús
) == 0)) {

1779 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo files orÜeafdirs");

1782 i‡(
li°
->
fs_dúdïthrv
 && !
	`AVD_IS_RANDOM
(list->fs_dirdepthrv)) {

1783 
	`fûebích_log
(
LOG_ERROR
,

1785 
	`fûebích_shutdown
(1);

1788 i‡(
	`AVD_IS_RANDOM
(
li°
->
fs_dúgamma
)) {

1789 
	`fûebích_log
(
LOG_ERROR
,

1791 
	`fûebích_shutdown
(1);

1795 i‡(
	`fûe£t_checkøw
(
li°
)) {

1796 
	`fûebích_log
(
LOG_INFO
,

1798 
	`avd_gë_°r
(
li°
->
fs_∑th
),

1799 
	`avd_gë_°r
(
li°
->
fs_«me
));

1800 
li°
 =Üi°->
fs_√xt
;

1804 
ªt
 = 
	`fûe£t_p›uœã
(
li°
);

1805 i‡(
ªt
)

1806  
ªt
;

1808 
ªt
 = 
	`fûe£t_¸óã
(
li°
);

1809 i‡(
ªt
)

1810  
ªt
;

1812 
li°
 =Üi°->
fs_√xt
;

1816 
	`fûebích_log
(
LOG_INFO
, "Waiting forÖre-allocationÅo finish "

1819 (Ë
	`±hªad_muãx_lock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1820 
fûebích_shm
->
shm_f•¨Æloc_cou¡
 > 0)

1821 (Ë
	`±hªad_c⁄d_waô
(

1822 &
fûebích_shm
->
shm_f•¨Æloc_cv
,

1823 &
fûebích_shm
->
shm_f•¨Æloc_lock
);

1824 (Ë
	`±hªad_muãx_u∆ock
(&
fûebích_shm
->
shm_f•¨Æloc_lock
);

1826 
	`fûebích_log
(
LOG_INFO
,

1829 i‡(
fûebích_shm
->
shm_f•¨Æloc_cou¡
 < 0)

1830  (
FILEBENCH_ERROR
);

1833 
	}
}

1839 
fûe£t_t
 *

1840 
	$fûe£t_föd
(*
«me
)

1842 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1844 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1846 
fûe£t
) {

1847 i‡(
	`°rcmp
(
«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)) == 0) {

1848 (Ë
	`ùc_muãx_u∆ock
(

1849 &
fûebích_shm
->
shm_fûe£t_lock
);

1850  (
fûe£t
);

1852 
fûe£t
 = fûe£t->
fs_√xt
;

1854 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1856  (
NULL
);

1857 
	}
}

1867 
	$fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
))

1869 
fûe£t_t
 *
fûe£t
 = 
fûebích_shm
->
shm_fûe£éi°
;

1870 
cou¡
 = 0;

1872 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1874 
fûe£t
) {

1875 i‡(
	`cmd
(
fûe£t
, 
cou¡
 =0Ë=
FILEBENCH_ERROR
) {

1876 (Ë
	`ùc_muãx_u∆ock
(

1877 &
fûebích_shm
->
shm_fûe£t_lock
);

1878  (
FILEBENCH_ERROR
);

1880 
fûe£t
 = fûe£t->
fs_√xt
;

1881 
cou¡
++;

1884 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_fûe£t_lock
);

1885  (
FILEBENCH_OK
);

1886 
	}
}

1893 
	$fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
)

1895 
∑thÀngth
;

1896 *
fûe£t_∑th
;

1897 *
fûe£t_«me
;

1898 
∑d
[] = " ";

1900 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
)Ë=
NULL
) {

1901 
	`fûebích_log
(
LOG_ERROR
, "%sÖathÇot set",

1902 
	`fûe£t_ítôy_«me
(
fûe£t
));

1903  (
FILEBENCH_ERROR
);

1906 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
fûe£t
->
fs_«me
)Ë=
NULL
) {

1907 
	`fûebích_log
(
LOG_ERROR
, "%sÇameÇot set",

1908 
	`fûe£t_ítôy_«me
(
fûe£t
));

1909  (
FILEBENCH_ERROR
);

1912 
∑thÀngth
 = 
	`°æí
(
fûe£t_∑th
Ë+ såÀn(
fûe£t_«me
);

1914 i‡(
∑thÀngth
 > 29)

1915 
∑thÀngth
 = 29;

1917 i‡(
fú°
) {

1918 
	`fûebích_log
(
LOG_INFO
, "File or FilesetÇame%20s%12s%10s",

1924 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_FILE
) {

1925 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1926 
	`fûebích_log
(
LOG_INFO
,

1928 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
]);

1930 
	`fûebích_log
(
LOG_INFO
,

1932 
fûe£t_∑th
, 
fûe£t_«me
, &
∑d
[
∑thÀngth
],

1933 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
));

1936 
	`fûebích_log
(
LOG_INFO
, "%s/%s%s%9llu%12llu%10llu",

1937 
fûe£t_∑th
, 
fûe£t_«me
,

1938 &
∑d
[
∑thÀngth
],

1939 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_size
),

1940 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
fûe£t
->
fs_dúwidth
),

1941 (
u_l⁄gl⁄g_t
)
fûe£t
->
fs_c⁄°íåõs
);

1943  (
FILEBENCH_OK
);

1944 
	}
}

	@fileset.h

26 #i‚de‡
_FB_FILESET_H


27 
	#_FB_FILESET_H


	)

29 
	~"fûebích.h
"

31 
	#FILE_ALLOC_BLOCK
 (
off64_t
)(1024 * 1024)

	)

33 
	#FSE_MAXTID
 16384

	)

35 
	#FSE_MAXPATHLEN
 16

	)

36 
	#FSE_TYPE_FILE
 0x00

	)

37 
	#FSE_TYPE_DIR
 0x01

	)

38 
	#FSE_TYPE_LEAFDIR
 0x02

	)

39 
	#FSE_TYPE_MASK
 0x03

	)

40 
	#FSE_FREE
 0x04

	)

41 
	#FSE_EXISTS
 0x08

	)

42 
	#FSE_BUSY
 0x10

	)

43 
	#FSE_REUSING
 0x20

	)

44 
	#FSE_THRD_WAITNG
 0x40

	)

46 
	sfûe£ã¡ry
 {

47 
fûe£ã¡ry
 *
	mf£_√xt
;

48 
fûe£ã¡ry
 *
	mf£_∑ª¡
;

49 
avl_node_t
 
	mf£_lök
;

51 
uöt_t
 
	mf£_ödex
;

52 
fûe£ã¡ry
 *
	mf£_√xto·y≥
;

53 
fûe£t
 *
	mf£_fûe£t
;

54 *
	mf£_∑th
;

55 
	mf£_dïth
;

56 
off64_t
 
	mf£_size
;

57 
	mf£_›í_˙t
;

58 
	mf£_Êags
;

59 } 
	tfûe£ã¡ry_t
;

61 
	#FSE_OFFSETOF
(
f
Ë((
size_t
)(&(((
fûe£ã¡ry_t
 *)0)->f)))

	)

64 
	#FILESET_PICKFILE
 0x00

	)

65 
	#FILESET_PICKDIR
 0x01

	)

66 
	#FILESET_PICKLEAFDIR
 0x02

	)

67 
	#FILESET_PICKMASK
 0x03

	)

69 
	#FILESET_PICKUNIQUE
 0x04

	)

71 
	#FILESET_PICKEXISTS
 0x10

	)

72 
	#FILESET_PICKNOEXIST
 0x20

	)

73 
	#FILESET_PICKBYINDEX
 0x40

	)

74 
	#FILESET_PICKFREE
 
FILESET_PICKUNIQUE


	)

77 
	#FILESET_IS_RAW_DEV
 0x01

	)

78 
	#FILESET_IS_FILE
 0x02

	)

80 
	sfûe£t
 {

81 
fûe£t
 *
	mfs_√xt
;

82 
avd_t
 
	mfs_«me
;

83 
avd_t
 
	mfs_∑th
;

84 
avd_t
 
	mfs_íåõs
;

86 
fböt_t
 
	mfs_c⁄°íåõs
;

87 
avd_t
 
	mfs_Àafdús
;

89 
fböt_t
 
	mfs_c⁄°Àafdús
;

91 
avd_t
 
	mfs_¥óŒo˝î˚¡
;

92 
	mfs_©ås
;

93 
avd_t
 
	mfs_dúwidth
;

94 
avd_t
 
	mfs_dúdïthrv
;

95 
avd_t
 
	mfs_size
;

96 
avd_t
 
	mfs_dúgamma
;

99 
avd_t
 
	mfs_¸óã
;

100 
avd_t
 
	mfs_∑øŒoc
;

101 
avd_t
 
	mfs_ªu£
;

102 
avd_t
 
	mfs_ªad⁄ly
;

103 
avd_t
 
	mfs_wrôe⁄ly
;

104 
avd_t
 
	mfs_åu°_åì
;

105 
	mfs_móndïth
;

106 
	mfs_mónwidth
;

107 
	mfs_ªÆfûes
;

108 
	mfs_ªÆÀafdús
;

109 
off64_t
 
	mfs_byãs
;

111 
öt64_t
 
	mfs_idÀ_fûes
;

112 
±hªad_c⁄d_t
 
	mfs_idÀ_fûes_cv
;

114 
öt64_t
 
	mfs_idÀ_dús
;

115 
±hªad_c⁄d_t
 
	mfs_idÀ_dús_cv
;

117 
öt64_t
 
	mfs_idÀ_Àafdús
;

118 
±hªad_c⁄d_t
 
	mfs_idÀ_Àafdús_cv
;

120 
±hªad_muãx_t
 
	mfs_pick_lock
;

121 
±hªad_c⁄d_t
 
	mfs_thrd_waô_cv
;

122 
avl_åì_t
 
	mfs_‰ì_fûes
;

123 
avl_åì_t
 
	mfs_exi°_fûes
;

124 
avl_åì_t
 
	mfs_n€x_fûes
;

125 
avl_åì_t
 
	mfs_dús
;

126 
avl_åì_t
 
	mfs_‰ì_Àaf_dús
;

127 
avl_åì_t
 
	mfs_exi°_Àaf_dús
;

128 
avl_åì_t
 
	mfs_n€x_Àaf_dús
;

130 
fûe£ã¡ry_t
 *
	mfs_fûñi°
;

131 
uöt_t
 
	mfs_fûe_exrŸ‹
[
FSE_MAXTID
];

133 
uöt_t
 
	mfs_fûe_√rŸ‹
;

135 
fûe£ã¡ry_t
 *
	mfs_dúli°
;

136 
uöt_t
 
	mfs_dúrŸ‹
;

137 
fûe£ã¡ry_t
 *
	mfs_Àafdúli°
;

138 
uöt_t
 
	mfs_Àafdú_exrŸ‹
;

140 
uöt_t
 
	mfs_Àafdú_√rŸ‹
;

141 *
	mfs_fûehi°›
;

142 
±hªad_muãx_t
 
	mfs_hi°o_lock
;

143 } 
	tfûe£t_t
;

145 
fûe£t_¸óã£ts
();

147 
fûe£t_dñëe_Æl_fûe£ts
();

148 
fûe£t_›ífûe
(
fb_fdesc_t
 *
fd
, 
fûe£t_t
 *
fûe£t
,

149 
fûe£ã¡ry_t
 *
íåy
, 
Êag
, 
mode
, 
©ås
);

150 
fûe£t_t
 *
fûe£t_deföe
(
avd_t
 
«me
,ávd_à
∑th
);

151 
fûe£t_t
 *
fûe£t_föd
(*
«me
);

152 
fûe£ã¡ry_t
 *
fûe£t_pick
(
fûe£t_t
 *
fûe£t
, 
Êags
, 
tid
,

153 
ödex
);

154 *
fûe£t_ªsﬁvï©h
(
fûe£ã¡ry_t
 *
íåy
);

155 
fûe£t_ôî
((*
cmd
)(
fûe£t_t
 *
fûe£t
, 
fú°
));

156 
	`fûe£t_¥öt
(
fûe£t_t
 *
fûe£t
, 
fú°
);

157 
	`fûe£t_unbusy
(
fûe£ã¡ry_t
 *
íåy
, 
upd©e_exi°
,

158 
√w_exi°_vÆ
, 
›í_˙t_ö¸
);

159 
	`fûe£t_dump_hi°o
(
fûe£t_t
 *
fûe£t
, 
fú°
);

160 
	`fûe£t_©èch_Æl_hi°os
();

	@flag.h

1 #i‚de‡
_FB_FLAG_H


2 
	#_FB_FLAG_H


	)

4 vﬁ©ûê
	tÊag_t
;

6 
ölöe
 
	$˛ór_Êag
(
Êag_t
 *
Êag
)

8 *
Êag
 = 0;

9 
	}
}

11 
ölöe
 
	$£t_Êag
(
Êag_t
 *
Êag
)

13 *
Êag
 = 1;

14 
	}
}

16 
ölöe
 
	$quîy_Êag
(
Êag_t
 *
Êag
)

18  (*
Êag
) != 0;

19 
	}
}

21 
ölöe
 
	$waô_Êag
(
Êag_t
 *
Êag
)

23 !
	`quîy_Êag
(
Êag
))

25 
	}
}

	@flowop.c

26 
	~"c⁄fig.h
"

28 #ifde‡
HAVE_LWPS


29 
	~<sys/lwp.h
>

31 
	~<f˙é.h
>

32 
	~"fûebích.h
"

33 
	~"Êow›.h
"

34 
	~"°©s.h
"

35 
	~"i›rio.h
"

37 
Êow›_t
 *
Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
,

38 
Êow›_t
 *
öhîô
, flow›_à**
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

39 
Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

40 
Êow›_composôe_öô
(
Êow›_t
 *
Êow›
);

41 
Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
);

104 
	$Êow›_¥öéi°
(
Êow›_t
 *
li°
)

106 
Êow›_t
 *
Êow›
 = 
li°
;

108 
Êow›
) {

109 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flowop-list %s-%d",

110 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

111 
Êow›
 = flow›->
fo_exec_√xt
;

114 
	}
}

121 
	$Êow›_¥öèŒ
()

123 
Êow›_t
 *
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 
	`fûebích_log
(
LOG_INFO
, "flowop-list %s-%d",

127 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

128 
Êow›
 = flow›->
fo_√xt
;

130 
	}
}

132 
	#TIMESPEC_TO_HRTIME
(
s
, 
e
Ë((”.
tv_£c
 - s.tv_sec) * 1000000000LL) + \

133 (
e
.
tv_n£c
 - 
s
.tv_n£c))

	)

138 
	$Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

141 
thªadÊow
->
tf_°ime
 = 
	`gëhπime
();

142 
	}
}

144 
Êow°©s
 
	gc⁄åﬁ°©s
;

145 
±hªad_muãx_t
 
	gc⁄åﬁ°©s_lock
;

146 
	gc⁄åﬁ°©s_zî€d
 = 0;

149 
	$Êow›_p›uœã_di°ributi⁄
(
Êow›_t
 *
Êow›
, 
Œ_dñay
)

151 
i
;

152 
iii
;

154 
iii
 = 1;

155 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

156 i‡(
Œ_dñay
 < 
iii
)

158 
iii
 <<= 1;

160 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]++;

161 
	}
}

171 
	$Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
)

173 
Œ_dñay
;

175 
Œ_dñay
 = (
	`gëhπime
(Ë- 
thªadÊow
->
tf_°ime
);

178 i‡(!
Êow›
->
fo_°©s
.
fs_möœt
 || 
Œ_dñay
 < flowop->fo_stats.fs_minlat)

179 
Êow›
->
fo_°©s
.
fs_möœt
 = 
Œ_dñay
;

181 i‡(
Œ_dñay
 > 
Êow›
->
fo_°©s
.
fs_maxœt
)

182 
Êow›
->
fo_°©s
.
fs_maxœt
 = 
Œ_dñay
;

184 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 +
Œ_dñay
;

185 
Êow›
->
fo_°©s
.
fs_cou¡
++;

186 
Êow›
->
fo_°©s
.
fs_byãs
 +
byãs
;

187 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

188 i‡((
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_IO
) ||

189 (
Êow›
->
fo_ty≥
 & 
FLOW_TYPE_AIO
)) {

190 
c⁄åﬁ°©s
.
fs_cou¡
++;

191 
c⁄åﬁ°©s
.
fs_byãs
 +
byãs
;

193 i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_READ
) {

194 
thªadÊow
->
tf_°©s
.
fs_rbyãs
 +
byãs
;

195 
thªadÊow
->
tf_°©s
.
fs_rcou¡
++;

196 
Êow›
->
fo_°©s
.
fs_rcou¡
++;

197 
c⁄åﬁ°©s
.
fs_rbyãs
 +
byãs
;

198 
c⁄åﬁ°©s
.
fs_rcou¡
++;

199 } i‡(
Êow›
->
fo_©ås
 & 
FLOW_ATTR_WRITE
) {

200 
thªadÊow
->
tf_°©s
.
fs_wbyãs
 +
byãs
;

201 
thªadÊow
->
tf_°©s
.
fs_wcou¡
++;

202 
Êow›
->
fo_°©s
.
fs_wcou¡
++;

203 
c⁄åﬁ°©s
.
fs_wbyãs
 +
byãs
;

204 
c⁄åﬁ°©s
.
fs_wcou¡
++;

207 i‡(
fûebích_shm
->
œthi°_íabÀd
)

208 
	`Êow›_p›uœã_di°ributi⁄
(
Êow›
, 
Œ_dñay
);

210 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

211 
	}
}

218 
	$Êow›_öôÊow
(
Êow›_t
 *
Êow›
)

224 i‡(
Êow›
->
fo_vÆue
)

225 
Êow›
->
fo_c⁄°vÆue
 = 
	`avd_gë_öt
(Êow›->
fo_vÆue
);

227 i‡(
Êow›
->
fo_wss
)

228 
Êow›
->
fo_c⁄°wss
 = 
	`avd_gë_öt
(Êow›->
fo_wss
);

230 i‡((*
Êow›
->
fo_öô
)(flowop) < 0) {

231 
	`fûebích_log
(
LOG_ERROR
, "flowop %s-%d init failed",

232 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

236 
	}
}

239 
	$Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 **
›s_li°_±r
)

241 
Êow›_t
 *
Êow›
 = *
›s_li°_±r
;

242 *
«me
;

244 
Êow›
) {

245 
Êow›_t
 *
√wÊow›
;

247 i‡(
Êow›
 =*
›s_li°_±r
)

248 *
›s_li°_±r
 = 
NULL
;

250 
√wÊow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
Êow›
->
fo_«me
,

251 
Êow›
, 
›s_li°_±r
, 1, 0);

252 i‡(
√wÊow›
 =
NULL
)

253  (
FILEBENCH_ERROR
);

256 i‡(
Êow›
->
fo_fûíame
) {

257 
«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

258 
√wÊow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

260 i‡(
√wÊow›
->
fo_fûe£t
 =
NULL
) {

261 
	`fûebích_log
(
LOG_ERROR
,

263 
√wÊow›
->
fo_«me
, 
«me
);

264 
	`fûebích_shutdown
(1);

268 i‡(
	`Êow›_öôÊow
(
√wÊow›
) < 0) {

269 
	`fûebích_log
(
LOG_ERROR
, "Flowop init of %s failed",

270 
√wÊow›
->
fo_«me
);

273 
Êow›
 = flow›->
fo_exec_√xt
;

276  (
FILEBENCH_OK
);

277 
	}
}

284 
	$Êow›_de°ru˘Êow
(
Êow›_t
 *
Êow›
)

286 (*
Êow›
->
fo_de°ru˘
)(flowop);

287 
	}
}

294 
	$Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
)

296 
Êow›_t
 *
Êow›
;

299 (Ë
	`¶ìp
(1);

301 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

304 i‡(
thªadÊow
->
tf_ru¬ög
 == 0) {

307 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

311 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

312 
thªadÊow
->
tf_ru¬ög
 = 0;

313 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

315 
Êow›
) {

316 
	`Êow›_de°ru˘Êow
(
Êow›
);

317 
Êow›
 = flow›->
fo_exec_√xt
;

319 
	}
}

334 
	$Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
)

336 
Êow›_t
 *
Êow›
;

337 
size_t
 
memsize
;

338 
ªt
 = 
FILEBENCH_OK
;

340 
	`£t_thªad_i›rio
(
thªadÊow
);

342 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

343 i‡(!
c⁄åﬁ°©s_zî€d
) {

344 (Ë
	`mem£t
(&
c⁄åﬁ°©s
, 0,  (controlstats));

345 
c⁄åﬁ°©s_zî€d
 = 1;

347 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

349 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

352 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

355 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

356 i‡(
	`Êow›_¸óã_ru¡ime_Êow›s
(
thªadÊow
, &thªadÊow->
tf_thrd_f›s
)

357 !
FILEBENCH_OK
) {

358 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

359 
	`fûebích_shutdown
(1);

362 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

365 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

368 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

370 #ifde‡
HAVE_LWPS


371 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %zx (%d) started",

372 
thªadÊow
,

373 
	`_lwp_£lf
());

383 
thªadÊow
->
tf_ab‹t
 = 0;

384 
thªadÊow
->
tf_ru¬ög
 = 1;

396 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_run_lock
);

397 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

399 
memsize
 = (
size_t
)
thªadÊow
->
tf_c⁄°memsize
;

405 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
) {

406 
thªadÊow
->
tf_mem
 =

407 
	`ùc_ismmÆloc
(
memsize
);

409 
thªadÊow
->
tf_mem
 =

410 
	`mÆloc
(
memsize
);

413 (Ë
	`mem£t
(
thªadÊow
->
tf_mem
, 0, 
memsize
);

414 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "ThªadáŒoˇãd %d byãs", 
memsize
);

417 
ªt
 =
FILEBENCH_OK
) {

418 
i
, 
cou¡
;

421 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

425 i‡(
fûebích_shm
->
shm_bequõt
) {

426 (Ë
	`¶ìp
(1);

431 i‡(!
fûebích_shm
->
shm_¥ocs_ru¬ög
) {

432 (Ë
	`¶ìp
(1);

436 i‡(
Êow›
 =
NULL
) {

437 
	`fûebích_log
(
LOG_ERROR
, "flowop_readÇull flowop");

442 
cou¡
 = ()
	`avd_gë_öt
(
Êow›
->
fo_ôîs
);

443 
i
 = 0; i < 
cou¡
; i++) {

445 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

446 "%s-%d", 
thªadÊow
->
tf_«me
, 
Êow›
->
fo_«me
,

447 
Êow›
->
fo_ö°™˚
);

449 
ªt
 = (*
Êow›
->
fo_func
)(
thªadÊow
, flowop);

455 i‡(
ªt
 =
FILEBENCH_ERROR
) {

456 
	`fûebích_log
(
LOG_ERROR
,

458 
thªadÊow
->
tf_«me
,

459 
thªadÊow
->
tf_ö°™˚
,

460 
Êow›
->
fo_«me
,

461 
Êow›
->
fo_ö°™˚
);

462 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

463 
thªadÊow
->
tf_ab‹t
 = 1;

464 
fûebích_shm
->
shm_f_ab‹t
 =

465 
FILEBENCH_ABORT_ERROR
;

466 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

475 i‡(
ªt
 =
FILEBENCH_NORSC
) {

476 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

477 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

478 i‡(
fûebích_shm
->
shm_rmode
 ==

479 
FILEBENCH_MODE_Q1STDONE
) {

480 
fûebích_shm
->
shm_f_ab‹t
 =

481 
FILEBENCH_ABORT_RSRC
;

482 } i‡(
fûebích_shm
->
shm_rmode
 !=

483 
FILEBENCH_MODE_QALLDONE
) {

484 
	`fûebích_log
(
LOG_ERROR1
,

491 
Êow›
->
fo_«me
,

492 
Êow›
->
fo_ö°™˚
);

493 
fûebích_shm
->
shm_f_ab‹t
 =

494 
FILEBENCH_ABORT_ERROR
;

496 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

504 i‡(
ªt
 =
FILEBENCH_DONE
) {

505 (Ë
	`ùc_muãx_lock
(&
thªadÊow
->
tf_lock
);

506 
thªadÊow
->
tf_ab‹t
 = 
FILEBENCH_DONE
;

507 
fûebích_shm
->
shm_f_ab‹t
 =

508 
FILEBENCH_ABORT_DONE
;

509 (Ë
	`ùc_muãx_u∆ock
(&
thªadÊow
->
tf_lock
);

519 i‡(
ªt
 !
FILEBENCH_OK
) {

520 
	`fûebích_log
(
LOG_ERROR
,

522 
Êow›
->
fo_«me
, 
ªt
);

523 
fûebích_shm
->
shm_f_ab‹t
 =

524 
FILEBENCH_ABORT_ERROR
;

530 
Êow›
 = flow›->
fo_exec_√xt
;

533 i‡(
Êow›
 =
NULL
) {

534 
Êow›
 = 
thªadÊow
->
tf_thrd_f›s
;

535 
thªadÊow
->
tf_°©s
.
fs_cou¡
++;

539 #ifde‡
HAVE_LWPS


540 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "Thread %dÉxiting",

541 
	`_lwp_£lf
());

545 
	`Êow›_de°ru˘_Æl_Êows
(
thªadÊow
);

547 
	`±hªad_exô
(&
thªadÊow
->
tf_ab‹t
);

548 
	}
}

556 
	$Êow›_öô
(
isma°î
)

558 i‡(
isma°î
) {

559 (Ë
	`±hªad_muãx_öô
(&
c⁄åﬁ°©s_lock
,

560 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

561 
	`Êow›lib_Êowöô
();

564 
fûebích_shm
->
shm_fûesys_ty≥
) {

565 
LOCAL_FS_PLUG
:

566 i‡(
isma°î
)

567 
	`fb_lfs_√wÊow›s
();

568 
	`fb_lfs_funcvecöô
();

570 
NFS3_PLUG
:

571 
NFS4_PLUG
:

572 
CIFS_PLUG
:

575 
	}
}

581 
	$Êow›_dñëe
(
Êow›_t
 **
Êow›li°
, flow›_à*
Êow›
)

583 
Êow›_t
 *
íåy
 = *
Êow›li°
;

584 
found
 = 0;

586 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

587 
Êow›
->
fo_«me
,

588 
Êow›
->
fo_ö°™˚
);

591 i‡(
Êow›
 =*
Êow›li°
) {

593 *
Êow›li°
 = 
Êow›
->
fo_exec_√xt
;

594 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

596 
Êow›
->
fo_«me
,

597 
Êow›
->
fo_ö°™˚
);

599 
íåy
->
fo_exec_√xt
) {

600 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

602 
íåy
->
fo_exec_√xt
->
fo_«me
,

603 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
,

604 
Êow›
->
fo_«me
,

605 
Êow›
->
fo_ö°™˚
);

607 i‡(
Êow›
 =
íåy
->
fo_exec_√xt
) {

609 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

611 
íåy
->
fo_exec_√xt
->
fo_«me
,

612 
íåy
->
fo_exec_√xt
->
fo_ö°™˚
);

613 
íåy
->
fo_exec_√xt
 =

614 
íåy
->
fo_exec_√xt
->fo_exec_next;

617 
íåy
 =É¡ry->
fo_exec_√xt
;

622 
íåy
 = 
fûebích_shm
->
shm_Êow›li°
;

624 i‡(
Êow›
 =
fûebích_shm
->
shm_Êow›li°
) {

626 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
->
fo_√xt
;

627 
found
 = 1;

629 
íåy
->
fo_√xt
) {

630 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

632 
íåy
->
fo_√xt
->
fo_«me
,

633 
íåy
->
fo_√xt
->
fo_ö°™˚
,

634 
Êow›
->
fo_«me
,

635 
Êow›
->
fo_ö°™˚
);

637 i‡(
Êow›
 =
íåy
->
fo_√xt
) {

639 
íåy
->
fo_√xt
 =Éntry->fo_next->fo_next;

640 
found
 = 1;

644 
íåy
 =É¡ry->
fo_√xt
;

647 i‡(
found
) {

648 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

650 
Êow›
->
fo_«me
,

651 
Êow›
->
fo_ö°™˚
);

652 
	`ùc_‰ì
(
FILEBENCH_FLOWOP
, (*)
Êow›
);

654 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Flowop %s-%dÇot found!",

655 
Êow›
->
fo_«me
,

656 
Êow›
->
fo_ö°™˚
);

658 
	}
}

664 
	$Êow›_dñëe_Æl
(
Êow›_t
 **
Êow›li°
)

666 
Êow›_t
 *
Êow›
 = *
Êow›li°
;

667 
Êow›_t
 *
√xt_Êow›
;

669 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

671 
Êow›
) {

672 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting flowop (%s-%d)",

673 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

675 i‡(
Êow›
->
fo_ö°™˚
 &&

676 (
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

677 
Êow›
 = flow›->
fo_exec_√xt
;

680 
√xt_Êow›
 = 
Êow›
->
fo_exec_√xt
;

681 
	`Êow›_dñëe
(
Êow›li°
, 
Êow›
);

682 
Êow›
 = 
√xt_Êow›
;

685 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

686 
	}
}

703 
Êow›_t
 *

704 
	$Êow›_deföe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

705 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

707 
Êow›_t
 *
Êow›
;

709 i‡(
«me
 =
NULL
)

710  (
NULL
);

712 i‡((
Êow›
 = (
Êow›_t
 *)
	`ùc_mÆloc
(
FILEBENCH_FLOWOP
)Ë=
NULL
) {

713 
	`fûebích_log
(
LOG_ERROR
,

715  (
NULL
);

718 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "defining flowops %s-%d,áddr %zx",

719 
«me
, 
ö°™˚
, 
Êow›
);

721 i‡(
Êow›
 =
NULL
)

722  (
NULL
);

724 i‡(
öhîô
) {

725 (Ë
	`mem˝y
(
Êow›
, 
öhîô
,  (
Êow›_t
));

726 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

727 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

728 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

729 
Êow›
->
fo_√xt
 = 
NULL
;

730 
Êow›
->
fo_exec_√xt
 = 
NULL
;

731 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

732 "Êow› %s-%d cÆlög inô", 
«me
, 
ö°™˚
);

734 (Ë
	`mem£t
(
Êow›
, 0,  (
Êow›_t
));

735 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

736 
Êow›
->
fo_ty≥
 = 
ty≥
;

737 (Ë
	`±hªad_muãx_öô
(&
Êow›
->
fo_lock
,

738 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

739 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

743 
Êow›
->
fo_thªad
 = 
thªadÊow
;

746 i‡(
fûebích_shm
->
shm_Êow›li°
 =
NULL
) {

747 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

748 
Êow›
->
fo_√xt
 = 
NULL
;

750 
Êow›
->
fo_√xt
 = 
fûebích_shm
->
shm_Êow›li°
;

751 
fûebích_shm
->
shm_Êow›li°
 = 
Êow›
;

754 (Ë
	`°r˝y
(
Êow›
->
fo_«me
, 
«me
);

755 
Êow›
->
fo_ö°™˚
 = 
ö°™˚
;

757 i‡(
Êow›li°_hdp
 =
NULL
)

758  (
Êow›
);

761 i‡(*
Êow›li°_hdp
 =
NULL
) {

762 *
Êow›li°_hdp
 = 
Êow›
;

763 
Êow›
->
fo_exec_√xt
 = 
NULL
;

765 
Êow›_t
 *
Êowíd
;

768 
Êowíd
 = *
Êow›li°_hdp
;

769 
Êowíd
->
fo_exec_√xt
 !
NULL
)

770 
Êowíd
 = flowíd->
fo_exec_√xt
;

771 
Êowíd
->
fo_exec_√xt
 = 
Êow›
;

772 
Êow›
->
fo_exec_√xt
 = 
NULL
;

775  (
Êow›
);

776 
	}
}

783 
Êow›_t
 *

784 
	$Êow›_deföe
(
thªadÊow_t
 *
thªadÊow
, *
«me
, 
Êow›_t
 *
öhîô
,

785 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
)

787 
Êow›_t
 *
Êow›
;

789 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

790 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
thªadÊow
, 
«me
,

791 
öhîô
, 
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

792 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

794 i‡(
Êow›
 =
NULL
)

795  (
NULL
);

797 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

799  (
Êow›
);

800 
	}
}

807 
Êow›_t
 *

808 
	$Êow›_√w_composôe_deföe
(*
«me
)

810 
Êow›_t
 *
Êow›
;

812 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

813 
Êow›
 = 
	`Êow›_deföe_comm⁄
(
NULL
, 
«me
,

814 
NULL
, NULL, 0, 
FLOW_TYPE_COMPOSITE
);

815 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

817 i‡(
Êow›
 =
NULL
)

818  (
NULL
);

820 
Êow›
->
fo_func
 = 
Êow›_composôe
;

821 
Êow›
->
fo_öô
 = 
Êow›_composôe_öô
;

822 
Êow›
->
fo_de°ru˘
 = 
Êow›_composôe_de°ru˘
;

823 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

825  (
Êow›
);

826 
	}
}

838 
	$Êow›_föd_b¨rõr
()

841 (Ë
	`±hªad_rwlock_wæock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

842 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_Êow›_föd_lock
);

843 
	}
}

849 
Êow›_t
 *

850 
	$Êow›_föd
(*
«me
)

852 
Êow›_t
 *
Êow›
;

853 
Êow›_t
 *
ªsu…
 = 
NULL
;

855 
	`Êow›_föd_b¨rõr
();

857 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

859 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

861 
Êow›
) {

862 i‡(
	`°rcmp
(
«me
, 
Êow›
->
fo_«me
) == 0) {

865 i‡(
ªsu…
 =
NULL
) {

866 
ªsu…
 = 
Êow›
;

867 
Êow›
->
fo_ªsu…√xt
 = 
NULL
;

869 
Êow›
->
fo_ªsu…√xt
 = 
ªsu…
;

870 
ªsu…
 = 
Êow›
;

873 
Êow›
 = flow›->
fo_√xt
;

876 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

878  
ªsu…
;

879 
	}
}

885 
Êow›_t
 *

886 
	$Êow›_föd_⁄e
(*
«me
, 
ö°™˚
)

888 
Êow›_t
 *
ã°_Êow›
;

890 
	`Êow›_föd_b¨rõr
();

892 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

894 
ã°_Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

896 
ã°_Êow›
) {

897 i‡((
	`°rcmp
(
«me
, 
ã°_Êow›
->
fo_«me
) == 0) &&

898 (
ö°™˚
 =
ã°_Êow›
->
fo_ö°™˚
))

901 
ã°_Êow›
 =Åe°_Êow›->
fo_√xt
;

904 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

906  (
ã°_Êow›
);

907 
	}
}

915 
Êow›_t
 *

916 
	$Êow›_ªcur£_£¨ch
(*
∑th
, *
«me
, 
Êow›_t
 *
li°
)

918 
Êow›_t
 *
ã°_Êow›
;

919 
fuŒ«me
[
MAXPATHLEN
];

921 
ã°_Êow›
 = 
li°
;

928 i‡(
∑th
) {

929 i‡((
	`°æí
(
∑th
Ë+ såÀn(
«me
Ë+ 1Ë> 
MAXPATHLEN
) {

930 
	`fûebích_log
(
LOG_ERROR
,

932 
∑th
, 
«me
);

933  (
NULL
);

937 (Ë
	`°r˝y
(
fuŒ«me
, 
∑th
);

938 (Ë
	`°rˇt
(
fuŒ«me
, ".");

939 (Ë
	`°rˇt
(
fuŒ«me
, 
«me
);

941 (Ë
	`°r˝y
(
fuŒ«me
, 
«me
);

948 
ã°_Êow›
) {

949 i‡(
	`°rcmp
(
fuŒ«me
, 
ã°_Êow›
->
fo_«me
) == 0)

950  (
ã°_Êow›
);

952 i‡(
ã°_Êow›
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

953 
Êow›_t
 *
found_Êow›
;

955 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(

956 
ã°_Êow›
->
fo_«me
, 
«me
,

957 
ã°_Êow›
->
fo_comp_f›s
);

959 i‡(
found_Êow›
)

960  (
found_Êow›
);

962 
ã°_Êow›
 =Åe°_Êow›->
fo_exec_√xt
;

966  (
NULL
);

967 
	}
}

973 
Êow›_t
 *

974 
	$Êow›_föd_‰om_li°
(*
«me
, 
Êow›_t
 *
li°
)

976 
Êow›_t
 *
found_Êow›
;

978 
	`Êow›_föd_b¨rõr
();

980 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_Êow›_lock
);

982 
found_Êow›
 = 
	`Êow›_ªcur£_£¨ch
(
NULL
, 
«me
, 
li°
);

984 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_Êow›_lock
);

986  (
found_Êow›
);

987 
	}
}

994 
	$Êow›_composôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

996 
Êow›_t
 *
ö√r_Êow›
;

999 
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1002 
ö√r_Êow›
) {

1003 
i
, 
cou¡
;

1006 i‡(
thªadÊow
->
tf_ab‹t
 || 
fûebích_shm
->
shm_f_ab‹t
)

1007  (
FILEBENCH_DONE
);

1010 
cou¡
 = ()
	`avd_gë_öt
(
ö√r_Êow›
->
fo_ôîs
);

1011 
i
 = 0; i < 
cou¡
; i++) {

1013 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%s:Éxecuting flowop "

1014 "%s-%d", 
thªadÊow
->
tf_«me
,

1015 
ö√r_Êow›
->
fo_«me
,

1016 
ö√r_Êow›
->
fo_ö°™˚
);

1018 (*
ö√r_Êow›
->
fo_func
)(
thªadÊow
,

1019 
ö√r_Êow›
)) {

1022 
FILEBENCH_DONE
:

1023  (
FILEBENCH_DONE
);

1026 
FILEBENCH_NORSC
:

1027  (
FILEBENCH_NORSC
);

1030 
FILEBENCH_ERROR
:

1031 
	`fûebích_log
(
LOG_ERROR
,

1033 
ö√r_Êow›
->
fo_«me
);

1034  (
FILEBENCH_ERROR
);

1044 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1048  (
FILEBENCH_OK
);

1049 
	}
}

1056 
	$Êow›_composôe_öô
(
Êow›_t
 *
Êow›
)

1058 
îr
;

1060 
îr
 = 
	`Êow›_¸óã_ru¡ime_Êow›s
(
Êow›
->
fo_thªad
,

1061 &
Êow›
->
fo_comp_f›s
);

1062 i‡(
îr
 !
FILEBENCH_OK
)

1063  (
îr
);

1065 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1067 
	}
}

1073 
	$Êow›_composôe_de°ru˘
(
Êow›_t
 *
Êow›
)

1075 
Êow›_t
 *
ö√r_Êow›
 = 
Êow›
->
fo_comp_f›s
;

1077 
ö√r_Êow›
) {

1078 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Deleting inner flowop (%s-%d)",

1079 
ö√r_Êow›
->
fo_«me
, i¬î_Êow›->
fo_ö°™˚
);

1081 i‡(
ö√r_Êow›
->
fo_ö°™˚
 &&

1082 (
ö√r_Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
)) {

1083 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1086 
	`Êow›_dñëe
(&
Êow›
->
fo_comp_f›s
, 
ö√r_Êow›
);

1087 
ö√r_Êow›
 = i¬î_Êow›->
fo_exec_√xt
;

1089 
	}
}

1096 
	$Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
)

1098 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1099  (
FILEBENCH_OK
);

1100 
	}
}

1103 
	$Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
)

1105 *
buf
;

1108 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1109 
buf
 = 
Êow›
->
fo_buf
;

1110 
Êow›
->
fo_buf
 = 
NULL
;

1111 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1113 i‡(
buf
)

1114 
	`‰ì
(
buf
);

1115 
	}
}

1125 
	$Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
)

1127 
i
;

1129 
i
 = 0; i < 
n›s
; i++) {

1130 
Êow›_t
 *
Êow›
;

1131 
Êow›_¥Ÿo_t
 *
Ê¥Ÿo
;

1133 
Ê¥Ÿo
 = &(
li°
[
i
]);

1136 
Êow›
 = 
	`Êow›_deföe
(
NULL
, 
Ê¥Ÿo
->
Ê_«me
, NULL,

1137 
NULL
, 
FLOW_DEFINITION
, 
Ê¥Ÿo
->
Ê_ty≥
);

1138 i‡(!
Êow›
) {

1139 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create flowop %s\n",

1140 
Ê¥Ÿo
->
Ê_«me
);

1141 
	`fûebích_shutdown
(1);

1144 
Êow›
->
fo_func
 = 
Ê¥Ÿo
->
Ê_func
;

1145 
Êow›
->
fo_öô
 = 
Ê¥Ÿo
->
Ê_öô
;

1146 
Êow›
->
fo_de°ru˘
 = 
Ê¥Ÿo
->
Ê_de°ru˘
;

1147 
Êow›
->
fo_©ås
 = 
Ê¥Ÿo
->
Ê_©ås
;

1149 
	}
}

	@flowop.h

26 #i‚def 
_FB_FLOWOP_H


27 
	#_FB_FLOWOP_H


	)

29 
	~"fûebích.h
"

31 
	sÊow›
 {

32 
	mfo_«me
[128];

33 
	mfo_ö°™˚
;

34 
Êow›
 *
	mfo_√xt
;

35 
Êow›
 *
	mfo_exec_√xt
;

36 
Êow›
 *
	mfo_ªsu…√xt
;

37 
Êow›
 *
	mfo_comp_f›s
;

38 
v¨_t
 *
	mfo_lv¨_li°
;

39 
thªadÊow
 *
	mfo_thªad
;

40 (*
	mfo_func
)();

41 (*
	mfo_öô
)();

42 (*
	mfo_de°ru˘
)();

43 
	mfo_ty≥
;

44 
	mfo_©ås
;

45 
avd_t
 
	mfo_fûíame
;

46 
fûe£t_t
 *
	mfo_fûe£t
;

47 
	mfo_fdnumbî
;

48 
	mfo_§cfdnumbî
;

49 
fböt_t
 
	mfo_c⁄°vÆue
;

50 
fböt_t
 
	mfo_c⁄°wss
;

51 
avd_t
 
	mfo_iosize
;

52 
avd_t
 
	mfo_wss
;

53 
	mfo_èrgë«me
[128];

54 
Êow›
 *
	mfo_èrgës
;

55 
Êow›
 *
	mfo_èrgë√xt
;

56 
avd_t
 
	mfo_ôîs
;

57 
avd_t
 
	mfo_vÆue
;

58 
avd_t
 
	mfo_£quítül
;

59 
avd_t
 
	mfo_øndom
;

60 
avd_t
 
	mfo_°ride
;

61 
avd_t
 
	mfo_backw¨ds
;

62 
avd_t
 
	mfo_dsync
;

63 
avd_t
 
	mfo_blockög
;

64 
avd_t
 
	mfo_dúe˘io
;

65 
avd_t
 
	mfo_rŸ©efd
;

66 
avd_t
 
	mfo_fûeödex
;

67 
avd_t
 
	mfo_n‹ódahód
;

68 
Êow°©s
 
	mfo_°©s
;

69 
±hªad_c⁄d_t
 
	mfo_cv
;

70 
±hªad_muãx_t
 
	mfo_lock
;

71 *
	mfo_¥iv©e
;

72 *
	mfo_buf
;

73 
uöt64_t
 
	mfo_buf_size
;

74 #ifde‡
HAVE_SYSV_SEM


75 
	mfo_£mid_lw
;

76 
	mfo_£mid_hw
;

78 
£m_t
 
	mfo_£m
;

80 
avd_t
 
	mfo_highw©î
;

81 *
	mfo_idp
;

82 
hπime_t
 
	mfo_time°amp
;

83 
	mfo_öôãd
;

84 
öt64_t
 
	mfo_çutbuckë
;

85 
uöt64_t
 
	mfo_çuéa°
;

87 } 
	tÊow›_t
;

90 
	#FLOW_ATTR_SEQUENTIAL
 0x1

	)

91 
	#FLOW_ATTR_RANDOM
 0x2

	)

92 
	#FLOW_ATTR_STRIDE
 0x4

	)

93 
	#FLOW_ATTR_BACKWARDS
 0x8

	)

94 
	#FLOW_ATTR_DSYNC
 0x10

	)

95 
	#FLOW_ATTR_BLOCKING
 0x20

	)

96 
	#FLOW_ATTR_DIRECTIO
 0x40

	)

97 
	#FLOW_ATTR_READ
 0x80

	)

98 
	#FLOW_ATTR_WRITE
 0x100

	)

99 
	#FLOW_ATTR_FADV_RANDOM
 0x200

	)

103 
	#FLOW_DEFINITION
 0

	)

104 
	#FLOW_INNER_DEF
 -1

	)

105 
	#FLOW_MASTER
 -2

	)

109 
	#FLOW_TYPES
 6

	)

110 
	#FLOW_TYPE_GLOBAL
 0

	)

111 
	#FLOW_TYPE_IO
 1

	)

112 
	#FLOW_TYPE_AIO
 2

	)

113 
	#FLOW_TYPE_SYNC
 3

	)

114 
	#FLOW_TYPE_COMPOSITE
 4

	)

115 
	#FLOW_TYPE_OTHER
 5

	)

117 
	sÊow›_¥Ÿo
 {

118 
	mÊ_ty≥
;

119 
	mÊ_©ås
;

120 *
	mÊ_«me
;

121 (*
	mÊ_öô
)();

122 (*
	mÊ_func
)();

123 (*
	mÊ_de°ru˘
)();

124 } 
	tÊow›_¥Ÿo_t
;

126 
Êow°©s
 
c⁄åﬁ°©s
;

127 
±hªad_muãx_t
 
c⁄åﬁ°©s_lock
;

129 
Êow›_t
 *
Êow›_deföe
(
thªadÊow_t
 *, *
«me
, flow›_à*
öhîô
,

130 
Êow›_t
 **
Êow›li°_hdp
, 
ö°™˚
, 
ty≥
);

132 
Êow›_t
 *
Êow›_föd
(*
«me
);

133 
Êow›_t
 *
Êow›_föd_⁄e
(*
«me
, 
ö°™˚
);

134 
Êow›_t
 *
Êow›_föd_‰om_li°
(*
«me
, flow›_à*
li°
);

135 
Êow›_öô_gíîic
(
Êow›_t
 *
Êow›
);

136 
Êow›_de°ru˘_gíîic
(
Êow›_t
 *
Êow›
);

137 
Êow›_add_‰om_¥Ÿo
(
Êow›_¥Ÿo_t
 *
li°
, 
n›s
);

138 
Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

139 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
);

140 
Êow›lib_Êowöô
();

141 
Êow›_dñëe_Æl
(
Êow›_t
 **
thªadli°
);

142 
Êow›_íd›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
öt64_t
 
byãs
);

143 
Êow›_begö›
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

144 
Êow›_de°ru˘_Æl_Êows
(
thªadÊow_t
 *
thªadÊow
);

145 
Êow›_t
 *
Êow›_√w_composôe_deföe
(*
«me
);

146 
Êow›_¥öèŒ
();

148 
Êow›_öô
(
isma°î
);

151 
fb_lfs_funcvecöô
();

152 
fb_lfs_√wÊow›s
();

	@flowop_library.c

28 
	~"c⁄fig.h
"

30 
	~<sys/ty≥s.h
>

31 
	~<°ddef.h
>

32 
	~<sys/ùc.h
>

33 
	~<sys/£m.h
>

34 
	~<sys/î∫o.h
>

35 
	~<sys/time.h
>

36 
	~<öây≥s.h
>

37 
	~<f˙é.h
>

38 
	~<m©h.h
>

39 
	~<dúít.h
>

41 #i‚de‡
HAVE_SYSV_SEM


42 
	~<£m≠h‹e.h
>

45 
	~"fûebích.h
"

46 
	~"Êow›.h
"

47 
	~"fûe£t.h
"

48 
	~"fb_øndom.h
"

49 
	~"utûs.h
"

50 
	~"f•lug.h
"

75 
Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
);

76 
Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

77 
Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

78 
Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

79 
Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

80 
Êow›lib_block_öô
(
Êow›_t
 *
Êow›
);

81 
Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

82 
Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

83 
Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

84 
Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

85 
Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

86 
Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
);

87 
Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

88 
Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
);

89 
Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
);

90 
Êow›lib_evíéimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

91 
Êow›lib_bwlimô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

92 
Êow›lib_i›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

93 
Êow›lib_›¶imô
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

94 
Êow›lib_›ífûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

95 
Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
, 
fd
);

96 
Êow›lib_¸óãfûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

97 
Êow›lib_˛o£fûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

98 
Êow›lib_makedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

99 
Êow›lib_ªmovedú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

100 
Êow›lib_li°dú
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

101 
Êow›lib_fsync
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

102 
Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

103 
Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *, 
Êow›_t
 *
Êow›
);

104 
Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

105 
Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

106 
Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

107 
Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

108 
Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

109 
Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

110 
Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

111 
Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
);

112 
Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
);

113 
Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
);

115 
Êow›_¥Ÿo_t
 
	gÊow›lib_funcs
[] = {

116 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôe", 
Êow›_öô_gíîic
,

117 
Êow›lib_wrôe
, 
Êow›_de°ru˘_gíîic
},

118 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªad", 
Êow›_öô_gíîic
,

119 
Êow›lib_ªad
, 
Êow›_de°ru˘_gíîic
},

120 {
FLOW_TYPE_SYNC
, 0, "block", 
Êow›lib_block_öô
,

121 
Êow›lib_block
, 
Êow›_de°ru˘_gíîic
},

122 {
FLOW_TYPE_SYNC
, 0, "wakeup", 
Êow›_öô_gíîic
,

123 
Êow›lib_wakeup
, 
Êow›_de°ru˘_gíîic
},

124 {
FLOW_TYPE_SYNC
, 0, "£mblock", 
Êow›lib_£mblock_öô
,

125 
Êow›lib_£mblock
, 
Êow›lib_£mblock_de°ru˘
},

126 {
FLOW_TYPE_SYNC
, 0, "£mpo°", 
Êow›lib_£mpo°_öô
,

127 
Êow›lib_£mpo°
, 
Êow›lib_de°ru˘_no›
},

128 {
FLOW_TYPE_OTHER
, 0, "hog", 
Êow›_öô_gíîic
,

129 
Êow›lib_hog
, 
Êow›_de°ru˘_gíîic
},

130 {
FLOW_TYPE_OTHER
, 0, "dñay", 
Êow›_öô_gíîic
,

131 
Êow›lib_dñay
, 
Êow›_de°ru˘_gíîic
},

132 {
FLOW_TYPE_OTHER
, 0, "evíéimô", 
Êow›_öô_gíîic
,

133 
Êow›lib_evíéimô
, 
Êow›_de°ru˘_gíîic
},

134 {
FLOW_TYPE_OTHER
, 0, "bwlimô", 
Êow›_öô_gíîic
,

135 
Êow›lib_bwlimô
, 
Êow›_de°ru˘_gíîic
},

136 {
FLOW_TYPE_OTHER
, 0, "i›¶imô", 
Êow›_öô_gíîic
,

137 
Êow›lib_i›¶imô
, 
Êow›_de°ru˘_gíîic
},

138 {
FLOW_TYPE_OTHER
, 0, "›¶imô", 
Êow›_öô_gíîic
,

139 
Êow›lib_›¶imô
, 
Êow›_de°ru˘_gíîic
},

140 {
FLOW_TYPE_OTHER
, 0, "föish⁄cou¡", 
Êow›_öô_gíîic
,

141 
Êow›lib_föish⁄cou¡
, 
Êow›_de°ru˘_gíîic
},

142 {
FLOW_TYPE_OTHER
, 0, "föish⁄byãs", 
Êow›_öô_gíîic
,

143 
Êow›lib_föish⁄byãs
, 
Êow›_de°ru˘_gíîic
},

144 {
FLOW_TYPE_IO
, 0, "›ífûe", 
Êow›_öô_gíîic
,

145 
Êow›lib_›ífûe
, 
Êow›_de°ru˘_gíîic
},

146 {
FLOW_TYPE_IO
, 0, "¸óãfûe", 
Êow›_öô_gíîic
,

147 
Êow›lib_¸óãfûe
, 
Êow›_de°ru˘_gíîic
},

148 {
FLOW_TYPE_IO
, 0, "˛o£fûe", 
Êow›_öô_gíîic
,

149 
Êow›lib_˛o£fûe
, 
Êow›_de°ru˘_gíîic
},

150 {
FLOW_TYPE_IO
, 0, "makedú", 
Êow›_öô_gíîic
,

151 
Êow›lib_makedú
, 
Êow›_de°ru˘_gíîic
},

152 {
FLOW_TYPE_IO
, 0, "ªmovedú", 
Êow›_öô_gíîic
,

153 
Êow›lib_ªmovedú
, 
Êow›_de°ru˘_gíîic
},

154 {
FLOW_TYPE_IO
, 0, "li°dú", 
Êow›_öô_gíîic
,

155 
Êow›lib_li°dú
, 
Êow›_de°ru˘_gíîic
},

156 {
FLOW_TYPE_IO
, 0, "fsync", 
Êow›_öô_gíîic
,

157 
Êow›lib_fsync
, 
Êow›_de°ru˘_gíîic
},

158 {
FLOW_TYPE_IO
, 0, "fsync£t", 
Êow›_öô_gíîic
,

159 
Êow›lib_fsync£t
, 
Êow›_de°ru˘_gíîic
},

160 {
FLOW_TYPE_IO
, 0, "°©fûe", 
Êow›_öô_gíîic
,

161 
Êow›lib_°©fûe
, 
Êow›_de°ru˘_gíîic
},

162 {
FLOW_TYPE_IO
, 
FLOW_ATTR_READ
, "ªadwhﬁefûe", 
Êow›_öô_gíîic
,

163 
Êow›lib_ªadwhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

164 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûe", 
Êow›_öô_gíîic
,

165 
Êow›lib_≠≥ndfûe
, 
Êow›_de°ru˘_gíîic
},

166 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "≠≥ndfûî™d", 
Êow›_öô_gíîic
,

167 
Êow›lib_≠≥ndfûî™d
, 
Êow›_de°ru˘_gíîic
},

168 {
FLOW_TYPE_IO
, 0, "dñëefûe", 
Êow›_öô_gíîic
,

169 
Êow›lib_dñëefûe
, 
Êow›_de°ru˘_gíîic
},

170 {
FLOW_TYPE_IO
, 
FLOW_ATTR_WRITE
, "wrôewhﬁefûe", 
Êow›_öô_gíîic
,

171 
Êow›lib_wrôewhﬁefûe
, 
Êow›_de°ru˘_gíîic
},

172 {
FLOW_TYPE_OTHER
, 0, "¥öt", 
Êow›_öô_gíîic
,

173 
Êow›lib_¥öt
, 
Êow›_de°ru˘_gíîic
},

175 {
FLOW_TYPE_OTHER
, 0, "ã°øndv¨", 
Êow›lib_ã°øndv¨_öô
,

176 
Êow›lib_ã°øndv¨
, 
Êow›lib_ã°øndv¨_de°ru˘
}

188 
	$Êow›lib_Êowöô
()

190 
n›s
 =  (
Êow›lib_funcs
Ë/  (
Êow›_¥Ÿo_t
);

192 
	`Êow›_add_‰om_¥Ÿo
(
Êow›lib_funcs
, 
n›s
);

193 
	}
}

200 
	$Êow›lib_de°ru˘_no›
(
Êow›_t
 *
Êow›
)

202 
	}
}

210 
	$Êow›lib_fûóârs
(
Êow›_t
 *
Êow›
)

212 
©ås
 = 0;

214 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dúe˘io
))

215 
©ås
 |
FLOW_ATTR_DIRECTIO
;

217 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

218 
©ås
 |
FLOW_ATTR_DSYNC
;

220 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_n‹ódahód
))

221 
©ås
 |
FLOW_ATTR_FADV_RANDOM
;

223  (
©ås
);

224 
	}
}

234 
	$Êow›lib_pickfûe
(
fûe£ã¡ry_t
 **
fûï
, 
Êow›_t
 *
Êow›
, 
Êags
, 
tid
)

236 
fûe£t_t
 *
fûe£t
;

237 
fûeödex
;

239 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

240 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

241  (
FILEBENCH_ERROR
);

244 i‡(
Êow›
->
fo_fûeödex
) {

245 
fûeödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
));

246 
fûeödex
 = fûeödex % 
fûe£t
->
fs_c⁄°íåõs
;

247 
Êags
 |
FILESET_PICKBYINDEX
;

249 
fûeödex
 = 0;

252 i‡((*
fûï
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKFILE
 | 
Êags
,

253 
tid
, 
fûeödex
)Ë=
NULL
) {

254 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

256 
Êow›
->
fo_«me
,

257 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

258  (
FILEBENCH_NORSC
);

261  (
FILEBENCH_OK
);

262 
	}
}

272 
	$Êow›lib_pickÀafdú
(
fûe£ã¡ry_t
 **
dúp
, 
Êow›_t
 *
Êow›
, 
Êags
)

274 
fûe£t_t
 *
fûe£t
;

275 
dúödex
;

277 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

278 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

279  (
FILEBENCH_ERROR
);

282 i‡(
Êow›
->
fo_fûeödex
) {

283 
dúödex
 = ()(
	`avd_gë_dbl
(
Êow›
->
fo_fûeödex
) *

284 (()(
fûe£t
->
fs_c⁄°Àafdús
 / 2)));

285 
dúödex
 = dúödex % 
fûe£t
->
fs_c⁄°Àafdús
;

286 
Êags
 |
FILESET_PICKBYINDEX
;

288 
dúödex
 = 0;

291 i‡((*
dúp
 = 
	`fûe£t_pick
(
fûe£t
,

292 
FILESET_PICKLEAFDIR
 | 
Êags
, 0, 
dúödex
)Ë=
NULL
) {

293 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

295 
Êow›
->
fo_«me
,

296 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

297  (
FILEBENCH_NORSC
);

300  (
FILEBENCH_OK
);

301 
	}
}

316 
	$Êow›lib_fdnum
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

318 
fd
 = 
Êow›
->
fo_fdnumbî
;

320 i‡(
fd
 > 0) {

321 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÉxplicitly set fd");

322 
ªtfd
;

325 i‡(!
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
)) {

326 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picking default fd");

327 
ªtfd
;

330 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "pickingÑotor fd");

333 i‡(!
thªadÊow
->
tf_fdrŸ‹
)

334 
thªadÊow
->
tf_fdrŸ‹
 = 
THREADFLOW_MAXFD
;

336 
thªadÊow
->
tf_fdrŸ‹
--;

337 
fd
 = 
thªadÊow
->
tf_fdrŸ‹
;

339 
ªtfd
:

340 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "picked fd = %d", 
fd
);

341  
fd
;

342 
	}
}

352 
	$Êow›lib_fûe£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

353 
fböt_t
 *
ws•
, 
fb_fdesc_t
 **
fdes˝
)

355 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

357 i‡(
fd
 == -1)

358  (
FILEBENCH_ERROR
);

361 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_f£
[fd] !
NULL
)) {

362 *
fd_ba£d_«me
;

364 
fd_ba£d_«me
 =

365 
	`avd_gë_°r
(
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
->
fs_«me
);

367 i‡(
Êow›
->
fo_fûíame
 !
NULL
) {

368 *
fo_ba£d_«me
;

370 
fo_ba£d_«me
 = 
	`avd_gë_°r
(
Êow›
->
fo_fûíame
);

371 i‡(
	`°rcmp
(
fd_ba£d_«me
, 
fo_ba£d_«me
) != 0) {

372 
	`fûebích_log
(
LOG_ERROR
, "Name of fdÑefer"

375 
fd_ba£d_«me
, 
fo_ba£d_«me
);

376 
	`fûebích_shutdown
(1);

377  (
FILEBENCH_ERROR
);

382 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

383 
ªt
;

385 i‡((
ªt
 = 
	`Êow›lib_›ífûe_comm⁄
(

386 
thªadÊow
, 
Êow›
, 
fd
)Ë!
FILEBENCH_OK
)

387  (
ªt
);

389 i‡(
thªadÊow
->
tf_f£
[
fd
]) {

390 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "opened file %s",

391 
thªadÊow
->
tf_f£
[
fd
]->
f£_∑th
);

393 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

395 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
),

396 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

400 *
fdes˝
 = &(
thªadÊow
->
tf_fd
[
fd
]);

402 i‡((*
ws•
 = 
Êow›
->
fo_c⁄°wss
) == 0) {

403 i‡(
thªadÊow
->
tf_f£
[
fd
])

404 *
ws•
 = 
thªadÊow
->
tf_f£
[
fd
]->
f£_size
;

406 *
ws•
 = 
	`avd_gë_öt
(
Êow›
->
fo_fûe£t
->
fs_size
);

409  (
FILEBENCH_OK
);

410 
	}
}

417 
	$Êow›lib_iobuf£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

418 
ˇddr_t
 *
iobuÂ
, 
fböt_t
 
iosize
)

420 
memsize
;

421 
size_t
 
memoff£t
;

423 i‡(
iosize
 == 0) {

424 
	`fûebích_log
(
LOG_ERROR
, "zero iosize forÅhread %s",

425 
Êow›
->
fo_«me
);

426  (
FILEBENCH_ERROR
);

430 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

431 
iosize
 = iosize + 512;

433 i‡((
memsize
 = 
thªadÊow
->
tf_c⁄°memsize
) != 0) {

436 i‡(
memsize
 < 
iosize
) {

437 
	`fûebích_log
(
LOG_ERROR
,

439 
Êow›
->
fo_«me
);

440  (
FILEBENCH_ERROR
);

443 
	`fb_øndom
(&
memoff£t
, 
memsize
, 
iosize
, 
NULL
);

444 *
iobuÂ
 = 
thªadÊow
->
tf_mem
 + 
memoff£t
;

448 i‡((
Êow›
->
fo_buf
 !
NULL
) &&

449 (
Êow›
->
fo_buf_size
 < 
iosize
)) {

451 
	`‰ì
(
Êow›
->
fo_buf
);

452 
Êow›
->
fo_buf
 = 
NULL
;

460 i‡((
Êow›
->
fo_buf
 =
NULL
) && ((flowop->fo_buf

461 (*)
	`mÆloc
(
iosize
)Ë=
NULL
))

462  (
FILEBENCH_ERROR
);

464 
Êow›
->
fo_buf_size
 = 
iosize
;

465 *
iobuÂ
 = 
Êow›
->
fo_buf
;

468 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

469 *
iobuÂ
 = (
ˇddr_t
)(((()(*iobufp) + 512) / 512) * 512);

471  (
FILEBENCH_OK
);

472 
	}
}

480 
	$Êow›lib_io£tup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
,

481 
fböt_t
 *
ws•
, 
ˇddr_t
 *
iobuÂ
, 
fb_fdesc_t
 **
fûedes˝
, fböt_à
iosize
)

483 
ªt
;

485 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, 
ws•
, 
fûedes˝
)) !=

486 
FILEBENCH_OK
)

487  (
ªt
);

489 i‡((
ªt
 = 
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, 
iobuÂ
, 
iosize
)) !=

490 
FILEBENCH_OK
)

491  (
ªt
);

493  (
FILEBENCH_OK
);

494 
	}
}

513 
	$Êow›lib_ªad
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

515 
ˇddr_t
 
iobuf
;

516 
fböt_t
 
wss
;

517 
fböt_t
 
iosize
;

518 
fb_fdesc_t
 *
fdesc
;

519 
ªt
;

521 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

523 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

524 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

525  (
ªt
);

527 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

528 
uöt64_t
 
fûeoff£t
;

530 i‡(
iosize
 > 
wss
) {

531 
	`fûebích_log
(
LOG_ERROR
,

533 
Êow›
->
fo_«me
);

534  (
FILEBENCH_ERROR
);

538 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

540 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

541 i‡((
ªt
 = 
	`FB_PREAD
(
fdesc
, 
iobuf
,

542 
iosize
, (
off64_t
)
fûeoff£t
)) == -1) {

543 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

544 
	`fûebích_log
(
LOG_ERROR
,

547 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

548 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

549 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

550  (
FILEBENCH_ERROR
);

552 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

554 i‡((
ªt
 == 0))

555 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

558 (Ë
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

559 i‡((
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) == -1) {

560 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

561 
	`fûebích_log
(
LOG_ERROR
,

563 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
),

564 
iobuf
, 
	`°ªº‹
(
î∫o
));

565 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

566  (
FILEBENCH_ERROR
);

568 (Ë
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

570 i‡((
ªt
 == 0))

571 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

574  (
FILEBENCH_OK
);

575 
	}
}

582 
	$Êow›lib_block_öô
(
Êow›_t
 *
Êow›
)

584 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d block initáddress %zx",

585 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

586 (Ë
	`±hªad_c⁄d_öô
(&
Êow›
->
fo_cv
, 
	`ùc_c⁄d©å
());

587 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

589  (
FILEBENCH_OK
);

590 
	}
}

597 
	$Êow›lib_block
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

599 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d blockingátáddress %zx",

600 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, &Êow›->
fo_cv
);

601 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

603 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

604 (Ë
	`±hªad_c⁄d_waô
(&
Êow›
->
fo_cv
, &Êow›->
fo_lock
);

605 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

607 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

608 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

610 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

612  (
FILEBENCH_OK
);

613 
	}
}

626 
	$Êow›lib_wakeup
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

628 
Êow›_t
 *
èrgë
;

631 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

632 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

634 
Êow›
->
fo_èrgës
 = 
ªsu…
;

635 i‡(
ªsu…
 =
NULL
) {

636 
	`fûebích_log
(
LOG_ERROR
,

638 
Êow›
->
fo_èrgë«me
,

639 
thªadÊow
->
tf_«me
);

640 
	`fûebích_shutdown
(1);

642 
ªsu…
) {

643 
ªsu…
->
fo_èrgë√xt
 =

644 
ªsu…
->
fo_ªsu…√xt
;

645 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

649 
èrgë
 = 
Êow›
->
fo_èrgës
;

652 
èrgë
) {

653 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

654 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

657 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

659 
èrgë
->
fo_«me
,

660 
èrgë
->
fo_ö°™˚
,

661 &
èrgë
->
fo_cv
);

663 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

664 (Ë
	`ùc_muãx_lock
(&
èrgë
->
fo_lock
);

665 (Ë
	`±hªad_c⁄d_brﬂdˇ°
(&
èrgë
->
fo_cv
);

666 (Ë
	`ùc_muãx_u∆ock
(&
èrgë
->
fo_lock
);

667 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

669 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

672  (
FILEBENCH_OK
);

673 
	}
}

688 
	$Êow›lib_hog
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

690 
uöt64_t
 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

691 
i
;

693 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉnter");

694 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

695 i‡(
thªadÊow
->
tf_mem
 !
NULL
) {

696 
i
 = 0; i < 
vÆue
; i++)

697 *(
thªadÊow
->
tf_mem
) = 1;

699 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

700 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "hogÉxit");

701  (
FILEBENCH_OK
);

702 
	}
}

709 
	$Êow›lib_dñay
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

711 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

713 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

714 (Ë
	`¶ìp
(
vÆue
);

715 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

716  (
FILEBENCH_OK
);

717 
	}
}

737 
	$Êow›lib_evíéimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

740 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

741  (
FILEBENCH_OK
);

743 i‡(
Êow›
->
fo_öôãd
 == 0) {

744 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

745 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

746 
Êow›
->
fo_öôãd
 = 1;

749 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

750 
fûebích_shm
->
shm_evítgí_íabÀd
) {

751 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

752 i‡(
fûebích_shm
->
shm_evítgí_q
 > 0) {

753 
fûebích_shm
->
shm_evítgí_q
--;

754 (Ë
	`ùc_muãx_u∆ock
(

755 &
fûebích_shm
->
shm_evítgí_lock
);

758 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

759 &
fûebích_shm
->
shm_evítgí_lock
);

760 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

762 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

763  (
FILEBENCH_OK
);

764 
	}
}

767 
	$Êow›lib_evít_föd_èrgë
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

769 i‡(
Êow›
->
fo_èrgë«me
[0] != '\0') {

772 
Êow›
->
fo_èrgës
 =

773 
	`Êow›_föd_‰om_li°
(
Êow›
->
fo_èrgë«me
,

774 
thªadÊow
->
tf_thrd_f›s
);

775 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

776 
	`fûebích_log
(
LOG_ERROR
,

778 
Êow›
->
fo_èrgë«me
);

779 
	`fûebích_shutdown
(1);

780  (
FILEBENCH_ERROR
);

784 
Êow›
->
fo_èrgës
 = 
NULL
;

786  (
FILEBENCH_OK
);

787 
	}
}

796 
	$Êow›lib_i›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

798 
uöt64_t
 
i›s
;

799 
uöt64_t
 
dñè
;

800 
uöt64_t
 
evíts
;

803 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

804  (
FILEBENCH_OK
);

806 i‡(
Êow›
->
fo_öôãd
 == 0) {

807 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

808 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

809 
Êow›
->
fo_öôãd
 = 1;

811 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

812 =
FILEBENCH_ERROR
)

813  (
FILEBENCH_ERROR
);

815 i‡(
Êow›
->
fo_èrgës
 && ((Êow›->fo_èrgës->
fo_©ås
 &

816 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

817 
	`fûebích_log
(
LOG_ERROR
,

819 
Êow›
->
fo_èrgës
->
fo_«me
);

820 
	`fûebích_shutdown
(1);

821  (
FILEBENCH_ERROR
);

825 i‡(
Êow›
->
fo_èrgës
) {

830 
i›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

832 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

833 
i›s
 = (
c⁄åﬁ°©s
.
fs_rcou¡
 +

834 
c⁄åﬁ°©s
.
fs_wcou¡
);

835 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

839 i‡(
Êow›
->
fo_çuéa°
 == 0) {

840 
Êow›
->
fo_çuéa°
 = 
i›s
;

841  (
FILEBENCH_OK
);

844 
dñè
 = 
i›s
 - 
Êow›
->
fo_çuéa°
;

845 
Êow›
->
fo_çutbuckë
 -
dñè
;

846 
Êow›
->
fo_çuéa°
 = 
i›s
;

849 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

850 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

851  (
FILEBENCH_OK
);

854 
i›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

855 
evíts
 = 
i›s
;

857 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

858 
fûebích_shm
->
shm_evítgí_íabÀd
) {

860 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

861 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

862 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

863 (Ë
	`ùc_muãx_u∆ock
(

864 &
fûebích_shm
->
shm_evítgí_lock
);

865 
Êow›
->
fo_çutbuckë
 +
evíts
;

868 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

869 &
fûebích_shm
->
shm_evítgí_lock
);

870 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

872 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

874  (
FILEBENCH_OK
);

875 
	}
}

884 
	$Êow›lib_›¶imô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

886 
uöt64_t
 
›s
;

887 
uöt64_t
 
dñè
;

888 
uöt64_t
 
evíts
;

891 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

892  (
FILEBENCH_OK
);

894 i‡(
Êow›
->
fo_öôãd
 == 0) {

895 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

896 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

897 
Êow›
->
fo_öôãd
 = 1;

899 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

900 =
FILEBENCH_ERROR
)

901  (
FILEBENCH_ERROR
);

904 i‡(
Êow›
->
fo_èrgës
) {

905 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

907 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

908 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

909 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

913 i‡(
Êow›
->
fo_çuéa°
 == 0) {

914 
Êow›
->
fo_çuéa°
 = 
›s
;

915  (
FILEBENCH_OK
);

918 
dñè
 = 
›s
 - 
Êow›
->
fo_çuéa°
;

919 
Êow›
->
fo_çutbuckë
 -
dñè
;

920 
Êow›
->
fo_çuéa°
 = 
›s
;

923 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

924 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

925  (
FILEBENCH_OK
);

928 
›s
 = 
Êow›
->
fo_çutbuckë
 * -1;

929 
evíts
 = 
›s
;

931 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

932 
fûebích_shm
->
shm_evítgí_íabÀd
) {

933 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

934 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

935 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

936 (Ë
	`ùc_muãx_u∆ock
(

937 &
fûebích_shm
->
shm_evítgí_lock
);

938 
Êow›
->
fo_çutbuckë
 +
evíts
;

941 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

942 &
fûebích_shm
->
shm_evítgí_lock
);

943 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

945 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

947  (
FILEBENCH_OK
);

948 
	}
}

959 
	$Êow›lib_bwlimô
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

961 
uöt64_t
 
byãs
;

962 
uöt64_t
 
dñè
;

963 
uöt64_t
 
evíts
;

966 i‡(!
fûebích_shm
->
shm_evítgí_íabÀd
)

967  (
FILEBENCH_OK
);

969 i‡(
Êow›
->
fo_öôãd
 == 0) {

970 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

971 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

972 
Êow›
->
fo_öôãd
 = 1;

974 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

975 =
FILEBENCH_ERROR
)

976  (
FILEBENCH_ERROR
);

978 i‡((
Êow›
->
fo_èrgës
) &&

979 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

980 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

981 
	`fûebích_log
(
LOG_ERROR
,

983 
Êow›
->
fo_èrgës
->
fo_«me
);

984 
	`fûebích_shutdown
(1);

985  (
FILEBENCH_ERROR
);

989 i‡(
Êow›
->
fo_èrgës
) {

994 
byãs
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

996 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

997 
byãs
 = (
c⁄åﬁ°©s
.
fs_rbyãs
 +

998 
c⁄åﬁ°©s
.
fs_wbyãs
);

999 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1003 i‡(
Êow›
->
fo_çuéa°
 == 0) {

1004 
Êow›
->
fo_çuéa°
 = 
byãs
;

1005  (
FILEBENCH_OK
);

1008 
dñè
 = 
byãs
 - 
Êow›
->
fo_çuéa°
;

1009 
Êow›
->
fo_çutbuckë
 -
dñè
;

1010 
Êow›
->
fo_çuéa°
 = 
byãs
;

1013 i‡(
Êow›
->
fo_çutbuckë
 >= 0LL) {

1014 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1015  (
FILEBENCH_OK
);

1018 
byãs
 = 
Êow›
->
fo_çutbuckë
 * -1;

1019 
evíts
 = (
byãs
 / 
MB
) + 1;

1021 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "%llu bytes, %lluÉvents",

1022 (
u_l⁄gl⁄g_t
)
byãs
, (u_l⁄gl⁄g_t)
evíts
);

1024 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1025 
fûebích_shm
->
shm_evítgí_íabÀd
) {

1026 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_evítgí_lock
);

1027 i‡(
fûebích_shm
->
shm_evítgí_q
 >
evíts
) {

1028 
fûebích_shm
->
shm_evítgí_q
 -
evíts
;

1029 (Ë
	`ùc_muãx_u∆ock
(

1030 &
fûebích_shm
->
shm_evítgí_lock
);

1031 
Êow›
->
fo_çutbuckë
 +(
evíts
 * 
MB
);

1034 (Ë
	`±hªad_c⁄d_waô
(&
fûebích_shm
->
shm_evítgí_cv
,

1035 &
fûebích_shm
->
shm_evítgí_lock
);

1036 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_evítgí_lock
);

1038 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1040  (
FILEBENCH_OK
);

1041 
	}
}

1047 
	$Êow›lib_föish⁄byãs
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1049 
uöt64_t
 
byãs_io
;

1050 
uöt64_t
 
byã_lim
 = 
Êow›
->
fo_c⁄°vÆue
;

1053 i‡(
Êow›
->
fo_öôãd
 == 0) {

1054 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1055 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1056 
Êow›
->
fo_öôãd
 = 1;

1058 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1059 =
FILEBENCH_ERROR
)

1060  (
FILEBENCH_ERROR
);

1062 i‡((
Êow›
->
fo_èrgës
) &&

1063 ((
Êow›
->
fo_èrgës
->
fo_©ås
 &

1064 (
FLOW_ATTR_READ
 | 
FLOW_ATTR_WRITE
)) == 0)) {

1065 
	`fûebích_log
(
LOG_ERROR
,

1067 
Êow›
->
fo_èrgës
->
fo_«me
);

1068 
	`fûebích_shutdown
(1);

1069  (
FILEBENCH_ERROR
);

1073 i‡(
Êow›
->
fo_èrgës
) {

1074 
byãs_io
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_byãs
;

1076 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1077 
byãs_io
 = 
c⁄åﬁ°©s
.
fs_byãs
;

1078 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1081 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1082 i‡(
byãs_io
 > 
byã_lim
) {

1083 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1084  (
FILEBENCH_NORSC
);

1086 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1088  (
FILEBENCH_OK
);

1089 
	}
}

1096 
	$Êow›lib_föish⁄cou¡
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1098 
uöt64_t
 
›s
;

1099 
uöt64_t
 
cou¡
 = 
Êow›
->
fo_c⁄°vÆue
;

1101 i‡(
Êow›
->
fo_öôãd
 == 0) {

1102 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "rate %zx %s-%dÜocking",

1103 
Êow›
, 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
);

1104 
Êow›
->
fo_öôãd
 = 1;

1106 i‡(
	`Êow›lib_evít_föd_èrgë
(
thªadÊow
, 
Êow›
)

1107 =
FILEBENCH_ERROR
)

1108  (
FILEBENCH_ERROR
);

1111 i‡(
Êow›
->
fo_èrgës
) {

1112 
›s
 = 
Êow›
->
fo_èrgës
->
fo_°©s
.
fs_cou¡
;

1114 (Ë
	`ùc_muãx_lock
(&
c⁄åﬁ°©s_lock
);

1115 
›s
 = 
c⁄åﬁ°©s
.
fs_cou¡
;

1116 (Ë
	`ùc_muãx_u∆ock
(&
c⁄åﬁ°©s_lock
);

1119 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1120 i‡(
›s
 >
cou¡
) {

1121 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1122  (
FILEBENCH_NORSC
);

1124 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1126  (
FILEBENCH_OK
);

1127 
	}
}

1148 
	$Êow›lib_£mblock_öô
(
Êow›_t
 *
Êow›
)

1151 #ifde‡
HAVE_SYSV_SEM


1152 
sys_£mid
;

1153 
£mbuf
 
sbuf
[2];

1154 
highw©î
;

1156 
	`ùc_£möô
();

1158 
Êow›
->
fo_£mid_lw
 = 
	`ùc_£midÆloc
();

1159 
Êow›
->
fo_£mid_hw
 = 
	`ùc_£midÆloc
();

1161 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d semblock init semid=%x",

1162 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, flow›->
fo_£mid_lw
);

1164 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1166 i‡((
highw©î
 = 
Êow›
->
fo_£mid_hw
) == 0)

1167 
highw©î
 = 
Êow›
->
fo_c⁄°vÆue
;

1169 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "£âög highw©îÅÿ: %d", 
highw©î
);

1171 
sbuf
[0].
£m_num
 = ()
highw©î
;

1172 
sbuf
[0].
£m_›
 = 
	`avd_gë_öt
(
Êow›
->
fo_highw©î
);

1173 
sbuf
[0].
£m_Êg
 = 0;

1174 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 1Ë=-1Ë&& 
î∫o
) {

1175 
	`fûebích_log
(
LOG_ERROR
, "semblock initÖost failed: %s (%d,"

1176 "%d)", 
	`°ªº‹
(
î∫o
), 
sbuf
[0].
£m_num
, sbuf[0].
£m_›
);

1177  (
FILEBENCH_ERROR
);

1180 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1182 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1184 
	`£m_öô
(&
Êow›
->
fo_£m
, 1, 0);

1187 i‡(!(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
)))

1188 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1190  (
FILEBENCH_OK
);

1191 
	}
}

1199 
	$Êow›lib_£mblock_de°ru˘
(
Êow›_t
 *
Êow›
)

1201 #ifde‡
HAVE_SYSV_SEM


1202 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_lw
);

1203 
	`ùc_£mid‰ì
(
Êow›
->
fo_£mid_hw
);

1205 
	`£m_de°roy
(&
Êow›
->
fo_£m
);

1207 
	}
}

1216 
	$Êow›lib_£mblock
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1219 #ifde‡
HAVE_SYSV_SEM


1220 
£mbuf
 
sbuf
[2];

1221 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1222 
sys_£mid
;

1223 
time•ec
 
timeout
;

1225 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1227 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1229 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
, 
sys_£mid
,

1230 
Êow›
->
fo_£mid_hw
, 
vÆue
);

1233 
sbuf
[0].
£m_num
 = 
Êow›
->
fo_£mid_hw
;

1234 
sbuf
[0].
£m_›
 = ()
vÆue
;

1235 
sbuf
[0].
£m_Êg
 = 0;

1236 
sbuf
[1].
£m_num
 = 
Êow›
->
fo_£mid_lw
;

1237 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1238 
sbuf
[1].
£m_Êg
 = 0;

1239 
timeout
.
tv_£c
 = 600;

1240 
timeout
.
tv_n£c
 = 0;

1242 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1243 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

1245 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1247 #ifde‡
HAVE_SEMTIMEDOP


1248 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 1, &
timeout
);

1249 (Ë
	`£mtimed›
(
sys_£mid
, &
sbuf
[1], 1, &
timeout
);

1251 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[0], 1);

1252 (Ë
	`£m›
(
sys_£mid
, &
sbuf
[1], 1);

1255 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1256 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

1258 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1261 
vÆue
 = 
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1262 
i
;

1264 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1266 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1269 
i
 = 0; i < 
vÆue
; i++) {

1270 i‡(
	`£m_waô
(&
Êow›
->
fo_£m
) == -1) {

1271 
	`fûebích_log
(
LOG_ERROR
, "semop wait failed");

1272  (
FILEBENCH_ERROR
);

1276 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d sem unblocking",

1277 
Êow›
->
fo_«me
, flow›->
fo_ö°™˚
);

1280  (
FILEBENCH_OK
);

1281 
	}
}

1288 
	$Êow›lib_£mpo°_öô
(
Êow›_t
 *
Êow›
)

1290 #ifde‡
HAVE_SYSV_SEM


1291 
	`ùc_£möô
();

1293  (
FILEBENCH_OK
);

1294 
	}
}

1305 
	$Êow›lib_£mpo°
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1307 
Êow›_t
 *
èrgë
;

1309 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1311 
Êow›
->
fo_«me
,

1312 
Êow›
->
fo_ö°™˚
);

1315 i‡(
Êow›
->
fo_èrgës
 =
NULL
) {

1316 
Êow›_t
 *
ªsu…
 = 
	`Êow›_föd
(
Êow›
->
fo_èrgë«me
);

1318 
Êow›
->
fo_èrgës
 = 
ªsu…
;

1320 i‡(
ªsu…
 =
NULL
) {

1321 
	`fûebích_log
(
LOG_ERROR
,

1323 
Êow›
->
fo_èrgë«me
,

1324 
thªadÊow
->
tf_«me
);

1325 
	`fûebích_shutdown
(1);

1328 
ªsu…
) {

1329 
ªsu…
->
fo_èrgë√xt
 =

1330 
ªsu…
->
fo_ªsu…√xt
;

1331 
ªsu…
 =Ñesu…->
fo_ªsu…√xt
;

1335 
èrgë
 = 
Êow›
->
fo_èrgës
;

1337 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1339 
èrgë
) {

1340 #ifde‡
HAVE_SYSV_SEM


1341 
£mbuf
 
sbuf
[2];

1342 
sys_£mid
;

1343 
blockög
;

1345 
i
;

1347 
time•ec
 
timeout
;

1348 
vÆue
 = ()
	`avd_gë_öt
(
Êow›
->
fo_vÆue
);

1350 i‡(
èrgë
->
fo_ö°™˚
 =
FLOW_MASTER
) {

1351 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1355 #ifde‡
HAVE_SYSV_SEM


1357 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1359 
èrgë
->
fo_«me
,

1360 
èrgë
->
fo_ö°™˚
,

1361 
èrgë
->
fo_£mid_lw
);

1363 
sys_£mid
 = 
fûebích_shm
->
shm_sys_£mid
;

1364 
sbuf
[0].
£m_num
 = 
èrgë
->
fo_£mid_lw
;

1365 
sbuf
[0].
£m_›
 = ()
vÆue
;

1366 
sbuf
[0].
£m_Êg
 = 0;

1367 
sbuf
[1].
£m_num
 = 
èrgë
->
fo_£mid_hw
;

1368 
sbuf
[1].
£m_›
 = 
vÆue
 * -1;

1369 
sbuf
[1].
£m_Êg
 = 0;

1370 
timeout
.
tv_£c
 = 600;

1371 
timeout
.
tv_n£c
 = 0;

1373 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_blockög
))

1374 
blockög
 = 1;

1376 
blockög
 = 0;

1378 #ifde‡
HAVE_SEMTIMEDOP


1379 i‡((
	`£mtimed›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1,

1380 &
timeout
Ë=-1Ë&& (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1382 i‡((
	`£m›
(
sys_£mid
, &
sbuf
[0], 
blockög
 + 1) == -1) &&

1383 (
î∫o
 && (î∫ÿ!
EAGAIN
))) {

1385 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed: %s",

1386 
	`°ªº‹
(
î∫o
));

1387  (
FILEBENCH_ERROR
);

1390 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1392 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1394 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1396 
èrgë
->
fo_«me
,

1397 
èrgë
->
fo_ö°™˚
);

1400 
i
 = 0; i < 
vÆue
; i++) {

1401 i‡(
	`£m_po°
(&
èrgë
->
fo_£m
) == -1) {

1402 
	`fûebích_log
(
LOG_ERROR
, "semopÖost failed");

1403  (
FILEBENCH_ERROR
);

1407 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "flow %s-%d unblocking",

1408 
èrgë
->
fo_«me
,Å¨gë->
fo_ö°™˚
);

1411 
èrgë
 =Å¨gë->
fo_èrgë√xt
;

1413 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1415  (
FILEBENCH_OK
);

1416 
	}
}

1442 
	$Êow›lib_›ífûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1444 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1446 i‡(
fd
 == -1)

1447  (
FILEBENCH_ERROR
);

1449  (
	`Êow›lib_›ífûe_comm⁄
(
thªadÊow
, 
Êow›
, 
fd
));

1450 
	}
}

1465 
	$Êow›lib_›ífûe_comm⁄
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
, 
fd
)

1467 
fûe£ã¡ry_t
 *
fûe
;

1468 *
fûe£t_«me
;

1469 
tid
 = 0;

1470 
›íÊag
 = 0;

1471 
îr
;

1473 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1474 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1475  (
FILEBENCH_ERROR
);

1478 i‡((
fûe£t_«me
 =

1479 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
)Ë=
NULL
) {

1480 
	`fûebích_log
(
LOG_ERROR
,

1481 "Êow› %s: fûe£àha†nÿ«me", 
Êow›
->
fo_«me
);

1482  (
FILEBENCH_ERROR
);

1488 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1489 
›íÊag
 = 
O_RDONLY
;

1490 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1491 
›íÊag
 = 
O_WRONLY
;

1493 
›íÊag
 = 
O_RDWR
;

1499 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_rŸ©efd
))

1500 
tid
 = 
thªadÊow
->
tf_utid
;

1502 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1503 
	`fûebích_log
(
LOG_ERROR
,

1505 
Êow›
->
fo_«me
, 
fd
);

1506  (
FILEBENCH_ERROR
);

1509 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1510 
›í_©ås
 = 0;

1511 
«me
[
MAXPATHLEN
];

1513 (Ë
	`fb_°æ˝y
(
«me
,

1514 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1515 (Ë
	`fb_°æˇt
(
«me
, "/", 
MAXPATHLEN
);

1516 (Ë
	`fb_°æˇt
(
«me
, 
fûe£t_«me
, 
MAXPATHLEN
);

1518 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_dsync
))

1519 
›í_©ås
 |
O_SYNC
;

1521 #ifde‡
HAVE_O_DIRECT


1522 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1523 
›í_©ås
 |
O_DIRECT
;

1526 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1527 "›íÑaw devi˚ %†Êag†%d = %d", 
«me
, 
›í_©ås
, 
fd
);

1529 i‡(
	`FB_OPEN
(&(
thªadÊow
->
tf_fd
[
fd
]), 
«me
,

1530 
›íÊag
 | 
›í_©ås
, 0666Ë=
FILEBENCH_ERROR
) {

1531 
	`fûebích_log
(
LOG_ERROR
,

1533 
«me
, 
	`°ªº‹
(
î∫o
));

1534  (
FILEBENCH_ERROR
);

1537 #ifde‡
HAVE_DIRECTIO


1538 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1539 ()
	`dúe˘io
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
DIRECTIO_ON
);

1542 #ifde‡
HAVE_NOCACHE_FCNTL


1543 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_DIRECTIO
)

1544 ()
	`f˙é
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 
F_NOCACHE
, 1);

1548 i‡(
	`Êow›lib_fûóârs
(
Êow›
Ë& 
FLOW_ATTR_FADV_RANDOM
) {

1549 #ifde‡
HAVE_FADVISE


1550 i‡(
	`posix_Ádvi£
(
thªadÊow
->
tf_fd
[
fd
].
fd_num
, 0, 0, 
POSIX_FADV_RANDOM
)

1551 !
FILEBENCH_OK
) {

1552 
	`fûebích_log
(
LOG_ERROR
,

1554 
«me
, 
	`°ªº‹
(
î∫o
));

1555  (
FILEBENCH_ERROR
);

1557 
	`fûebích_log
(
LOG_INFO
, "** Readáhead disabled ** ");

1559 
	`fûebích_log
(
LOG_INFO
, "** Readáhead was NOT disabled:Çot supported onÅhisÖlatform! **");

1563 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1565  (
FILEBENCH_OK
);

1568 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1569 
FILESET_PICKEXISTS
, 
tid
)Ë!
FILEBENCH_OK
) {

1570 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1572 
Êow›
->
fo_«me
, 
fûe£t_«me
, 
fd
);

1573  (
îr
);

1576 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1578 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1579 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1580 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1581 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1583 i‡(
îr
 =
FILEBENCH_ERROR
) {

1584 
	`fûebích_log
(
LOG_ERROR
, "flowop %s failedÅo open file %s",

1585 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
);

1586  (
FILEBENCH_ERROR
);

1589 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1591 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1593  (
FILEBENCH_OK
);

1594 
	}
}

1609 
	$Êow›lib_¸óãfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1611 
fûe£ã¡ry_t
 *
fûe
;

1612 
›íÊag
 = 
O_CREAT
;

1613 
fd
;

1614 
îr
;

1616 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1618 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 !
NULL
) {

1619 
	`fûebích_log
(
LOG_ERROR
,

1621 
Êow›
->
fo_«me
, 
fd
);

1622  (
FILEBENCH_ERROR
);

1625 i‡(
Êow›
->
fo_fûe£t
 =
NULL
) {

1626 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1627  (
FILEBENCH_ERROR
);

1630 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_ªad⁄ly
Ë=
TRUE
)

1631 
›íÊag
 |
O_RDONLY
;

1632 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_fûe£t
->
fs_wrôe⁄ly
Ë=
TRUE
)

1633 
›íÊag
 |
O_WRONLY
;

1635 
›íÊag
 |
O_RDWR
;

1638 i‡(
Êow›
->
fo_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1639 
	`fûebích_log
(
LOG_ERROR
,

1641 
Êow›
->
fo_«me
);

1642  (
FILEBENCH_ERROR
);

1645 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1646 
FILESET_PICKNOEXIST
, 0)Ë!
FILEBENCH_OK
) {

1647 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1649 
Êow›
->
fo_«me
,

1650 
	`avd_gë_°r
(
Êow›
->
fo_fûe£t
->
fs_«me
));

1651  (
îr
);

1654 
thªadÊow
->
tf_f£
[
fd
] = 
fûe
;

1656 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1657 
îr
 = 
	`fûe£t_›ífûe
(&
thªadÊow
->
tf_fd
[
fd
], 
Êow›
->
fo_fûe£t
,

1658 
fûe
, 
›íÊag
, 0666, 
	`Êow›lib_fûóârs
(
Êow›
));

1659 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1661 i‡(
îr
 =
FILEBENCH_ERROR
) {

1662 
	`fûebích_log
(
LOG_ERROR
, "failedÅo create file %s",

1663 
Êow›
->
fo_«me
);

1664  (
FILEBENCH_ERROR
);

1667 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1669 
Êow›
->
fo_«me
, 
fûe
->
f£_∑th
, 
fd
, 
thªadÊow
->
tf_fd
[fd]);

1671  (
FILEBENCH_OK
);

1672 
	}
}

1684 
	$Êow›lib_dñëefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1686 
fûe£ã¡ry_t
 *
fûe
;

1687 
fûe£t_t
 *
fûe£t
;

1688 
∑th
[
MAXPATHLEN
];

1689 *
∑thtmp
;

1690 
fd
;

1692 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1695 i‡((
fd
 > 0Ë&& ((
fûe
 = 
thªadÊow
->
tf_f£
[fd]Ë!
NULL
)) {

1698 
thªadÊow
->
tf_f£
[
fd
] = 
NULL
;

1701 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1705 
fûe
 = 
NULL
;

1706 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

1710 i‡(
fûe£t
 =
NULL
) {

1711 
	`fûebích_log
(
LOG_ERROR
, "flowop NULL file");

1712  (
FILEBENCH_ERROR
);

1716 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

1717 
	`fûebích_log
(
LOG_ERROR
,

1719 
Êow›
->
fo_«me
);

1720  (
FILEBENCH_ERROR
);

1723 i‡(
fûe
 =
NULL
) {

1724 
îr
;

1727 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

1728 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

1729 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1730 "Êow› %†ÁûedÅÿpick fûe", 
Êow›
->
fo_«me
);

1731  (
îr
);

1735 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1736 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1737 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1738 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1739 &
fûe£t
->
fs_pick_lock
);

1743 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1744 
fûe£t
->
fs_idÀ_fûes
--;

1745 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1749 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

1750 i‡(
fûe
->
f£_›í_˙t
 > 1) {

1751 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1753 "Åhªad†© fd = %d", 
Êow›
->
fo_«me
, 
fd
);

1754 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1755  (
FILEBENCH_OK
);

1757 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1759 
Êow›
->
fo_«me
, 
fd
);

1761 } i‡(
fûe
->
f£_›í_˙t
 > 0) {

1762 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

1765 
Êow›
->
fo_«me
, 
fd
, 
fûe
->
f£_›í_˙t
);

1766 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

1767  (
FILEBENCH_OK
);

1770 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
), 
MAXPATHLEN
);

1771 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1772 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
), 
MAXPATHLEN
);

1773 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

1774 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

1775 
	`‰ì
(
∑thtmp
);

1778 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1779 (Ë
	`FB_UNLINK
(
∑th
);

1780 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1783 
	`fûe£t_unbusy
(
fûe
, 
TRUE
, 
FALSE
, -fûe->
f£_›í_˙t
);

1785 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "dñëed fûê%s", 
fûe
->
f£_∑th
);

1787  (
FILEBENCH_OK
);

1788 
	}
}

1798 
	$Êow›lib_fsync
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1800 
fûe£ã¡ry_t
 *
fûe
;

1801 
fd
;

1803 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1805 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1806 
	`fûebích_log
(
LOG_ERROR
,

1808 
Êow›
->
fo_«me
, 
fd
);

1809  (
FILEBENCH_ERROR
);

1812 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1814 i‡((
fûe
 =
NULL
) ||

1815 (
fûe
->
f£_fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
)) {

1816 
	`fûebích_log
(
LOG_ERROR
,

1818 
Êow›
->
fo_«me
);

1819  (
FILEBENCH_ERROR
);

1823 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1824 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1825 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1827 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsyn¯fûê%s", 
fûe
->
f£_∑th
);

1829  (
FILEBENCH_OK
);

1830 
	}
}

1839 
	$Êow›lib_fsync£t
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1841 
fd
;

1843 
fd
 = 0; fd < 
THREADFLOW_MAXFD
; fd++) {

1844 
fûe£ã¡ry_t
 *
fûe
;

1847 i‡((
thªadÊow
->
tf_f£
[
fd
] =
NULL
) ||

1848 (
Êow›
->
fo_fûe£t
 !
thªadÊow
->
tf_f£
[
fd
]->
f£_fûe£t
))

1852 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1853 (Ë
	`FB_FSYNC
(&
thªadÊow
->
tf_fd
[
fd
]);

1854 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1856 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1858 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "fsync file %s",

1859 
fûe
->
f£_∑th
);

1862  (
FILEBENCH_OK
);

1863 
	}
}

1875 
	$Êow›lib_˛o£fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1877 
fûe£ã¡ry_t
 *
fûe
;

1878 
fûe£t_t
 *
fûe£t
;

1879 
fd
;

1881 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

1883 i‡(
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 =
NULL
) {

1884 
	`fûebích_log
(
LOG_ERROR
,

1886 
Êow›
->
fo_«me
, 
fd
);

1887  (
FILEBENCH_ERROR
);

1890 
fûe
 = 
thªadÊow
->
tf_f£
[
fd
];

1891 
fûe£t
 = 
fûe
->
f£_fûe£t
;

1894 (Ë
	`ùc_muãx_lock
(&
fûe£t
->
fs_pick_lock
);

1895 
fûe
->
f£_Êags
 & 
FSE_BUSY
) {

1896 
fûe
->
f£_Êags
 |
FSE_THRD_WAITNG
;

1897 (Ë
	`±hªad_c⁄d_waô
(&
fûe£t
->
fs_thrd_waô_cv
,

1898 &
fûe£t
->
fs_pick_lock
);

1902 
fûe
->
f£_Êags
 |
FSE_BUSY
;

1905 i‡(
fûe
->
f£_›í_˙t
 == 1)

1906 
fûe£t
->
fs_idÀ_fûes
--;

1908 (Ë
	`ùc_muãx_u∆ock
(&
fûe£t
->
fs_pick_lock
);

1911 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1912 (Ë
	`FB_CLOSE
(&
thªadÊow
->
tf_fd
[
fd
]);

1913 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1915 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, -1);

1917 
thªadÊow
->
tf_fd
[
fd
].
fd_±r
 = 
NULL
;

1919 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "˛o£d fûê%s", 
fûe
->
f£_∑th
);

1921  (
FILEBENCH_OK
);

1922 
	}
}

1930 
	$Êow›lib_gëdú∑th
(
fûe£ã¡ry_t
 *
dú
, *
∑th
)

1932 *
fûe£t_∑th
;

1933 *
fûe£t_«me
;

1934 *
∑π_∑th
;

1936 i‡((
fûe£t_∑th
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_∑th
)Ë=
NULL
) {

1937 
	`fûebích_log
(
LOG_ERROR
, "FilesetÖathÇot set");

1938  (
FILEBENCH_ERROR
);

1941 i‡((
fûe£t_«me
 = 
	`avd_gë_°r
(
dú
->
f£_fûe£t
->
fs_«me
)Ë=
NULL
) {

1942 
	`fûebích_log
(
LOG_ERROR
, "FilesetÇameÇot set");

1943  (
FILEBENCH_ERROR
);

1946 (Ë
	`fb_°æ˝y
(
∑th
, 
fûe£t_∑th
, 
MAXPATHLEN
);

1947 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

1948 (Ë
	`fb_°æˇt
(
∑th
, 
fûe£t_«me
, 
MAXPATHLEN
);

1950 i‡((
∑π_∑th
 = 
	`fûe£t_ªsﬁvï©h
(
dú
)Ë=
NULL
)

1951  (
FILEBENCH_ERROR
);

1953 (Ë
	`fb_°æˇt
(
∑th
, 
∑π_∑th
, 
MAXPATHLEN
);

1954 
	`‰ì
(
∑π_∑th
);

1956  (
FILEBENCH_OK
);

1957 
	}
}

1968 
	$Êow›lib_makedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

1970 
fûe£ã¡ry_t
 *
dú
;

1971 
ªt
;

1972 
fuŒ_∑th
[
MAXPATHLEN
];

1974 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

1975 
FILESET_PICKNOEXIST
)Ë!
FILEBENCH_OK
)

1976  (
ªt
);

1978 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

1979  (
ªt
);

1981 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

1982 (Ë
	`FB_MKDIR
(
fuŒ_∑th
, 0755);

1983 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

1986 
	`fûe£t_unbusy
(
dú
, 
TRUE
, TRUE, 0);

1988  (
FILEBENCH_OK
);

1989 
	}
}

2000 
	$Êow›lib_ªmovedú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2002 
fûe£ã¡ry_t
 *
dú
;

2003 
ªt
;

2004 
fuŒ_∑th
[
MAXPATHLEN
];

2006 i‡((
ªt
 = 
	`Êow›lib_pickÀafdú
(&
dú
, 
Êow›
,

2007 
FILESET_PICKEXISTS
)Ë!
FILEBENCH_OK
)

2008  (
ªt
);

2010 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2011  (
ªt
);

2013 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2014 (Ë
	`FB_RMDIR
(
fuŒ_∑th
);

2015 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2018 
	`fûe£t_unbusy
(
dú
, 
TRUE
, 
FALSE
, 0);

2020  (
FILEBENCH_OK
);

2021 
	}
}

2035 
	$Êow›lib_li°dú
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2037 
fûe£t_t
 *
fûe£t
;

2038 
fûe£ã¡ry_t
 *
dú
;

2039 
DIR
 *
dú_h™dÀ
;

2040 
dúít
 *
dúíç
;

2041 
dú_byãs
 = 0;

2042 
ªt
;

2043 
fuŒ_∑th
[
MAXPATHLEN
];

2045 i‡((
fûe£t
 = 
Êow›
->
fo_fûe£t
Ë=
NULL
) {

2046 
	`fûebích_log
(
LOG_ERROR
, "flowop NO fileset");

2047  (
FILEBENCH_ERROR
);

2050 i‡((
dú
 = 
	`fûe£t_pick
(
fûe£t
, 
FILESET_PICKDIR
, 0, 0)Ë=
NULL
) {

2051 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2053 
Êow›
->
fo_«me
,

2054 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2055  (
FILEBENCH_ERROR
);

2058 i‡((
ªt
 = 
	`Êow›lib_gëdú∑th
(
dú
, 
fuŒ_∑th
)Ë!
FILEBENCH_OK
)

2059  (
ªt
);

2061 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2064 i‡((
dú_h™dÀ
 = 
	`FB_OPENDIR
(
fuŒ_∑th
)Ë=
NULL
) {

2065 
	`fûebích_log
(
LOG_ERROR
,

2067 
Êow›
->
fo_«me
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
));

2068  (
FILEBENCH_ERROR
);

2072 (
dúíç
 = 
	`FB_READDIR
(
dú_h™dÀ
)Ë!
NULL
) {

2073 
dú_byãs
 +(
	`°æí
(
dúíç
->
d_«me
) +

2074  (
dúít
) - 1);

2078 (Ë
	`FB_CLOSEDIR
(
dú_h™dÀ
);

2080 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
dú_byãs
);

2083 
	`fûe£t_unbusy
(
dú
, 
FALSE
, FALSE, 0);

2085  (
FILEBENCH_OK
);

2086 
	}
}

2096 
	$Êow›lib_°©fûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2098 
fûe£ã¡ry_t
 *
fûe
;

2099 
fûe£t_t
 *
fûe£t
;

2100 
°©64
 
°©buf
;

2101 
fd
;

2103 
fd
 = 
	`Êow›lib_fdnum
(
thªadÊow
, 
Êow›
);

2106 i‡((
fd
 > 0Ë&& (
thªadÊow
->
tf_fd
[fd].
fd_num
 > 0)) {

2109 i‡((
fûe
 = 
thªadÊow
->
tf_f£
[
fd
]Ë=
NULL
) {

2110 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2112 
Êow›
->
fo_«me
, 
fd
);

2113  (
FILEBENCH_ERROR
);

2117 
fûe£t
 = 
fûe
->
f£_fûe£t
;

2120 
fûe
 = 
NULL
;

2121 
fûe£t
 = 
Êow›
->
fo_fûe£t
;

2124 i‡(
fûe£t
 =
NULL
) {

2125 
	`fûebích_log
(
LOG_ERROR
,

2127  (
FILEBENCH_ERROR
);

2131 i‡(
fûe£t
->
fs_©ås
 & 
FILESET_IS_RAW_DEV
) {

2132 
	`fûebích_log
(
LOG_ERROR
,

2134 
Êow›
->
fo_«me
);

2135  (
FILEBENCH_ERROR
);

2138 i‡(
fûe
 =
NULL
) {

2139 
∑th
[
MAXPATHLEN
];

2140 *
∑thtmp
;

2141 
îr
;

2144 i‡((
îr
 = 
	`Êow›lib_pickfûe
(&
fûe
, 
Êow›
,

2145 
FILESET_PICKEXISTS
, 0)Ë!
FILEBENCH_OK
) {

2146 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2148 
Êow›
->
fo_«me
);

2149  (
îr
);

2153 (Ë
	`fb_°æ˝y
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_∑th
),

2154 
MAXPATHLEN
);

2155 (Ë
	`fb_°æˇt
(
∑th
, "/", 
MAXPATHLEN
);

2156 (Ë
	`fb_°æˇt
(
∑th
, 
	`avd_gë_°r
(
fûe£t
->
fs_«me
),

2157 
MAXPATHLEN
);

2158 
∑thtmp
 = 
	`fûe£t_ªsﬁvï©h
(
fûe
);

2159 (Ë
	`fb_°æˇt
(
∑th
, 
∑thtmp
, 
MAXPATHLEN
);

2160 
	`‰ì
(
∑thtmp
);

2163 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2164 i‡(
	`FB_STAT
(
∑th
, &
°©buf
) == -1)

2165 
	`fûebích_log
(
LOG_ERROR
,

2166 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2167 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2169 
	`fûe£t_unbusy
(
fûe
, 
FALSE
, FALSE, 0);

2172 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2173 i‡(
	`FB_FSTAT
(&
thªadÊow
->
tf_fd
[
fd
], &
°©buf
) == -1)

2174 
	`fûebích_log
(
LOG_ERROR
,

2175 "°©fûêÊow› %†Áûed", 
Êow›
->
fo_«me
);

2176 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2180  (
FILEBENCH_OK
);

2181 
	}
}

2203 
	$Êow›lib_ªadwhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2205 
ˇddr_t
 
iobuf
;

2206 
off64_t
 
byãs
 = 0;

2207 
fb_fdesc_t
 *
fdesc
;

2208 
uöt64_t
 
wss
;

2209 
fböt_t
 
iosize
;

2210 
ªt
;

2211 
zî‹dbuf
;

2214 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2215 &
fdesc
)Ë!
FILEBENCH_OK
)

2216  (
ªt
);

2219 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2220 
iosize
 = 
wss
;

2227 i‡(
iosize
 == 0) {

2228 
iobuf
 = (
ˇddr_t
)&
zî‹dbuf
;

2229 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2230 "Êow› %†ªad zîÿÀngth fûe", 
Êow›
->
fo_«me
);

2232 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2233 
iosize
) != 0)

2234  (
FILEBENCH_ERROR
);

2238 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2239 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_SET
);

2240 (
ªt
 = 
	`FB_READ
(
fdesc
, 
iobuf
, 
iosize
)) > 0)

2241 
byãs
 +
ªt
;

2243 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2245 i‡(
ªt
 < 0) {

2246 
	`fûebích_log
(
LOG_ERROR
,

2248 
	`°ªº‹
(
î∫o
));

2249  (
FILEBENCH_ERROR
);

2252  (
FILEBENCH_OK
);

2253 
	}
}

2271 
	$Êow›lib_wrôe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2273 
ˇddr_t
 
iobuf
;

2274 
fböt_t
 
wss
;

2275 
fböt_t
 
iosize
;

2276 
fb_fdesc_t
 *
fdesc
;

2277 
ªt
;

2279 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2280 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2281 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2282  (
ªt
);

2284 i‡(
	`avd_gë_boﬁ
(
Êow›
->
fo_øndom
)) {

2285 
uöt64_t
 
fûeoff£t
;

2287 i‡(
wss
 < 
iosize
) {

2288 
	`fûebích_log
(
LOG_ERROR
,

2290 
Êow›
->
fo_«me
);

2291  (
FILEBENCH_ERROR
);

2295 
	`fb_øndom64
(&
fûeoff£t
, 
wss
, 
iosize
, 
NULL
);

2297 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2298 i‡(
	`FB_PWRITE
(
fdesc
, 
iobuf
,

2299 
iosize
, (
off64_t
)
fûeoff£t
) == -1) {

2300 
	`fûebích_log
(
LOG_ERROR
, "write failed, "

2302 (
u_l⁄gl⁄g_t
)
fûeoff£t
, 
iobuf
, 
	`°ªº‹
(
î∫o
));

2303 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2304  (
FILEBENCH_ERROR
);

2306 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2308 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2309 i‡(
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) == -1) {

2310 
	`fûebích_log
(
LOG_ERROR
,

2312 
iobuf
, 
	`°ªº‹
(
î∫o
));

2313 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2314  (
FILEBENCH_ERROR
);

2316 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
iosize
);

2319  (
FILEBENCH_OK
);

2320 
	}
}

2331 
	$Êow›lib_wrôewhﬁefûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2333 
ˇddr_t
 
iobuf
;

2334 
fûe£ã¡ry_t
 *
fûe
;

2335 
wsize
;

2336 
off64_t
 
£ek
;

2337 
off64_t
 
byãs
 = 0;

2338 
uöt64_t
 
wss
;

2339 
fböt_t
 
iosize
;

2340 
fb_fdesc_t
 *
fdesc
;

2341 
§cfd
 = 
Êow›
->
fo_§cfdnumbî
;

2342 
ªt
;

2343 
zîowπbuf
;

2346 i‡((
ªt
 = 
	`Êow›lib_fûe£tup
(
thªadÊow
, 
Êow›
, &
wss
,

2347 &
fdesc
)Ë!
FILEBENCH_OK
)

2348  (
ªt
);

2351 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0)

2352 
iosize
 = 
wss
;

2359 i‡(
iosize
 == 0) {

2360 
iobuf
 = (
ˇddr_t
)&
zîowπbuf
;

2361 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

2362 "Êow› %†wrŸêzîÿÀngth fûe", 
Êow›
->
fo_«me
);

2364 i‡(
	`Êow›lib_iobuf£tup
(
thªadÊow
, 
Êow›
, &
iobuf
,

2365 
iosize
) != 0)

2366  (
FILEBENCH_ERROR
);

2369 
fûe
 = 
thªadÊow
->
tf_f£
[
§cfd
];

2370 i‡((
§cfd
 !0Ë&& (
fûe
 =
NULL
)) {

2371 
	`fûebích_log
(
LOG_ERROR
, "flowop %s: NULL src file",

2372 
Êow›
->
fo_«me
);

2373  (
FILEBENCH_ERROR
);

2376 i‡(
fûe
)

2377 
wss
 = 
fûe
->
f£_size
;

2379 
wsize
 = ()
	`MIN
(
wss
, 
iosize
);

2382 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2383 
£ek
 = 0; sìk < 
wss
; sìk +
wsize
) {

2384 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
wsize
);

2385 i‡(
ªt
 !
wsize
) {

2386 
	`fûebích_log
(
LOG_ERROR
,

2388 
wsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2389 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2390  (
FILEBENCH_ERROR
);

2392 
wsize
 = ()
	`MIN
(
wss
 - 
£ek
, 
iosize
);

2393 
byãs
 +
ªt
;

2395 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
byãs
);

2397  (
FILEBENCH_OK
);

2398 
	}
}

2418 
	$Êow›lib_≠≥ndfûe
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2420 
ˇddr_t
 
iobuf
;

2421 
fb_fdesc_t
 *
fdesc
;

2422 
fböt_t
 
wss
;

2423 
fböt_t
 
iosize
;

2424 
ªt
;

2426 
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
);

2427 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2428 &
fdesc
, 
iosize
)Ë!
FILEBENCH_OK
)

2429  (
ªt
);

2434 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2435 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2436 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
);

2437 i‡(
ªt
 !
iosize
) {

2438 
	`fûebích_log
(
LOG_ERROR
,

2440 (
u_l⁄gl⁄g_t
)
iosize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2441 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2442  (
FILEBENCH_ERROR
);

2444 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
ªt
);

2446  (
FILEBENCH_OK
);

2447 
	}
}

2466 
	$Êow›lib_≠≥ndfûî™d
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2468 
ˇddr_t
 
iobuf
;

2469 
uöt64_t
 
≠≥ndsize
;

2470 
fb_fdesc_t
 *
fdesc
;

2471 
fböt_t
 
wss
;

2472 
fböt_t
 
iosize
;

2473 
ªt
 = 0;

2475 i‡((
iosize
 = 
	`avd_gë_öt
(
Êow›
->
fo_iosize
)) == 0) {

2476 
	`fûebích_log
(
LOG_ERROR
, "zero iosize for flowop %s",

2477 
Êow›
->
fo_«me
);

2478  (
FILEBENCH_ERROR
);

2481 
	`fb_øndom64
(&
≠≥ndsize
, 
iosize
, 1LL, 
NULL
);

2484 i‡(
≠≥ndsize
 == 0) {

2485 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2486 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0LL);

2487  (
FILEBENCH_OK
);

2490 i‡((
ªt
 = 
	`Êow›lib_io£tup
(
thªadÊow
, 
Êow›
, &
wss
, &
iobuf
,

2491 &
fdesc
, 
≠≥ndsize
)Ë!
FILEBENCH_OK
)

2492  (
ªt
);

2497 
	`Êow›_begö›
(
thªadÊow
, 
Êow›
);

2499 (Ë
	`FB_LSEEK
(
fdesc
, 0, 
SEEK_END
);

2500 
ªt
 = 
	`FB_WRITE
(
fdesc
, 
iobuf
, 
≠≥ndsize
);

2501 i‡(
ªt
 !
≠≥ndsize
) {

2502 
	`fûebích_log
(
LOG_ERROR
,

2504 (
u_l⁄gl⁄g_t
)
≠≥ndsize
, 
fdesc
->
fd_num
, 
	`°ªº‹
(
î∫o
));

2505 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 0);

2506  (
FILEBENCH_ERROR
);

2509 
	`Êow›_íd›
(
thªadÊow
, 
Êow›
, 
≠≥ndsize
);

2511  (
FILEBENCH_OK
);

2512 
	}
}

2514 
	sã°øndv¨_¥iv
 {

2515 
uöt64_t
 
	mßm∂e_cou¡
;

2516 
	mvÆ_sum
;

2517 
	msqr_sum
;

2518 } 
	tã°øndv¨_¥iv_t
;

2528 
	$Êow›lib_ã°øndv¨
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2530 
ã°øndv¨_¥iv_t
 *
my°©s
;

2531 
vÆue
;

2533 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2534 
	`fûebích_log
(
LOG_ERROR
, "testrandvarÇot initialized\n");

2535 
	`fûebích_shutdown
(1);

2539 
vÆue
 = 
	`avd_gë_dbl
(
Êow›
->
fo_vÆue
);

2541 
my°©s
->
ßm∂e_cou¡
++;

2542 
my°©s
->
vÆ_sum
 +
vÆue
;

2543 
my°©s
->
sqr_sum
 +(
vÆue
 * value);

2546 
	}
}

2552 
	$Êow›lib_ã°øndv¨_öô
(
Êow›_t
 *
Êow›
)

2554 
ã°øndv¨_¥iv_t
 *
my°©s
;

2556 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2557 
	`mÆloc
( (
ã°øndv¨_¥iv_t
))Ë=
NULL
) {

2558 
	`fûebích_log
(
LOG_ERROR
, "couldÇot initializeÅestrandvar");

2559 
	`fûebích_shutdown
(1);

2563 
my°©s
->
ßm∂e_cou¡
 = 0;

2564 
my°©s
->
vÆ_sum
 = 0;

2565 
my°©s
->
sqr_sum
 = 0;

2566 
Êow›
->
fo_¥iv©e
 = (*)
my°©s
;

2568 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2570 
	}
}

2576 
	$Êow›lib_ã°øndv¨_de°ru˘
(
Êow›_t
 *
Êow›
)

2578 
ã°øndv¨_¥iv_t
 *
my°©s
;

2579 
món
, 
°d_dev
, 
dbl_cou¡
;

2581 (Ë
	`ùc_muãx_lock
(&
Êow›
->
fo_lock
);

2582 i‡((
my°©s
 = (
ã°øndv¨_¥iv_t
 *)

2583 
Êow›
->
fo_¥iv©e
Ë=
NULL
) {

2584 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2588 
Êow›
->
fo_¥iv©e
 = 
NULL
;

2589 (Ë
	`ùc_muãx_u∆ock
(&
Êow›
->
fo_lock
);

2591 
dbl_cou¡
 = ()
my°©s
->
ßm∂e_cou¡
;

2592 
món
 = 
my°©s
->
vÆ_sum
 / 
dbl_cou¡
;

2593 
°d_dev
 = 
	`sqπ
((
my°©s
->
sqr_sum
 / 
dbl_cou¡
Ë- (
món
 * mean)) / mean;

2595 
	`fûebích_log
(
LOG_VERBOSE
,

2597 (
u_l⁄gl⁄g_t
)
my°©s
->
ßm∂e_cou¡
, 
món
, 
°d_dev
);

2598 
	`‰ì
(
my°©s
);

2599 
	}
}

2605 
	$Êow›lib_¥öt
(
thªadÊow_t
 *
thªadÊow
, 
Êow›_t
 *
Êow›
)

2607 
¥ocÊow_t
 *
¥ocÊow
;

2609 
¥ocÊow
 = 
thªadÊow
->
tf_¥o˚ss
;

2610 
	`fûebích_log
(
LOG_INFO
,

2612 
¥ocÊow
->
pf_«me
,ÖrocÊow->
pf_ö°™˚
,

2613 
thªadÊow
->
tf_«me
,ÅhªadÊow->
tf_ö°™˚
,

2614 
	`avd_gë_°r
(
Êow›
->
fo_vÆue
));

2616  (
FILEBENCH_OK
);

2617 
	}
}

	@fsplug.h

28 #i‚de‡
_FB_FSPLUG_H


29 
	#_FB_FSPLUG_H


	)

31 
	~"fûebích.h
"

36 
	efb_∂ugö_ty≥
 {

37 
	mLOCAL_FS_PLUG
 = 0,

38 
	mNFS3_PLUG
,

39 
	mNFS4_PLUG
,

40 
	mCIFS_PLUG


41 } 
	tfb_∂ugö_ty≥_t
;

44 
	ufb_fdesc
 {

45 
	mfd_num
;

46 *
	mfd_±r
;

47 } 
	tfb_fdesc_t
;

49 
aiﬁi°
 
	taiﬁ_t
;

52 
	sf•lug_func_s
 {

53 
	mfs_«me
[16];

54 (*
	mf•_‰ìmem
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

55 (*
	mf•_›í
)(
	mfb_fdesc_t
 *, *, , );

56 (*
	mf•_¥ód
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

57 (*
	mf•_ªad
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

58 (*
	mf•_pwrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
, 
	moff64_t
);

59 (*
	mf•_wrôe
)(
	mfb_fdesc_t
 *, 
	mˇddr_t
, 
	mfböt_t
);

60 (*
	mf•_l£ek
)(
	mfb_fdesc_t
 *, 
	moff64_t
, );

61 (*
	mf•_·runc
)(
	mfb_fdesc_t
 *, 
	moff64_t
);

62 (*
	mf•_ª«me
)(const *, const *);

63 (*
	mf•_˛o£
)(
	mfb_fdesc_t
 *);

64 (*
	mf•_lök
)(const *, const *);

65 (*
	mf•_symlök
)(const *, const *);

66 (*
	mf•_u∆ök
)(*);

67 
ssize_t
 (*
f•_ªadlök
)(c⁄° *, *, 
	msize_t
);

68 (*
	mf•_mkdú
)(*, );

69 (*
	mf•_rmdú
)(*);

70 
	mDIR
 *(*
	mf•_›ídú
)(*);

71 
	mdúít
 *(*
	mf•_ªaddú
)(
	mDIR
 *);

72 (*
	mf•_˛o£dú
)(
	mDIR
 *);

73 (*
	mf•_fsync
)(
	mfb_fdesc_t
 *);

74 (*
	mf•_°©
)(*, 
	m°©64
 *);

75 (*
	mf•_f°©
)(
	mfb_fdesc_t
 *, 
	m°©64
 *);

76 (*
	mf•_ac˚ss
)(const *, );

77 (*
	mf•_ªcur_rm
)(*);

78 } 
	tf•lug_func_t
;

80 
f•lug_func_t
 *
fs_fun˘i⁄s_vec
;

83 
	#FB_FREEMEM
(
fd
, 
sz
) \

84 (*
fs_fun˘i⁄s_vec
->
f•_‰ìmem
)(
fd
, 
sz
)

	)

86 
	#FB_OPEN
(
fd
, 
∑th
, 
Êags
, 
≥rms
) \

87 (*
fs_fun˘i⁄s_vec
->
f•_›í
)(
fd
, 
∑th
, 
Êags
, 
≥rms
)

	)

89 
	#FB_PREAD
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

90 (*
fs_fun˘i⁄s_vec
->
f•_¥ód
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

92 
	#FB_READ
(
fdesc
, 
iobuf
, 
iosize
) \

93 (*
fs_fun˘i⁄s_vec
->
f•_ªad
)(
fdesc
, 
iobuf
, 
iosize
)

	)

95 
	#FB_PWRITE
(
fdesc
, 
iobuf
, 
iosize
, 
off£t
) \

96 (*
fs_fun˘i⁄s_vec
->
f•_pwrôe
)(
fdesc
, 
iobuf
, 
iosize
, 
off£t
)

	)

98 
	#FB_WRITE
(
fdesc
, 
iobuf
, 
iosize
) \

99 (*
fs_fun˘i⁄s_vec
->
f•_wrôe
)(
fdesc
, 
iobuf
, 
iosize
)

	)

101 
	#FB_LSEEK
(
fdesc
, 
am¡
, 
whí˚
) \

102 (*
fs_fun˘i⁄s_vec
->
f•_l£ek
)(
fdesc
, 
am¡
, 
whí˚
)

	)

104 
	#FB_CLOSE
(
fdesc
) \

105 (*
fs_fun˘i⁄s_vec
->
f•_˛o£
)(
fdesc
)

	)

107 
	#FB_UNLINK
(
∑th
) \

108 (*
fs_fun˘i⁄s_vec
->
f•_u∆ök
)(
∑th
)

	)

110 
	#FB_MKDIR
(
∑th
, 
≥rm
) \

111 (*
fs_fun˘i⁄s_vec
->
f•_mkdú
)(
∑th
, 
≥rm
)

	)

113 
	#FB_RMDIR
(
∑th
) \

114 (*
fs_fun˘i⁄s_vec
->
f•_rmdú
)(
∑th
)

	)

116 
	#FB_OPENDIR
(
∑th
) \

117 (*
fs_fun˘i⁄s_vec
->
f•_›ídú
)(
∑th
)

	)

119 
	#FB_READDIR
(
dú
) \

120 (*
fs_fun˘i⁄s_vec
->
f•_ªaddú
)(
dú
)

	)

122 
	#FB_CLOSEDIR
(
dú
) \

123 (*
fs_fun˘i⁄s_vec
->
f•_˛o£dú
)(
dú
)

	)

125 
	#FB_FSYNC
(
fdesc
) \

126 (*
fs_fun˘i⁄s_vec
->
f•_fsync
)(
fdesc
)

	)

128 
	#FB_RECUR_RM
(
∑th
) \

129 (*
fs_fun˘i⁄s_vec
->
f•_ªcur_rm
)(
∑th
)

	)

131 
	#FB_STAT
(
∑th
, 
°©p
) \

132 (*
fs_fun˘i⁄s_vec
->
f•_°©
)(
∑th
, 
°©p
)

	)

134 
	#FB_FSTAT
(
fdesc
, 
°©p
) \

135 (*
fs_fun˘i⁄s_vec
->
f•_f°©
)(
fdesc
, 
°©p
)

	)

137 
	#FB_FTRUNC
(
fdesc
, 
size
) \

138 (*
fs_fun˘i⁄s_vec
->
f•_·runc
)(
fdesc
, 
size
)

	)

140 
	#FB_LINK
(
exi°ög
, 
√w
) \

141 (*
fs_fun˘i⁄s_vec
->
f•_lök
)(
exi°ög
, 
√w
)

	)

143 
	#FB_SYMLINK
(
«me1
, 
«me2
) \

144 (*
fs_fun˘i⁄s_vec
->
f•_symlök
)(
«me1
, 
«me2
)

	)

	@gamma_dist.c

26 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

28 
	~<°dlib.h
>

29 
	~<m©h.h
>

37 
	$gamma_di°_knuth_ÆgG
(
a
, (*
§c
)(*),

38 *
xi
)

40 
p
, 
U
, 
V
, 
X
, 
q
;

42 
p
 = 
M_E
/(
a
 + M_E);

43 
G2
:

45 
U
 = (*
§c
)(
xi
);

49 
V
 = (*
§c
)(
xi
);

51 } 
V
 == 0);

53 i‡(
U
 < 
p
) {

54 
X
 = 
	`pow
(
V
, 1/
a
);

56 
q
 = 
	`exp
(-
X
);

58 
X
 = 1 - 
	`log
(
V
);

59 
q
 = 
	`pow
(
X
, 
a
-1);

67 
U
 = (*
§c
)(
xi
);

69 i‡(
U
 >
q
)

70 
G2
;

71  (
X
);

72 
	}
}

80 
	$gamma_di°_knuth_ÆgA
(
a
, (*
§c
)(*),

81 *
xi
)

83 
U
, 
Y
, 
X
, 
V
;

85 
A1
:

87 
U
 = (*
§c
)(
xi
);

89 
Y
 = 
	`èn
(
M_PI
*
U
);

90 
X
 = (
	`sqπ
((2*
a
Ë- 1Ë* 
Y
) +á - 1;

92 i‡(
X
 <= 0)

93 
A1
;

96 
V
 = (*
§c
)(
xi
);

98 i‡(
V
 > ((1 + (
Y
*Y)Ë* 
	`exp
((
a
-1Ë* 
	`log
(
X
/◊-1)Ë- 
	`sqπ
(2*a -1) * Y)))

99 
A1
;

101  (
X
);

102 
	}
}

109 
	$deÁu…_§c
(*
xi
)

111  (
	`dønd48
());

112 
	}
}

120 
	$gamma_di°_knuth
(
a
, 
b
)

122 i‡(
a
 <= 1.0)

123  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
deÁu…_§c
, 
NULL
));

125  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
deÁu…_§c
, 
NULL
));

126 
	}
}

135 
	$gamma_di°_knuth_§c
(
a
, 
b
,

136 (*
§c
)(*), *
xi
)

138 i‡(
a
 <= 1.0)

139  (
b
 * 
	`gamma_di°_knuth_ÆgG
(
a
, 
§c
, 
xi
));

141  (
b
 * 
	`gamma_di°_knuth_ÆgA
(
a
, 
§c
, 
xi
));

142 
	}
}

	@gamma_dist.h

26 #i‚def 
_FB_GAMMA_DIST_H


27 
	#_FB_GAMMA_DIST_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
gamma_di°_knuth
(
a
, 
b
);

34 
gamma_di°_knuth_§c
(
a
, 
b
,

35 (*
§c
)(*), *
xi
);

	@ioprio.c

1 
	~"fûebích.h
"

2 
	~"i›rio.h
"

4 #ifde‡
HAVE_IOPRIO


6 
ölöe
 
	$i›rio_£t
(
which
, 
who
, 
i›rio
)

8  
	`sysˇŒ
(
__NR_i›rio_£t
, 
which
, 
who
, 
i›rio
);

9 
	}
}

11 
ölöe
 
	$i›rio_gë
(
which
, 
who
)

13  
	`sysˇŒ
(
__NR_i›rio_gë
, 
which
, 
who
);

14 
	}
}

17 
	mIOPRIO_CLASS_NONE
,

18 
	mIOPRIO_CLASS_RT
,

19 
	mIOPRIO_CLASS_BE
,

20 
	mIOPRIO_CLASS_IDLE
,

24 
	mIOPRIO_WHO_PROCESS
 = 1,

25 
	mIOPRIO_WHO_PGRP
,

26 
	mIOPRIO_WHO_USER
,

29 
	#IOPRIO_CLASS_SHIFT
 13

	)

31 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

33 
ªt
;

34 
i›rio
 = 
	`avd_gë_öt
(
tf
->
tf_i›rio
);

36 i‡(
i›rio
 > 7)

39 
ªt
 = 
	`i›rio_£t
(
IOPRIO_WHO_PROCESS
, 0,

40 
i›rio
 | 
IOPRIO_CLASS_BE
 << 
IOPRIO_CLASS_SHIFT
);

41 i‡(
ªt
) {

42 
	`fûebích_log
(
LOG_ERROR
, "set_thread_ioprio:Érror while setting ioprio!");

46 
i›rio
 = 
	`i›rio_gë
(
IOPRIO_WHO_PROCESS
, 0);

47 
i›rio
 = ioprio & 0xff;

48 
	`fûebích_log
(
LOG_INFO
, "ioprio setÅo %d forÅhread %s",

49 
i›rio
, 
tf
->
tf_«me
);

50 
	}
}

	@ioprio.h

1 #i‚de‡
_FB_IOPRIO_H


2 
	#_FB_IOPRIO_H


	)

4 #ifde‡
HAVE_IOPRIO


5 
	~<asm/uni°d.h
>

6 
£t_thªad_i›rio
(
thªadÊow_t
 *);

8 
ölöe
 
	$£t_thªad_i›rio
(
thªadÊow_t
 *
tf
)

11 
	}
}

	@ipc.c

28 
	~"c⁄fig.h
"

30 
	~<°dio.h
>

31 
	~<f˙é.h
>

32 
	~<sys/mm™.h
>

33 
	~<sys/ùc.h
>

34 
	~<sys/£m.h
>

35 
	~<sys/î∫o.h
>

36 
	~<sig«l.h
>

37 
	~<±hªad.h
>

38 
	~<sys/shm.h
>

39 
	~"fûebích.h
"

40 
	~"fb_cv¨.h
"

42 
fûebích_shm_t
 *
	gfûebích_shm
 = 
NULL
;

43 
	gshm∑th
[128] = "/localhome/sudarsun/projects/HPC/NVM/appbench/shared_data/filebench-shm-XXXXXX";

59 
	$ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
)

61 
îr‹
;

63 
îr‹
 = 
	`±hªad_muãx_lock
(
muãx
);

65 #ifde‡
HAVE_ROBUST_MUTEX


66 i‡(
îr‹
 =
EOWNERDEAD
) {

67 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

68 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

69 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

76 i‡(
îr‹
 != 0) {

77 
	`fûebích_log
(
LOG_FATAL
, "mutexÜock failed: %s",

78 
	`°ªº‹
(
îr‹
));

81  (
îr‹
);

82 
	}
}

88 
	$ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
)

90 
îr‹
;

92 
îr‹
 = 
	`±hªad_muãx_u∆ock
(
muãx
);

94 #ifde‡
HAVE_ROBUST_MUTEX


95 i‡(
îr‹
 =
EOWNERDEAD
) {

96 i‡(
	`±hªad_muãx_c⁄si°ít_≈
(
muãx
) != 0) {

97 
	`fûebích_log
(
LOG_FATAL
, "mutex make consistent "

98 "Áûed: %s", 
	`°ªº‹
(
îr‹
));

105 i‡(
îr‹
 != 0) {

106 
	`fûebích_log
(
LOG_FATAL
, "mutex unlock failed: %s",

107 
	`°ªº‹
(
îr‹
));

110  (
îr‹
);

111 
	}
}

117 
	$ùc_muãx©å_öô
(
mtx_ty≥
)

119 
±hªad_muãx©å_t
 *
mtx_©åp
;

121 
mtx_©åp
 = &(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]);

123 (Ë
	`±hªad_muãx©å_öô
(
mtx_©åp
);

125 #ifde‡
HAVE_PROCSCOPE_PTHREADS


126 i‡(
	`±hªad_muãx©å_£çsh¨ed
(
mtx_©åp
,

127 
PTHREAD_PROCESS_SHARED
) != 0) {

128 
	`fûebích_log
(
LOG_ERROR
, "cannot set mutexáttr "

132 #ifde‡
HAVE_PTHREAD_MUTEXATTR_SETPROTOCOL


133 i‡(
mtx_ty≥
 & 
IPC_MUTEX_PRIORITY
) {

134 i‡(
	`±hªad_muãx©å_£çrŸocﬁ
(
mtx_©åp
,

135 
PTHREAD_PRIO_INHERIT
) != 0) {

136 
	`fûebích_log
(
LOG_ERROR
,

144 #ifde‡
HAVE_ROBUST_MUTEX


145 i‡(
mtx_ty≥
 & 
IPC_MUTEX_ROBUST
) {

146 i‡(
	`±hªad_muãx©å_£åobu°_≈
(
mtx_©åp
,

147 
PTHREAD_MUTEX_ROBUST_NP
) != 0) {

148 
	`fûebích_log
(
LOG_ERROR
,

151 
	`fûebích_shutdown
(1);

153 i‡(
	`±hªad_muãx©å_£ây≥
(
mtx_©åp
,

154 
PTHREAD_MUTEX_ERRORCHECK
) != 0) {

155 
	`fûebích_log
(
LOG_ERROR
,

159 
	`fûebích_shutdown
(1);

163 
	}
}

170 
±hªad_muãx©å_t
 *

171 
	$ùc_muãx©å
(
mtx_ty≥
)

173 i‡((
mtx_ty≥
 >
IPC_NUM_MUTEX_ATTRS
) ||

174 (
mtx_ty≥
 < 
IPC_MUTEX_NORMAL
)) {

175 
	`fûebích_log
(
LOG_ERROR
,

177 
mtx_ty≥
);

178  (&(
fûebích_shm
->
shm_muãx©å
[
IPC_MUTEX_NORMAL
]));

181  (&(
fûebích_shm
->
shm_muãx©å
[
mtx_ty≥
]));

182 
	}
}

184 
±hªad_c⁄d©å_t
 *
	gc⁄d©å
 = 
NULL
;

191 
±hªad_c⁄d©å_t
 *

192 
	$ùc_c⁄d©å
()

194 i‡(
c⁄d©å
 =
NULL
) {

195 i‡((
c⁄d©å
 = 
	`mÆloc
( (
±hªad_c⁄d©å_t
))Ë=
NULL
) {

196 
	`fûebích_log
(
LOG_ERROR
, "cannotálloc condáttr");

197 
	`fûebích_shutdown
(1);

199 (Ë
	`±hªad_c⁄d©å_öô
(
c⁄d©å
);

200 #ifde‡
HAVE_PROCSCOPE_PTHREADS


201 i‡(
	`±hªad_c⁄d©å_£çsh¨ed
(
c⁄d©å
,

202 
PTHREAD_PROCESS_SHARED
) != 0) {

203 
	`fûebích_log
(
LOG_ERROR
,

209  (
c⁄d©å
);

210 
	}
}

212 
±hªad_rwlock©å_t
 *
	grwlock©å
 = 
NULL
;

219 
±hªad_rwlock©å_t
 *

220 
	$ùc_rwlock©å
()

222 i‡(
rwlock©å
 =
NULL
) {

223 i‡((
rwlock©å
 =

224 
	`mÆloc
( (
±hªad_rwlock©å_t
))Ë=
NULL
) {

225 
	`fûebích_log
(
LOG_ERROR
, "cannotállocÑwlockáttr");

226 
	`fûebích_shutdown
(1);

228 (Ë
	`±hªad_rwlock©å_öô
(
rwlock©å
);

229 #ifde‡
HAVE_PROCSCOPE_PTHREADS


230 i‡(
	`±hªad_rwlock©å_£çsh¨ed
(
rwlock©å
,

231 
PTHREAD_PROCESS_SHARED
) != 0) {

232 
	`fûebích_log
(
LOG_ERROR
,

238  (
rwlock©å
);

239 
	}
}

245 
	$ùc_£möô
()

247 
key_t
 
key
 = 
fûebích_shm
->
shm_£mkey
;

248 
sys_£mid
;

251 i‡(
fûebích_shm
->
shm_sys_£mid
 >= 0)

254 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 
FILEBENCH_NSEMS
, 
IPC_CREAT
 |

255 
S_IRUSR
 | 
S_IWUSR
)) == -1) {

256 
	`fûebích_log
(
LOG_ERROR
,

259 
	`°ªº‹
(
î∫o
));

260 
	`fûebích_shutdown
(1);

263 
fûebích_shm
->
shm_sys_£mid
 = 
sys_£mid
;

264 
	}
}

277 
	$ùc_öô
()

279 
shmfd
;

280 
tmpbuf
[
MB
];

281 
key_t
 
key
;

282 #ifde‡
HAVE_SEM_RMID


283 
sys_£mid
;

286 
shmfd
 = 
	`mk°emp
(
shm∑th
);

287 i‡(
shmfd
 < 0) {

288 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot create shared memory "

289 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

290 
	`exô
(1);

293 ()
	`l£ek
(
shmfd
, (
fûebích_shm_t
), 
SEEK_SET
);

294 i‡(
	`wrôe
(
shmfd
, 
tmpbuf
, 
MB
) != MB) {

295 
	`fûebích_log
(
LOG_FATAL
,

297 "fûe: %s", 
	`°ªº‹
(
î∫o
));

298 
	`exô
(1);

301 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
NULL
,

302 (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

303 
MAP_SHARED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

304 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

305 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

306 
	`exô
(1);

309 (Ë
	`mem£t
(
fûebích_shm
, 0,

310 (*)&
fûebích_shm
->
shm_m¨kî
 - (*)filebench_shm);

316 
fûebích_shm
->
shm_ïoch
 = 
	`gëhπime
();

317 
fûebích_shm
->
shm_debug_Àvñ
 = 
LOG_INFO
;

320 
	`ùc_muãx©å_öô
(
IPC_MUTEX_NORMAL
);

321 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRIORITY
);

322 
	`ùc_muãx©å_öô
(
IPC_MUTEX_ROBUST
);

323 
	`ùc_muãx©å_öô
(
IPC_MUTEX_PRI_ROB
);

325 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_msg_lock
,

326 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

328 
	`fûebích_log
(
LOG_INFO
, "Allocated %lldMB of shared memory",

329 ((
fûebích_shm_t
Ë+ 
MB
) / MB);

331 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

332 
fûebích_shm
->
shm_°rög_±r
 = &fûebích_shm->
shm_°rögs
[0];

333 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

334 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

336 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_fûe£t_lock
,

337 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

338 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocÊow_lock
,

339 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

340 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
,

341 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

342 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_thªadÊow_lock
,

343 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

344 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_Êow›_lock
,

345 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

346 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_evítgí_lock
,

347 
	`ùc_muãx©å
(
IPC_MUTEX_PRI_ROB
));

348 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_mÆloc_lock
,

349 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

350 (Ë
	`±hªad_muãx_öô
(&
fûebích_shm
->
shm_ism_lock
,

351 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

352 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

353 (Ë
	`±hªad_c⁄d_öô
(&
fûebích_shm
->
shm_evítgí_cv
,

354 
	`ùc_c⁄d©å
());

355 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_Êow›_föd_lock
,

356 
	`ùc_rwlock©å
());

357 (Ë
	`±hªad_rwlock_öô
(&
fûebích_shm
->
shm_run_lock
,

358 
	`ùc_rwlock©å
());

361 i‡((
key
 = 
	`·ok
(
shm∑th
, 1)) < 0) {

362 
	`fûebích_log
(
LOG_ERROR
, "cannot create sem: %s",

363 
	`°ªº‹
(
î∫o
));

364 
	`exô
(1);

367 #ifde‡
HAVE_SEM_RMID


368 i‡((
sys_£mid
 = 
	`£mgë
(
key
, 0, 0)) != -1)

369 (Ë
	`£m˘l
(
sys_£mid
, 0, 
IPC_RMID
);

372 
fûebích_shm
->
shm_£mkey
 = 
key
;

373 
fûebích_shm
->
shm_sys_£mid
 = -1;

374 
fûebích_shm
->
shm_dump_fd
 = -1;

375 
fûebích_shm
->
shm_evítgí_hz
 = 0;

376 
fûebích_shm
->
shm_id
 = -1;

378 
fûebích_shm
->
shm_fûesys_ty≥
 = 
LOCAL_FS_PLUG
;

379 
	}
}

382 
	$ùc_föi
()

384 #ifde‡
HAVE_SEM_RMID


385 i‡(
fûebích_shm
->
shm_sys_£mid
 != -1) {

386 (Ë
	`£m˘l
(
fûebích_shm
->
shm_sys_£mid
, 0, 
IPC_RMID
);

387 
fûebích_shm
->
shm_sys_£mid
 = -1;

391 (Ë
	`u∆ök
(
shm∑th
);

392 
	}
}

401 
	$ùc_©èch
(*
shmaddr
, *
shm∑th
)

403 
shmfd
;

405 i‡((
shmfd
 = 
	`›í
(
shm∑th
, 
O_RDWR
)) < 0) {

406 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot open shared memory "

407 "fûê%s: %s", 
shm∑th
, 
	`°ªº‹
(
î∫o
));

411 i‡((
fûebích_shm
 = (
fûebích_shm_t
 *)
	`mm≠
(
shmaddr
,

412  (
fûebích_shm_t
), 
PROT_READ
 | 
PROT_WRITE
,

413 
MAP_SHARED
 | 
MAP_FIXED
, 
shmfd
, 0)Ë=
MAP_FAILED
) {

414 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

415 "mem‹y fûe: %s", 
	`°ªº‹
(
î∫o
));

419 i‡(
fûebích_shm
 !
shmaddr
) {

420 
	`fûebích_log
(
LOG_FATAL
, "CouldÇot mmapÅhe shared "

422 
	`°ªº‹
(
î∫o
));

427 
	}
}

433 
	$¥óŒoˇãd_íåõs
(
obj_ty≥
)

435 
íåõs
;

437 
obj_ty≥
) {

438 
FILEBENCH_FILESET
:

439 
íåõs
 = (
fûebích_shm
->
shm_fûe£t
)

440 / (
fûe£t_t
);

442 
FILEBENCH_FILESETENTRY
:

443 
íåõs
 = (
fûebích_shm
->
shm_fûe£ã¡ry
)

444 / (
fûe£ã¡ry_t
);

446 
FILEBENCH_PROCFLOW
:

447 
íåõs
 = (
fûebích_shm
->
shm_¥ocÊow
)

448 / (
¥ocÊow_t
);

450 
FILEBENCH_THREADFLOW
:

451 
íåõs
 = (
fûebích_shm
->
shm_thªadÊow
)

452 / (
thªadÊow_t
);

454 
FILEBENCH_FLOWOP
:

455 
íåõs
 = (
fûebích_shm
->
shm_Êow›
)

456 / (
Êow›_t
);

458 
FILEBENCH_VARIABLE
:

459 
íåõs
 = (
fûebích_shm
->
shm_v¨
)

460 / (
v¨_t
);

462 
FILEBENCH_AVD
:

463 
íåõs
 = (
fûebích_shm
->
shm_avd_±rs
)

464 / (
avd_t
);

466 
FILEBENCH_RANDDIST
:

467 
íåõs
 = (
fûebích_shm
->
shm_ønddi°
)

468 / (
ønddi°_t
);

470 
FILEBENCH_CVAR
:

471 
íåõs
 = (
fûebích_shm
->
shm_cv¨
)

472 / (
cv¨_t
);

474 
FILEBENCH_CVAR_LIB_INFO
:

475 
íåõs
 = (
fûebích_shm
->
shm_cv¨_lib_öfo
)

476 / (
cv¨_libøry_öfo_t
);

479 
íåõs
 = -1;

480 
	`fûebích_log
(
LOG_ERROR
, "preallocated_entries: "

482 
	`fûebích_shutdown
(1);

486  
íåõs
;

487 
	}
}

499 
	$ùc_mÆloc
(
obj_ty≥
)

501 
°¨t_idx
;

502 
max_idx
;

503 
i
;

505 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

507 
°¨t_idx
 = 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
];

508 
max_idx
 = 
	`¥óŒoˇãd_íåõs
(
obj_ty≥
) - 1;

510 
i
 = 
°¨t_idx
;

512 
i
++;

513 i‡(
i
 > 
max_idx
)

514 
i
 = 0;

516 i‡(
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] == 0)

518 } 
i
 !
°¨t_idx
);

520 i‡(
i
 =
°¨t_idx
) {

521 
	`fûebích_log
(
LOG_ERROR
, "Ouào‡sh¨ed mem‹y (%d)!", 
obj_ty≥
);

522 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

523  (
NULL
);

526 
fûebích_shm
->
shm_bôm≠
[
obj_ty≥
][
i
] = 1;

527 
fûebích_shm
->
shm_œ°bôm≠ödex
[
obj_ty≥
] = 
i
;

529 
obj_ty≥
) {

530 
FILEBENCH_FILESET
:

531 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£t
[
i
], 0,

532  (
fûe£t_t
));

533 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

534  ((*)&
fûebích_shm
->
shm_fûe£t
[
i
]);

536 
FILEBENCH_FILESETENTRY
:

537 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
], 0,

538  (
fûe£ã¡ry_t
));

539 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

540  ((*)&
fûebích_shm
->
shm_fûe£ã¡ry
[
i
]);

542 
FILEBENCH_PROCFLOW
:

543 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
], 0,

544  (
¥ocÊow_t
));

545 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

546  ((*)&
fûebích_shm
->
shm_¥ocÊow
[
i
]);

548 
FILEBENCH_THREADFLOW
:

549 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_thªadÊow
[
i
], 0,

550  (
thªadÊow_t
));

551 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

552  ((*)&
fûebích_shm
->
shm_thªadÊow
[
i
]);

554 
FILEBENCH_FLOWOP
:

555 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_Êow›
[
i
], 0,

556  (
Êow›_t
));

557 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

558  ((*)&
fûebích_shm
->
shm_Êow›
[
i
]);

560 
FILEBENCH_VARIABLE
:

561 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_v¨
[
i
], 0,

562  (
v¨_t
));

563 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

564  ((*)&
fûebích_shm
->
shm_v¨
[
i
]);

566 
FILEBENCH_AVD
:

567 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_ty≥
 = 
AVD_INVALID
;

568 
fûebích_shm
->
shm_avd_±rs
[
i
].
avd_vÆ
.
v¨±r
 = 
NULL
;

569 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

570  ((*)&
fûebích_shm
->
shm_avd_±rs
[
i
]);

572 
FILEBENCH_RANDDIST
:

573 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_ønddi°
[
i
], 0,

574  (
ønddi°_t
));

575 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

576  ((*)&
fûebích_shm
->
shm_ønddi°
[
i
]);

578 
FILEBENCH_CVAR
:

579 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨
[
i
], 0, (
cv¨_t
));

580 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

581  ((*)&
fûebích_shm
->
shm_cv¨
[
i
]);

583 
FILEBENCH_CVAR_LIB_INFO
:

584 (Ë
	`mem£t
((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
], 0,

585 (
cv¨_libøry_öfo_t
));

586 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

587  ((*)&
fûebích_shm
->
shm_cv¨_lib_öfo
[
i
]);

590 
	`fûebích_log
(
LOG_ERROR
, "AttemptÅo ipc_malloc unknown objectÅype (%d)!",

591 
obj_ty≥
);

592 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

593  (
NULL
);

594 
	}
}

603 
	$ùc_‰ì
(
ty≥
, *
addr
)

605 
ôem
;

606 
ˇddr_t
 
ba£
 = 0;

607 
size_t
 
off£t
;

608 
size_t
 
size
 = 0;

610 i‡(
addr
 =
NULL
) {

611 
	`fûebích_log
(
LOG_ERROR
, "FªeögÅy≥ %d %zx", 
ty≥
, 
addr
);

615 
ty≥
) {

617 
FILEBENCH_FILESET
:

618 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£t
[0];

619 
size
 =  (
fûe£t_t
);

622 
FILEBENCH_FILESETENTRY
:

623 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_fûe£ã¡ry
[0];

624 
size
 =  (
fûe£ã¡ry_t
);

627 
FILEBENCH_PROCFLOW
:

628 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_¥ocÊow
[0];

629 
size
 =  (
¥ocÊow_t
);

632 
FILEBENCH_THREADFLOW
:

633 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_thªadÊow
[0];

634 
size
 =  (
thªadÊow_t
);

637 
FILEBENCH_FLOWOP
:

638 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_Êow›
[0];

639 
size
 =  (
Êow›_t
);

642 
FILEBENCH_VARIABLE
:

643 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_v¨
[0];

644 
size
 =  (
v¨_t
);

647 
FILEBENCH_AVD
:

648 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_avd_±rs
[0];

649 
size
 =  (
avd_t
);

652 
FILEBENCH_RANDDIST
:

653 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_ønddi°
[0];

654 
size
 =  (
ønddi°_t
);

657 
FILEBENCH_CVAR
:

658 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨
[0];

659 
size
 =  (
cv¨_t
);

662 
FILEBENCH_CVAR_LIB_INFO
:

663 
ba£
 = (
ˇddr_t
)&
fûebích_shm
->
shm_cv¨_lib_öfo
[0];

664 
size
 = (
cv¨_libøry_öfo_t
);

668 
off£t
 = ((
size_t
)
addr
 - (size_t)
ba£
);

669 
ôem
 = 
off£t
 / 
size
;

671 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

672 
fûebích_shm
->
shm_bôm≠
[
ty≥
][
ôem
] = 0;

673 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

674 
	}
}

683 
	$ùc_°øŒoc
(c⁄° *
°rög
)

685 *
Æloc°r
 = 
fûebích_shm
->
shm_°rög_±r
;

687 
fûebích_shm
->
shm_°rög_±r
 +
	`°æí
(
°rög
) + 1;

689 i‡((
fûebích_shm
->
shm_°rög_±r
 - &fûebích_shm->
shm_°rögs
[0]) >

690 
FILEBENCH_STRINGMEMORY
) {

691 
	`fûebích_log
(
LOG_ERROR
, "Out of ipc string memory");

692  (
NULL
);

695 (Ë
	`°∫˝y
(
Æloc°r
, 
°rög
, 
	`°æí
(string));

697  (
Æloc°r
);

698 
	}
}

711 
	$ùc_∑thÆloc
(*
∑th
)

713 *
Ælo˝©h
 = 
fûebích_shm
->
shm_∑th_±r
;

715 
fûebích_shm
->
shm_∑th_±r
 +
	`°æí
(
∑th
) + 1;

717 i‡((
fûebích_shm
->
shm_∑th_±r
 -

718 &
fûebích_shm
->
shm_fûe£ç©hs
[0]) >

719 
FILEBENCH_FILESETPATHMEMORY
) {

720 
	`fûebích_log
(
LOG_ERROR
, "Out of filesetÖath memory");

721  (
NULL
);

724 (Ë
	`°∫˝y
(
Ælo˝©h
, 
∑th
, 
	`°æí
(path));

726  (
Ælo˝©h
);

727 
	}
}

735 
	$ùc_‰ì∑ths
()

737 
fûebích_shm
->
shm_∑th_±r
 = &fûebích_shm->
shm_fûe£ç©hs
[0];

738 
	}
}

745 *
	$ùc_cv¨_hó∑Œoc
(
size_t
 
size
)

747 *
mem‹y
;

749 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_mÆloc_lock
);

751 i‡((
fûebích_shm
->
shm_cv¨_hópsize
 + 
size
Ë<
FILEBENCH_CVAR_HEAPSIZE
) {

752 
mem‹y
 = 
fûebích_shm
->
shm_cv¨_hóp
 +

753 
fûebích_shm
->
shm_cv¨_hópsize
;

755 
fûebích_shm
->
shm_cv¨_hópsize
 +
size
;

757 
mem‹y
 = 
NULL
;

759 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_mÆloc_lock
);

761  
mem‹y
;

762 
	}
}

765 
	$ùc_cv¨_hóp‰ì
(*
±r
)

771 
	}
}

781 
	$ùc_£midÆloc
()

783 
£mid
;

785 
£mid
 = 0; 
fûebích_shm
->
shm_£mids
[semid] == 1; semid++)

787 i‡(
£mid
 =
FILEBENCH_NSEMS
) {

788 
	`fûebích_log
(
LOG_ERROR
,

790 
	`fûebích_shutdown
(1);

792 
fûebích_shm
->
shm_£mids
[
£mid
] = 1;

793  (
£mid
);

794 
	}
}

801 
	$ùc_£mid‰ì
(
£mid
)

803 
fûebích_shm
->
shm_£mids
[
£mid
] = 0;

804 
	}
}

816 
	$ùc_ism¸óã
(
size_t
 
size
)

818 #ifde‡
HAVE_SHM_SHARE_MMU


819 
Êag
 = 
SHM_SHARE_MMU
;

821 
Êag
 = 0;

825 i‡(
fûebích_shm
->
shm_id
 != -1)

828 
	`fûebích_log
(
LOG_VERBOSE
,

829 "Cª©ög %zd byã†o‡ISM Sh¨ed Mem‹y...", 
size
);

831 i‡((
fûebích_shm
->
shm_id
 =

832 
	`shmgë
(0, 
size
, 
IPC_CREAT
 | 0666)) == -1) {

833 
	`fûebích_log
(
LOG_ERROR
,

834 "FaûedÅÿ¸óã %zd byã†o‡ISM sh¨ed mem‹y (ªà%d)", 
size
, 
î∫o
);

838 i‡((
fûebích_shm
->
shm_addr
 = (
ˇddr_t
)
	`shm©
(fûebích_shm->
shm_id
,

839 0, 
Êag
)) == (*)-1) {

840 
	`fûebích_log
(
LOG_ERROR
,

842 
size
);

846 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

848 
	`fûebích_log
(
LOG_VERBOSE
,

850 
size
, 
fûebích_shm
->
shm_addr
);

853 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

856 
	}
}

859 
	gism_©èched
 = 0;

868 
	$ùc_ism©èch
()

870 #ifde‡
HAVE_SHM_SHARE_MMU


871 
Êag
 = 
SHM_SHARE_MMU
;

873 
Êag
 = 0;

877 i‡(
ism_©èched
)

881 i‡(
fûebích_shm
->
shm_id
 == 999)

884 i‡(
	`shm©
(
fûebích_shm
->
shm_id
, fûebích_shm->
shm_addr
,

885 
Êag
Ë=
NULL
)

888 
ism_©èched
 = 1;

891 
	}
}

902 
	$ùc_ismmÆloc
(
size_t
 
size
)

904 *
Æloc°r
;

906 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

909 (Ë
	`ùc_ism©èch
();

911 
Æloc°r
 = 
fûebích_shm
->
shm_±r
;

913 
fûebích_shm
->
shm_±r
 +
size
;

914 
fûebích_shm
->
shm_Æloˇãd
 +
size
;

916 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

918  (
Æloc°r
);

919 
	}
}

926 
	$ùc_ismdñëe
()

928 i‡(
fûebích_shm
->
shm_id
 == -1)

931 
	`fûebích_log
(
LOG_VERBOSE
, "Deleting ISM...");

933 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_ism_lock
);

934 #ifde‡
HAVE_SEM_RMID


935 (Ë
	`shm˘l
(
fûebích_shm
->
shm_id
, 
IPC_RMID
, 0);

937 
fûebích_shm
->
shm_±r
 = (*)fûebích_shm->
shm_addr
;

938 
fûebích_shm
->
shm_id
 = -1;

939 
fûebích_shm
->
shm_Æloˇãd
 = 0;

940 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_ism_lock
);

941 
	}
}

	@ipc.h

26 #i‚de‡
_FB_IPC_H


27 
	#_FB_IPC_H


	)

29 
	~"fûebích.h
"

32 
	#IPC_MUTEX_NORMAL
 0x0

	)

33 
	#IPC_MUTEX_PRIORITY
 0x1

	)

34 
	#IPC_MUTEX_ROBUST
 0x2

	)

35 
	#IPC_MUTEX_PRI_ROB
 0x3

	)

36 
	#IPC_NUM_MUTEX_ATTRS
 4

	)

38 
	#FILEBENCH_NSEMS
 128

	)

40 
	#FILEBENCH_ABORT_ERROR
 1

	)

41 
	#FILEBENCH_ABORT_DONE
 2

	)

42 
	#FILEBENCH_ABORT_RSRC
 3

	)

43 
	#FILEBENCH_ABORT_FINI
 4

	)

46 
	#FILEBENCH_MODE_TIMEOUT
 0x0

	)

47 
	#FILEBENCH_MODE_Q1STDONE
 0x1

	)

48 
	#FILEBENCH_MODE_QALLDONE
 0x2

	)

51 
	#FILEBENCH_MODE_NOUSAGE
 0x01

	)

58 
	#FILEBENCH_FILESET
 0

	)

59 
	#FILEBENCH_FILESETENTRY
 1

	)

60 
	#FILEBENCH_PROCFLOW
 2

	)

61 
	#FILEBENCH_THREADFLOW
 3

	)

62 
	#FILEBENCH_FLOWOP
 4

	)

63 
	#FILEBENCH_VARIABLE
 5

	)

64 
	#FILEBENCH_AVD
 6

	)

65 
	#FILEBENCH_RANDDIST
 7

	)

66 
	#FILEBENCH_CVAR
 8

	)

67 
	#FILEBENCH_CVAR_LIB_INFO
 9

	)

68 
	#FILEBENCH_MAXTYPE
 
FILEBENCH_CVAR_LIB_INFO


	)

76 
	#FILEBENCH_NFILESETS
 (16)

	)

77 
	#FILEBENCH_NFILESETENTRIES
 (1024 * 1024 * 100)

	)

78 
	#FILEBENCH_NPROCFLOWS
 (1024)

	)

79 
	#FILEBENCH_NTHREADFLOWS
 (1024)

	)

81 
	#FILEBENCH_NFLOWOPS
 (16 * 1024)

	)

86 
	#FILEBENCH_NVARIABLES
 (1024)

	)

87 
	#FILEBENCH_NAVDS
 (4096)

	)

88 
	#FILEBENCH_NRANDDISTS
 (16)

	)

89 
	#FILEBENCH_NCVARS
 (16)

	)

90 
	#FILEBENCH_NCVAR_LIB_INFO
 (32)

	)

91 
	#FILEBENCH_MAXBITMAP
 
FILEBENCH_NFILESETENTRIES


	)

94 
	#FILEBENCH_FILESETPATHMEMORY
 (
FILEBENCH_NFILESETENTRIES
 * 
FSE_MAXPATHLEN
)

	)

95 
	#FILEBENCH_STRINGMEMORY
 (
FILEBENCH_NVARIABLES
 * 128)

	)

96 
	#FILEBENCH_CVAR_HEAPSIZE
 (
FILEBENCH_NCVARS
 * 4096)

	)

98 
	sfûebích_shm
 {

108 
fûe£t_t
 *
	mshm_fûe£éi°
;

109 
±hªad_muãx_t
 
	mshm_fûe£t_lock
;

110 
¥ocÊow_t
 *
	mshm_¥ocÊowli°
;

111 
±hªad_muãx_t
 
	mshm_¥ocÊow_lock
;

113 
±hªad_muãx_t
 
	mshm_thªadÊow_lock
;

114 
Êow›_t
 *
	mshm_Êow›li°
;

115 
±hªad_muãx_t
 
	mshm_Êow›_lock
;

121 
±hªad_c⁄d_t
 
	mshm_f•¨Æloc_cv
;

122 
	mshm_f•¨Æloc_cou¡
;

123 
±hªad_muãx_t
 
	mshm_f•¨Æloc_lock
;

128 
	mshm_¥ocs_ru¬ög
;

129 
±hªad_muãx_t
 
	mshm_¥ocs_ru¬ög_lock
;

130 
	mshm_f_ab‹t
;

131 
±hªad_rwlock_t
 
	mshm_run_lock
;

132 
Êag_t
 
	mshm_¥ocÊows_deföed_Êag
;

138 
±hªad_rwlock_t
 
	mshm_Êow›_föd_lock
;

145 
v¨_t
 *
	mshm_v¨_li°
;

146 
v¨_t
 *
	mshm_v¨_loc_li°
;

149 
ønddi°_t
 *
	mshm_ønd_li°
;

150 
cv¨_t
 *
	mshm_cv¨_li°
;

151 
cv¨_libøry_öfo_t
 *
	mshm_cv¨_lib_öfo_li°
;

156 
	mshm_debug_Àvñ
;

157 
	mshm_bequõt
;

158 
	mshm_dump_fd
;

159 
	mshm_dump_fûíame
[
MAXPATHLEN
];

164 
	mshm_evítgí_íabÀd
;

165 
avd_t
 
	mshm_evítgí_hz
;

166 
uöt64_t
 
	mshm_evítgí_q
;

167 
±hªad_muãx_t
 
	mshm_evítgí_lock
;

168 
±hªad_c⁄d_t
 
	mshm_evítgí_cv
;

173 
key_t
 
	mshm_£mkey
;

174 
	mshm_sys_£mid
;

175 
	mshm_£mids
[
FILEBENCH_NSEMS
];

180 
	mshm_fs¸ùäame
[1024];

181 
	mshm_id
;

182 
	mshm_rmode
;

183 
	mshm_mmode
;

184 
	mshm_1°_îr
;

185 
±hªad_muãx_t
 
	mshm_msg_lock
;

186 
±hªad_muãx©å_t
 
	mshm_muãx©å
[
IPC_NUM_MUTEX_ATTRS
];

187 *
	mshm_°rög_±r
;

188 *
	mshm_∑th_±r
;

189 
hπime_t
 
	mshm_ïoch
;

190 
hπime_t
 
	mshm_°¨âime
;

191 
	mshm_utid
;

192 
	mœthi°_íabÀd
;

193 
	mshm_cv¨_hópsize
;

198 
±hªad_muãx_t
 
	mshm_ism_lock
;

199 
size_t
 
	mshm_ªquúed
;

200 
size_t
 
	mshm_Æloˇãd
;

201 
ˇddr_t
 
	mshm_addr
;

202 *
	mshm_±r
;

208 
fb_∂ugö_ty≥_t
 
	mshm_fûesys_ty≥
;

216 
	mshm_bôm≠
[
FILEBENCH_MAXTYPE
][
FILEBENCH_MAXBITMAP
];

217 
	mshm_œ°bôm≠ödex
[
FILEBENCH_MAXTYPE
];

218 
±hªad_muãx_t
 
	mshm_mÆloc_lock
;

226 
	mshm_m¨kî
[0];

233 
fûe£t_t
 
	mshm_fûe£t
[
FILEBENCH_NFILESETS
];

234 
fûe£ã¡ry_t
 
	mshm_fûe£ã¡ry
[
FILEBENCH_NFILESETENTRIES
];

235 
¥ocÊow_t
 
	mshm_¥ocÊow
[
FILEBENCH_NPROCFLOWS
];

236 
thªadÊow_t
 
	mshm_thªadÊow
[
FILEBENCH_NTHREADFLOWS
];

237 
Êow›_t
 
	mshm_Êow›
[
FILEBENCH_NFLOWOPS
];

238 
v¨_t
 
	mshm_v¨
[
FILEBENCH_NVARIABLES
];

239 
avd
 
	mshm_avd_±rs
[
FILEBENCH_NAVDS
];

240 
ønddi°_t
 
	mshm_ønddi°
[
FILEBENCH_NRANDDISTS
];

241 
cv¨_t
 
	mshm_cv¨
[
FILEBENCH_NCVARS
];

242 
cv¨_libøry_öfo_t
 
	mshm_cv¨_lib_öfo
[
FILEBENCH_NCVAR_LIB_INFO
];

245 
	mshm_°rögs
[
FILEBENCH_STRINGMEMORY
];

246 
	mshm_fûe£ç©hs
[
FILEBENCH_FILESETPATHMEMORY
];

247 
	mshm_cv¨_hóp
[
FILEBENCH_CVAR_HEAPSIZE
];

249 } 
	tfûebích_shm_t
;

251 
shm∑th
[128];

253 
ùc_öô
();

254 
ùc_©èch
(*
shmaddr
, *
shm∑th
);

256 *
ùc_mÆloc
(
ty≥
);

257 
ùc_‰ì
(
ty≥
, *
addr
);

259 
±hªad_muãx©å_t
 *
ùc_muãx©å
();

260 
±hªad_c⁄d©å_t
 *
ùc_c⁄d©å
();

261 
ùc_£midÆloc
();

262 
ùc_£mid‰ì
(
£mid
);

263 *
ùc_°øŒoc
(c⁄° *
°rög
);

264 *
ùc_∑thÆloc
(*
°rög
);

265 *
ùc_cv¨_hó∑Œoc
(
size_t
 
size
);

266 
ùc_cv¨_hóp‰ì
(*
±r
);

267 
ùc_muãx_lock
(
±hªad_muãx_t
 *
muãx
);

268 
ùc_muãx_u∆ock
(
±hªad_muãx_t
 *
muãx
);

269 
ùc_£möô
();

270 *
ùc_ismmÆloc
(
size_t
 
size
);

271 
ùc_ism¸óã
(
size_t
 
size
);

272 
ùc_ismdñëe
();

273 
ùc_föi
();

275 
fûebích_shm_t
 *
fûebích_shm
;

	@misc.c

26 
	~<°dio.h
>

27 
	~<f˙é.h
>

28 
	~<limôs.h
>

29 
	~<time.h
>

30 
	~<libgí.h
>

31 
	~<uni°d.h
>

32 
	~<°rögs.h
>

33 
	~<sys/time.h
>

34 
	~"fûebích.h
"

35 
	~"ùc.h
"

36 
	~"evítgí.h
"

37 
	~"utûs.h
"

38 
	~"f•lug.h
"

39 
	~"fbtime.h
"

42 
f•lug_func_t
 *
	gfs_fun˘i⁄s_vec
;

44 
Àx_löío
;

57 
fûebích_log


58 
__V
((
Àvñ
, c⁄° *
fmt
, ...))

60 
va_li°
 
	g¨gs
;

61 
hπime_t
 
	gnow
 = 0;

62 
	glöe
[131072];

63 
	gbuf
[131072];

68 i‡(!
	gfûebích_shm
)

69 
	gÀvñ
 = 
LOG_FATAL
;

72 i‡(
	gÀvñ
 =
LOG_FATAL
)

73 
Áèl
;

76 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

77 (*
fûebích_shm
->
shm_dump_fûíame
 == 0))

80 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

81 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

83 
fûebích_shm
->
shm_dump_fd
 =

84 
›í
(
fûebích_shm
->
shm_dump_fûíame
,

85 
O_RDWR
 | 
O_CREAT
 | 
O_TRUNC
, 0666);

88 i‡((
	gÀvñ
 =
LOG_DUMP
) &&

89 (
fûebích_shm
->
shm_dump_fd
 < 0)) {

90 (Ë
¢¥ötf
(
löe
,  (line), "OpenÜogfile failed: %s",

91 
°ªº‹
(
î∫o
));

92 
	gÀvñ
 = 
LOG_ERROR
;

96 i‡((
	gfûebích_shm
->
	gshm_1°_îr
Ë&& (
	gÀvñ
 =
LOG_ERROR
))

99 i‡(
	gÀvñ
 =
LOG_ERROR1
) {

100 i‡(
fûebích_shm
->
shm_1°_îr
)

104 
	gfûebích_shm
->
	gshm_1°_îr
 = 1;

105 
	gÀvñ
 = 
LOG_ERROR
;

109 i‡((
	gÀvñ
 !
LOG_DUMP
) &&

110 (
Àvñ
 > 
fûebích_shm
->
shm_debug_Àvñ
))

113 
	gnow
 = 
gëhπime
();

115 
	gÁèl
:

117 #ifde‡
__STDC__


118 
va_°¨t
(
¨gs
, 
fmt
);

120 *
	gfmt
;

121 
va_°¨t
(
¨gs
);

122 
	gfmt
 = 
va_¨g
(
¨gs
, *);

125 (Ë
v•rötf
(
löe
, 
fmt
, 
¨gs
);

127 
va_íd
(
¨gs
);

129 i‡(
	gÀvñ
 =
LOG_FATAL
) {

130 (Ë
Ârötf
(
°dîr
, "%s\n", 
löe
);

135 (Ë
ùc_muãx_lock
(&
fûebích_shm
->
shm_msg_lock
);

137 i‡(
	gÀvñ
 =
LOG_DUMP
) {

138 i‡(
fûebích_shm
->
shm_dump_fd
 != -1) {

139 (Ë
¢¥ötf
(
buf
,  (buf), "%s\n", 
löe
);

141 i‡(
wrôe
(
fûebích_shm
->
shm_dump_fd
, 
buf
, 
°æí
(buf)));

142 (Ë
fsync
(
fûebích_shm
->
shm_dump_fd
);

143 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

147 } i‡(
	gfûebích_shm
->
	gshm_debug_Àvñ
 > 
	gLOG_INFO
) {

148 i‡(
	gÀvñ
 < 
	gLOG_INFO
)

149 (Ë
Ârötf
(
°dîr
, "%5d: ", ()
my_pid
);

151 (Ë
Ârötf
(
°dout
, "%5d: ", ()
my_pid
);

154 i‡(
	gÀvñ
 < 
	gLOG_INFO
) {

155 (Ë
Ârötf
(
°dîr
, "%4.3f: %s",

156 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

157 
löe
);

159 i‡(
	gmy_¥ocÊow
 =
NULL
)

160 (Ë
Ârötf
(
°dîr
, "ároundÜöê%d", 
Àx_löío
);

162 (Ë
Ârötf
(
°dîr
, "\n");

163 (Ë
fÊush
(
°dîr
);

165 (Ë
Ârötf
(
°dout
, "%4.3f: %s",

166 (
now
 - 
fûebích_shm
->
shm_ïoch
Ë/ 
SEC2NS_FLOAT
,

167 
löe
);

168 (Ë
Ârötf
(
°dout
, "\n");

169 (Ë
fÊush
(
°dout
);

172 (Ë
ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_msg_lock
);

181 
	$fûebích_shutdown
(
îr‹
) {

183 i‡(
îr‹
) {

184 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdow¿⁄Éº‹ %d", 
îr‹
);

185 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

186 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

187 (Ë
	`ùc_muãx_u∆ock
(

188 &
fûebích_shm
->
shm_¥ocÊow_lock
);

191 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_ERROR
;

192 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

194 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Shutdown");

197 
	`¥ocÊow_shutdown
();

199 (Ë
	`u∆ök
("/tmp/filebench_shm");

200 
	`ùc_ismdñëe
();

201 
	`exô
(
îr‹
);

202 
	}
}

	@misc.h

26 #i‚de‡
_FB_MISC_H


27 
	#_FB_MISC_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	#LOG_ERROR
 0

	)

32 
	#LOG_ERROR1
 1

	)

34 
	#LOG_INFO
 2

	)

35 
	#LOG_VERBOSE
 3

	)

36 
	#LOG_DEBUG_SCRIPT
 4

	)

37 
	#LOG_DEBUG_IMPL
 6

	)

38 
	#LOG_DEBUG_NEVER
 10

	)

39 
	#LOG_FATAL
 999

	)

40 
	#LOG_DUMP
 1001

	)

	@multi_client_sync.c

27 
	~"fûebích.h
"

28 
	~"mu…i_˛õ¡_sync.h
"

29 
	~<√tdb.h
>

30 
	~<√töë/ö.h
>

31 
	~<¨∑/öë.h
>

32 
	~<î∫o.h
>

34 
	#MCS_NAMELENGTH
 128

	)

35 
	#MCS_MSGLENGTH
 (
MCS_NAMELENGTH
 * 8)

	)

37 
	gmc_sync_sock_id
;

38 
	gthis_˛õ¡_«me
[
MCS_NAMELENGTH
];

44 
	$mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
my_«me
)

46 
sockaddr_ö
 
˛õ¡_ö
;

47 
sockaddr_ö
 
ma°î_ö
;

48 
ho°ít
 *
ma°î_öfo
;

52 (Ë
	`°∫˝y
(
this_˛õ¡_«me
, 
my_«me
, 
MCS_NAMELENGTH
);

53 i‡((
mc_sync_sock_id
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) == -1) {

54 
	`fûebích_log
(
LOG_ERROR
, "couldÇot createá client socket");

55  (
FILEBENCH_ERROR
);

58 
˛õ¡_ö
.
sö_Ámûy
 = 
AF_INET
;

59 
˛õ¡_ö
.
sö_p‹t
 = 
INADDR_ANY
;

60 
˛õ¡_ö
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

62 i‡(
	`böd
(
mc_sync_sock_id
, (
sockaddr
 *)&
˛õ¡_ö
,

63  (
˛õ¡_ö
)) == -1) {

64 
	`fûebích_log
(
LOG_ERROR
, "couldÇot bindÅo client socket");

65  (
FILEBENCH_ERROR
);

68 
ma°î_öfo
 = 
	`gëho°by«me
(
ma°î_«me
);

78 
ma°î_ö
.
sö_Ámûy
 = 
AF_INET
;

79 
ma°î_ö
.
sö_p‹t
 = 
	`ht⁄s
((
uöt16_t
)
ma°î_p‹t
);

80 (Ë
	`mem˝y
(&
ma°î_ö
.
sö_addr
.
s_addr
, *(
ma°î_öfo
->
h_addr_li°
),

81  (
ma°î_ö
.
sö_addr
.
s_addr
));

83 i‡(
	`c⁄√˘
(
mc_sync_sock_id
, (
sockaddr
 *)&
ma°î_ö
,

84  (
ma°î_ö
)) == -1) {

85 
	`fûebích_log
(
LOG_ERROR
,

86 "c⁄√˘i⁄Ñefu£dÅÿsyn¯ma°î,Éº‹ %d", 
î∫o
);

87  (
FILEBENCH_ERROR
);

90  (
FILEBENCH_OK
);

91 
	}
}

97 
	$mc_sync_synchr⁄ize
(
sync_poöt
)

99 
msg
[
MCS_MSGLENGTH
];

100 
am¡
;

102 (Ë
	`¢¥ötf
(
msg
, 
MCS_MSGLENGTH
,

104 
this_˛õ¡_«me
, 
sync_poöt
);

105 (Ë
	`£nd
(
mc_sync_sock_id
, 
msg
, 
	`°æí
(msg), 0);

107 
am¡
 = 0;

108 
msg
[0] = 0;

110 
	`°rchr
(
msg
, '\n'Ë=
NULL
)

111 
am¡
 +
	`ªcv
(
mc_sync_sock_id
, 
msg
,  (msg), 0);

113 
	`fûebích_log
(
LOG_INFO
, "syn¯poöà%d suc˚eded!\n", 
sync_poöt
);

114  (
FILEBENCH_OK
);

115 
	}
}

	@multi_client_sync.h

26 #i‚def 
_MULTI_CLIENT_SYNC_H


27 
	#_MULTI_CLIENT_SYNC_H


	)

29 
	~<sys/ty≥s.h
>

31 
	~<sys/sockë.h
>

32 
	gXXX
: 
we
 dÿ
nŸ
 
suµ‹t
 
this
 
so
 
Ár


33 
	~<öë/ù.h
>

36 
mc_sync_›í_sock
(*
ma°î_«me
, 
ma°î_p‹t
, *
˛õ¡_«me
);

37 
mc_sync_synchr⁄ize
(
synch_poöt
);

	@parser_gram.c

44 
	#YYBISON
 1

	)

47 
	#YYBISON_VERSION
 "3.0.4"

	)

50 
	#YYSKELETON_NAME
 "yacc.c"

	)

53 
	#YYPURE
 0

	)

56 
	#YYPUSH
 0

	)

59 
	#YYPULL
 1

	)

68 
	~<°dlib.h
>

69 
	~<°dio.h
>

70 
	~<°rög.h
>

71 
	~<Êﬂt.h
>

72 
	~<limôs.h
>

73 
	~<sig«l.h
>

74 
	~<î∫o.h
>

75 
	~<sys/ty≥s.h
>

76 
	~<loˇÀ.h
>

77 
	~<sys/ut¢ame.h
>

78 
	~<sys/°©vfs.h
>

79 #ifde‡
HAVE_STDINT_H


80 
	~<°döt.h
>

82 
	~<f˙é.h
>

83 
	~<sys/mm™.h
>

84 
	~<sys/waô.h
>

85 
	~"∑r£πy≥s.h
"

86 
	~"fûebích.h
"

87 
	~"utûs.h
"

88 
	~"°©s.h
"

89 
	~"v¨s.h
"

90 
	~"evítgí.h
"

91 
	~"a¶r.h
"

92 
	~"mu…i_˛õ¡_sync.h
"

95 
FILE
 *
yyö
;

96 
yydebug
;

97 
yyîr‹
(*
s
);

98 
yyÀx
();

101 *
	gexe˙ame
;

104 
cmd_t
 *
Æloc_cmd
();

105 
©å_t
 *
Æloc_©å
();

106 
©å_t
 *
Æloc_lv¨_©å
(
v¨_t
 *
v¨
);

107 
©å_t
 *
gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
);

108 
gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
);

109 
li°_t
 *
Æloc_li°
();

110 
¥obèbít_t
 *
Æloc_¥obèbít
();

111 
add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
);

114 
∑r£r_fûe£t_li°
(
cmd_t
 *);

115 
∑r£r_Êow›_li°
(
cmd_t
 *);

118 
∑r£r_¥oc_deföe
(
cmd_t
 *);

119 
∑r£r_thªad_deföe
(
cmd_t
 *, 
¥ocÊow_t
 *);

120 
∑r£r_Êow›_deföe
(
cmd_t
 *, 
thªadÊow_t
 *, 
Êow›_t
 **, );

121 
∑r£r_composôe_Êow›_deföe
(
cmd_t
 *);

122 
∑r£r_fûe_deföe
(
cmd_t
 *);

123 
∑r£r_fûe£t_deföe
(
cmd_t
 *);

124 
∑r£r_v¨_assign_øndom
(*, 
cmd_t
 *);

125 
∑r£r_v¨_assign_cu°om
(*, 
cmd_t
 *);

128 
∑r£r_fûe£t_¸óã
(
cmd_t
 *);

131 
∑r£r_run
(
cmd_t
 *
cmd
);

132 
∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
);

133 
∑r£r_p§un
(
cmd_t
 *
cmd
);

136 
∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
);

139 
∑r£r_echo
(
cmd_t
 *
cmd
);

140 
∑r£r_sy°em
(
cmd_t
 *
cmd
);

141 
∑r£r_evítgí
(
cmd_t
 *
cmd
);

142 
∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
);

143 
∑r£r_domu…isync
(
cmd_t
 *
cmd
);

144 
∑r£r_¶ìp
(
cmd_t
 *
cmd
);

145 
∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
);

146 
∑r£r_vîsi⁄
(
cmd_t
 *
cmd
);

147 
∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
);

152 #i‚de‡
YY_NULLPTR


153 #i‡
deföed
 
__˝lu•lus
 && 201103L <= __cplusplus

154 
	#YY_NULLPTR
 
nuŒ±r


	)

156 
	#YY_NULLPTR
 0

	)

161 #ifde‡
YYERROR_VERBOSE


162 #unde‡
YYERROR_VERBOSE


163 
	#YYERROR_VERBOSE
 1

	)

165 
	#YYERROR_VERBOSE
 0

	)

170 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


171 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

173 #i‚de‡
YYDEBUG


174 
	#YYDEBUG
 0

	)

176 #i‡
YYDEBUG


177 
yydebug
;

181 #i‚de‡
YYTOKENTYPE


182 
	#YYTOKENTYPE


	)

183 
	eyytokíty≥


185 
	mFSC_LIST
 = 258,

186 
	mFSC_DEFINE
 = 259,

187 
	mFSC_QUIT
 = 260,

188 
	mFSC_DEBUG
 = 261,

189 
	mFSC_CREATE
 = 262,

190 
	mFSC_SLEEP
 = 263,

191 
	mFSC_SET
 = 264,

192 
	mFSC_SYSTEM
 = 265,

193 
	mFSC_EVENTGEN
 = 266,

194 
	mFSC_ECHO
 = 267,

195 
	mFSC_RUN
 = 268,

196 
	mFSC_PSRUN
 = 269,

197 
	mFSC_VERSION
 = 270,

198 
	mFSC_ENABLE
 = 271,

199 
	mFSC_DOMULTISYNC
 = 272,

200 
	mFSV_STRING
 = 273,

201 
	mFSV_VAL_POSINT
 = 274,

202 
	mFSV_VAL_NEGINT
 = 275,

203 
	mFSV_VAL_BOOLEAN
 = 276,

204 
	mFSV_VARIABLE
 = 277,

205 
	mFSV_WHITESTRING
 = 278,

206 
	mFSV_RANDUNI
 = 279,

207 
	mFSV_RANDTAB
 = 280,

208 
	mFSV_URAND
 = 281,

209 
	mFSV_RAND48
 = 282,

210 
	mFSE_FILE
 = 283,

211 
	mFSE_FILES
 = 284,

212 
	mFSE_FILESET
 = 285,

213 
	mFSE_PROC
 = 286,

214 
	mFSE_THREAD
 = 287,

215 
	mFSE_FLOWOP
 = 288,

216 
	mFSE_CVAR
 = 289,

217 
	mFSE_RAND
 = 290,

218 
	mFSE_MODE
 = 291,

219 
	mFSE_MULTI
 = 292,

220 
	mFSK_SEPLST
 = 293,

221 
	mFSK_OPENLST
 = 294,

222 
	mFSK_CLOSELST
 = 295,

223 
	mFSK_OPENPAR
 = 296,

224 
	mFSK_CLOSEPAR
 = 297,

225 
	mFSK_ASSIGN
 = 298,

226 
	mFSK_IN
 = 299,

227 
	mFSK_QUOTE
 = 300,

228 
	mFSA_SIZE
 = 301,

229 
	mFSA_PREALLOC
 = 302,

230 
	mFSA_PARALLOC
 = 303,

231 
	mFSA_PATH
 = 304,

232 
	mFSA_REUSE
 = 305,

233 
	mFSA_MEMSIZE
 = 306,

234 
	mFSA_RATE
 = 307,

235 
	mFSA_READONLY
 = 308,

236 
	mFSA_TRUSTTREE
 = 309,

237 
	mFSA_IOSIZE
 = 310,

238 
	mFSA_FILENAME
 = 311,

239 
	mFSA_WSS
 = 312,

240 
	mFSA_NAME
 = 313,

241 
	mFSA_RANDOM
 = 314,

242 
	mFSA_INSTANCES
 = 315,

243 
	mFSA_DSYNC
 = 316,

244 
	mFSA_TARGET
 = 317,

245 
	mFSA_ITERS
 = 318,

246 
	mFSA_NICE
 = 319,

247 
	mFSA_VALUE
 = 320,

248 
	mFSA_BLOCKING
 = 321,

249 
	mFSA_HIGHWATER
 = 322,

250 
	mFSA_DIRECTIO
 = 323,

251 
	mFSA_DIRWIDTH
 = 324,

252 
	mFSA_FD
 = 325,

253 
	mFSA_SRCFD
 = 326,

254 
	mFSA_ROTATEFD
 = 327,

255 
	mFSA_ENTRIES
 = 328,

256 
	mFSA_DIRDEPTHRV
 = 329,

257 
	mFSA_DIRGAMMA
 = 330,

258 
	mFSA_USEISM
 = 331,

259 
	mFSA_TYPE
 = 332,

260 
	mFSA_LEAFDIRS
 = 333,

261 
	mFSA_INDEXED
 = 334,

262 
	mFSA_RANDTABLE
 = 335,

263 
	mFSA_RANDSRC
 = 336,

264 
	mFSA_ROUND
 = 337,

265 
	mFSA_RANDSEED
 = 338,

266 
	mFSA_RANDGAMMA
 = 339,

267 
	mFSA_RANDMEAN
 = 340,

268 
	mFSA_MIN
 = 341,

269 
	mFSA_MAX
 = 342,

270 
	mFSA_MASTER
 = 343,

271 
	mFSA_CLIENT
 = 344,

272 
	mFSS_TYPE
 = 345,

273 
	mFSS_SEED
 = 346,

274 
	mFSS_GAMMA
 = 347,

275 
	mFSS_MEAN
 = 348,

276 
	mFSS_MIN
 = 349,

277 
	mFSS_SRC
 = 350,

278 
	mFSS_ROUND
 = 351,

279 
	mFSA_LVAR_ASSIGN
 = 352,

280 
	mFSA_ALLDONE
 = 353,

281 
	mFSA_FIRSTDONE
 = 354,

282 
	mFSA_TIMEOUT
 = 355,

283 
	mFSA_LATHIST
 = 356,

284 
	mFSA_NOREADAHEAD
 = 357,

285 
	mFSA_IOPRIO
 = 358,

286 
	mFSA_WRITEONLY
 = 359,

287 
	mFSA_PARAMETERS
 = 360,

288 
	mFSA_NOUSESTATS
 = 361

292 
	#FSC_LIST
 258

	)

293 
	#FSC_DEFINE
 259

	)

294 
	#FSC_QUIT
 260

	)

295 
	#FSC_DEBUG
 261

	)

296 
	#FSC_CREATE
 262

	)

297 
	#FSC_SLEEP
 263

	)

298 
	#FSC_SET
 264

	)

299 
	#FSC_SYSTEM
 265

	)

300 
	#FSC_EVENTGEN
 266

	)

301 
	#FSC_ECHO
 267

	)

302 
	#FSC_RUN
 268

	)

303 
	#FSC_PSRUN
 269

	)

304 
	#FSC_VERSION
 270

	)

305 
	#FSC_ENABLE
 271

	)

306 
	#FSC_DOMULTISYNC
 272

	)

307 
	#FSV_STRING
 273

	)

308 
	#FSV_VAL_POSINT
 274

	)

309 
	#FSV_VAL_NEGINT
 275

	)

310 
	#FSV_VAL_BOOLEAN
 276

	)

311 
	#FSV_VARIABLE
 277

	)

312 
	#FSV_WHITESTRING
 278

	)

313 
	#FSV_RANDUNI
 279

	)

314 
	#FSV_RANDTAB
 280

	)

315 
	#FSV_URAND
 281

	)

316 
	#FSV_RAND48
 282

	)

317 
	#FSE_FILE
 283

	)

318 
	#FSE_FILES
 284

	)

319 
	#FSE_FILESET
 285

	)

320 
	#FSE_PROC
 286

	)

321 
	#FSE_THREAD
 287

	)

322 
	#FSE_FLOWOP
 288

	)

323 
	#FSE_CVAR
 289

	)

324 
	#FSE_RAND
 290

	)

325 
	#FSE_MODE
 291

	)

326 
	#FSE_MULTI
 292

	)

327 
	#FSK_SEPLST
 293

	)

328 
	#FSK_OPENLST
 294

	)

329 
	#FSK_CLOSELST
 295

	)

330 
	#FSK_OPENPAR
 296

	)

331 
	#FSK_CLOSEPAR
 297

	)

332 
	#FSK_ASSIGN
 298

	)

333 
	#FSK_IN
 299

	)

334 
	#FSK_QUOTE
 300

	)

335 
	#FSA_SIZE
 301

	)

336 
	#FSA_PREALLOC
 302

	)

337 
	#FSA_PARALLOC
 303

	)

338 
	#FSA_PATH
 304

	)

339 
	#FSA_REUSE
 305

	)

340 
	#FSA_MEMSIZE
 306

	)

341 
	#FSA_RATE
 307

	)

342 
	#FSA_READONLY
 308

	)

343 
	#FSA_TRUSTTREE
 309

	)

344 
	#FSA_IOSIZE
 310

	)

345 
	#FSA_FILENAME
 311

	)

346 
	#FSA_WSS
 312

	)

347 
	#FSA_NAME
 313

	)

348 
	#FSA_RANDOM
 314

	)

349 
	#FSA_INSTANCES
 315

	)

350 
	#FSA_DSYNC
 316

	)

351 
	#FSA_TARGET
 317

	)

352 
	#FSA_ITERS
 318

	)

353 
	#FSA_NICE
 319

	)

354 
	#FSA_VALUE
 320

	)

355 
	#FSA_BLOCKING
 321

	)

356 
	#FSA_HIGHWATER
 322

	)

357 
	#FSA_DIRECTIO
 323

	)

358 
	#FSA_DIRWIDTH
 324

	)

359 
	#FSA_FD
 325

	)

360 
	#FSA_SRCFD
 326

	)

361 
	#FSA_ROTATEFD
 327

	)

362 
	#FSA_ENTRIES
 328

	)

363 
	#FSA_DIRDEPTHRV
 329

	)

364 
	#FSA_DIRGAMMA
 330

	)

365 
	#FSA_USEISM
 331

	)

366 
	#FSA_TYPE
 332

	)

367 
	#FSA_LEAFDIRS
 333

	)

368 
	#FSA_INDEXED
 334

	)

369 
	#FSA_RANDTABLE
 335

	)

370 
	#FSA_RANDSRC
 336

	)

371 
	#FSA_ROUND
 337

	)

372 
	#FSA_RANDSEED
 338

	)

373 
	#FSA_RANDGAMMA
 339

	)

374 
	#FSA_RANDMEAN
 340

	)

375 
	#FSA_MIN
 341

	)

376 
	#FSA_MAX
 342

	)

377 
	#FSA_MASTER
 343

	)

378 
	#FSA_CLIENT
 344

	)

379 
	#FSS_TYPE
 345

	)

380 
	#FSS_SEED
 346

	)

381 
	#FSS_GAMMA
 347

	)

382 
	#FSS_MEAN
 348

	)

383 
	#FSS_MIN
 349

	)

384 
	#FSS_SRC
 350

	)

385 
	#FSS_ROUND
 351

	)

386 
	#FSA_LVAR_ASSIGN
 352

	)

387 
	#FSA_ALLDONE
 353

	)

388 
	#FSA_FIRSTDONE
 354

	)

389 
	#FSA_TIMEOUT
 355

	)

390 
	#FSA_LATHIST
 356

	)

391 
	#FSA_NOREADAHEAD
 357

	)

392 
	#FSA_IOPRIO
 358

	)

393 
	#FSA_WRITEONLY
 359

	)

394 
	#FSA_PARAMETERS
 360

	)

395 
	#FSA_NOUSESTATS
 361

	)

398 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


400 
	uYYSTYPE


404 
öt64_t
 
	mivÆ
;

405 
	mbvÆ
;

406 * 
	msvÆ
;

407 
avd_t
 
	mavd
;

408 
cmd_t
 *
	mcmd
;

409 
©å_t
 *
	m©å
;

410 
li°_t
 *
	mli°
;

411 
¥obèbít_t
 *
	m∫dtb
;

416 
YYSTYPE
 
	tYYSTYPE
;

417 
	#YYSTYPE_IS_TRIVIAL
 1

	)

418 
	#YYSTYPE_IS_DECLARED
 1

	)

422 
YYSTYPE
 
yylvÆ
;

424 
yy∑r£
 ();

436 #ifde‡
YYTYPE_UINT8


437 
YYTYPE_UINT8
 
	tyyty≥_uöt8
;

439 
	tyyty≥_uöt8
;

442 #ifde‡
YYTYPE_INT8


443 
YYTYPE_INT8
 
	tyyty≥_öt8
;

445 sig√d 
	tyyty≥_öt8
;

448 #ifde‡
YYTYPE_UINT16


449 
YYTYPE_UINT16
 
	tyyty≥_uöt16
;

451 
	tyyty≥_uöt16
;

454 #ifde‡
YYTYPE_INT16


455 
YYTYPE_INT16
 
	tyyty≥_öt16
;

457 
	tyyty≥_öt16
;

460 #i‚de‡
YYSIZE_T


461 #ifde‡
__SIZE_TYPE__


462 
	#YYSIZE_T
 
__SIZE_TYPE__


	)

463 #ñi‡
deföed
 
size_t


464 
	#YYSIZE_T
 
size_t


	)

465 #ñi‡! 
deföed
 
YYSIZE_T


466 
	~<°ddef.h
>

467 
	#YYSIZE_T
 
size_t


	)

469 
	#YYSIZE_T
 

	)

473 
	#YYSIZE_MAXIMUM
 ((
YYSIZE_T
Ë-1)

	)

475 #i‚de‡
YY_


476 #i‡
deföed
 
YYENABLE_NLS
 && YYENABLE_NLS

477 #i‡
ENABLE_NLS


478 
	~<liböé.h
>

479 
	#YY_
(
Msgid
Ë
	`dgëãxt
 ("bis⁄-ru¡ime", Msgid)

	)

482 #i‚de‡
YY_


483 
	#YY_
(
Msgid
Ë
	)
Msgid

487 #i‚de‡
YY_ATTRIBUTE


488 #i‡(
deföed
 
__GNUC__
 \

489 && (2 < 
	g__GNUC__
 || (__GNUC__ =2 && 96 <
__GNUC_MINOR__
))) \

490 || 
deföed
 
__SUNPRO_C
 && 0x5110 <= __SUNPRO_C

491 
	#YY_ATTRIBUTE
(
S≥c
Ë
	`__©åibuã__
(S≥c)

	)

493 
	#YY_ATTRIBUTE
(
S≥c
Ë

	)

497 #i‚de‡
YY_ATTRIBUTE_PURE


498 
	#YY_ATTRIBUTE_PURE
 
	`YY_ATTRIBUTE
 ((
__puª__
))

	)

501 #i‚de‡
YY_ATTRIBUTE_UNUSED


502 
	#YY_ATTRIBUTE_UNUSED
 
	`YY_ATTRIBUTE
 ((
__unu£d__
))

	)

505 #i‡!
deföed
 
_N‹ëu∫
 \

506 && (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 201112)

507 #i‡
deföed
 
_MSC_VER
 && 1200 <= _MSC_VER

508 
	#_N‹ëu∫
 
	`__de˛•ec
 (
n‹ëu∫
)

	)

510 
	#_N‹ëu∫
 
	`YY_ATTRIBUTE
 ((
__n‹ëu∫__
))

	)

515 #i‡! 
deföed
 
löt
 || deföed 
__GNUC__


516 
	#YYUSE
(
E
Ë((Ë(E))

	)

518 
	#YYUSE
(
E
Ë

	)

521 #i‡
deföed
 
__GNUC__
 && 407 <__GNUC__ * 100 + 
__GNUC_MINOR__


523 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
 \

524 
	`_Pøgma
 ("GCC diagnosticÖush") \

525 
	`_Pøgma
 ("GCC diagnostic ignored \"-Wuninitialized\"")\

526 
	`_Pøgma
 ("GCC dügno°i¯ign‹ed \"-Wmaybe-unöôülized\"")

	)

527 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END
 \

528 
	`_Pøgma
 ("GCC dügno°i¯p›")

	)

530 
	#YY_INITIAL_VALUE
(
VÆue
Ë
	)
Value

532 #i‚de‡
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


533 
	#YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


	)

534 
	#YY_IGNORE_MAYBE_UNINITIALIZED_END


	)

536 #i‚de‡
YY_INITIAL_VALUE


537 
	#YY_INITIAL_VALUE
(
VÆue
Ë

	)

541 #i‡! 
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


545 #ifde‡
YYSTACK_USE_ALLOCA


546 #i‡
YYSTACK_USE_ALLOCA


547 #ifde‡
__GNUC__


548 
	#YYSTACK_ALLOC
 
__buûtö_Æloˇ


	)

549 #ñi‡
deföed
 
__BUILTIN_VA_ARG_INCR


550 
	~<Æloˇ.h
>

551 #ñi‡
deföed
 
_AIX


552 
	#YYSTACK_ALLOC
 
__Æloˇ


	)

553 #ñi‡
deföed
 
_MSC_VER


554 
	~<mÆloc.h
>

555 
	#Æloˇ
 
_Æloˇ


	)

557 
	#YYSTACK_ALLOC
 
Æloˇ


	)

558 #i‡! 
deföed
 
_ALLOCA_H
 && ! deföed 
EXIT_SUCCESS


559 
	~<°dlib.h
>

561 #i‚de‡
EXIT_SUCCESS


562 
	#EXIT_SUCCESS
 0

	)

569 #ifde‡
YYSTACK_ALLOC


571 
	#YYSTACK_FREE
(
På
Ëdÿ{ ; } 0)

	)

572 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


577 
	#YYSTACK_ALLOC_MAXIMUM
 4032

	)

580 
	#YYSTACK_ALLOC
 
YYMALLOC


	)

581 
	#YYSTACK_FREE
 
YYFREE


	)

582 #i‚de‡
YYSTACK_ALLOC_MAXIMUM


583 
	#YYSTACK_ALLOC_MAXIMUM
 
YYSIZE_MAXIMUM


	)

585 #i‡(
deföed
 
__˝lu•lus
 && ! deföed 
EXIT_SUCCESS
 \

586 && ! ((
deföed
 
	gYYMALLOC
 || deföed 
	gmÆloc
) \

587 && (
deföed
 
	gYYFREE
 || deföed 
	g‰ì
)))

588 
	~<°dlib.h
>

589 #i‚de‡
EXIT_SUCCESS


590 
	#EXIT_SUCCESS
 0

	)

593 #i‚de‡
YYMALLOC


594 
	#YYMALLOC
 
mÆloc


	)

595 #i‡! 
deföed
 
mÆloc
 && ! deföed 
EXIT_SUCCESS


596 *
mÆloc
 (
YYSIZE_T
);

599 #i‚de‡
YYFREE


600 
	#YYFREE
 
‰ì


	)

601 #i‡! 
deföed
 
‰ì
 && ! deföed 
EXIT_SUCCESS


602 
‰ì
 (*);

609 #i‡(! 
deföed
 
yyovîÊow
 \

610 && (! 
deföed
 
	g__˝lu•lus
 \

611 || (
deföed
 
	gYYSTYPE_IS_TRIVIAL
 && YYSTYPE_IS_TRIVIAL)))

614 
	uyyÆloc


616 
yyty≥_öt16
 
	myyss_Æloc
;

617 
YYSTYPE
 
	myyvs_Æloc
;

621 
	#YYSTACK_GAP_MAXIMUM
 ( (
yyÆloc
Ë- 1)

	)

625 
	#YYSTACK_BYTES
(
N
) \

626 ((
N
Ë* ( (
yyty≥_öt16
Ë+  (
YYSTYPE
)) \

627 + 
YYSTACK_GAP_MAXIMUM
)

	)

629 
	#YYCOPY_NEEDED
 1

	)

636 
	#YYSTACK_RELOCATE
(
Sèck_Æloc
, 
Sèck
) \

639 
YYSIZE_T
 
yy√wbyãs
; \

640 
	`YYCOPY
 (&
yy±r
->
Sèck_Æloc
, 
Sèck
, 
yysize
); \

641 
Sèck
 = &
yy±r
->
Sèck_Æloc
; \

642 
yy√wbyãs
 = 
yy°acksize
 *  (*
Sèck
Ë+ 
YYSTACK_GAP_MAXIMUM
; \

643 
yy±r
 +
yy√wbyãs
 /  (*yyptr); \

645 0)

	)

649 #i‡
deföed
 
YYCOPY_NEEDED
 && YYCOPY_NEEDED

652 #i‚de‡
YYCOPY


653 #i‡
deföed
 
__GNUC__
 && 1 < __GNUC__

654 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

655 
	`__buûtö_mem˝y
 (
D°
, 
Src
, (
Cou¡
Ë*  (*(Src)))

	)

657 
	#YYCOPY
(
D°
, 
Src
, 
Cou¡
) \

660 
YYSIZE_T
 
yyi
; \

661 
yyi
 = 0; yyò< (
Cou¡
); yyi++) \

662 (
D°
)[
yyi
] = (
Src
)[yyi]; \

664 0)

	)

670 
	#YYFINAL
 2

	)

672 
	#YYLAST
 256

	)

675 
	#YYNTOKENS
 107

	)

677 
	#YYNNTS
 71

	)

679 
	#YYNRULES
 209

	)

681 
	#YYNSTATES
 295

	)

685 
	#YYUNDEFTOK
 2

	)

686 
	#YYMAXUTOK
 361

	)

688 
	#YYTRANSLATE
(
YYX
) \

689 ((Ë(
YYX
Ë<
YYMAXUTOK
 ? 
yyå™¶©e
[YYX] : 
YYUNDEFTOK
)

	)

693 c⁄° 
yyty≥_uöt8
 
	gyyå™¶©e
[] =

734 #i‡
YYDEBUG


736 c⁄° 
yyty≥_uöt16
 
	gyyæöe
[] =

762 #i‡
YYDEBUG
 || 
YYERROR_VERBOSE
 || 0

765 c⁄° *c⁄° 
	gyyäame
[] =

808 "©ås_deföe_comp", "©å_vÆue", "v¨_öt_vÆ", 
YY_NULLPTR


812 #ifde‡
YYPRINT


815 c⁄° 
yyty≥_uöt16
 
	gyytoknum
[] =

831 
	#YYPACT_NINF
 -172

	)

833 
	#yy∑˘_vÆue_is_deÁu…
(
Yy°©e
) \

834 (!!((
Yy°©e
Ë=(-172)))

	)

836 
	#YYTABLE_NINF
 -1

	)

838 
	#yyèbÀ_vÆue_is_îr‹
(
YyèbÀ_vÆue
) \

839 0

	)

843 c⁄° 
yyty≥_öt16
 
	gyy∑˘
[] =

880 c⁄° 
yyty≥_uöt8
 
	gyydeÁ˘
[] =

915 c⁄° 
yyty≥_öt16
 
	gyypgŸo
[] =

928 c⁄° 
yyty≥_öt16
 
	gyydefgŸo
[] =

943 c⁄° 
yyty≥_uöt16
 
	gyyèbÀ
[] =

973 c⁄° 
yyty≥_uöt16
 
	gyycheck
[] =

1005 c⁄° 
yyty≥_uöt8
 
	gyy°os
[] =

1040 c⁄° 
yyty≥_uöt8
 
	gyyr1
[] =

1066 c⁄° 
yyty≥_uöt8
 
	gyyr2
[] =

1092 
	#yyîrok
 (
yyîr°©us
 = 0)

	)

1093 
	#yy˛órö
 (
yych¨
 = 
YYEMPTY
)

	)

1094 
	#YYEMPTY
 (-2)

	)

1095 
	#YYEOF
 0

	)

1097 
	#YYACCEPT
 
yyac˚±œb


	)

1098 
	#YYABORT
 
yyab‹éab


	)

1099 
	#YYERROR
 
yyîr‹œb


	)

1102 
	#YYRECOVERING
(Ë(!!
yyîr°©us
)

	)

1104 
	#YYBACKUP
(
Tokí
, 
VÆue
) \

1106 i‡(
yych¨
 =
YYEMPTY
) \

1108 
yych¨
 = (
Tokí
); \

1109 
yylvÆ
 = (
VÆue
); \

1110 
	`YYPOPSTACK
 (
yyÀn
); \

1111 
yy°©e
 = *
yys•
; \

1112 
yybackup
; \

1116 
	`yyîr‹
 (
	`YY_
("syntaxÉrror: cannot back up")); \

1117 
YYERROR
; \

1119 0)

	)

1122 
	#YYTERROR
 1

	)

1123 
	#YYERRCODE
 256

	)

1128 #i‡
YYDEBUG


1130 #i‚de‡
YYFPRINTF


1131 
	~<°dio.h
>

1132 
	#YYFPRINTF
 
Ârötf


	)

1135 
	#YYDPRINTF
(
Args
) \

1137 i‡(
yydebug
) \

1138 
YYFPRINTF
 
Args
; \

1139 } 0)

	)

1142 #i‚de‡
YY_LOCATION_PRINT


1143 
	#YY_LOCATION_PRINT
(
Fûe
, 
Loc
Ë((Ë0)

	)

1147 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
) \

1149 i‡(
yydebug
) \

1151 
	`YYFPRINTF
 (
°dîr
, "%†", 
TôÀ
); \

1152 
	`yy_symbﬁ_¥öt
 (
°dîr
, \

1153 
Ty≥
, 
VÆue
); \

1154 
	`YYFPRINTF
 (
°dîr
, "\n"); \

1156 } 0)

	)

1164 
	$yy_symbﬁ_vÆue_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1166 
FILE
 *
yyo
 = 
yyouçut
;

1167 
	`YYUSE
 (
yyo
);

1168 i‡(!
yyvÆuï
)

1170 #ifde‡
YYPRINT


1171 i‡(
yyty≥
 < 
YYNTOKENS
)

1172 
	`YYPRINT
 (
yyouçut
, 
yytoknum
[
yyty≥
], *
yyvÆuï
);

1174 
	`YYUSE
 (
yyty≥
);

1175 
	}
}

1183 
	$yy_symbﬁ_¥öt
 (
FILE
 *
yyouçut
, 
yyty≥
, 
YYSTYPE
 c⁄° * c⁄° 
yyvÆuï
)

1185 
	`YYFPRINTF
 (
yyouçut
, "%s %s (",

1186 
yyty≥
 < 
YYNTOKENS
 ? "tokí" : "¡îm", 
yyäame
[yytype]);

1188 
	`yy_symbﬁ_vÆue_¥öt
 (
yyouçut
, 
yyty≥
, 
yyvÆuï
);

1189 
	`YYFPRINTF
 (
yyouçut
, ")");

1190 
	}
}

1198 
	$yy_°ack_¥öt
 (
yyty≥_öt16
 *
yybŸtom
, yyty≥_öt16 *
yyt›
)

1200 
	`YYFPRINTF
 (
°dîr
, "StackÇow");

1201 ; 
yybŸtom
 <
yyt›
; yybottom++)

1203 
yybŸ
 = *
yybŸtom
;

1204 
	`YYFPRINTF
 (
°dîr
, " %d", 
yybŸ
);

1206 
	`YYFPRINTF
 (
°dîr
, "\n");

1207 
	}
}

1209 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
) \

1211 i‡(
yydebug
) \

1212 
	`yy_°ack_¥öt
 ((
BŸtom
), (
T›
)); \

1213 } 0)

	)

1221 
	$yy_ªdu˚_¥öt
 (
yyty≥_öt16
 *
yys•
, 
YYSTYPE
 *
yyv•
, 
yyruÀ
)

1223 
yy o
 = 
yyæöe
[
yyruÀ
];

1224 
yyƒhs
 = 
yyr2
[
yyruÀ
];

1225 
yyi
;

1226 
	`YYFPRINTF
 (
°dîr
, "Reducing stack byÑule %d (line %lu):\n",

1227 
yyruÀ
 - 1, 
yy o
);

1229 
yyi
 = 0; yyò< 
yyƒhs
; yyi++)

1231 
	`YYFPRINTF
 (
°dîr
, " $%d = ", 
yyi
 + 1);

1232 
	`yy_symbﬁ_¥öt
 (
°dîr
,

1233 
yy°os
[
yys•
[
yyi
 + 1 - 
yyƒhs
]],

1234 &(
yyv•
[(
yyi
 + 1Ë- (
yyƒhs
)])

1236 
	`YYFPRINTF
 (
°dîr
, "\n");

1238 
	}
}

1240 
	#YY_REDUCE_PRINT
(
RuÀ
) \

1242 i‡(
yydebug
) \

1243 
	`yy_ªdu˚_¥öt
 (
yys•
, 
yyv•
, 
RuÀ
); \

1244 } 0)

	)

1248 
	gyydebug
;

1250 
	#YYDPRINTF
(
Args
)

	)

1251 
	#YY_SYMBOL_PRINT
(
TôÀ
, 
Ty≥
, 
VÆue
, 
Loˇti⁄
)

	)

1252 
	#YY_STACK_PRINT
(
BŸtom
, 
T›
)

	)

1253 
	#YY_REDUCE_PRINT
(
RuÀ
)

	)

1258 #i‚de‡
YYINITDEPTH


1259 
	#YYINITDEPTH
 200

	)

1269 #i‚de‡
YYMAXDEPTH


1270 
	#YYMAXDEPTH
 10000

	)

1274 #i‡
YYERROR_VERBOSE


1276 #i‚de‡
yy°æí


1277 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H


1278 
	#yy°æí
 
°æí


	)

1281 
YYSIZE_T


1282 
	$yy°æí
 (c⁄° *
yy°r
)

1284 
YYSIZE_T
 
yyÀn
;

1285 
yyÀn
 = 0; 
yy°r
[yylen]; yylen++)

1287  
yyÀn
;

1288 
	}
}

1292 #i‚de‡
yy°p˝y


1293 #i‡
deföed
 
__GLIBC__
 && deföed 
_STRING_H
 && deföed 
_GNU_SOURCE


1294 
	#yy°p˝y
 
°p˝y


	)

1299 
	$yy°p˝y
 (*
yyde°
, c⁄° *
yy§c
)

1301 *
yyd
 = 
yyde°
;

1302 c⁄° *
yys
 = 
yy§c
;

1304 (*
yyd
++ = *
yys
++) != '\0')

1307  
yyd
 - 1;

1308 
	}
}

1312 #i‚de‡
yyäamîr


1320 
YYSIZE_T


1321 
	$yyäamîr
 (*
yyªs
, c⁄° *
yy°r
)

1323 i‡(*
yy°r
 == '"')

1325 
YYSIZE_T
 
yyn
 = 0;

1326 c⁄° *
yyp
 = 
yy°r
;

1329 *++
yyp
)

1333 
do_nŸ_°rù_quŸes
;

1336 i‡(*++
yyp
 != '\\')

1337 
do_nŸ_°rù_quŸes
;

1340 i‡(
yyªs
)

1341 
yyªs
[
yyn
] = *
yyp
;

1342 
yyn
++;

1346 i‡(
yyªs
)

1347 
yyªs
[
yyn
] = '\0';

1348  
yyn
;

1350 
do_nŸ_°rù_quŸes
: ;

1353 i‡(! 
yyªs
)

1354  
	`yy°æí
 (
yy°r
);

1356  
	`yy°p˝y
 (
yyªs
, 
yy°r
) - yyres;

1357 
	}
}

1369 
	$yysy¡ax_îr‹
 (
YYSIZE_T
 *
yymsg_Æloc
, **
yymsg
,

1370 
yyty≥_öt16
 *
yys•
, 
yytokí
)

1372 
YYSIZE_T
 
yysize0
 = 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yytokí
]);

1373 
YYSIZE_T
 
yysize
 = 
yysize0
;

1374 íum { 
YYERROR_VERBOSE_ARGS_MAXIMUM
 = 5 };

1376 c⁄° *
yyf‹m©
 = 
YY_NULLPTR
;

1378 c⁄° *
yy¨g
[
YYERROR_VERBOSE_ARGS_MAXIMUM
];

1381 
yycou¡
 = 0;

1406 i‡(
yytokí
 !
YYEMPTY
)

1408 
yyn
 = 
yy∑˘
[*
yys•
];

1409 
yy¨g
[
yycou¡
++] = 
yyäame
[
yytokí
];

1410 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1415 
yyxbegö
 = 
yyn
 < 0 ? -yyn : 0;

1417 
yychecklim
 = 
YYLAST
 - 
yyn
 + 1;

1418 
yyxíd
 = 
yychecklim
 < 
YYNTOKENS
 ? yychecklim : YYNTOKENS;

1419 
yyx
;

1421 
yyx
 = 
yyxbegö
; yyx < 
yyxíd
; ++yyx)

1422 i‡(
yycheck
[
yyx
 + 
yyn
] =yyx && yyx !
YYTERROR


1423 && !
	`yyèbÀ_vÆue_is_îr‹
 (
yyèbÀ
[
yyx
 + 
yyn
]))

1425 i‡(
yycou¡
 =
YYERROR_VERBOSE_ARGS_MAXIMUM
)

1427 
yycou¡
 = 1;

1428 
yysize
 = 
yysize0
;

1431 
yy¨g
[
yycou¡
++] = 
yyäame
[
yyx
];

1433 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yyäamîr
 (
YY_NULLPTR
, 
yyäame
[
yyx
]);

1434 i‡(! (
yysize
 <
yysize1


1435 && 
yysize1
 <
YYSTACK_ALLOC_MAXIMUM
))

1437 
yysize
 = 
yysize1
;

1443 
yycou¡
)

1445 
	#YYCASE_
(
N
, 
S
) \

1446 
N
: \

1447 
yyf‹m©
 = 
S
; \

1448 

	)

1449 
	`YYCASE_
(0, 
	`YY_
("syntaxÉrror"));

1450 
	`YYCASE_
(1, 
	`YY_
("syntaxÉrror, unexpected %s"));

1451 
	`YYCASE_
(2, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s"));

1452 
	`YYCASE_
(3, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s"));

1453 
	`YYCASE_
(4, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s"));

1454 
	`YYCASE_
(5, 
	`YY_
("syntaxÉrror, unexpected %s,Éxpecting %s or %s or %s or %s"));

1455 #unde‡
YYCASE_


1459 
YYSIZE_T
 
yysize1
 = 
yysize
 + 
	`yy°æí
 (
yyf‹m©
);

1460 i‡(! (
yysize
 <
yysize1
 && yysize1 <
YYSTACK_ALLOC_MAXIMUM
))

1462 
yysize
 = 
yysize1
;

1465 i‡(*
yymsg_Æloc
 < 
yysize
)

1467 *
yymsg_Æloc
 = 2 * 
yysize
;

1468 i‡(! (
yysize
 <*
yymsg_Æloc


1469 && *
yymsg_Æloc
 <
YYSTACK_ALLOC_MAXIMUM
))

1470 *
yymsg_Æloc
 = 
YYSTACK_ALLOC_MAXIMUM
;

1478 *
yyp
 = *
yymsg
;

1479 
yyi
 = 0;

1480 (*
yyp
 = *
yyf‹m©
) != '\0')

1481 i‡(*
yyp
 ='%' && 
yyf‹m©
[1] ='s' && 
yyi
 < 
yycou¡
)

1483 
yyp
 +
	`yyäamîr
 (yyp, 
yy¨g
[
yyi
++]);

1484 
yyf‹m©
 += 2;

1488 
yyp
++;

1489 
yyf‹m©
++;

1493 
	}
}

1501 
	$yyde°ru˘
 (c⁄° *
yymsg
, 
yyty≥
, 
YYSTYPE
 *
yyvÆuï
)

1503 
	`YYUSE
 (
yyvÆuï
);

1504 i‡(!
yymsg
)

1505 
yymsg
 = "Deleting";

1506 
	`YY_SYMBOL_PRINT
 (
yymsg
, 
yyty≥
, 
yyvÆuï
, 
yyloˇti⁄p
);

1508 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1509 
	`YYUSE
 (
yyty≥
);

1510 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1511 
	}
}

1517 
	gyych¨
;

1520 
YYSTYPE
 
	gyylvÆ
;

1522 
	gyy√ºs
;

1530 
	$yy∑r£
 ()

1532 
yy°©e
;

1534 
yyîr°©us
;

1544 
yyty≥_öt16
 
yysß
[
YYINITDEPTH
];

1545 
yyty≥_öt16
 *
yyss
;

1546 
yyty≥_öt16
 *
yys•
;

1549 
YYSTYPE
 
yyvß
[
YYINITDEPTH
];

1550 
YYSTYPE
 *
yyvs
;

1551 
YYSTYPE
 *
yyv•
;

1553 
YYSIZE_T
 
yy°acksize
;

1555 
yyn
;

1556 
yyªsu…
;

1558 
yytokí
 = 0;

1561 
YYSTYPE
 
yyvÆ
;

1563 #i‡
YYERROR_VERBOSE


1565 
yymsgbuf
[128];

1566 *
yymsg
 = 
yymsgbuf
;

1567 
YYSIZE_T
 
yymsg_Æloc
 =  
yymsgbuf
;

1570 
	#YYPOPSTACK
(
N
Ë(
yyv•
 -(N), 
yys•
 -(N))

	)

1574 
yyÀn
 = 0;

1576 
yys•
 = 
yyss
 = 
yysß
;

1577 
yyv•
 = 
yyvs
 = 
yyvß
;

1578 
yy°acksize
 = 
YYINITDEPTH
;

1580 
	`YYDPRINTF
 ((
°dîr
, "StartingÖarse\n"));

1582 
yy°©e
 = 0;

1583 
yyîr°©us
 = 0;

1584 
yy√ºs
 = 0;

1585 
yych¨
 = 
YYEMPTY
;

1586 
yy£t°©e
;

1591 
yy√w°©e
:

1594 
yys•
++;

1596 
yy£t°©e
:

1597 *
yys•
 = 
yy°©e
;

1599 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1602 
YYSIZE_T
 
yysize
 = 
yys•
 - 
yyss
 + 1;

1604 #ifde‡
yyovîÊow


1609 
YYSTYPE
 *
yyvs1
 = 
yyvs
;

1610 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1616 
	`yyovîÊow
 (
	`YY_
("memoryÉxhausted"),

1617 &
yyss1
, 
yysize
 *  (*
yys•
),

1618 &
yyvs1
, 
yysize
 *  (*
yyv•
),

1619 &
yy°acksize
);

1621 
yyss
 = 
yyss1
;

1622 
yyvs
 = 
yyvs1
;

1625 #i‚de‡
YYSTACK_RELOCATE


1626 
yyexhau°edœb
;

1629 i‡(
YYMAXDEPTH
 <
yy°acksize
)

1630 
yyexhau°edœb
;

1631 
yy°acksize
 *= 2;

1632 i‡(
YYMAXDEPTH
 < 
yy°acksize
)

1633 
yy°acksize
 = 
YYMAXDEPTH
;

1636 
yyty≥_öt16
 *
yyss1
 = 
yyss
;

1637 
yyÆloc
 *
yy±r
 =

1638 (
yyÆloc
 *Ë
	`YYSTACK_ALLOC
 (
	`YYSTACK_BYTES
 (
yy°acksize
));

1639 i‡(! 
yy±r
)

1640 
yyexhau°edœb
;

1641 
	`YYSTACK_RELOCATE
 (
yyss_Æloc
, 
yyss
);

1642 
	`YYSTACK_RELOCATE
 (
yyvs_Æloc
, 
yyvs
);

1643 #unde‡
YYSTACK_RELOCATE


1644 i‡(
yyss1
 !
yysß
)

1645 
	`YYSTACK_FREE
 (
yyss1
);

1650 
yys•
 = 
yyss
 + 
yysize
 - 1;

1651 
yyv•
 = 
yyvs
 + 
yysize
 - 1;

1653 
	`YYDPRINTF
 ((
°dîr
, "Stack size increasedÅo %lu\n",

1654 (Ë
yy°acksize
));

1656 i‡(
yyss
 + 
yy°acksize
 - 1 <
yys•
)

1657 
YYABORT
;

1660 
	`YYDPRINTF
 ((
°dîr
, "E¡îög sèã %d\n", 
yy°©e
));

1662 i‡(
yy°©e
 =
YYFINAL
)

1663 
YYACCEPT
;

1665 
yybackup
;

1670 
yybackup
:

1676 
yyn
 = 
yy∑˘
[
yy°©e
];

1677 i‡(
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

1678 
yydeÁu…
;

1683 i‡(
yych¨
 =
YYEMPTY
)

1685 
	`YYDPRINTF
 ((
°dîr
, "ReadingáÅoken: "));

1686 
yych¨
 = 
	`yyÀx
 ();

1689 i‡(
yych¨
 <
YYEOF
)

1691 
yych¨
 = 
yytokí
 = 
YYEOF
;

1692 
	`YYDPRINTF
 ((
°dîr
, "NowátÉnd of input.\n"));

1696 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

1697 
	`YY_SYMBOL_PRINT
 ("Nexàtokí is", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1702 
yyn
 +
yytokí
;

1703 i‡(
yyn
 < 0 || 
YYLAST
 < yy¿|| 
yycheck
[yyn] !
yytokí
)

1704 
yydeÁu…
;

1705 
yyn
 = 
yyèbÀ
[yyn];

1706 i‡(
yyn
 <= 0)

1708 i‡(
	`yyèbÀ_vÆue_is_îr‹
 (
yyn
))

1709 
yyîæab
;

1710 
yyn
 = -yyn;

1711 
yyªdu˚
;

1716 i‡(
yyîr°©us
)

1717 
yyîr°©us
--;

1720 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yytokí
, &
yylvÆ
, &
yyŒoc
);

1723 
yych¨
 = 
YYEMPTY
;

1725 
yy°©e
 = 
yyn
;

1726 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


1727 *++
yyv•
 = 
yylvÆ
;

1728 
YY_IGNORE_MAYBE_UNINITIALIZED_END


1730 
yy√w°©e
;

1736 
yydeÁu…
:

1737 
yyn
 = 
yydeÁ˘
[
yy°©e
];

1738 i‡(
yyn
 == 0)

1739 
yyîæab
;

1740 
yyªdu˚
;

1746 
yyªdu˚
:

1748 
yyÀn
 = 
yyr2
[
yyn
];

1758 
yyvÆ
 = 
yyv•
[1-
yyÀn
];

1761 
	`YY_REDUCE_PRINT
 (
yyn
);

1762 
yyn
)

1767 i‡((
yyv•
[0].
cmd
)->cmd)

1768 (
yyv•
[0].
cmd
)->
	`cmd
((yyvsp[0].cmd));

1770 
	`‰ì
((
yyv•
[0].
cmd
));

1778 
YYABORT
;

1786 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1787 
YYERROR
;

1788 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_evítgí
;

1796 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

1804 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1805 
YYERROR
;

1807 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1808 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_sy°em
;

1816 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1817 
YYERROR
;

1819 (
yyvÆ
.
cmd
)->
cmd_∑øm_li°
 = (
yyv•
[0].
li°
);

1820 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_echo
;

1828 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1829 
YYERROR
;

1830 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_vîsi⁄
;

1839 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1840 
YYERROR
;

1842 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_mc
;

1843 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1851 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1852 
YYERROR
;

1854 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_íabÀ_œthi°
;

1862 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

1863 
YYERROR
;

1865 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_domu…isync
;

1866 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

1874 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1875 
YYERROR
;

1877 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1885 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1886 
YYERROR
;

1888 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1896 
li°_t
 *
li°
 = 
NULL
;

1897 
li°_t
 *
li°_íd
 = 
NULL
;

1900 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1901 
YYERROR
;

1903 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1906 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1907 
li°
 =Üi°->
li°_√xt
)

1908 
li°_íd
 = 
li°
;

1909 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1910 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1919 
li°_t
 *
li°
 = 
NULL
;

1920 
li°_t
 *
li°_íd
 = 
NULL
;

1923 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1924 
YYERROR
;

1926 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1929 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1930 
li°
 =Üi°->
li°_√xt
)

1931 
li°_íd
 = 
li°
;

1932 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1933 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1941 
li°_t
 *
li°
 = 
NULL
;

1942 
li°_t
 *
li°_íd
 = 
NULL
;

1945 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1946 
YYERROR
;

1948 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1951 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1952 
li°
 =Üi°->
li°_√xt
)

1953 
li°_íd
 = 
li°
;

1954 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1955 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1964 
li°_t
 *
li°
 = 
NULL
;

1965 
li°_t
 *
li°_íd
 = 
NULL
;

1968 i‡(((
yyvÆ
.
li°
Ë
	`Æloc_li°
()Ë=
NULL
)

1969 
YYERROR
;

1971 (
yyvÆ
.
li°
)->
li°_°rög
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

1974 
li°
 = (
yyv•
[-1].li°);Üi° !
NULL
;

1975 
li°
 =Üi°->
li°_√xt
)

1976 
li°_íd
 = 
li°
;

1977 
li°_íd
->
li°_√xt
 = (
yyvÆ
.
li°
);

1978 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1986 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

1994 (
yyvÆ
.
li°
Ë(
yyv•
[-1].list);

2002 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2003 
YYERROR
;

2004 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_li°
;

2012 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2013 
YYERROR
;

2014 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_Êow›_li°
;

2022 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2023 
YYERROR
;

2024 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2025 
fûebích_shm
->
shm_debug_Àvñ
 = (
yyv•
[0].
ivÆ
);

2026 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 10) {

2027 
	`fûebích_log
(
LOG_ERROR
, "DebugÜevel set out ofÑange."

2029 
fûebích_shm
->
shm_debug_Àvñ
 = 10;

2031 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 9)

2032 
yydebug
 = 1;

2040 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2041 i‡(!(
yyvÆ
.
cmd
))

2042 
YYERROR
;

2044 
	`v¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
));

2046 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2054 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2055 i‡(!(
yyvÆ
.
cmd
))

2056 
YYERROR
;

2058 
	`v¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
));

2060 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2068 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2069 i‡(!(
yyvÆ
.
cmd
))

2070 
YYERROR
;

2072 
	`v¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyvsp[-1].sval));

2074 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2082 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2083 i‡(!(
yyvÆ
.
cmd
))

2084 
YYERROR
;

2086 
	`v¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyvsp[0].sval));

2088 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2096 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2097 i‡(!(
yyvÆ
.
cmd
))

2098 
YYERROR
;

2100 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2101 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2103 
	`∑r£r_v¨_assign_øndom
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2111 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2112 i‡(!(
yyvÆ
.
cmd
))

2113 
YYERROR
;

2115 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-1].
©å
);

2116 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2118 
	`∑r£r_v¨_assign_cu°om
((
yyv•
[-5].
svÆ
), (
yyvÆ
.
cmd
));

2126 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2127 i‡(!(
yyvÆ
.
cmd
))

2128 
YYERROR
;

2130 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

2132 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2140 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2141 i‡(!(
yyvÆ
.
cmd
))

2142 
YYERROR
;

2144 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_QALLDONE
;

2146 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2154 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2155 i‡(!(
yyvÆ
.
cmd
))

2156 
YYERROR
;

2158 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_Q1STDONE
;

2160 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2168 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2169 i‡(!(
yyvÆ
.
cmd
))

2170 
YYERROR
;

2172 
	`fûebích_log
(
LOG_INFO
, "Disabling CPU usage statistics");

2173 
fûebích_shm
->
shm_mmode
 |
FILEBENCH_MODE_NOUSAGE
;

2175 (
yyvÆ
.
cmd
)->cmd = 
NULL
;

2183 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2184 
YYERROR
;

2185 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_fûebích_shutdown
;

2193 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2201 
cmd_t
 *
li°
 = 
NULL
;

2202 
cmd_t
 *
li°_íd
 = 
NULL
;

2205 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2206 
li°
 =Üi°->
cmd_√xt
)

2207 
li°_íd
 = 
li°
;

2209 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2211 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2212 "Êow›_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2214 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2226 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2227 
YYERROR
;

2228 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2229 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2237 (
yyvÆ
.
cmd
Ë(
yyv•
[0].cmd);

2245 
cmd_t
 *
li°
 = 
NULL
;

2246 
cmd_t
 *
li°_íd
 = 
NULL
;

2249 
li°
 = (
yyv•
[-1].
cmd
);Üi° !
NULL
;

2250 
li°
 =Üi°->
cmd_√xt
)

2251 
li°_íd
 = 
li°
;

2253 
li°_íd
->
cmd_√xt
 = (
yyv•
[0].
cmd
);

2255 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

2256 "thªad_li°áddög cmd %zxÅÿli° %zx", (
yyv•
[0].
cmd
), (yyvsp[-1].cmd));

2258 (
yyvÆ
.
cmd
Ë(
yyv•
[-1].cmd);

2266 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2267 i‡(!(
yyvÆ
.
cmd
))

2268 
YYERROR
;

2269 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_¥oc_deföe
;

2270 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

2271 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

2279 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2280 i‡(!(
yyvÆ
.
cmd
))

2281 
YYERROR
;

2283 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe_deföe
;

2284 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2292 (
yyvÆ
.
cmd
Ë
	`Æloc_cmd
();

2293 i‡(!(
yyvÆ
.
cmd
))

2294 
YYERROR
;

2296 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_deföe
;

2297 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[0].
©å
);

2305 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2306 
YYERROR
;

2308 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_fûe£t_¸óã
;

2316 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2317 
YYERROR
;

2318 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp
;

2319 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2327 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2328 
YYERROR
;

2329 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_¶ìp_v¨übÀ
;

2330 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2338 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2339 
YYERROR
;

2340 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2341 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2349 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2350 
YYERROR
;

2351 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run_v¨übÀ
;

2352 (
yyvÆ
.
cmd
)->
cmd_tgt1
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2360 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2361 
YYERROR
;

2362 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_run
;

2363 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2371 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2372 
YYERROR
;

2373 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2374 (
yyvÆ
.
cmd
)->
cmd_qty1
 = 0;

2375 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2383 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2384 
YYERROR
;

2385 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2386 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2387 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2396 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2397 
YYERROR
;

2398 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2399 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[0].
ivÆ
);

2400 (
yyvÆ
.
cmd
)->
cmd_qty
 = 0;

2409 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2410 
YYERROR
;

2411 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2412 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2413 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2421 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2422 
YYERROR
;

2423 (
yyvÆ
.
cmd
)->cmd = 
∑r£r_p§un
;

2424 (
yyvÆ
.
cmd
)->
cmd_qty1
 = (
yyv•
[-1].
ivÆ
);

2425 (
yyvÆ
.
cmd
)->
cmd_qty
 = (
yyv•
[0].
ivÆ
);

2433 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

2434 
YYERROR
;

2435 (
yyvÆ
.
cmd
)->
cmd_«me
 = 
	`fb_°øŒoc
((
yyv•
[0].
svÆ
));

2443 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

2451 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2459 
©å_t
 *
©å
 = 
NULL
;

2460 
©å_t
 *
li°_íd
 = 
NULL
;

2462 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2463 
li°_íd
 = 
©å
;

2465 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2467 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2475 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2483 
©å_t
 *
©å
 = 
NULL
;

2484 
©å_t
 *
li°_íd
 = 
NULL
;

2486 
©å
 = (
yyv•
[-2].©å);áâr;áâ∏©å->
©å_√xt
)

2487 
li°_íd
 = 
©å
;

2489 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2491 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2499 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2500 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2508 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2509 i‡(!(
yyvÆ
.
©å
))

2510 
YYERROR
;

2512 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2513 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2521 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2522 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2530 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2531 i‡(!(
yyvÆ
.
©å
))

2532 
YYERROR
;

2534 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2535 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2543 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2551 
©å_t
 *
©å
 = 
NULL
;

2552 
©å_t
 *
li°_íd
 = 
NULL
;

2554 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2555 
©å
 =áâr->
©å_√xt
)

2556 
li°_íd
 = 
©å
;

2558 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2560 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2568 
©å_t
 *
©å
 = 
NULL
;

2569 
©å_t
 *
li°_íd
 = 
NULL
;

2571 
©å
 = (
yyv•
[-6].©å);áâ∏!
NULL
;

2572 
©å
 =áâr->
©å_√xt
)

2573 
li°_íd
 = 
©å
;

2576 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

2577 
YYERROR
;

2579 
©å
->
©å_«me
 = 
FSA_RANDTABLE
;

2580 
©å
->
©å_obj
 = (*)(
yyv•
[-1].
∫dtb
);

2581 
li°_íd
->
©å_√xt
 = 
©å
;

2582 (
yyvÆ
.
©å
Ë(
yyv•
[-6].attr);

2590 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2591 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2599 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2600 
YYERROR
;

2601 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2602 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2610 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2611 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_TYPE
;

2619 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2620 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_RANDSRC
;

2628 i‡(((
yyvÆ
.
∫dtb
Ë
	`Æloc_¥obèbít
()Ë=
NULL
)

2629 
YYERROR
;

2630 (
yyvÆ
.
∫dtb
)->
±e_≥r˚¡
 = (
yyv•
[-5].
avd
);

2631 (
yyvÆ
.
∫dtb
)->
±e_£gmö
 = (
yyv•
[-3].
avd
);

2632 (
yyvÆ
.
∫dtb
)->
±e_£gmax
 = (
yyv•
[-1].
avd
);

2640 (
yyvÆ
.
∫dtb
Ë(
yyv•
[0].rndtb);

2648 
¥obèbít_t
 *
±e
 = 
NULL
;

2649 
¥obèbít_t
 *
±ñi°_íd
 = 
NULL
;

2651 
±e
 = (
yyv•
[-2].
∫dtb
);Öã !
NULL
;

2652 
±e
 =Öã->
±e_√xt
)

2653 
±ñi°_íd
 = 
±e
;

2655 
±ñi°_íd
->
±e_√xt
 = (
yyv•
[0].
∫dtb
);

2657 (
yyvÆ
.
∫dtb
Ë(
yyv•
[-2].rndtb);

2665 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2673 
©å_t
 *
©å
 = 
NULL
;

2674 
©å_t
 *
li°_íd
 = 
NULL
;

2676 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2677 
©å
 =áâr->
©å_√xt
)

2678 
li°_íd
 = 
©å
;

2680 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2682 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2690 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2691 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2699 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

2700 i‡(!(
yyvÆ
.
©å
))

2701 
YYERROR
;

2702 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2703 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2711 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2719 
©å_t
 *
©å
 = 
NULL
;

2720 
©å_t
 *
li°_íd
 = 
NULL
;

2722 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2723 
©å
 =áâr->
©å_√xt
)

2724 
li°_íd
 = 
©å
;

2726 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2728 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2736 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2737 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2745 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2746 
YYERROR
;

2747 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2748 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2756 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2764 
©å_t
 *
©å
 = 
NULL
;

2765 
©å_t
 *
li°_íd
 = 
NULL
;

2767 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2768 
©å
 =áâr->
©å_√xt
)

2769 
li°_íd
 = 
©å
;

2771 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2773 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2781 
©å_t
 *
©å
 = 
NULL
;

2782 
©å_t
 *
li°_íd
 = 
NULL
;

2784 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2785 
©å
 =áâr->
©å_√xt
)

2786 
li°_íd
 = 
©å
;

2788 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2790 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2798 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2799 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2807 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2808 
YYERROR
;

2809 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2810 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2818 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2826 
©å_t
 *
©å
 = 
NULL
;

2827 
©å_t
 *
li°_íd
 = 
NULL
;

2829 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2830 
©å
 =áâr->
©å_√xt
)

2831 
li°_íd
 = 
©å
;

2833 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2835 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2843 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2844 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2852 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

2853 
YYERROR
;

2854 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[0].
ivÆ
);

2855 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

2863 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2871 
©å_t
 *
©å
 = 
NULL
;

2872 
©å_t
 *
li°_íd
 = 
NULL
;

2874 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

2875 
©å
 =áâr->
©å_√xt
)

2876 
li°_íd
 = 
©å
;

2878 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

2880 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

2888 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2889 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

2897 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

2898 (
yyvÆ
.
©å
)->
©å_«me
 = 
FSA_VALUE
;

2905 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2911 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

2917 { (
yyvÆ
.
ivÆ
Ë
FSA_NICE
;}

2923 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2929 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

2935 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

2941 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

2947 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

2953 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

2959 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

2965 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

2971 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

2977 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

2983 { (
yyvÆ
.
ivÆ
Ë
FSA_PATH
;}

2989 { (
yyvÆ
.
ivÆ
Ë
FSA_ENTRIES
;}

2995 { (
yyvÆ
.
ivÆ
Ë
FSA_SIZE
;}

3001 { (
yyvÆ
.
ivÆ
Ë
FSA_PREALLOC
;}

3007 { (
yyvÆ
.
ivÆ
Ë
FSA_PARALLOC
;}

3013 { (
yyvÆ
.
ivÆ
Ë
FSA_REUSE
;}

3019 { (
yyvÆ
.
ivÆ
Ë
FSA_TRUSTTREE
;}

3025 { (
yyvÆ
.
ivÆ
Ë
FSA_READONLY
;}

3031 { (
yyvÆ
.
ivÆ
Ë
FSA_WRITEONLY
;}

3037 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRWIDTH
;}

3043 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRDEPTHRV
;}

3049 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRGAMMA
;}

3055 { (
yyvÆ
.
ivÆ
Ë
FSA_LEAFDIRS
;}

3061 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3067 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDSEED
;}

3073 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3079 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDMEAN
;}

3085 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3091 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3098 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3099 
YYERROR
;

3100 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3107 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDUNI
;}

3113 { (
yyvÆ
.
ivÆ
Ë
FSV_RANDTAB
;}

3119 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDGAMMA
;}

3126 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_©å
()Ë=
NULL
)

3127 
YYERROR
;

3128 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3135 { (
yyvÆ
.
ivÆ
Ë
FSV_URAND
;}

3141 { (
yyvÆ
.
ivÆ
Ë
FSV_RAND48
;}

3147 { (
yyvÆ
.
ivÆ
Ë
FSA_TYPE
;}

3153 { (
yyvÆ
.
ivÆ
Ë
FSA_PARAMETERS
;}

3159 { (
yyvÆ
.
ivÆ
Ë
FSA_MIN
;}

3165 { (
yyvÆ
.
ivÆ
Ë
FSA_MAX
;}

3171 { (
yyvÆ
.
ivÆ
Ë
FSA_ROUND
;}

3177 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3183 { (
yyvÆ
.
ivÆ
Ë
FSA_MEMSIZE
;}

3189 { (
yyvÆ
.
ivÆ
Ë
FSA_USEISM
;}

3195 { (
yyvÆ
.
ivÆ
Ë
FSA_INSTANCES
;}

3201 { (
yyvÆ
.
ivÆ
Ë
FSA_IOPRIO
;}

3207 { (
yyvÆ
.
ivÆ
Ë
FSA_WSS
;}

3213 { (
yyvÆ
.
ivÆ
Ë
FSA_FILENAME
;}

3219 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3225 { (
yyvÆ
.
ivÆ
Ë
FSA_RANDOM
;}

3231 { (
yyvÆ
.
ivÆ
Ë
FSA_FD
;}

3237 { (
yyvÆ
.
ivÆ
Ë
FSA_SRCFD
;}

3243 { (
yyvÆ
.
ivÆ
Ë
FSA_ROTATEFD
;}

3249 { (
yyvÆ
.
ivÆ
Ë
FSA_DSYNC
;}

3255 { (
yyvÆ
.
ivÆ
Ë
FSA_DIRECTIO
;}

3261 { (
yyvÆ
.
ivÆ
Ë
FSA_INDEXED
;}

3267 { (
yyvÆ
.
ivÆ
Ë
FSA_TARGET
;}

3273 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3279 { (
yyvÆ
.
ivÆ
Ë
FSA_VALUE
;}

3285 { (
yyvÆ
.
ivÆ
Ë
FSA_BLOCKING
;}

3291 { (
yyvÆ
.
ivÆ
Ë
FSA_HIGHWATER
;}

3297 { (
yyvÆ
.
ivÆ
Ë
FSA_IOSIZE
;}

3303 { (
yyvÆ
.
ivÆ
Ë
FSA_NOREADAHEAD
;}

3309 { (
yyvÆ
.
ivÆ
Ë
FSA_RATE
;}

3315 { (
yyvÆ
.
ivÆ
Ë
FSA_MASTER
;}

3321 { (
yyvÆ
.
ivÆ
Ë
FSA_CLIENT
;}

3328 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3336 
©å_t
 *
©å
 = 
NULL
;

3337 
©å_t
 *
li°_íd
 = 
NULL
;

3339 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3340 
©å
 =áâr->
©å_√xt
)

3341 
li°_íd
 = 
©å
;

3343 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3345 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3353 
©å_t
 *
©å
 = 
NULL
;

3354 
©å_t
 *
li°_íd
 = 
NULL
;

3356 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3357 
©å
 =áâr->
©å_√xt
)

3358 
li°_íd
 = 
©å
;

3360 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3362 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3370 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3371 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3379 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_boﬁón
((
yyv•
[-2].
svÆ
), (yyv•[0].
bvÆ
)))Ë=
NULL
)

3380 
YYERROR
;

3388 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_öãgî
((
yyv•
[-2].
svÆ
), (yyv•[0].
ivÆ
)))Ë=
NULL
)

3389 
YYERROR
;

3397 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-4].
svÆ
), (yyv•[-1].svÆ)))Ë=
NULL
)

3398 
YYERROR
;

3406 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3407 
YYERROR
;

3415 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_v¨
((
yyv•
[-2].
svÆ
), (yyv•[0].svÆ)))Ë=
NULL
)

3416 
YYERROR
;

3424 i‡(((
yyvÆ
.
©å
Ë
	`Æloc_lv¨_©å
(
	`v¨_lv¨_Æloc_loˇl
((
yyv•
[0].
svÆ
)))Ë=
NULL
)

3425 
YYERROR
;

3433 i‡(((
yyvÆ
.
cmd
Ë
	`Æloc_cmd
()Ë=
NULL
)

3434 
YYERROR
;

3435 (
yyvÆ
.
cmd
)->cmd = &
∑r£r_composôe_Êow›_deföe
;

3436 (
yyvÆ
.
cmd
)->
cmd_li°
 = (
yyv•
[-1].cmd);

3437 (
yyvÆ
.
cmd
)->
cmd_©å_li°
 = (
yyv•
[-3].
©å
);

3445 (
yyv•
[-1].
cmd
)->
cmd_©å_li°
 = (yyv•[0].
©å
);

3453 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3461 
©å_t
 *
©å
 = 
NULL
;

3462 
©å_t
 *
li°_íd
 = 
NULL
;

3464 
©å
 = (
yyv•
[-2].©å);áâ∏!
NULL
;

3465 
©å
 =áâr->
©å_√xt
)

3466 
li°_íd
 = 
©å
;

3468 
li°_íd
->
©å_√xt
 = (
yyv•
[0].
©å
);

3470 (
yyvÆ
.
©å
Ë(
yyv•
[-2].attr);

3478 (
yyvÆ
.
©å
Ë(
yyv•
[0].attr);

3479 (
yyvÆ
.
©å
)->
©å_«me
 = (
yyv•
[-2].
ivÆ
);

3486 { (
yyvÆ
.
ivÆ
Ë
FSA_NAME
;}

3492 { (
yyvÆ
.
ivÆ
Ë
FSA_ITERS
;}

3499 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3500 i‡(!(
yyvÆ
.
©å
))

3501 
YYERROR
;

3502 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[0].
svÆ
));

3510 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3511 i‡(!(
yyvÆ
.
©å
))

3512 
YYERROR
;

3513 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_°r_Æloc
((
yyv•
[-1].
svÆ
));

3521 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3522 i‡(!(
yyvÆ
.
©å
))

3523 
YYERROR
;

3524 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3532 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3533 i‡(!(
yyvÆ
.
©å
))

3534 
YYERROR
;

3535 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_boﬁ_Æloc
((
yyv•
[0].
bvÆ
));

3543 (
yyvÆ
.
©å
Ë
	`Æloc_©å
();

3544 i‡(!(
yyvÆ
.
©å
))

3545 
YYERROR
;

3546 (
yyvÆ
.
©å
)->
©å_avd
 = 
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3554 (
yyvÆ
.
avd
Ë
	`avd_öt_Æloc
((
yyv•
[0].
ivÆ
));

3562 (
yyvÆ
.
avd
Ë
	`avd_v¨_Æloc
((
yyv•
[0].
svÆ
));

3582 
	`YY_SYMBOL_PRINT
 ("-> $$ =", 
yyr1
[
yyn
], &
yyvÆ
, &
yyloc
);

3584 
	`YYPOPSTACK
 (
yyÀn
);

3585 
yyÀn
 = 0;

3586 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3588 *++
yyv•
 = 
yyvÆ
;

3594 
yyn
 = 
yyr1
[yyn];

3596 
yy°©e
 = 
yypgŸo
[
yyn
 - 
YYNTOKENS
] + *
yys•
;

3597 i‡(0 <
yy°©e
 && yy°©ê<
YYLAST
 && 
yycheck
[yy°©e] =*
yys•
)

3598 
yy°©e
 = 
yyèbÀ
[yystate];

3600 
yy°©e
 = 
yydefgŸo
[
yyn
 - 
YYNTOKENS
];

3602 
yy√w°©e
;

3608 
yyîæab
:

3611 
yytokí
 = 
yych¨
 =
YYEMPTY
 ? YYEMPTY : 
	`YYTRANSLATE
 (yychar);

3614 i‡(!
yyîr°©us
)

3616 ++
yy√ºs
;

3617 #i‡! 
YYERROR_VERBOSE


3618 
	`yyîr‹
 (
	`YY_
("syntaxÉrror"));

3620 
	#YYSYNTAX_ERROR
 
	`yysy¡ax_îr‹
 (&
yymsg_Æloc
, &
yymsg
, \

3621 
yys•
, 
yytokí
)

	)

3623 c⁄° *
yymsgp
 = 
	`YY_
("syntaxÉrror");

3624 
yysy¡ax_îr‹_°©us
;

3625 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3626 i‡(
yysy¡ax_îr‹_°©us
 == 0)

3627 
yymsgp
 = 
yymsg
;

3628 i‡(
yysy¡ax_îr‹_°©us
 == 1)

3630 i‡(
yymsg
 !
yymsgbuf
)

3631 
	`YYSTACK_FREE
 (
yymsg
);

3632 
yymsg
 = (*Ë
	`YYSTACK_ALLOC
 (
yymsg_Æloc
);

3633 i‡(!
yymsg
)

3635 
yymsg
 = 
yymsgbuf
;

3636 
yymsg_Æloc
 =  
yymsgbuf
;

3637 
yysy¡ax_îr‹_°©us
 = 2;

3641 
yysy¡ax_îr‹_°©us
 = 
YYSYNTAX_ERROR
;

3642 
yymsgp
 = 
yymsg
;

3645 
	`yyîr‹
 (
yymsgp
);

3646 i‡(
yysy¡ax_îr‹_°©us
 == 2)

3647 
yyexhau°edœb
;

3649 #unde‡
YYSYNTAX_ERROR


3655 i‡(
yyîr°©us
 == 3)

3660 i‡(
yych¨
 <
YYEOF
)

3663 i‡(
yych¨
 =
YYEOF
)

3664 
YYABORT
;

3668 
	`yyde°ru˘
 ("Error: discarding",

3669 
yytokí
, &
yylvÆ
);

3670 
yych¨
 = 
YYEMPTY
;

3676 
yyîæab1
;

3682 
yyîr‹œb
:

3688 
yyîr‹œb
;

3692 
	`YYPOPSTACK
 (
yyÀn
);

3693 
yyÀn
 = 0;

3694 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3695 
yy°©e
 = *
yys•
;

3696 
yyîæab1
;

3702 
yyîæab1
:

3703 
yyîr°©us
 = 3;

3707 
yyn
 = 
yy∑˘
[
yy°©e
];

3708 i‡(!
	`yy∑˘_vÆue_is_deÁu…
 (
yyn
))

3710 
yyn
 +
YYTERROR
;

3711 i‡(0 <
yyn
 && yy¿<
YYLAST
 && 
yycheck
[yyn] =
YYTERROR
)

3713 
yyn
 = 
yyèbÀ
[yyn];

3714 i‡(0 < 
yyn
)

3720 i‡(
yys•
 =
yyss
)

3721 
YYABORT
;

3724 
	`yyde°ru˘
 ("Error:Öopping",

3725 
yy°os
[
yy°©e
], 
yyv•
);

3726 
	`YYPOPSTACK
 (1);

3727 
yy°©e
 = *
yys•
;

3728 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3731 
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN


3732 *++
yyv•
 = 
yylvÆ
;

3733 
YY_IGNORE_MAYBE_UNINITIALIZED_END


3737 
	`YY_SYMBOL_PRINT
 ("Shi·ög", 
yy°os
[
yyn
], 
yyv•
, 
yyl•
);

3739 
yy°©e
 = 
yyn
;

3740 
yy√w°©e
;

3746 
yyac˚±œb
:

3747 
yyªsu…
 = 0;

3748 
yyªtu∫
;

3753 
yyab‹éab
:

3754 
yyªsu…
 = 1;

3755 
yyªtu∫
;

3757 #i‡!
deföed
 
yyovîÊow
 || 
YYERROR_VERBOSE


3761 
yyexhau°edœb
:

3762 
	`yyîr‹
 (
	`YY_
("memoryÉxhausted"));

3763 
yyªsu…
 = 2;

3767 
yyªtu∫
:

3768 i‡(
yych¨
 !
YYEMPTY
)

3772 
yytokí
 = 
	`YYTRANSLATE
 (
yych¨
);

3773 
	`yyde°ru˘
 ("Cleanup: discardingÜookahead",

3774 
yytokí
, &
yylvÆ
);

3778 
	`YYPOPSTACK
 (
yyÀn
);

3779 
	`YY_STACK_PRINT
 (
yyss
, 
yys•
);

3780 
yys•
 !
yyss
)

3782 
	`yyde°ru˘
 ("Cleanup:Öopping",

3783 
yy°os
[*
yys•
], 
yyv•
);

3784 
	`YYPOPSTACK
 (1);

3786 #i‚de‡
yyovîÊow


3787 i‡(
yyss
 !
yysß
)

3788 
	`YYSTACK_FREE
 (
yyss
);

3790 #i‡
YYERROR_VERBOSE


3791 i‡(
yymsg
 !
yymsgbuf
)

3792 
	`YYSTACK_FREE
 (
yymsg
);

3794  
yyªsu…
;

3795 
	}
}

3808 
	#USAGE
 \

3811 " Fûebích vîsi⁄ " 
FILEBENCH_VERSION
 "\n\n" \

3820 " -¯[cv¨ty≥] di•œy o±i⁄†o‡thê•ecifi¯cv¨Åy≥\n\n"

	)

3823 
	$ußge_exô
(
ªt
, c⁄° *
msg
)

3825 i‡(
ªt
) {

3826 ()
	`Ârötf
(
°dîr
, "Ußgêîr‹: %s\n\n", 
msg
);

3827 ()
	`Ârötf
(
°dîr
, 
USAGE
);

3829 
	`¥ötf
(
USAGE
);

3830 
	`exô
(
ªt
);

3831 
	}
}

3833 
	sfb∑øms
 {

3834 *
	mexe˙ame
;

3835 *
	mfs¸ùäame
;

3836 *
	m¥o˙ame
;

3837 *
	mshmaddr
;

3838 *
	mshm∑th
;

3839 
	mö°™˚
;

3840 *
	mcv¨ty≥
;

3844 
	$öô_fb∑øms
(
fb∑øms
 *fbparams)

3846 
	`mem£t
(
fb∑øms
, 0, (*fbparams));

3847 
fb∑øms
->
ö°™˚
 = -1;

3848 
	}
}

3850 
	#FB_MODE_NONE
 0

	)

3851 
	#FB_MODE_HELP
 1

	)

3852 
	#FB_MODE_MASTER
 2

	)

3853 
	#FB_MODE_WORKER
 3

	)

3854 
	#FB_MODE_CVARS
 4

	)

3857 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], 
fb∑øms
 *fbparams)

3859 c⁄° 
cmd_›ti⁄s
[] = "m:s:a:i:hf:c:";

3860 
mode
 = 
FB_MODE_NONE
;

3861 
›t
;

3863 
	`öô_fb∑øms
(
fb∑øms
);

3864 
fb∑øms
->
exe˙ame
 = 
¨gv
[0];

3873 
›ãº
 = 0;

3881 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
cmd_›ti⁄s
)) > 0) {

3882 
›t
) {

3885 i‡(
mode
 !
FB_MODE_NONE
)

3886 
	`ußge_exô
(1, "Too many options specified");

3887 
mode
 = 
FB_MODE_HELP
;

3890 i‡(
mode
 !
FB_MODE_NONE
)

3891 
	`ußge_exô
(1, "Too many options specified");

3892 
mode
 = 
FB_MODE_CVARS
;

3893 
fb∑øms
->
cv¨ty≥
 = 
›èrg
;

3896 i‡(
mode
 !
FB_MODE_NONE
)

3897 
	`ußge_exô
(1, "Too many options specified");

3898 
mode
 = 
FB_MODE_MASTER
;

3899 
fb∑øms
->
fs¸ùäame
 = 
›èrg
;

3903 i‡(
mode
 !
FB_MODE_NONE
 &&

3904 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
¥o˙ame
))

3905 
	`ußge_exô
(1, "Too many options");

3906 
mode
 = 
FB_MODE_WORKER
;

3907 
fb∑øms
->
¥o˙ame
 = 
›èrg
;

3910 i‡(
mode
 !
FB_MODE_NONE
 &&

3911 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shmaddr
))

3912 
	`ußge_exô
(1, "Too many options");

3913 
mode
 = 
FB_MODE_WORKER
;

3914 
	`ssˇnf
(
›èrg
, "%p", &
fb∑øms
->
shmaddr
);

3917 i‡(
mode
 !
FB_MODE_NONE
 &&

3918 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shm∑th
))

3919 
	`ußge_exô
(1, "Too many options");

3920 
mode
 = 
FB_MODE_WORKER
;

3921 
fb∑øms
->
shm∑th
 = 
›èrg
;

3924 i‡(
mode
 !
FB_MODE_NONE
 &&

3925 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
ö°™˚
 != -1))

3926 
	`ußge_exô
(1, "Too many options");

3927 
mode
 = 
FB_MODE_WORKER
;

3928 
	`ssˇnf
(
›èrg
, "%d", &
fb∑øms
->
ö°™˚
);

3931 i‡(
›t›t
 == 'c') {

3932 i‡(
mode
 !
FB_MODE_NONE
)

3933 
	`ußge_exô
(1, "Too many options");

3934 
mode
 = 
FB_MODE_CVARS
;

3938 
	`ußge_exô
(1, "Unrecognized option");

3943 i‡(
mode
 =
FB_MODE_NONE
)

3944 
	`ußge_exô
(1, "NoÑuntime options specified");

3946 i‡(
mode
 =
FB_MODE_WORKER
) {

3947 i‡(!
fb∑øms
->
¥o˙ame
 ||

3948 !
fb∑øms
->
shmaddr
 ||

3949 !
fb∑øms
->
shm∑th
 ||

3950 
fb∑øms
->
ö°™˚
 == -1)

3951 
	`ußge_exô
(1, "Invalid worker settings");

3954  
mode
;

3955 
	}
}

3958 
	$w‹kî_mode
(
fb∑øms
 *fbparams)

3960 
ªt
;

3962 
ªt
 = 
	`ùc_©èch
(
fb∑øms
->
shmaddr
, fb∑øms->
shm∑th
);

3963 i‡(
ªt
 < 0) {

3964 
	`fûebích_log
(
LOG_FATAL
, "Cannotáttach shm for %s",

3965 
fb∑øms
->
¥o˙ame
);

3966 
	`exô
(1);

3970 
	`Êow›_öô
(0);

3973 
ªt
 = 
	`öô_cv¨_libørõs
();

3974 i‡(
ªt
)

3975 
	`exô
(1);

3977 
ªt
 = 
	`ªvÆid©e_cv¨_h™dÀs
();

3978 i‡(
ªt
)

3979 
	`exô
(1);

3982 
ªt
 = 
	`¥ocÊow_exec
(
fb∑øms
->
¥o˙ame
, fb∑øms->
ö°™˚
);

3983 i‡(
ªt
 < 0) {

3984 
	`fûebích_log
(
LOG_FATAL
, "Cannot startupÖrocess %s",

3985 
fb∑øms
->
¥o˙ame
);

3986 
	`exô
(1);

3989 
	`exô
(0);

3990 
	}
}

3992 
	$∑r£r_li°_cv¨_ty≥s
()

3994 
cv¨_libøry_öfo_t
 *
t
;

3996 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

3997 
	`¥ötf
("No custom variables supported.\n");

4001 
	`¥ötf
("Custom variableÅypes supported:\n");

4002 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å;Å =Å->
√xt
)

4003 
	`¥ötf
(" %s\n", 
t
->
ty≥
);

4006 
	}
}

4008 
	$∑r£r_li°_cv¨_ty≥_∑ømëîs
(*
ty≥
)

4010 c⁄° *
vîsi⁄
 = 
NULL
;

4011 c⁄° *
ußge
 = 
NULL
;

4013 
cv¨_libøry_öfo_t
 *
t
;

4015 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

4016 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

4020 i‡(!
t
) {

4021 
	`¥ötf
("Unknow¿cu°om v¨übÀÅy≥ %s.\n", 
ty≥
);

4025 
	`¥ötf
("Cu°om v¨übÀÅy≥: %s\n", 
t
->
ty≥
);

4026 
	`¥ötf
("Suµ‹tögÜibøry: %s\n", 
t
->
fûíame
);

4028 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_vîsi⁄
)

4029 
vîsi⁄
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_vîsi⁄
();

4031 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_ußge
)

4032 
ußge
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_ußge
();

4035 i‡(
vîsi⁄
)

4036 
	`¥ötf
("Vîsi⁄: %s\n", 
vîsi⁄
);

4038 
	`¥ötf
("Oops. No version informationÖrovided.\n");

4040 i‡(
ußge
)

4041 
	`¥ötf
("Ußge:\n%s\n", 
ußge
);

4043 
	`¥ötf
("Oops. No usage informationÖrovided.\n");

4046 
	}
}

4049 
	$cv¨s_mode
(
fb∑øms
 *fbparams)

4051 
ªt
;

4053 
	`ùc_öô
();

4055 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

4056 i‡(
ªt
)

4057 
	`fûebích_shutdown
(1);

4059 
ªt
 = 
	`öô_cv¨_libørõs
();

4060 i‡(
ªt
)

4061 
	`fûebích_shutdown
(1);

4063 i‡(
fb∑øms
->
cv¨ty≥
)

4064 
	`∑r£r_li°_cv¨_ty≥_∑ømëîs
(
fb∑øms
->
cv¨ty≥
);

4066 
	`∑r£r_li°_cv¨_ty≥s
();

4068 
	`ùc_föi
();

4070 
	`exô
(0);

4071 
	}
}

4077 
	$∑r£r_ab‹t
(
¨g
)

4079 (Ë
	`sigign‹e
(
SIGINT
);

4080 
	`fûebích_log
(
LOG_INFO
, "Aborting...");

4081 
	`fûebích_shutdown
(1);

4082 
	}
}

4085 
	$ma°î_mode
(
fb∑øms
 *fbparams) {

4086 
ªt
;

4088 
	`¥ötf
("Fûebích Vîsi⁄ %s\n", 
FILEBENCH_VERSION
);

4090 
yyö
 = 
	`f›í
(
fb∑øms
->
fs¸ùäame
, "r");

4091 i‡(!
yyö
) {

4092 
	`fûebích_log
(
LOG_FATAL
,

4093 "C™nŸ o≥¿fûê%s!", 
fb∑øms
->
fs¸ùäame
);

4094 
	`exô
(1);

4097 
exe˙ame
 = 
fb∑øms
->execname;

4098 
	`fb_£t_shmmax
();

4100 
	`ùc_öô
();

4103 ()
	`°r˝y
(
fûebích_shm
->
shm_fs¸ùäame
,

4104 
fb∑øms
->
fs¸ùäame
);

4106 
	`Êow›_öô
(1);

4107 
	`evítgí_öô
();

4110 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

4111 i‡(
ªt
)

4112 
	`fûebích_shutdown
(1);

4114 
ªt
 = 
	`öô_cv¨_libørõs
();

4115 i‡(
ªt
)

4116 
	`fûebích_shutdown
(1);

4118 
	`sig«l
(
SIGINT
, 
∑r£r_ab‹t
);

4121 
	`yy∑r£
();

4126 
	`¥ötf
("Warning:ÇoÑun command inÅhe WML script!\n");

4127 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

4128 
	}
}

4131 
	$öô_comm⁄
()

4133 
	`dißbÀ_a¶r
();

4134 
my_pid
 = 
	`gëpid
();

4135 
	`fb_£t_æimô
();

4136 
	}
}

4153 
	$maö
(
¨gc
, *
¨gv
[])

4155 
fb∑øms
 fbparams;

4156 
mode
;

4159 
mode
 = 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, &
fb∑øms
);

4161 i‡(
mode
 =
FB_MODE_HELP
)

4162 
	`ußge_exô
(0, 
NULL
);

4164 i‡(
mode
 =
FB_MODE_CVARS
)

4165 
	`cv¨s_mode
(&
fb∑øms
);

4167 
	`öô_comm⁄
();

4169 i‡(
mode
 =
FB_MODE_MASTER
)

4170 
	`ma°î_mode
(&
fb∑øms
);

4172 i‡(
mode
 =
FB_MODE_WORKER
)

4173 
	`w‹kî_mode
(&
fb∑øms
);

4177 
	}
}

4185 
	$∑r£r_li°2°rög
(
li°_t
 *
li°
)

4187 
li°_t
 *
l
;

4188 *
°rög
;

4189 *
tmp
;

4191 
°rög
 = 
	`mÆloc
(
MAXPATHLEN
);

4192 i‡(!
°rög
) {

4193 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate memory");

4194  
NULL
;

4197 *
°rög
 = 0;

4200 
l
 = 
li°
;Ü !
NULL
;Ü =Ü->
li°_√xt
) {

4202 *
l°r
 = 
	`avd_gë_°r
(
l
->
li°_°rög
);

4204 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "c⁄vîtög såög '%s'", 
l°r
);

4207 i‡(
l
->
li°_öãgî
) {

4208 
fböt_t
 
∑øm_«me
;

4210 
tmp
 = 
NULL
;

4211 
∑øm_«me
 = 
	`avd_gë_öt
(
l
->
li°_öãgî
);

4213 
∑øm_«me
) {

4214 
FSS_TYPE
:

4215 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4216 
RAND_PARAM_TYPE
);

4219 
FSS_SRC
:

4220 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4221 
RAND_PARAM_SRC
);

4224 
FSS_SEED
:

4225 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4226 
RAND_PARAM_SEED
);

4229 
FSS_MIN
:

4230 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4231 
RAND_PARAM_MIN
);

4234 
FSS_MEAN
:

4235 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4236 
RAND_PARAM_MEAN
);

4239 
FSS_GAMMA
:

4240 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4241 
RAND_PARAM_GAMMA
);

4244 
FSS_ROUND
:

4245 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

4246 
RAND_PARAM_ROUND
);

4250 i‡(
tmp
) {

4251 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4252 
	`‰ì
(
tmp
);

4254 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4258 i‡((
tmp
 = 
	`v¨_to_°rög
(
l°r
)Ë!
NULL
) {

4259 (Ë
	`°rˇt
(
°rög
, 
tmp
);

4260 
	`‰ì
(
tmp
);

4262 (Ë
	`°rˇt
(
°rög
, 
l°r
);

4267  
°rög
;

4268 
	}
}

4277 
avd_t


4278 
	$∑r£r_li°2v¨°rög
(
li°_t
 *
li°
)

4280 *
l°r
 = 
	`avd_gë_°r
(
li°
->
li°_°rög
);

4283 i‡((
li°
->
li°_√xt
 =
NULL
Ë&& (*
l°r
 == '$'))

4284  
	`avd_v¨_Æloc
(
l°r
);

4286  (
	`avd_°r_Æloc
(
	`∑r£r_li°2°rög
(
li°
)));

4287 
	}
}

4296 
avd_t


4297 
	$∑r£r_li°2avd
(
li°_t
 *
li°
)

4299 
avd_t
 
avd
;

4300 *
l°r
;

4302 i‡(
li°
 && ((
l°r
 = 
	`avd_gë_°r
÷i°->
li°_°rög
)Ë!
NULL
)) {

4303 
avd
 = 
	`avd_v¨_Æloc
(
l°r
);

4304  (
avd
);

4307  (
NULL
);

4308 
	}
}

4315 
	$∑r£r_evítgí
(
cmd_t
 *
cmd
)

4317 
©å_t
 *
©å
;

4320 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RATE
))) {

4321 i‡(
©å
->
©å_avd
) {

4322 
	`evítgí_£å©e
(
©å
->
©å_avd
);

4325 
	}
}

4332 
	$∑r£r_fûe£t_li°
(
cmd_t
 *
cmd
)

4334 (Ë
	`fûe£t_ôî
(
fûe£t_¥öt
);

4335 
	}
}

4341 
	$∑r£r_Êow›_li°
(
cmd_t
 *
cmd
)

4343 
	`Êow›_¥öèŒ
();

4344 
	}
}

4355 
	$∑r£r_¥oc_deföe
(
cmd_t
 *
cmd
)

4357 
¥ocÊow_t
 *
¥ocÊow
;

4358 *
«me
 = 
NULL
;

4359 
©å_t
 *
©å
;

4360 
avd_t
 
v¨_ö°™˚s
;

4361 
fböt_t
 
ö°™˚s
;

4362 
cmd_t
 *
ö√r_cmd
;

4364 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4365 i‡(
©å
)

4366 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4368 
	`fûebích_log
(
LOG_ERROR
, "process specifiesÇoÇame");

4369 
	`fûebích_shutdown
(1);

4372 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4373 i‡(
©å
) {

4374 
v¨_ö°™˚s
 = 
©å
->
©å_avd
;

4375 
ö°™˚s
 = 
	`avd_gë_öt
(
v¨_ö°™˚s
);

4376 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4377 "Sëtög in°™˚†%Œu", (
u_l⁄gl⁄g_t
)
ö°™˚s
);

4379 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

4381 
v¨_ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4382 
ö°™˚s
 = 1;

4385 
¥ocÊow
 = 
	`¥ocÊow_deföe
(
«me
, 
v¨_ö°™˚s
);

4386 i‡(!
¥ocÊow
) {

4387 
	`fûebích_log
(
LOG_ERROR
,

4389 
ö°™˚s
, 
«me
);

4390 
	`fûebích_shutdown
(1);

4393 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NICE
);

4394 i‡(
©å
) {

4395 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri = %llu",

4396 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
©å
->
©å_avd
));

4397 
¥ocÊow
->
pf_ni˚
 = 
©å
->
©å_avd
;

4399 
¥ocÊow
->
pf_ni˚
 = 
	`avd_öt_Æloc
(0);

4402 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4403 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4404 
	`∑r£r_thªad_deföe
(
ö√r_cmd
, 
¥ocÊow
);

4405 
	}
}

4418 
	$∑r£r_thªad_deföe
(
cmd_t
 *
cmd
, 
¥ocÊow_t
 *
¥ocÊow
)

4420 
thªadÊow_t
 *
thªadÊow
, 
ãm∂©e
;

4421 
©å_t
 *
©å
;

4422 
avd_t
 
ö°™˚s
;

4423 
cmd_t
 *
ö√r_cmd
;

4424 *
«me
 = 
NULL
;

4426 
	`mem£t
(&
ãm∂©e
, 0,  (
thªadÊow_t
));

4428 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4429 i‡(
©å
)

4430 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4432 
	`fûebích_log
(
LOG_ERROR
,

4434 
¥ocÊow
->
pf_«me
);

4435 
	`fûebích_shutdown
(1);

4438 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

4439 i‡(
©å
)

4440 
ö°™˚s
 = 
©å
->
©å_avd
;

4442 
ö°™˚s
 = 
	`avd_öt_Æloc
(1);

4444 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MEMSIZE
);

4445 i‡(
©å
)

4446 
ãm∂©e
.
tf_memsize
 = 
©å
->
©å_avd
;

4448 
ãm∂©e
.
tf_memsize
 = 
	`avd_öt_Æloc
(0);

4450 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOPRIO
);

4451 i‡(
©å
)

4452 
ãm∂©e
.
tf_i›rio
 = 
©å
->
©å_avd
;

4454 
ãm∂©e
.
tf_i›rio
 = 
	`avd_öt_Æloc
(8);

4457 
thªadÊow
 = 
	`thªadÊow_deföe
(
¥ocÊow
, 
«me
, &
ãm∂©e
, 
ö°™˚s
);

4458 i‡(!
thªadÊow
) {

4459 
	`fûebích_log
(
LOG_ERROR
,

4461 
	`fûebích_shutdown
(1);

4464 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_USEISM
);

4465 i‡(
©å
)

4466 
thªadÊow
->
tf_©ås
 |
THREADFLOW_USEISM
;

4469 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

4470 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

4471 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
thªadÊow
,

4472 &
thªadÊow
->
tf_thrd_f›s
, 
FLOW_MASTER
);

4473 
	}
}

4479 
	$∑r£r_Êow›_gë_©ås
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

4481 
©å_t
 *
©å
;

4484 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FILENAME
))) {

4485 
Êow›
->
fo_fûíame
 = 
©å
->
©å_avd
;

4486 i‡(
Êow›
->
fo_fûíame
 =
NULL
) {

4487 
	`fûebích_log
(
LOG_ERROR
,

4489 
	`fûebích_shutdown
(1);

4493 
Êow›
->
fo_fûíame
 = 
NULL
;

4497 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOSIZE
)))

4498 
Êow›
->
fo_iosize
 = 
©å
->
©å_avd
;

4500 
Êow›
->
fo_iosize
 = 
	`avd_öt_Æloc
(0);

4503 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WSS
)))

4504 
Êow›
->
fo_wss
 = 
©å
->
©å_avd
;

4506 
Êow›
->
fo_wss
 = 
	`avd_öt_Æloc
(0);

4509 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDOM
)))

4510 
Êow›
->
fo_øndom
 = 
©å
->
©å_avd
;

4512 
Êow›
->
fo_øndom
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4515 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DSYNC
)))

4516 
Êow›
->
fo_dsync
 = 
©å
->
©å_avd
;

4518 
Êow›
->
fo_dsync
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4521 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TARGET
)))

4522 (Ë
	`°r˝y
(
Êow›
->
fo_èrgë«me
,

4523 
	`avd_gë_°r
(
©å
->
©å_avd
));

4526 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

4527 
Êow›
->
fo_vÆue
 = 
©å
->
©å_avd
;

4529 
Êow›
->
fo_vÆue
 = 
	`avd_öt_Æloc
(0);

4532 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FD
))) {

4533 
Êow›
->
fo_fdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4534 i‡(
Êow›
->
fo_fûíame
 !
NULL
)

4535 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "It isÇot "

4541 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROTATEFD
)))

4542 
Êow›
->
fo_rŸ©efd
 = 
©å
->
©å_avd
;

4544 
Êow›
->
fo_rŸ©efd
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4547 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SRCFD
)))

4548 
Êow›
->
fo_§cfdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

4551 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_BLOCKING
)))

4552 
Êow›
->
fo_blockög
 = 
©å
->
©å_avd
;

4554 
Êow›
->
fo_blockög
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4557 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRECTIO
)))

4558 
Êow›
->
fo_dúe˘io
 = 
©å
->
©å_avd
;

4560 
Êow›
->
fo_dúe˘io
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4563 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_HIGHWATER
))) {

4564 
Êow›
->
fo_highw©î
 = 
©å
->
©å_avd
;

4565 i‡(
	`AVD_IS_RANDOM
(
©å
->
©å_avd
)) {

4566 
	`fûebích_log
(
LOG_ERROR
,

4568 
	`fûebích_shutdown
(1);

4571 
Êow›
->
fo_highw©î
 = 
	`avd_öt_Æloc
(1);

4575 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INDEXED
)))

4576 
Êow›
->
fo_fûeödex
 = 
©å
->
©å_avd
;

4578 
Êow›
->
fo_fûeödex
 = 
NULL
;

4581 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NOREADAHEAD
)))

4582 
Êow›
->
fo_n‹ódahód
 = 
©å
->
©å_avd
;

4584 
Êow›
->
fo_n‹ódahód
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4587 
	}
}

4598 
	$∑r£r_ö√r_Êow›_deföe
(
thªadÊow_t
 *
thªad
, 
Êow›_t
 *
comp0_Êow
,

4599 
Êow›_t
 *
comp_m°r_Êow
)

4601 
Êow›_t
 *
ö√r_Êowty≥
, *
ö√r_Êow›
;

4604 
ö√r_Êowty≥
 = 
comp0_Êow
->
fo_comp_f›s
;

4605 
comp_m°r_Êow
->
fo_comp_f›s
 = 
NULL
;

4607 
ö√r_Êowty≥
) {

4608 
fuŒ«me
[
MAXPATHLEN
];

4611 
	`¢¥ötf
(
fuŒ«me
, 
MAXPATHLEN
, "%s.%s",

4612 
comp_m°r_Êow
->
fo_«me
, 
ö√r_Êowty≥
->fo_name);

4614 i‡((
ö√r_Êow›
 = 
	`Êow›_deföe
(
thªad
, 
fuŒ«me
,

4615 
ö√r_Êowty≥
, &
comp_m°r_Êow
->
fo_comp_f›s
,

4616 
FLOW_MASTER
, 0)Ë=
NULL
) {

4617 
	`fûebích_log
(
LOG_ERROR
,

4619 
fuŒ«me
);

4620 
	`fûebích_shutdown
(1);

4624 i‡(
ö√r_Êow›
->
fo_fûíame
) {

4625 *
«me
;

4628 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_fûíame
,

4629 
comp_m°r_Êow
->
fo_lv¨_li°
);

4632 
«me
 = 
	`avd_gë_°r
(
ö√r_Êow›
->
fo_fûíame
);

4633 i‡(
«me
) {

4635 
ö√r_Êow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

4637 i‡(
ö√r_Êow›
->
fo_fûe£t
 =
NULL
) {

4638 
	`fûebích_log
(
LOG_ERROR
,

4640 
ö√r_Êow›
->
fo_«me
, 
«me
);

4641 
	`fûebích_shutdown
(1);

4647 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4648 
comp_m°r_Êow
->
fo_lv¨_li°
);

4651 i‡(
ö√r_Êowty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4652 
v¨_t
 *
√wlv¨
, *
¥Ÿo_lv¨s
, *
lv¨_±r
;

4654 
¥Ÿo_lv¨s
 = 
ö√r_Êow›
->
fo_lv¨_li°
;

4655 
ö√r_Êow›
->
fo_lv¨_li°
 = 0;

4657 
lv¨_±r
 = 
ö√r_Êowty≥
->
fo_lv¨_li°
;Üvar_ptr;

4658 
lv¨_±r
 =Üv¨_±r->
v¨_√xt
) {

4660 i‡((
√wlv¨
 = 
	`v¨_lv¨_Æloc_loˇl
(

4661 
lv¨_±r
->
v¨_«me
)Ë!
NULL
) {

4663 
	`add_lv¨_to_li°
(
√wlv¨
,

4664 &
ö√r_Êow›
->
fo_lv¨_li°
);

4666 
	`v¨_upd©e_comp_lv¨s
(
√wlv¨
,

4667 
¥Ÿo_lv¨s
,

4668 
comp_m°r_Êow
->
fo_lv¨_li°
);

4672 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4673 
ö√r_Êowty≥
,

4674 
ö√r_Êow›
);

4676 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4680 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_iosize
,

4681 
comp_m°r_Êow
->
fo_lv¨_li°
);

4682 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_wss
,

4683 
comp_m°r_Êow
->
fo_lv¨_li°
);

4684 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

4685 
comp_m°r_Êow
->
fo_lv¨_li°
);

4686 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_vÆue
,

4687 
comp_m°r_Êow
->
fo_lv¨_li°
);

4688 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_øndom
,

4689 
comp_m°r_Êow
->
fo_lv¨_li°
);

4690 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dsync
,

4691 
comp_m°r_Êow
->
fo_lv¨_li°
);

4692 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_rŸ©efd
,

4693 
comp_m°r_Êow
->
fo_lv¨_li°
);

4694 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_blockög
,

4695 
comp_m°r_Êow
->
fo_lv¨_li°
);

4696 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dúe˘io
,

4697 
comp_m°r_Êow
->
fo_lv¨_li°
);

4698 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_highw©î
,

4699 
comp_m°r_Êow
->
fo_lv¨_li°
);

4701 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

4703 
	}
}

4733 
	$∑r£r_Êow›_deföe
(
cmd_t
 *
cmd
, 
thªadÊow_t
 *
thªad
,

4734 
Êow›_t
 **
Êow›li°_hdp
, 
ˇãg‹y
)

4736 
Êow›_t
 *
Êow›
, *
Êow›_ty≥
;

4737 *
ty≥
 = (*)
cmd
->
cmd_«me
;

4738 *
«me
 = 
NULL
;

4739 
©å_t
 *
©å
;

4742 
Êow›_ty≥
 = 
	`Êow›_föd
(
ty≥
);

4743 i‡(
Êow›_ty≥
 =
NULL
) {

4744 
	`fûebích_log
(
LOG_ERROR
,

4746 
ty≥
);

4747 
	`fûebích_shutdown
(1);

4751 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4752 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4754 
	`fûebích_log
(
LOG_ERROR
,

4756 
Êow›_ty≥
->
fo_«me
);

4757 
	`fûebích_shutdown
(1);

4760 i‡((
Êow›
 = 
	`Êow›_deföe
(
thªad
, 
«me
,

4761 
Êow›_ty≥
, 
Êow›li°_hdp
, 
ˇãg‹y
, 0)Ë=
NULL
) {

4762 
	`fûebích_log
(
LOG_ERROR
,

4764 
cmd
->
cmd_«me
);

4765 
	`fûebích_shutdown
(1);

4769 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4770 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4772 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4776 i‡(
Êow›_ty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

4777 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4778 i‡(
ˇãg‹y
 =
FLOW_MASTER
)

4779 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

4780 
Êow›_ty≥
, 
Êow›
);

4783 
	`∑r£r_Êow›_gë_©ås
(
cmd
, 
Êow›
);

4785 
	}
}

4788 
	$∑r£r_composôe_Êow›_deföe
(
cmd_t
 *
cmd
)

4790 
Êow›_t
 *
Êow›
;

4791 
cmd_t
 *
ö√r_cmd
;

4792 *
«me
 = 
NULL
;

4793 
©å_t
 *
©å
;

4796 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

4797 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

4799 
	`fûebích_log
(
LOG_ERROR
,

4802 
	`fûebích_shutdown
(1);

4805 i‡((
Êow›
 = 
	`Êow›_√w_composôe_deföe
(
«me
)Ë=
NULL
) {

4806 
	`fûebích_log
(
LOG_ERROR
,

4808 
cmd
->
cmd_«me
);

4809 
	`fûebích_shutdown
(1);

4813 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

4816 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

4817 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

4819 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

4822 
ö√r_cmd
 = 
cmd
->
cmd_li°
; i¬î_cmd !
NULL
;

4823 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
) {

4824 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
NULL
,

4825 &
Êow›
->
fo_comp_f›s
, 
FLOW_INNER_DEF
);

4827 
	}
}

4836 
fûe£t_t
 *

4837 
	$∑r£r_fûe£t_deföe_comm⁄
(
cmd_t
 *
cmd
)

4839 
fûe£t_t
 *
fûe£t
;

4840 
©å_t
 *
©å
;

4841 
avd_t
 
«me
;

4842 
avd_t
 
∑th
;

4844 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

4845 i‡(
©å
)

4846 
«me
 = 
©å
->
©å_avd
;

4848 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÇame");

4849  
NULL
;

4852 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PATH
);

4853 i‡(
©å
)

4854 
∑th
 = 
©å
->
©å_avd
;

4856 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÖath");

4857  
NULL
;

4860 
fûe£t
 = 
	`fûe£t_deföe
(
«me
, 
∑th
);

4861 i‡(!
fûe£t
) {

4862 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file[set] %s\n",

4863 
	`avd_gë_°r
(
«me
));

4864  
NULL
;

4867 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PREALLOC
);

4868 i‡(
©å
)

4869 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
©å
->
©å_avd
;

4871 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
	`avd_öt_Æloc
(0);

4873 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARALLOC
);

4874 i‡(
©å
)

4875 
fûe£t
->
fs_∑øŒoc
 = 
©å
->
©å_avd
;

4877 
fûe£t
->
fs_∑øŒoc
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4879 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_READONLY
);

4880 i‡(
©å
)

4881 
fûe£t
->
fs_ªad⁄ly
 = 
©å
->
©å_avd
;

4883 
fûe£t
->
fs_ªad⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4885 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WRITEONLY
);

4886 i‡(
©å
)

4887 
fûe£t
->
fs_wrôe⁄ly
 = 
©å
->
©å_avd
;

4889 
fûe£t
->
fs_wrôe⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4891 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_REUSE
);

4892 i‡(
©å
)

4893 
fûe£t
->
fs_ªu£
 = 
©å
->
©å_avd
;

4895 
fûe£t
->
fs_ªu£
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4898 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TRUSTTREE
);

4899 i‡(
©å
 )

4900 
fûe£t
->
fs_åu°_åì
 = 
©å
->
©å_avd
;

4902 
fûe£t
->
fs_åu°_åì
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

4904 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SIZE
);

4905 i‡(
©å
)

4906 
fûe£t
->
fs_size
 = 
©å
->
©å_avd
;

4908 
fûe£t
->
fs_size
 = 
	`avd_öt_Æloc
(1024);

4910  
fûe£t
;

4911 
	}
}

4914 
	$∑r£r_fûe_deföe
(
cmd_t
 *
cmd
)

4916 
fûe£t_t
 *
fûe£t
;

4918 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

4919 i‡(!
fûe£t
) {

4920 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file");

4921 
	`fûebích_shutdown
(1);

4926 
fûe£t
->
fs_©ås
 = 
FILESET_IS_FILE
;

4927 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(1);

4929 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(10);

4930 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(0);

4931 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

4932 
	}
}

4935 
	$∑r£r_fûe£t_deföe
(
cmd_t
 *
cmd
)

4937 
fûe£t_t
 *
fûe£t
;

4938 
©å_t
 *
©å
;

4940 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

4941 i‡(!
fûe£t
) {

4942 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate fileset");

4943 
	`fûebích_shutdown
(1);

4947 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ENTRIES
);

4948 i‡(
©å
)

4949 
fûe£t
->
fs_íåõs
 = 
©å
->
©å_avd
;

4951 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(0);

4953 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_LEAFDIRS
);

4954 i‡(
©å
)

4955 
fûe£t
->
fs_Àafdús
 = 
©å
->
©å_avd
;

4957 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

4959 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRWIDTH
);

4960 i‡(
©å
)

4961 
fûe£t
->
fs_dúwidth
 = 
©å
->
©å_avd
;

4963 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo directory width");

4964 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(0);

4967 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRDEPTHRV
);

4968 i‡(
©å
)

4969 
fûe£t
->
fs_dúdïthrv
 = 
©å
->
©å_avd
;

4971 
fûe£t
->
fs_dúdïthrv
 = 
NULL
;

4973 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRGAMMA
);

4974 i‡(
©å
)

4975 
fûe£t
->
fs_dúgamma
 = 
©å
->
©å_avd
;

4977 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(1500);

4978 
	}
}

4986 
	$∑r£r_fûe£t_¸óã
(
cmd_t
 *
cmd
)

4988 
ªt
;

4990 
ªt
 = 
	`fûe£t_¸óã£ts
();

4991 i‡(
ªt
) {

4992 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo create filesets");

4993 
	`fûebích_shutdown
(1);

4995 
	}
}

5003 
	$∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
)

5005 
f_ab‹t
 = 
fûebích_shm
->
shm_f_ab‹t
;

5007 
	`ùc_föi
();

5009 i‡(
f_ab‹t
 =
FILEBENCH_ABORT_ERROR
)

5010 
	`fûebích_shutdown
(1);

5012 
	`fûebích_shutdown
(0);

5013 
	}
}

5021 
	$∑r£r_∑u£
(
±ime
)

5023 
time¶ït
 = 0;

5025 i‡(
±ime
) {

5026 
time¶ït
 < 
±ime
) {

5027 (Ë
	`¶ìp
(1);

5028 
time¶ït
++;

5029 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5036 (Ë
	`¶ìp
(1);

5037 
time¶ït
++;

5038 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5043  (
time¶ït
);

5044 
	}
}

5046 
	#TIMED_RUNTIME_DEFAULT
 60

	)

5047 
	#PERIOD_DEFAULT
 10

	)

5057 
	$∑r£r_run
(
cmd_t
 *
cmd
)

5059 
ru¡ime
;

5060 
time¶ït
;

5062 
ru¡ime
 = 
cmd
->
cmd_qty
;

5064 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5065 
	`¥oc_¸óã
();

5068 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5071 
	`fûebích_log
(
LOG_INFO
, "Running...");

5072 
	`°©s_˛ór
();

5075 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5076 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5078 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5080 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5081 
	`°©s_¢≠
();

5082 
	`¥oc_shutdown
();

5083 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5084 
	}
}

5087 
	$∑r£r_p§un
(
cmd_t
 *
cmd
)

5089 
ru¡ime
;

5090 
≥riod
;

5091 
time¶ït
 = 0;

5092 
ª£t_°©s
 = 0;

5094 
ru¡ime
 = 
cmd
->
cmd_qty
;

5101 i‡(
cmd
->
cmd_qty1
 < 0) {

5102 
≥riod
 = -
cmd
->
cmd_qty1
;

5103 
ª£t_°©s
 = 1;

5104 } i‡(
cmd
->
cmd_qty1
 > 0) {

5105 
≥riod
 = 
cmd
->
cmd_qty1
;

5106 
ª£t_°©s
 = 0;

5108 
≥riod
 = 
PERIOD_DEFAULT
;

5109 
ª£t_°©s
 = 0;

5112 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5113 
	`¥oc_¸óã
();

5116 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5119 
	`fûebích_log
(
LOG_INFO
, "Running...");

5120 
	`°©s_˛ór
();

5123 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5124 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5128 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
)

5129 
≥riod
 =Öîiod > (
ru¡ime
 - 
time¶ït
) ?

5130 (
ru¡ime
 - 
time¶ït
Ë: 
≥riod
;

5132 
time¶ït
 +
	`∑r£r_∑u£
(
≥riod
);

5134 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5137 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 &&

5138 
time¶ït
 >
ru¡ime
)

5141 
	`°©s_¢≠
();

5143 i‡(
ª£t_°©s
)

5144 
	`°©s_˛ór
();

5147 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5148 
	`°©s_¢≠
();

5149 
	`¥oc_shutdown
();

5150 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5151 
	}
}

5158 
	$∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
)

5160 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5161 
ru¡ime
;

5162 
time¶ït
;

5164 i‡(
öãgî
 =
NULL
) {

5165 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5166 
cmd
->
cmd_tgt1
);

5170 
ru¡ime
 = 
	`avd_gë_öt
(
öãgî
);

5172 
	`∑r£r_fûe£t_¸óã
(
cmd
);

5173 
	`¥oc_¸óã
();

5176 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5179 
	`fûebích_log
(
LOG_INFO
, "Running...");

5180 
	`°©s_˛ór
();

5183 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

5184 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

5186 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

5188 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5189 
	`°©s_¢≠
();

5190 
	`¥oc_shutdown
();

5191 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

5192 
	}
}

5198 
	$∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
)

5200 
©å_t
 *
©å
;

5201 *
ma°î
;

5202 *
˛õ¡
;

5204 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MASTER
))) {

5205 
ma°î
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5207 
	`fûebích_log
(
LOG_ERROR
,

5212 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_CLIENT
))) {

5213 
˛õ¡
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5215 
	`fûebích_log
(
LOG_ERROR
,

5220 
	`mc_sync_›í_sock
(
ma°î
, 8001, 
˛õ¡
);

5221 
	}
}

5227 
	$∑r£r_domu…isync
(
cmd_t
 *
cmd
)

5229 
©å_t
 *
©å
;

5230 
fböt_t
 
vÆue
;

5232 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

5233 
vÆue
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

5235 
vÆue
 = 1;

5237 
	`mc_sync_synchr⁄ize
(()
vÆue
);

5238 
	}
}

5244 
	$∑r£r_¶ìp
(
cmd_t
 *
cmd
)

5246 
¶ì±ime
;

5247 
time¶ït
;

5250 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5253 
¶ì±ime
 = 
cmd
->
cmd_qty
;

5254 
	`fûebích_log
(
LOG_INFO
, "Sleeping...");

5256 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5258 
	`fûebích_log
(
LOG_INFO
, "SÀ± f‹ %d sec⁄ds...", 
time¶ït
);

5259 
	}
}

5266 
	$∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
)

5268 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

5269 
¶ì±ime
;

5270 
time¶ït
;

5272 i‡(
öãgî
 =
NULL
) {

5273 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

5274 
cmd
->
cmd_tgt1
);

5278 
¶ì±ime
 = 
	`avd_gë_öt
(
öãgî
);

5281 i‡(
fûebích_shm
->
shm_f_ab‹t
)

5284 
	`fûebích_log
(
LOG_INFO
, "Running...");

5286 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

5288 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

5289 
	}
}

5298 
	$∑r£r_sy°em
(
cmd_t
 *
cmd
)

5300 *
°rög
;

5302 i‡(!
cmd
->
cmd_∑øm_li°
)

5305 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5307 i‡(!
°rög
)

5310 
	`fûebích_log
(
LOG_VERBOSE
, "Ru¬ög '%s'", 
°rög
);

5312 i‡(
	`sy°em
(
°rög
) < 0) {

5313 
	`fûebích_log
(
LOG_ERROR
,

5315 
	`°ªº‹
(
î∫o
));

5316 
	`‰ì
(
°rög
);

5317 
	`fûebích_shutdown
(1);

5320 
	`‰ì
(
°rög
);

5321 
	}
}

5327 
	$∑r£r_echo
(
cmd_t
 *
cmd
)

5329 *
°rög
;

5331 i‡(
cmd
->
cmd_∑øm_li°
 =
NULL
)

5334 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

5336 i‡(
°rög
 =
NULL
)

5339 
	`fûebích_log
(
LOG_INFO
, "%s", 
°rög
);

5340 
	}
}

5346 
	$∑r£r_vîsi⁄
(
cmd_t
 *
cmd
)

5348 
	`fûebích_log
(
LOG_INFO
, "Fûebích Vîsi⁄: %s", 
FILEBENCH_VERSION
);

5349 
	}
}

5352 
	$∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
)

5354 
fûebích_shm
->
œthi°_íabÀd
 = 1;

5355 
	`fûebích_log
(
LOG_INFO
, "Latency histogramÉnabled");

5356 
	}
}

5362 
	$∑r£r_v¨_assign_øndom
(*
«me
, 
cmd_t
 *
cmd
)

5364 
ønddi°_t
 *
∫dp
;

5365 
©å_t
 *
©å
;

5367 
∫dp
 = 
	`ønddi°_Æloc
();

5368 i‡(!
∫dp
) {

5369 
	`fûebích_log
(
LOG_ERROR
,

5374 
∫dp
->
∫d_ty≥
 = 0;

5377 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSRC
))) {

5378 
ønd§c
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5380 
ønd§c
) {

5381 
FSV_URAND
:

5382 
∫dp
->
∫d_ty≥
 |
RAND_SRC_URANDOM
;

5384 
FSV_RAND48
:

5385 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5390 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

5394 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5395 
∫dp
->
∫d_mö
 = 
©å
->
©å_avd
;

5397 
∫dp
->
∫d_mö
 = 
	`avd_öt_Æloc
(0);

5400 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5401 
∫dp
->
∫d_round
 = 
©å
->
©å_avd
;

5403 
∫dp
->
∫d_round
 = 
	`avd_öt_Æloc
(0);

5406 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDTABLE
))) {

5407 
∫dp
->
∫d_¥obèbs
 = (
¥obèbít_t
 *)(
©å
->
©å_obj
);

5408 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_TABLE
;

5410 
∫dp
->
∫d_¥obèbs
 = 
NULL
;

5414 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
))) {

5415 
di°ty≥
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

5417 
di°ty≥
) {

5418 
FSV_RANDUNI
:

5419 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_UNIFORM
;

5421 
FSA_RANDGAMMA
:

5422 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5424 
FSV_RANDTAB
:

5425 
	`fûebích_log
(
LOG_ERROR
,

5431 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

5435 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSEED
)))

5436 
∫dp
->
∫d_£ed
 = 
©å
->
©å_avd
;

5438 
∫dp
->
∫d_£ed
 = 
	`avd_öt_Æloc
(0);

5441 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDGAMMA
)))

5442 
∫dp
->
∫d_gamma
 = 
©å
->
©å_avd
;

5444 
∫dp
->
∫d_gamma
 = 
	`avd_öt_Æloc
(1500);

5447 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDMEAN
))) {

5448 
∫dp
->
∫d_món
 = 
©å
->
©å_avd
;

5449 } i‡((
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
Ë=
RAND_TYPE_GAMMA
) {

5450 
∫dp
->
∫d_món
 = 
NULL
;

5452 
∫dp
->
∫d_món
 = 
	`avd_öt_Æloc
(0);

5455 
	`v¨_assign_øndom
(
«me
, 
∫dp
);

5457 
	`ønddi°_öô
(
∫dp
);

5458 
	}
}

5464 
cmd_t
 *

5465 
	$Æloc_cmd
()

5467 
cmd_t
 *
cmd
;

5469 
cmd
 = 
	`mÆloc
((*cmd));

5470 i‡(!
cmd
) {

5471 
	`fûebích_log
(
LOG_ERROR
, "Alloc cmd failed");

5472  
NULL
;

5475 
	`mem£t
(
cmd
, 0,  (
cmd_t
));

5477  
cmd
;

5478 
	}
}

5484 
©å_t
 *

5485 
	$Æloc_©å
()

5487 
©å_t
 *
©å
;

5489 
©å
 = 
	`mÆloc
((*attr));

5490 i‡(!
©å
)

5491  (
NULL
);

5493 (Ë
	`mem£t
(
©å
, 0, (*attr));

5495  (
©å
);

5496 
	}
}

5502 
¥obèbít_t
 *

5503 
	$Æloc_¥obèbít
()

5505 
¥obèbít_t
 *
πe
;

5507 i‡((
πe
 = 
	`mÆloc
( (
¥obèbít_t
))Ë=
NULL
) {

5508  (
NULL
);

5511 (Ë
	`mem£t
(
πe
, 0,  (
¥obèbít_t
));

5512  (
πe
);

5513 
	}
}

5519 
©å_t
 *

5520 
	$Æloc_lv¨_©å
(
v¨_t
 *
v¨
)

5522 
©å_t
 *
©å
;

5524 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

5525  (
NULL
);

5527 
©å
->
©å_«me
 = 
FSA_LVAR_ASSIGN
;

5528 
©å
->
©å_avd
 = (
avd_t
)
v¨
;

5530  (
©å
);

5531 
	}
}

5542 
©å_t
 *

5543 
	$gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
)

5545 
©å_t
 *
©å
;

5546 
©å_t
 *
πn
 = 
NULL
;

5548 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5549 
©å
 =áâr->
©å_√xt
) {

5551 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

5553 
©å
->
©å_«me
,

5554 
«me
,

5555 
©å
->
©å_avd
);

5557 i‡(
©å
->
©å_«me
 =
«me
)

5558 
πn
 = 
©å
;

5561  
πn
;

5562 
	}
}

5570 
	$add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
)

5572 
v¨_t
 *
¥ev
;

5575 i‡(
√wlv¨
 =
fûebích_shm
->
shm_v¨_loc_li°
) {

5577 
fûebích_shm
->
shm_v¨_loc_li°
 = 
√wlv¨
->
v¨_√xt
;

5580 
¥ev
 = 
fûebích_shm
->
shm_v¨_loc_li°
;Örev;

5581 
¥ev
 =Öªv->
v¨_√xt
) {

5582 i‡(
¥ev
->
v¨_√xt
 =
√wlv¨
)

5583 
¥ev
->
v¨_√xt
 = 
√wlv¨
->var_next;

5586 
√wlv¨
->
v¨_√xt
 = 
NULL
;

5589 
√wlv¨
->
v¨_√xt
 = *
lv¨_li°
;

5590 *
lv¨_li°
 = 
√wlv¨
;

5591 
	}
}

5601 
	$gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

5603 
©å_t
 *
©å
;

5604 
v¨_t
 *
‹ig_lv¨_li°
;

5607 
‹ig_lv¨_li°
 = 
Êow›
->
fo_lv¨_li°
;

5609 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

5610 
©å
 =áâr->
©å_√xt
) {

5612 i‡(
©å
->
©å_«me
 =
FSA_LVAR_ASSIGN
) {

5613 
v¨_t
 *
√wv¨
;

5615 i‡((
√wv¨
 = (
v¨_t
 *)
©å
->
©å_avd
Ë=
NULL
)

5618 
	`add_lv¨_to_li°
(
√wv¨
, &
Êow›
->
fo_lv¨_li°
);

5619 
	`v¨_upd©e_comp_lv¨s
(
√wv¨
, 
‹ig_lv¨_li°
, 
NULL
);

5622 
	}
}

5628 
li°_t
 *

5629 
	$Æloc_li°
()

5631 
li°_t
 *
li°
;

5633 i‡((
li°
 = 
	`mÆloc
( (
li°_t
))Ë=
NULL
) {

5634  (
NULL
);

5637 (Ë
	`mem£t
(
li°
, 0,  (
li°_t
));

5638  (
li°
);

5639 
	}
}

5646 
	$∑r£r_v¨_assign_cu°om
(*
«me
, 
cmd_t
 *
cmd
)

5648 
cv¨_t
 *
cv¨
;

5649 
©å_t
 *
©å
;

5650 *
ty≥
;

5651 *
∑ømëîs
;

5652 
ªt
;

5654 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
);

5655 i‡(
©å
)

5656 
ty≥
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5658 
	`fûebích_log
(
LOG_ERROR
, "define cvar:ÇoÅype specified");

5659 
	`fûebích_shutdown
(1);

5663 
cv¨
 = 
	`cv¨_Æloc
();

5664 i‡(!
cv¨
) {

5665 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate custom variable");

5666 
	`fûebích_shutdown
(1);

5671 (Ë
	`±hªad_muãx_öô
(&
cv¨
->
cv¨_lock
,

5672 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

5675 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

5676 
cv¨
->
mö
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5678 
cv¨
->
mö
 = 
DBL_MIN
;

5680 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MAX
)))

5681 
cv¨
->
max
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5683 
cv¨
->
max
 = 
DBL_MAX
;

5685 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

5686 
cv¨
->
round
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

5688 
cv¨
->
round
 = 0;

5690 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARAMETERS
);

5691 i‡(
©å
)

5692 
∑ømëîs
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

5694 
∑ømëîs
 = 
NULL
;

5696 
ªt
 = 
	`öô_cv¨_h™dÀ
(
cv¨
, 
ty≥
, 
∑ømëîs
);

5697 i‡(
ªt
) {

5698 
	`fûebích_log
(
LOG_FATAL
, "define cvar: failed for custom variable %s",

5699 
«me
);

5700 
	`fûebích_shutdown
(1);

5704 
	`v¨_assign_cu°om
(
«me
, 
cv¨
);

5705 
	}
}

	@parser_gram.h

33 #i‚de‡
YY_YY_PARSER_GRAM_H_INCLUDED


34 
	#YY_YY_PARSER_GRAM_H_INCLUDED


	)

36 #i‚de‡
YYDEBUG


37 
	#YYDEBUG
 0

	)

39 #i‡
YYDEBUG


40 
yydebug
;

44 #i‚de‡
YYTOKENTYPE


45 
	#YYTOKENTYPE


	)

46 
	eyytokíty≥


48 
	mFSC_LIST
 = 258,

49 
	mFSC_DEFINE
 = 259,

50 
	mFSC_QUIT
 = 260,

51 
	mFSC_DEBUG
 = 261,

52 
	mFSC_CREATE
 = 262,

53 
	mFSC_SLEEP
 = 263,

54 
	mFSC_SET
 = 264,

55 
	mFSC_SYSTEM
 = 265,

56 
	mFSC_EVENTGEN
 = 266,

57 
	mFSC_ECHO
 = 267,

58 
	mFSC_RUN
 = 268,

59 
	mFSC_PSRUN
 = 269,

60 
	mFSC_VERSION
 = 270,

61 
	mFSC_ENABLE
 = 271,

62 
	mFSC_DOMULTISYNC
 = 272,

63 
	mFSV_STRING
 = 273,

64 
	mFSV_VAL_POSINT
 = 274,

65 
	mFSV_VAL_NEGINT
 = 275,

66 
	mFSV_VAL_BOOLEAN
 = 276,

67 
	mFSV_VARIABLE
 = 277,

68 
	mFSV_WHITESTRING
 = 278,

69 
	mFSV_RANDUNI
 = 279,

70 
	mFSV_RANDTAB
 = 280,

71 
	mFSV_URAND
 = 281,

72 
	mFSV_RAND48
 = 282,

73 
	mFSE_FILE
 = 283,

74 
	mFSE_FILES
 = 284,

75 
	mFSE_FILESET
 = 285,

76 
	mFSE_PROC
 = 286,

77 
	mFSE_THREAD
 = 287,

78 
	mFSE_FLOWOP
 = 288,

79 
	mFSE_CVAR
 = 289,

80 
	mFSE_RAND
 = 290,

81 
	mFSE_MODE
 = 291,

82 
	mFSE_MULTI
 = 292,

83 
	mFSK_SEPLST
 = 293,

84 
	mFSK_OPENLST
 = 294,

85 
	mFSK_CLOSELST
 = 295,

86 
	mFSK_OPENPAR
 = 296,

87 
	mFSK_CLOSEPAR
 = 297,

88 
	mFSK_ASSIGN
 = 298,

89 
	mFSK_IN
 = 299,

90 
	mFSK_QUOTE
 = 300,

91 
	mFSA_SIZE
 = 301,

92 
	mFSA_PREALLOC
 = 302,

93 
	mFSA_PARALLOC
 = 303,

94 
	mFSA_PATH
 = 304,

95 
	mFSA_REUSE
 = 305,

96 
	mFSA_MEMSIZE
 = 306,

97 
	mFSA_RATE
 = 307,

98 
	mFSA_READONLY
 = 308,

99 
	mFSA_TRUSTTREE
 = 309,

100 
	mFSA_IOSIZE
 = 310,

101 
	mFSA_FILENAME
 = 311,

102 
	mFSA_WSS
 = 312,

103 
	mFSA_NAME
 = 313,

104 
	mFSA_RANDOM
 = 314,

105 
	mFSA_INSTANCES
 = 315,

106 
	mFSA_DSYNC
 = 316,

107 
	mFSA_TARGET
 = 317,

108 
	mFSA_ITERS
 = 318,

109 
	mFSA_NICE
 = 319,

110 
	mFSA_VALUE
 = 320,

111 
	mFSA_BLOCKING
 = 321,

112 
	mFSA_HIGHWATER
 = 322,

113 
	mFSA_DIRECTIO
 = 323,

114 
	mFSA_DIRWIDTH
 = 324,

115 
	mFSA_FD
 = 325,

116 
	mFSA_SRCFD
 = 326,

117 
	mFSA_ROTATEFD
 = 327,

118 
	mFSA_ENTRIES
 = 328,

119 
	mFSA_DIRDEPTHRV
 = 329,

120 
	mFSA_DIRGAMMA
 = 330,

121 
	mFSA_USEISM
 = 331,

122 
	mFSA_TYPE
 = 332,

123 
	mFSA_LEAFDIRS
 = 333,

124 
	mFSA_INDEXED
 = 334,

125 
	mFSA_RANDTABLE
 = 335,

126 
	mFSA_RANDSRC
 = 336,

127 
	mFSA_ROUND
 = 337,

128 
	mFSA_RANDSEED
 = 338,

129 
	mFSA_RANDGAMMA
 = 339,

130 
	mFSA_RANDMEAN
 = 340,

131 
	mFSA_MIN
 = 341,

132 
	mFSA_MAX
 = 342,

133 
	mFSA_MASTER
 = 343,

134 
	mFSA_CLIENT
 = 344,

135 
	mFSS_TYPE
 = 345,

136 
	mFSS_SEED
 = 346,

137 
	mFSS_GAMMA
 = 347,

138 
	mFSS_MEAN
 = 348,

139 
	mFSS_MIN
 = 349,

140 
	mFSS_SRC
 = 350,

141 
	mFSS_ROUND
 = 351,

142 
	mFSA_LVAR_ASSIGN
 = 352,

143 
	mFSA_ALLDONE
 = 353,

144 
	mFSA_FIRSTDONE
 = 354,

145 
	mFSA_TIMEOUT
 = 355,

146 
	mFSA_LATHIST
 = 356,

147 
	mFSA_NOREADAHEAD
 = 357,

148 
	mFSA_IOPRIO
 = 358,

149 
	mFSA_WRITEONLY
 = 359,

150 
	mFSA_PARAMETERS
 = 360,

151 
	mFSA_NOUSESTATS
 = 361

155 
	#FSC_LIST
 258

	)

156 
	#FSC_DEFINE
 259

	)

157 
	#FSC_QUIT
 260

	)

158 
	#FSC_DEBUG
 261

	)

159 
	#FSC_CREATE
 262

	)

160 
	#FSC_SLEEP
 263

	)

161 
	#FSC_SET
 264

	)

162 
	#FSC_SYSTEM
 265

	)

163 
	#FSC_EVENTGEN
 266

	)

164 
	#FSC_ECHO
 267

	)

165 
	#FSC_RUN
 268

	)

166 
	#FSC_PSRUN
 269

	)

167 
	#FSC_VERSION
 270

	)

168 
	#FSC_ENABLE
 271

	)

169 
	#FSC_DOMULTISYNC
 272

	)

170 
	#FSV_STRING
 273

	)

171 
	#FSV_VAL_POSINT
 274

	)

172 
	#FSV_VAL_NEGINT
 275

	)

173 
	#FSV_VAL_BOOLEAN
 276

	)

174 
	#FSV_VARIABLE
 277

	)

175 
	#FSV_WHITESTRING
 278

	)

176 
	#FSV_RANDUNI
 279

	)

177 
	#FSV_RANDTAB
 280

	)

178 
	#FSV_URAND
 281

	)

179 
	#FSV_RAND48
 282

	)

180 
	#FSE_FILE
 283

	)

181 
	#FSE_FILES
 284

	)

182 
	#FSE_FILESET
 285

	)

183 
	#FSE_PROC
 286

	)

184 
	#FSE_THREAD
 287

	)

185 
	#FSE_FLOWOP
 288

	)

186 
	#FSE_CVAR
 289

	)

187 
	#FSE_RAND
 290

	)

188 
	#FSE_MODE
 291

	)

189 
	#FSE_MULTI
 292

	)

190 
	#FSK_SEPLST
 293

	)

191 
	#FSK_OPENLST
 294

	)

192 
	#FSK_CLOSELST
 295

	)

193 
	#FSK_OPENPAR
 296

	)

194 
	#FSK_CLOSEPAR
 297

	)

195 
	#FSK_ASSIGN
 298

	)

196 
	#FSK_IN
 299

	)

197 
	#FSK_QUOTE
 300

	)

198 
	#FSA_SIZE
 301

	)

199 
	#FSA_PREALLOC
 302

	)

200 
	#FSA_PARALLOC
 303

	)

201 
	#FSA_PATH
 304

	)

202 
	#FSA_REUSE
 305

	)

203 
	#FSA_MEMSIZE
 306

	)

204 
	#FSA_RATE
 307

	)

205 
	#FSA_READONLY
 308

	)

206 
	#FSA_TRUSTTREE
 309

	)

207 
	#FSA_IOSIZE
 310

	)

208 
	#FSA_FILENAME
 311

	)

209 
	#FSA_WSS
 312

	)

210 
	#FSA_NAME
 313

	)

211 
	#FSA_RANDOM
 314

	)

212 
	#FSA_INSTANCES
 315

	)

213 
	#FSA_DSYNC
 316

	)

214 
	#FSA_TARGET
 317

	)

215 
	#FSA_ITERS
 318

	)

216 
	#FSA_NICE
 319

	)

217 
	#FSA_VALUE
 320

	)

218 
	#FSA_BLOCKING
 321

	)

219 
	#FSA_HIGHWATER
 322

	)

220 
	#FSA_DIRECTIO
 323

	)

221 
	#FSA_DIRWIDTH
 324

	)

222 
	#FSA_FD
 325

	)

223 
	#FSA_SRCFD
 326

	)

224 
	#FSA_ROTATEFD
 327

	)

225 
	#FSA_ENTRIES
 328

	)

226 
	#FSA_DIRDEPTHRV
 329

	)

227 
	#FSA_DIRGAMMA
 330

	)

228 
	#FSA_USEISM
 331

	)

229 
	#FSA_TYPE
 332

	)

230 
	#FSA_LEAFDIRS
 333

	)

231 
	#FSA_INDEXED
 334

	)

232 
	#FSA_RANDTABLE
 335

	)

233 
	#FSA_RANDSRC
 336

	)

234 
	#FSA_ROUND
 337

	)

235 
	#FSA_RANDSEED
 338

	)

236 
	#FSA_RANDGAMMA
 339

	)

237 
	#FSA_RANDMEAN
 340

	)

238 
	#FSA_MIN
 341

	)

239 
	#FSA_MAX
 342

	)

240 
	#FSA_MASTER
 343

	)

241 
	#FSA_CLIENT
 344

	)

242 
	#FSS_TYPE
 345

	)

243 
	#FSS_SEED
 346

	)

244 
	#FSS_GAMMA
 347

	)

245 
	#FSS_MEAN
 348

	)

246 
	#FSS_MIN
 349

	)

247 
	#FSS_SRC
 350

	)

248 
	#FSS_ROUND
 351

	)

249 
	#FSA_LVAR_ASSIGN
 352

	)

250 
	#FSA_ALLDONE
 353

	)

251 
	#FSA_FIRSTDONE
 354

	)

252 
	#FSA_TIMEOUT
 355

	)

253 
	#FSA_LATHIST
 356

	)

254 
	#FSA_NOREADAHEAD
 357

	)

255 
	#FSA_IOPRIO
 358

	)

256 
	#FSA_WRITEONLY
 359

	)

257 
	#FSA_PARAMETERS
 360

	)

258 
	#FSA_NOUSESTATS
 361

	)

261 #i‡! 
deföed
 
YYSTYPE
 && ! deföed 
YYSTYPE_IS_DECLARED


263 
	uYYSTYPE


267 
öt64_t
 
	mivÆ
;

268 
	mbvÆ
;

269 * 
	msvÆ
;

270 
avd_t
 
	mavd
;

271 
cmd_t
 *
	mcmd
;

272 
©å_t
 *
	m©å
;

273 
li°_t
 *
	mli°
;

274 
¥obèbít_t
 *
	m∫dtb
;

279 
YYSTYPE
 
	tYYSTYPE
;

280 
	#YYSTYPE_IS_TRIVIAL
 1

	)

281 
	#YYSTYPE_IS_DECLARED
 1

	)

285 
YYSTYPE
 
yylvÆ
;

287 
yy∑r£
 ();

	@parser_gram.y

31 
	~<°dlib.h
>

32 
	~<°dio.h
>

33 
	~<°rög.h
>

34 
	~<Êﬂt.h
>

35 
	~<limôs.h
>

36 
	~<sig«l.h
>

37 
	~<î∫o.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<loˇÀ.h
>

40 
	~<sys/ut¢ame.h
>

41 
	~<sys/°©vfs.h
>

42 #ifde‡
HAVE_STDINT_H


43 
	~<°döt.h
>

45 
	~<f˙é.h
>

46 
	~<sys/mm™.h
>

47 
	~<sys/waô.h
>

48 
	~"∑r£πy≥s.h
"

49 
	~"fûebích.h
"

50 
	~"utûs.h
"

51 
	~"°©s.h
"

52 
	~"v¨s.h
"

53 
	~"evítgí.h
"

54 
	~"a¶r.h
"

55 
	~"mu…i_˛õ¡_sync.h
"

58 
FILE
 *
yyö
;

59 
yydebug
;

60 
yyîr‹
(*
s
);

61 
yyÀx
();

64 *
	gexe˙ame
;

67 
cmd_t
 *
Æloc_cmd
();

68 
©å_t
 *
Æloc_©å
();

69 
©å_t
 *
Æloc_lv¨_©å
(
v¨_t
 *
v¨
);

70 
©å_t
 *
gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
);

71 
gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
);

72 
li°_t
 *
Æloc_li°
();

73 
¥obèbít_t
 *
Æloc_¥obèbít
();

74 
add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
);

77 
∑r£r_fûe£t_li°
(
cmd_t
 *);

78 
∑r£r_Êow›_li°
(
cmd_t
 *);

81 
∑r£r_¥oc_deföe
(
cmd_t
 *);

82 
∑r£r_thªad_deföe
(
cmd_t
 *, 
¥ocÊow_t
 *);

83 
∑r£r_Êow›_deföe
(
cmd_t
 *, 
thªadÊow_t
 *, 
Êow›_t
 **, );

84 
∑r£r_composôe_Êow›_deföe
(
cmd_t
 *);

85 
∑r£r_fûe_deföe
(
cmd_t
 *);

86 
∑r£r_fûe£t_deföe
(
cmd_t
 *);

87 
∑r£r_v¨_assign_øndom
(*, 
cmd_t
 *);

88 
∑r£r_v¨_assign_cu°om
(*, 
cmd_t
 *);

91 
∑r£r_fûe£t_¸óã
(
cmd_t
 *);

94 
∑r£r_run
(
cmd_t
 *
cmd
);

95 
∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
);

96 
∑r£r_p§un
(
cmd_t
 *
cmd
);

99 
∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
);

102 
∑r£r_echo
(
cmd_t
 *
cmd
);

103 
∑r£r_sy°em
(
cmd_t
 *
cmd
);

104 
∑r£r_evítgí
(
cmd_t
 *
cmd
);

105 
∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
);

106 
∑r£r_domu…isync
(
cmd_t
 *
cmd
);

107 
∑r£r_¶ìp
(
cmd_t
 *
cmd
);

108 
∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
);

109 
∑r£r_vîsi⁄
(
cmd_t
 *
cmd
);

110 
∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
);

115 
öt64_t
 
ivÆ
;

116 
bvÆ
;

117 * 
svÆ
;

118 
avd_t
 
avd
;

119 
cmd_t
 *
cmd
;

120 
©å_t
 *
©å
;

121 
li°_t
 *
li°
;

122 
¥obèbít_t
 *
∫dtb
;

125 %
°¨t
 
comm™ds


127 %
tokí
 
FSC_LIST
 
FSC_DEFINE
 
FSC_QUIT
 
FSC_DEBUG
 
FSC_CREATE
 
FSC_SLEEP
 
FSC_SET


128 %
tokí
 
FSC_SYSTEM
 
FSC_EVENTGEN
 
FSC_ECHO
 
FSC_RUN
 
FSC_PSRUN
 
FSC_VERSION
 
FSC_ENABLE


129 %
tokí
 
FSC_DOMULTISYNC


131 %
tokí
 
FSV_STRING
 
FSV_VAL_POSINT
 
FSV_VAL_NEGINT
 
FSV_VAL_BOOLEAN
 
FSV_VARIABLE


132 %
tokí
 
FSV_WHITESTRING
 
FSV_RANDUNI
 
FSV_RANDTAB
 
FSV_URAND
 
FSV_RAND48


134 %
tokí
 
FSE_FILE
 
FSE_FILES
 
FSE_FILESET
 
FSE_PROC
 
FSE_THREAD
 
FSE_FLOWOP
 
FSE_CVAR


135 %
tokí
 
FSE_RAND
 
FSE_MODE
 
FSE_MULTI


137 %
tokí
 
FSK_SEPLST
 
FSK_OPENLST
 
FSK_CLOSELST
 
FSK_OPENPAR
 
FSK_CLOSEPAR
 
FSK_ASSIGN


138 %
tokí
 
FSK_IN
 
FSK_QUOTE


140 %
tokí
 
FSA_SIZE
 
FSA_PREALLOC
 
FSA_PARALLOC
 
FSA_PATH
 
FSA_REUSE


141 %
tokí
 
FSA_MEMSIZE
 
FSA_RATE
 
FSA_READONLY
 
FSA_TRUSTTREE


142 %
tokí
 
FSA_IOSIZE
 
FSA_FILENAME
 
FSA_WSS
 
FSA_NAME
 
FSA_RANDOM
 
FSA_INSTANCES


143 %
tokí
 
FSA_DSYNC
 
FSA_TARGET
 
FSA_ITERS
 
FSA_NICE
 
FSA_VALUE
 
FSA_BLOCKING


144 %
tokí
 
FSA_HIGHWATER
 
FSA_DIRECTIO
 
FSA_DIRWIDTH
 
FSA_FD
 
FSA_SRCFD
 
FSA_ROTATEFD


145 %
tokí
 
FSA_ENTRIES
 
FSA_DIRDEPTHRV
 
FSA_DIRGAMMA
 
FSA_USEISM
 
FSA_TYPE


146 %
tokí
 
FSA_LEAFDIRS
 
FSA_INDEXED
 
FSA_RANDTABLE
 
FSA_RANDSRC
 
FSA_ROUND


147 %
tokí
 
FSA_RANDSEED
 
FSA_RANDGAMMA
 
FSA_RANDMEAN
 
FSA_MIN
 
FSA_MAX
 
FSA_MASTER


148 %
tokí
 
FSA_CLIENT
 
FSS_TYPE
 
FSS_SEED
 
FSS_GAMMA
 
FSS_MEAN
 
FSS_MIN
 
FSS_SRC
 
FSS_ROUND


149 %
tokí
 
FSA_LVAR_ASSIGN
 
FSA_ALLDONE
 
FSA_FIRSTDONE
 
FSA_TIMEOUT
 
FSA_LATHIST


150 %
tokí
 
FSA_NOREADAHEAD
 
FSA_IOPRIO
 
FSA_WRITEONLY
 
FSA_PARAMETERS
 
FSA_NOUSESTATS


152 %
ty≥
 <
ivÆ
> 
FSV_VAL_POSINT
 
FSV_VAL_NEGINT


153 %
ty≥
 <
bvÆ
> 
FSV_VAL_BOOLEAN


154 %
ty≥
 <
svÆ
> 
FSV_STRING
 
FSV_WHITESTRING
 
FSV_VARIABLE
 
FSK_ASSIGN


156 %
ty≥
 <
ivÆ
> 
FSC_DEFINE
 
FSC_SET
 
FSC_RUN
 
FSC_ENABLE
 
FSC_PSRUN


157 %
ty≥
 <
ivÆ
> 
FSC_DOMULTISYNC


158 %
ty≥
 <
ivÆ
> 
FSE_FILE
 
FSE_FILES
 
FSE_PROC
 
FSE_THREAD
 
FSC_VERSION


160 %
ty≥
 <
svÆ
> 
«me


162 %
ty≥
 <
cmd
> 
comm™d
 
run_comm™d
 
li°_comm™d
 
p§un_comm™d


163 %
ty≥
 <
cmd
> 
¥oc_deföe_comm™d
 
fûes_deföe_comm™d


164 %
ty≥
 <
cmd
> 
Êow›_deföe_comm™d
 
debug_comm™d
 
¸óã_comm™d


165 %
ty≥
 <
cmd
> 
¶ìp_comm™d
 
£t_comm™d


166 %
ty≥
 <
cmd
> 
sy°em_comm™d
 
Êow›_comm™d


167 %
ty≥
 <
cmd
> 
evítgí_comm™d
 
quô_comm™d
 
Êow›_li°
 
thªad_li°


168 %
ty≥
 <
cmd
> 
thªad
 
echo_comm™d


169 %
ty≥
 <
cmd
> 
vîsi⁄_comm™d
 
íabÀ_comm™d
 
mu…isync_comm™d


170 %
ty≥
 <
cmd
> 
£t_v¨übÀ
 
£t_øndom_v¨übÀ
 
£t_cu°om_v¨übÀ
 
£t_mode


172 %
ty≥
 <
©å
> 
fûe£t_©å_›
 
fûe£t_©å_›s
 
fûe_©å_›s
 
fûe_©å_›
 
p_©å_›
 
t_©å_›
 
p_©å_›s
 
t_©å_›s


173 %
ty≥
 <
©å
> 
fo_©å_›
 
fo_©å_›s
 
ev_©å_›
 
ev_©å_›s


174 %
ty≥
 <
©å
> 
øndv¨_©å_›
 
øndv¨_©å_›s
 
øndv¨_©å_typ›


175 %
ty≥
 <
©å
> 
øndv¨_©å_§c›
 
©å_vÆue


176 %
ty≥
 <
©å
> 
comp_lv¨_def
 
comp_©å_›
 
comp_©å_›s


177 %
ty≥
 <
©å
> 
íabÀ_mu…i_›s
 
íabÀ_mu…i_›
 
mu…isync_›


178 %
ty≥
 <
©å
> 
cv¨_©å_›s
 
cv¨_©å_›


179 %
ty≥
 <
li°
> 
whôev¨_°rög
 
whôev¨_°rög_li°


180 %
ty≥
 <
ivÆ
> 
©ås_deföe_thªad
 
©ås_Êow›


181 %
ty≥
 <
ivÆ
> 
©ås_deföe_fûe£t
 
©ås_deföe_fûe
 
©ås_deföe_¥oc
 
©ås_evítgí
 
©ås_deföe_comp


182 %
ty≥
 <
ivÆ
> 
øndv¨_©å_«me
 
FSA_TYPE
 
øndty≥_«me


183 %
ty≥
 <
ivÆ
> 
ønd§c_«me
 
FSA_RANDSRC
 
em_©å_«me


184 %
ty≥
 <
ivÆ
> 
FSS_TYPE
 
FSS_SEED
 
FSS_GAMMA
 
FSS_MEAN
 
FSS_MIN
 
FSS_SRC


185 %
ty≥
 <
ivÆ
> 
cv¨_©å_«me


187 %
ty≥
 <
∫dtb
> 
¥obèbíåy_li°
 
¥obèbíåy


188 %
ty≥
 <
avd
> 
v¨_öt_vÆ


189 %% /* 
	$yy∑r£
 */ 
	`yyÀx
()

191 
comm™ds
: comm™d†
comm™d


193 i‡(
$2
->
cmd
)

194 
$2
->
	`cmd
($2);

196 
	`‰ì
(
$2
);

198 | 
comm™ds
 
îr‹


200 
YYABORT
;

204 
comm™d
:

205 
¥oc_deföe_comm™d


206 | 
fûes_deföe_comm™d


207 | 
Êow›_deföe_comm™d


208 | 
debug_comm™d


209 | 
evítgí_comm™d


210 | 
¸óã_comm™d


211 | 
echo_comm™d


212 | 
li°_comm™d


213 | 
run_comm™d


214 | 
p§un_comm™d


215 | 
£t_comm™d


216 | 
quô_comm™d


217 | 
¶ìp_comm™d


218 | 
sy°em_comm™d


219 | 
vîsi⁄_comm™d


220 | 
íabÀ_comm™d


221 | 
mu…isync_comm™d


223 
evítgí_comm™d
: 
FSC_EVENTGEN


225 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

226 
YYERROR
;

227 
$$
->
cmd
 = &
∑r£r_evítgí
;

229 | 
evítgí_comm™d
 
ev_©å_›s


231 
$1
->
cmd_©å_li°
 = 
$2
;

234 
sy°em_comm™d
: 
FSC_SYSTEM
 
whôev¨_°rög_li°


236 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

237 
YYERROR
;

239 
$$
->
cmd_∑øm_li°
 = 
$2
;

240 
$$
->
cmd
 = 
∑r£r_sy°em
;

243 
echo_comm™d
: 
FSC_ECHO
 
whôev¨_°rög_li°


245 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

246 
YYERROR
;

248 
$$
->
cmd_∑øm_li°
 = 
$2
;

249 
$$
->
cmd
 = 
∑r£r_echo
;

252 
vîsi⁄_comm™d
: 
FSC_VERSION


254 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

255 
YYERROR
;

256 
$$
->
cmd
 = 
∑r£r_vîsi⁄
;

259 
íabÀ_comm™d
: 
FSC_ENABLE
 
FSE_MULTI
 
íabÀ_mu…i_›s


262 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

263 
YYERROR
;

265 
$$
->
cmd
 = 
∑r£r_íabÀ_mc
;

266 
$$
->
cmd_©å_li°
 = 
$3
;

268 | 
FSC_ENABLE
 
FSA_LATHIST


270 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

271 
YYERROR
;

273 
$$
->
cmd
 = 
∑r£r_íabÀ_œthi°
;

276 
mu…isync_comm™d
: 
FSC_DOMULTISYNC
 
mu…isync_›


278 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

279 
YYERROR
;

281 
$$
->
cmd
 = 
∑r£r_domu…isync
;

282 
$$
->
cmd_©å_li°
 = 
$2
;

285 
whôev¨_°rög
: 
FSK_QUOTE
 
FSV_VARIABLE


287 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

288 
YYERROR
;

290 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

292 | 
FSK_QUOTE
 
FSV_WHITESTRING


294 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

295 
YYERROR
;

297 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

300 
whôev¨_°rög_li°
: 
whôev¨_°rög
 
FSV_WHITESTRING


302 
li°_t
 *
li°
 = 
NULL
;

303 
li°_t
 *
li°_íd
 = 
NULL
;

306 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

307 
YYERROR
;

309 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

312 
li°
 = 
$1
;Üi° !
NULL
;

313 
li°
 =Üi°->
li°_√xt
)

314 
li°_íd
 = 
li°
;

315 
li°_íd
->
li°_√xt
 = 
$$
;

316 
$$
 = 
$1
;

318 }| 
whôev¨_°rög
 
FSV_VARIABLE


320 
li°_t
 *
li°
 = 
NULL
;

321 
li°_t
 *
li°_íd
 = 
NULL
;

324 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

325 
YYERROR
;

327 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

330 
li°
 = 
$1
;Üi° !
NULL
;

331 
li°
 =Üi°->
li°_√xt
)

332 
li°_íd
 = 
li°
;

333 
li°_íd
->
li°_√xt
 = 
$$
;

334 
$$
 = 
$1
;

335 }| 
whôev¨_°rög_li°
 
FSV_WHITESTRING


337 
li°_t
 *
li°
 = 
NULL
;

338 
li°_t
 *
li°_íd
 = 
NULL
;

341 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

342 
YYERROR
;

344 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

347 
li°
 = 
$1
;Üi° !
NULL
;

348 
li°
 =Üi°->
li°_√xt
)

349 
li°_íd
 = 
li°
;

350 
li°_íd
->
li°_√xt
 = 
$$
;

351 
$$
 = 
$1
;

353 }| 
whôev¨_°rög_li°
 
FSV_VARIABLE


355 
li°_t
 *
li°
 = 
NULL
;

356 
li°_t
 *
li°_íd
 = 
NULL
;

359 i‡((
$$
 = 
	`Æloc_li°
()Ë=
NULL
)

360 
YYERROR
;

362 
$$
->
li°_°rög
 = 
	`avd_°r_Æloc
(
$2
);

365 
li°
 = 
$1
;Üi° !
NULL
;

366 
li°
 =Üi°->
li°_√xt
)

367 
li°_íd
 = 
li°
;

368 
li°_íd
->
li°_√xt
 = 
$$
;

369 
$$
 = 
$1
;

370 }| 
whôev¨_°rög_li°
 
FSK_QUOTE


372 
$$
 = 
$1
;

373 }| 
whôev¨_°rög
 
FSK_QUOTE


375 
$$
 = 
$1
;

378 
li°_comm™d
: 
FSC_LIST
 
FSE_FILESET


380 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

381 
YYERROR
;

382 
$$
->
cmd
 = &
∑r£r_fûe£t_li°
;

384 | 
FSC_LIST
 
FSE_FLOWOP


386 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

387 
YYERROR
;

388 
$$
->
cmd
 = &
∑r£r_Êow›_li°
;

391 
debug_comm™d
: 
FSC_DEBUG
 
FSV_VAL_POSINT


393 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

394 
YYERROR
;

395 
$$
->
cmd
 = 
NULL
;

396 
fûebích_shm
->
shm_debug_Àvñ
 = 
$2
;

397 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 10) {

398 
	`fûebích_log
(
LOG_ERROR
, "DebugÜevel set out ofÑange."

400 
fûebích_shm
->
shm_debug_Àvñ
 = 10;

402 i‡(
fûebích_shm
->
shm_debug_Àvñ
 > 9)

403 
yydebug
 = 1;

406 
£t_comm™d
: 
£t_v¨übÀ
 | 
£t_øndom_v¨übÀ
 | 
£t_cu°om_v¨übÀ
 | 
£t_mode
;

408 
£t_v¨übÀ
: 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_VAL_POSINT


410 
$$
 = 
	`Æloc_cmd
();

411 i‡(!
$$
)

412 
YYERROR
;

414 
	`v¨_assign_öãgî
(
$2
, 
$4
);

416 
$$
->
cmd
 = 
NULL
;

419 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_VAL_BOOLEAN


421 
$$
 = 
	`Æloc_cmd
();

422 i‡(!
$$
)

423 
YYERROR
;

425 
	`v¨_assign_boﬁón
(
$2
, 
$4
);

427 
$$
->
cmd
 = 
NULL
;

429 | 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSK_QUOTE
 
FSV_WHITESTRING
 FSK_QUOTE

431 
$$
 = 
	`Æloc_cmd
();

432 i‡(!
$$
)

433 
YYERROR
;

435 
	`v¨_assign_°rög
(
$2
, 
$5
);

437 
$$
->
cmd
 = 
NULL
;

439 | 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_STRING


441 
$$
 = 
	`Æloc_cmd
();

442 i‡(!
$$
)

443 
YYERROR
;

445 
	`v¨_assign_°rög
(
$2
, 
$4
);

447 
$$
->
cmd
 = 
NULL
;

450 
£t_øndom_v¨übÀ
: 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSE_RAND
 
FSK_OPENPAR
 
øndv¨_©å_›s
 
FSK_CLOSEPAR


452 
$$
 = 
	`Æloc_cmd
();

453 i‡(!
$$
)

454 
YYERROR
;

456 
$$
->
cmd_©å_li°
 = 
$6
;

457 
$$
->
cmd
 = 
NULL
;

459 
	`∑r£r_v¨_assign_øndom
(
$2
, 
$$
);

462 
£t_cu°om_v¨übÀ
: 
FSC_SET
 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSE_CVAR
 
FSK_OPENPAR
 
cv¨_©å_›s
 
FSK_CLOSEPAR


464 
$$
 = 
	`Æloc_cmd
();

465 i‡(!
$$
)

466 
YYERROR
;

468 
$$
->
cmd_©å_li°
 = 
$6
;

469 
$$
->
cmd
 = 
NULL
;

471 
	`∑r£r_v¨_assign_cu°om
(
$2
, 
$$
);

474 
£t_mode
: 
FSC_SET
 
FSE_MODE
 
FSC_QUIT
 
FSA_TIMEOUT


476 
$$
 = 
	`Æloc_cmd
();

477 i‡(!
$$
)

478 
YYERROR
;

480 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_TIMEOUT
;

482 
$$
->
cmd
 = 
NULL
;

484 | 
FSC_SET
 
FSE_MODE
 
FSC_QUIT
 
FSA_ALLDONE


486 
$$
 = 
	`Æloc_cmd
();

487 i‡(!
$$
)

488 
YYERROR
;

490 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_QALLDONE
;

492 
$$
->
cmd
 = 
NULL
;

494 | 
FSC_SET
 
FSE_MODE
 
FSC_QUIT
 
FSA_FIRSTDONE


496 
$$
 = 
	`Æloc_cmd
();

497 i‡(!
$$
)

498 
YYERROR
;

500 
fûebích_shm
->
shm_rmode
 = 
FILEBENCH_MODE_Q1STDONE
;

502 
$$
->
cmd
 = 
NULL
;

504 | 
FSC_SET
 
FSE_MODE
 
FSA_NOUSESTATS


506 
$$
 = 
	`Æloc_cmd
();

507 i‡(!
$$
)

508 
YYERROR
;

510 
	`fûebích_log
(
LOG_INFO
, "Disabling CPU usage statistics");

511 
fûebích_shm
->
shm_mmode
 |
FILEBENCH_MODE_NOUSAGE
;

513 
$$
->
cmd
 = 
NULL
;

516 
quô_comm™d
: 
FSC_QUIT


518 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

519 
YYERROR
;

520 
$$
->
cmd
 = 
∑r£r_fûebích_shutdown
;

523 
Êow›_li°
: 
Êow›_comm™d


525 
$$
 = 
$1
;

526 }| 
Êow›_li°
 
Êow›_comm™d


528 
cmd_t
 *
li°
 = 
NULL
;

529 
cmd_t
 *
li°_íd
 = 
NULL
;

532 
li°
 = 
$1
;Üi° !
NULL
;

533 
li°
 =Üi°->
cmd_√xt
)

534 
li°_íd
 = 
li°
;

536 
li°_íd
->
cmd_√xt
 = 
$2
;

538 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

539 "Êow›_li°áddög cmd %zxÅÿli° %zx", 
$2
, 
$1
);

541 
$$
 = 
$1
;

544 
thªad
: 
FSE_THREAD
 
t_©å_›s
 
FSK_OPENLST
 
Êow›_li°
 
FSK_CLOSELST


550 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

551 
YYERROR
;

552 
$$
->
cmd_li°
 = 
$4
;

553 
$$
->
cmd_©å_li°
 = 
$2
;

556 
thªad_li°
: 
thªad


558 
$$
 = 
$1
;

559 }| 
thªad_li°
 
thªad


561 
cmd_t
 *
li°
 = 
NULL
;

562 
cmd_t
 *
li°_íd
 = 
NULL
;

565 
li°
 = 
$1
;Üi° !
NULL
;

566 
li°
 =Üi°->
cmd_√xt
)

567 
li°_íd
 = 
li°
;

569 
li°_íd
->
cmd_√xt
 = 
$2
;

571 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

572 "thªad_li°áddög cmd %zxÅÿli° %zx", 
$2
, 
$1
);

574 
$$
 = 
$1
;

577 
¥oc_deföe_comm™d
: 
FSC_DEFINE
 
FSE_PROC
 
p_©å_›s
 
FSK_OPENLST
 
thªad_li°
 
FSK_CLOSELST


579 
$$
 = 
	`Æloc_cmd
();

580 i‡(!
$$
)

581 
YYERROR
;

582 
$$
->
cmd
 = &
∑r£r_¥oc_deföe
;

583 
$$
->
cmd_li°
 = 
$5
;

584 
$$
->
cmd_©å_li°
 = 
$3
;

587 
fûes_deföe_comm™d
: 
FSC_DEFINE
 
FSE_FILE
 
fûe_©å_›s


589 
$$
 = 
	`Æloc_cmd
();

590 i‡(!
$$
)

591 
YYERROR
;

593 
$$
->
cmd
 = &
∑r£r_fûe_deföe
;

594 
$$
->
cmd_©å_li°
 = 
$3
;

595 }| 
FSC_DEFINE
 
FSE_FILESET
 
fûe£t_©å_›s


597 
$$
 = 
	`Æloc_cmd
();

598 i‡(!
$$
)

599 
YYERROR
;

601 
$$
->
cmd
 = &
∑r£r_fûe£t_deföe
;

602 
$$
->
cmd_©å_li°
 = 
$3
;

605 
¸óã_comm™d
: 
FSC_CREATE
 
FSE_FILES


607 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

608 
YYERROR
;

610 
$$
->
cmd
 = &
∑r£r_fûe£t_¸óã
;

613 
¶ìp_comm™d
: 
FSC_SLEEP
 
FSV_VAL_POSINT


615 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

616 
YYERROR
;

617 
$$
->
cmd
 = 
∑r£r_¶ìp
;

618 
$$
->
cmd_qty
 = 
$2
;

620 | 
FSC_SLEEP
 
FSV_VARIABLE


622 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

623 
YYERROR
;

624 
$$
->
cmd
 = 
∑r£r_¶ìp_v¨übÀ
;

625 
$$
->
cmd_tgt1
 = 
	`fb_°øŒoc
(
$2
);

628 
run_comm™d
: 
FSC_RUN
 
FSV_VAL_POSINT


630 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

631 
YYERROR
;

632 
$$
->
cmd
 = 
∑r£r_run
;

633 
$$
->
cmd_qty
 = 
$2
;

635 | 
FSC_RUN
 
FSV_VARIABLE


637 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

638 
YYERROR
;

639 
$$
->
cmd
 = 
∑r£r_run_v¨übÀ
;

640 
$$
->
cmd_tgt1
 = 
	`fb_°øŒoc
(
$2
);

642 | 
FSC_RUN


644 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

645 
YYERROR
;

646 
$$
->
cmd
 = 
∑r£r_run
;

647 
$$
->
cmd_qty
 = 0;

650 
p§un_comm™d
: 
FSC_PSRUN


652 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

653 
YYERROR
;

654 
$$
->
cmd
 = 
∑r£r_p§un
;

655 
$$
->
cmd_qty1
 = 0;

656 
$$
->
cmd_qty
 = 0;

658 | 
FSC_PSRUN
 
FSV_VAL_NEGINT


660 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

661 
YYERROR
;

662 
$$
->
cmd
 = 
∑r£r_p§un
;

663 
$$
->
cmd_qty1
 = 
$2
;

664 
$$
->
cmd_qty
 = 0;

667 | 
FSC_PSRUN
 
FSV_VAL_POSINT


669 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

670 
YYERROR
;

671 
$$
->
cmd
 = 
∑r£r_p§un
;

672 
$$
->
cmd_qty1
 = 
$2
;

673 
$$
->
cmd_qty
 = 0;

676 | 
FSC_PSRUN
 
FSV_VAL_NEGINT
 
FSV_VAL_POSINT


678 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

679 
YYERROR
;

680 
$$
->
cmd
 = 
∑r£r_p§un
;

681 
$$
->
cmd_qty1
 = 
$2
;

682 
$$
->
cmd_qty
 = 
$3
;

684 | 
FSC_PSRUN
 
FSV_VAL_POSINT
 FSV_VAL_POSINT

686 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

687 
YYERROR
;

688 
$$
->
cmd
 = 
∑r£r_p§un
;

689 
$$
->
cmd_qty1
 = 
$2
;

690 
$$
->
cmd_qty
 = 
$3
;

693 
Êow›_comm™d
: 
FSE_FLOWOP
 
«me


695 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

696 
YYERROR
;

697 
$$
->
cmd_«me
 = 
	`fb_°øŒoc
(
$2
);

699 | 
Êow›_comm™d
 
fo_©å_›s


701 
$1
->
cmd_©å_li°
 = 
$2
;

704 
«me
: 
FSV_STRING
;

706 
fûe_©å_›s
: 
fûe_©å_›


708 
$$
 = 
$1
;

710 | 
fûe_©å_›s
 
FSK_SEPLST
 
fûe_©å_›


712 
©å_t
 *
©å
 = 
NULL
;

713 
©å_t
 *
li°_íd
 = 
NULL
;

715 
©å
 = 
$1
;áâr;áâ∏©å->
©å_√xt
)

716 
li°_íd
 = 
©å
;

718 
li°_íd
->
©å_√xt
 = 
$3
;

720 
$$
 = 
$1
;

723 
fûe£t_©å_›s
: 
fûe£t_©å_›


725 
$$
 = 
$1
;

727 | 
fûe£t_©å_›s
 
FSK_SEPLST
 
fûe£t_©å_›


729 
©å_t
 *
©å
 = 
NULL
;

730 
©å_t
 *
li°_íd
 = 
NULL
;

732 
©å
 = 
$1
;áâr;áâ∏©å->
©å_√xt
)

733 
li°_íd
 = 
©å
;

735 
li°_íd
->
©å_√xt
 = 
$3
;

737 
$$
 = 
$1
;

740 
fûe_©å_›
: 
©ås_deföe_fûe
 
FSK_ASSIGN
 
©å_vÆue


742 
$$
 = 
$3
;

743 
$$
->
©å_«me
 = 
$1
;

745 | 
©ås_deföe_fûe


747 
$$
 = 
	`Æloc_©å
();

748 i‡(!
$$
)

749 
YYERROR
;

751 
$$
->
©å_«me
 = 
$1
;

752 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

755 
fûe£t_©å_›
: 
©ås_deföe_fûe£t
 
FSK_ASSIGN
 
©å_vÆue


757 
$$
 = 
$3
;

758 
$$
->
©å_«me
 = 
$1
;

760 | 
©ås_deföe_fûe£t


762 
$$
 = 
	`Æloc_©å
();

763 i‡(!
$$
)

764 
YYERROR
;

766 
$$
->
©å_«me
 = 
$1
;

767 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

771 
øndv¨_©å_›s
: 
øndv¨_©å_›


773 
$$
 = 
$1
;

775 | 
øndv¨_©å_›s
 
FSK_SEPLST
 
øndv¨_©å_›


777 
©å_t
 *
©å
 = 
NULL
;

778 
©å_t
 *
li°_íd
 = 
NULL
;

780 
©å
 = 
$1
;áâ∏!
NULL
;

781 
©å
 =áâr->
©å_√xt
)

782 
li°_íd
 = 
©å
;

784 
li°_íd
->
©å_√xt
 = 
$3
;

786 
$$
 = 
$1
;

788 | 
øndv¨_©å_›s
 
FSK_SEPLST
 
FSA_RANDTABLE
 
FSK_ASSIGN
 
FSK_OPENLST
 
¥obèbíåy_li°
 
FSK_CLOSELST


790 
©å_t
 *
©å
 = 
NULL
;

791 
©å_t
 *
li°_íd
 = 
NULL
;

793 
©å
 = 
$1
;áâ∏!
NULL
;

794 
©å
 =áâr->
©å_√xt
)

795 
li°_íd
 = 
©å
;

798 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

799 
YYERROR
;

801 
©å
->
©å_«me
 = 
FSA_RANDTABLE
;

802 
©å
->
©å_obj
 = (*)
$6
;

803 
li°_íd
->
©å_√xt
 = 
©å
;

804 
$$
 = 
$1
;

807 
øndv¨_©å_›
: 
øndv¨_©å_«me
 
FSK_ASSIGN
 
©å_vÆue


809 
$$
 = 
$3
;

810 
$$
->
©å_«me
 = 
$1
;

812 | 
øndv¨_©å_«me


814 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

815 
YYERROR
;

816 
$$
->
©å_«me
 = 
$1
;

817 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

819 | 
FSA_TYPE
 
FSK_ASSIGN
 
øndv¨_©å_typ›


821 
$$
 = 
$3
;

822 
$$
->
©å_«me
 = 
FSA_TYPE
;

824 | 
FSA_RANDSRC
 
FSK_ASSIGN
 
øndv¨_©å_§c›


826 
$$
 = 
$3
;

827 
$$
->
©å_«me
 = 
FSA_RANDSRC
;

830 
¥obèbíåy
: 
FSK_OPENLST
 
v¨_öt_vÆ
 
FSK_SEPLST
 v¨_öt_vÆ FSK_SEPLST v¨_öt_vÆ 
FSK_CLOSELST


832 i‡((
$$
 = 
	`Æloc_¥obèbít
()Ë=
NULL
)

833 
YYERROR
;

834 
$$
->
±e_≥r˚¡
 = 
$2
;

835 
$$
->
±e_£gmö
 = 
$4
;

836 
$$
->
±e_£gmax
 = 
$6
;

840 
¥obèbíåy_li°
: 
¥obèbíåy


842 
$$
 = 
$1
;

844 | 
¥obèbíåy_li°
 
FSK_SEPLST
 
¥obèbíåy


846 
¥obèbít_t
 *
±e
 = 
NULL
;

847 
¥obèbít_t
 *
±ñi°_íd
 = 
NULL
;

849 
±e
 = 
$1
;Öã !
NULL
;

850 
±e
 =Öã->
±e_√xt
)

851 
±ñi°_íd
 = 
±e
;

853 
±ñi°_íd
->
±e_√xt
 = 
$3
;

855 
$$
 = 
$1
;

858 
p_©å_›s
: 
p_©å_›


860 
$$
 = 
$1
;

862 | 
p_©å_›s
 
FSK_SEPLST
 
p_©å_›


864 
©å_t
 *
©å
 = 
NULL
;

865 
©å_t
 *
li°_íd
 = 
NULL
;

867 
©å
 = 
$1
;áâ∏!
NULL
;

868 
©å
 =áâr->
©å_√xt
)

869 
li°_íd
 = 
©å
;

871 
li°_íd
->
©å_√xt
 = 
$3
;

873 
$$
 = 
$1
;

876 
p_©å_›
: 
©ås_deföe_¥oc
 
FSK_ASSIGN
 
©å_vÆue


878 
$$
 = 
$3
;

879 
$$
->
©å_«me
 = 
$1
;

881 | 
©ås_deföe_¥oc


883 
$$
 = 
	`Æloc_©å
();

884 i‡(!
$$
)

885 
YYERROR
;

886 
$$
->
©å_«me
 = 
$1
;

887 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

891 
t_©å_›s
: 
t_©å_›


893 
$$
 = 
$1
;

895 | 
t_©å_›s
 
FSK_SEPLST
 
t_©å_›


897 
©å_t
 *
©å
 = 
NULL
;

898 
©å_t
 *
li°_íd
 = 
NULL
;

900 
©å
 = 
$1
;áâ∏!
NULL
;

901 
©å
 =áâr->
©å_√xt
)

902 
li°_íd
 = 
©å
;

904 
li°_íd
->
©å_√xt
 = 
$3
;

906 
$$
 = 
$1
;

909 
t_©å_›
: 
©ås_deföe_thªad
 
FSK_ASSIGN
 
©å_vÆue


911 
$$
 = 
$3
;

912 
$$
->
©å_«me
 = 
$1
;

914 | 
©ås_deföe_thªad


916 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

917 
YYERROR
;

918 
$$
->
©å_«me
 = 
$1
;

919 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

923 
fo_©å_›s
: 
fo_©å_›


925 
$$
 = 
$1
;

927 | 
fo_©å_›s
 
FSK_SEPLST
 
fo_©å_›


929 
©å_t
 *
©å
 = 
NULL
;

930 
©å_t
 *
li°_íd
 = 
NULL
;

932 
©å
 = 
$1
;áâ∏!
NULL
;

933 
©å
 =áâr->
©å_√xt
)

934 
li°_íd
 = 
©å
;

936 
li°_íd
->
©å_√xt
 = 
$3
;

938 
$$
 = 
$1
;

940 | 
fo_©å_›s
 
FSK_SEPLST
 
comp_lv¨_def


942 
©å_t
 *
©å
 = 
NULL
;

943 
©å_t
 *
li°_íd
 = 
NULL
;

945 
©å
 = 
$1
;áâ∏!
NULL
;

946 
©å
 =áâr->
©å_√xt
)

947 
li°_íd
 = 
©å
;

949 
li°_íd
->
©å_√xt
 = 
$3
;

951 
$$
 = 
$1
;

954 
fo_©å_›
: 
©ås_Êow›
 
FSK_ASSIGN
 
©å_vÆue


956 
$$
 = 
$3
;

957 
$$
->
©å_«me
 = 
$1
;

959 | 
©ås_Êow›


961 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

962 
YYERROR
;

963 
$$
->
©å_«me
 = 
$1
;

964 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

968 
ev_©å_›s
: 
ev_©å_›


970 
$$
 = 
$1
;

972 | 
ev_©å_›s
 
FSK_SEPLST
 
ev_©å_›


974 
©å_t
 *
©å
 = 
NULL
;

975 
©å_t
 *
li°_íd
 = 
NULL
;

977 
©å
 = 
$1
;áâ∏!
NULL
;

978 
©å
 =áâr->
©å_√xt
)

979 
li°_íd
 = 
©å
;

981 
li°_íd
->
©å_√xt
 = 
$3
;

983 
$$
 = 
$1
;

986 
ev_©å_›
: 
©ås_evítgí
 
FSK_ASSIGN
 
©å_vÆue


988 
$$
 = 
$3
;

989 
$$
->
©å_«me
 = 
$1
;

991 | 
©ås_evítgí


993 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

994 
YYERROR
;

995 
$$
->
©å_«me
 = 
$1
;

996 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
TRUE
);

1000 
íabÀ_mu…i_›s
: 
íabÀ_mu…i_›


1002 
$$
 = 
$1
;

1004 | 
íabÀ_mu…i_›s
 
FSK_SEPLST
 
íabÀ_mu…i_›


1006 
©å_t
 *
©å
 = 
NULL
;

1007 
©å_t
 *
li°_íd
 = 
NULL
;

1009 
©å
 = 
$1
;áâ∏!
NULL
;

1010 
©å
 =áâr->
©å_√xt
)

1011 
li°_íd
 = 
©å
;

1013 
li°_íd
->
©å_√xt
 = 
$3
;

1015 
$$
 = 
$1
;

1018 
íabÀ_mu…i_›
: 
em_©å_«me
 
FSK_ASSIGN
 
©å_vÆue


1020 
$$
 = 
$3
;

1021 
$$
->
©å_«me
 = 
$1
;

1024 
mu…isync_›
: 
FSA_VALUE
 
FSK_ASSIGN
 
©å_vÆue


1026 
$$
 = 
$3
;

1027 
$$
->
©å_«me
 = 
FSA_VALUE
;

1033 
©ås_deföe_¥oc
:

1034 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1035 | 
FSA_INSTANCES
 { 
$$
 = FSA_INSTANCES;}

1036 | 
FSA_NICE
 { 
$$
 = FSA_NICE;}

1038 
©ås_deföe_fûe
:

1039 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1040 | 
FSA_PATH
 { 
$$
 = FSA_PATH;}

1041 | 
FSA_SIZE
 { 
$$
 = FSA_SIZE;}

1042 | 
FSA_PREALLOC
 { 
$$
 = FSA_PREALLOC;}

1043 | 
FSA_PARALLOC
 { 
$$
 = FSA_PARALLOC;}

1044 | 
FSA_REUSE
 { 
$$
 = FSA_REUSE;}

1045 | 
FSA_TRUSTTREE
 { 
$$
 = FSA_TRUSTTREE;}

1046 | 
FSA_READONLY
 { 
$$
 = FSA_READONLY;}

1047 | 
FSA_WRITEONLY
 { 
$$
 = FSA_WRITEONLY;}

1049 
©ås_deföe_fûe£t
:

1050 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1051 | 
FSA_PATH
 { 
$$
 = FSA_PATH;}

1052 | 
FSA_ENTRIES
 { 
$$
 = FSA_ENTRIES;}

1053 | 
FSA_SIZE
 { 
$$
 = FSA_SIZE;}

1054 | 
FSA_PREALLOC
 { 
$$
 = FSA_PREALLOC;}

1055 | 
FSA_PARALLOC
 { 
$$
 = FSA_PARALLOC;}

1056 | 
FSA_REUSE
 { 
$$
 = FSA_REUSE;}

1057 | 
FSA_TRUSTTREE
 { 
$$
 = FSA_TRUSTTREE;}

1058 | 
FSA_READONLY
 { 
$$
 = FSA_READONLY;}

1059 | 
FSA_WRITEONLY
 { 
$$
 = FSA_WRITEONLY;}

1060 | 
FSA_DIRWIDTH
 { 
$$
 = FSA_DIRWIDTH;}

1061 | 
FSA_DIRDEPTHRV
 { 
$$
 = FSA_DIRDEPTHRV;}

1062 | 
FSA_DIRGAMMA
 { 
$$
 = FSA_DIRGAMMA;}

1063 | 
FSA_LEAFDIRS
 { 
$$
 = FSA_LEAFDIRS;};

1065 
øndv¨_©å_«me
:

1066 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1067 | 
FSA_RANDSEED
 { 
$$
 = FSA_RANDSEED;}

1068 | 
FSA_RANDGAMMA
 { 
$$
 = FSA_RANDGAMMA;}

1069 | 
FSA_RANDMEAN
 { 
$$
 = FSA_RANDMEAN;}

1070 | 
FSA_MIN
 { 
$$
 = FSA_MIN;}

1071 | 
FSA_ROUND
 { 
$$
 = FSA_ROUND;};

1073 
øndv¨_©å_typ›
: 
øndty≥_«me


1075 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

1076 
YYERROR
;

1077 
$$
->
©å_avd
 = 
	`avd_öt_Æloc
(
$1
);

1080 
øndty≥_«me
:

1081 
FSV_RANDUNI
 { 
$$
 = FSV_RANDUNI;}

1082 | 
FSV_RANDTAB
 { 
$$
 = FSV_RANDTAB;}

1083 | 
FSA_RANDGAMMA
 { 
$$
 = FSA_RANDGAMMA;};

1085 
øndv¨_©å_§c›
: 
ønd§c_«me


1087 i‡((
$$
 = 
	`Æloc_©å
()Ë=
NULL
)

1088 
YYERROR
;

1089 
$$
->
©å_avd
 = 
	`avd_öt_Æloc
(
$1
);

1092 
ønd§c_«me
:

1093 
FSV_URAND
 { 
$$
 = FSV_URAND;}

1094 | 
FSV_RAND48
 { 
$$
 = FSV_RAND48;};

1096 
cv¨_©å_«me
:

1097 
FSA_TYPE
 { 
$$
 = FSA_TYPE;}

1098 | 
FSA_PARAMETERS
 { 
$$
 = FSA_PARAMETERS;}

1099 | 
FSA_MIN
 { 
$$
 = FSA_MIN;}

1100 | 
FSA_MAX
 { 
$$
 = FSA_MAX;}

1101 | 
FSA_ROUND
 { 
$$
 = FSA_ROUND;};

1103 
©ås_deföe_thªad
:

1104 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1105 | 
FSA_MEMSIZE
 { 
$$
 = FSA_MEMSIZE;}

1106 | 
FSA_USEISM
 { 
$$
 = FSA_USEISM;}

1107 | 
FSA_INSTANCES
 { 
$$
 = FSA_INSTANCES;}

1108 | 
FSA_IOPRIO
 { 
$$
 = FSA_IOPRIO;};

1110 
©ås_Êow›
:

1111 
FSA_WSS
 { 
$$
 = FSA_WSS;}

1112 | 
FSA_FILENAME
 { 
$$
 = FSA_FILENAME;}

1113 | 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1114 | 
FSA_RANDOM
 { 
$$
 = FSA_RANDOM;}

1115 | 
FSA_FD
 { 
$$
 = FSA_FD;}

1116 | 
FSA_SRCFD
 { 
$$
 = FSA_SRCFD;}

1117 | 
FSA_ROTATEFD
 { 
$$
 = FSA_ROTATEFD;}

1118 | 
FSA_DSYNC
 { 
$$
 = FSA_DSYNC;}

1119 | 
FSA_DIRECTIO
 { 
$$
 = FSA_DIRECTIO;}

1120 | 
FSA_INDEXED
 { 
$$
 = FSA_INDEXED;}

1121 | 
FSA_TARGET
 { 
$$
 = FSA_TARGET;}

1122 | 
FSA_ITERS
 { 
$$
 = FSA_ITERS;}

1123 | 
FSA_VALUE
 { 
$$
 = FSA_VALUE;}

1124 | 
FSA_BLOCKING
 { 
$$
 = FSA_BLOCKING;}

1125 | 
FSA_HIGHWATER
 { 
$$
 = FSA_HIGHWATER;}

1126 | 
FSA_IOSIZE
 { 
$$
 = FSA_IOSIZE;}

1127 | 
FSA_NOREADAHEAD
 { 
$$
 = FSA_NOREADAHEAD;};

1129 
©ås_evítgí
:

1130 
FSA_RATE
 { 
$$
 = FSA_RATE;};

1132 
em_©å_«me
:

1133 
FSA_MASTER
 { 
$$
 = FSA_MASTER;}

1134 | 
FSA_CLIENT
 { 
$$
 = FSA_CLIENT;};

1136 
comp_©å_›s
: 
comp_©å_›


1138 
$$
 = 
$1
;

1140 | 
comp_©å_›s
 
FSK_SEPLST
 
comp_©å_›


1142 
©å_t
 *
©å
 = 
NULL
;

1143 
©å_t
 *
li°_íd
 = 
NULL
;

1145 
©å
 = 
$1
;áâ∏!
NULL
;

1146 
©å
 =áâr->
©å_√xt
)

1147 
li°_íd
 = 
©å
;

1149 
li°_íd
->
©å_√xt
 = 
$3
;

1151 
$$
 = 
$1
;

1153 | 
comp_©å_›s
 
FSK_SEPLST
 
comp_lv¨_def


1155 
©å_t
 *
©å
 = 
NULL
;

1156 
©å_t
 *
li°_íd
 = 
NULL
;

1158 
©å
 = 
$1
;áâ∏!
NULL
;

1159 
©å
 =áâr->
©å_√xt
)

1160 
li°_íd
 = 
©å
;

1162 
li°_íd
->
©å_√xt
 = 
$3
;

1164 
$$
 = 
$1
;

1167 
comp_©å_›
: 
©ås_deföe_comp
 
FSK_ASSIGN
 
©å_vÆue


1169 
$$
 = 
$3
;

1170 
$$
->
©å_«me
 = 
$1
;

1173 
comp_lv¨_def
: 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_VAL_BOOLEAN


1175 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_boﬁón
(
$1
, 
$3
))Ë=
NULL
)

1176 
YYERROR
;

1178 | 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_VAL_POSINT


1180 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_öãgî
(
$1
, 
$3
))Ë=
NULL
)

1181 
YYERROR
;

1183 | 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSK_QUOTE
 
FSV_WHITESTRING
 FSK_QUOTE

1185 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
(
$1
, 
$4
))Ë=
NULL
)

1186 
YYERROR
;

1188 | 
FSV_VARIABLE
 
FSK_ASSIGN
 
FSV_STRING


1190 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_°rög
(
$1
, 
$3
))Ë=
NULL
)

1191 
YYERROR
;

1193 | 
FSV_VARIABLE
 
FSK_ASSIGN
 FSV_VARIABLE

1195 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_assign_v¨
(
$1
, 
$3
))Ë=
NULL
)

1196 
YYERROR
;

1198 | 
FSV_VARIABLE


1200 i‡((
$$
 = 
	`Æloc_lv¨_©å
(
	`v¨_lv¨_Æloc_loˇl
(
$1
))Ë=
NULL
)

1201 
YYERROR
;

1204 
Êow›_deföe_comm™d
: 
FSC_DEFINE
 
FSE_FLOWOP
 
comp_©å_›s
 
FSK_OPENLST
 
Êow›_li°
 
FSK_CLOSELST


1206 i‡((
$$
 = 
	`Æloc_cmd
()Ë=
NULL
)

1207 
YYERROR
;

1208 
$$
->
cmd
 = &
∑r£r_composôe_Êow›_deföe
;

1209 
$$
->
cmd_li°
 = 
$5
;

1210 
$$
->
cmd_©å_li°
 = 
$3
;

1212 | 
Êow›_deföe_comm™d
 
comp_©å_›s


1214 
$1
->
cmd_©å_li°
 = 
$2
;

1218 
cv¨_©å_›s
: 
cv¨_©å_›


1220 
$$
 = 
$1
;

1222 | 
cv¨_©å_›s
 
FSK_SEPLST
 
cv¨_©å_›


1224 
©å_t
 *
©å
 = 
NULL
;

1225 
©å_t
 *
li°_íd
 = 
NULL
;

1227 
©å
 = 
$1
;áâ∏!
NULL
;

1228 
©å
 =áâr->
©å_√xt
)

1229 
li°_íd
 = 
©å
;

1231 
li°_íd
->
©å_√xt
 = 
$3
;

1233 
$$
 = 
$1
;

1236 
cv¨_©å_›
: 
cv¨_©å_«me
 
FSK_ASSIGN
 
©å_vÆue


1238 
$$
 = 
$3
;

1239 
$$
->
©å_«me
 = 
$1
;

1242 
©ås_deföe_comp
:

1243 
FSA_NAME
 { 
$$
 = FSA_NAME;}

1244 | 
FSA_ITERS
 { 
$$
 = FSA_ITERS;};

1246 
©å_vÆue
: 
FSV_STRING


1248 
$$
 = 
	`Æloc_©å
();

1249 i‡(!
$$
)

1250 
YYERROR
;

1251 
$$
->
©å_avd
 = 
	`avd_°r_Æloc
(
$1
);

1252 } | 
FSK_QUOTE
 
FSV_WHITESTRING
 FSK_QUOTE {

1253 
$$
 = 
	`Æloc_©å
();

1254 i‡(!
$$
)

1255 
YYERROR
;

1256 
$$
->
©å_avd
 = 
	`avd_°r_Æloc
(
$2
);

1257 } | 
FSV_VAL_POSINT
 {

1258 
$$
 = 
	`Æloc_©å
();

1259 i‡(!
$$
)

1260 
YYERROR
;

1261 
$$
->
©å_avd
 = 
	`avd_öt_Æloc
(
$1
);

1262 } | 
FSV_VAL_BOOLEAN
 {

1263 
$$
 = 
	`Æloc_©å
();

1264 i‡(!
$$
)

1265 
YYERROR
;

1266 
$$
->
©å_avd
 = 
	`avd_boﬁ_Æloc
(
$1
);

1267 } | 
FSV_VARIABLE
 {

1268 
$$
 = 
	`Æloc_©å
();

1269 i‡(!
$$
)

1270 
YYERROR
;

1271 
$$
->
©å_avd
 = 
	`avd_v¨_Æloc
(
$1
);

1274 
v¨_öt_vÆ
: 
FSV_VAL_POSINT


1276 
$$
 = 
	`avd_öt_Æloc
(
$1
);

1277 } | 
FSV_VARIABLE


1279 
$$
 = 
	`avd_v¨_Æloc
(
$1
);

1282 
	}
%%

1293 
	#USAGE
 \

1296 " Fûebích vîsi⁄ " 
FILEBENCH_VERSION
 "\n\n" \

1305 " -¯[cv¨ty≥] di•œy o±i⁄†o‡thê•ecifi¯cv¨Åy≥\n\n"

	)

1308 
	$ußge_exô
(
ªt
, c⁄° *
msg
)

1310 i‡(
ªt
) {

1311 ()
	`Ârötf
(
°dîr
, "Ußgêîr‹: %s\n\n", 
msg
);

1312 ()
	`Ârötf
(
°dîr
, 
USAGE
);

1314 
	`¥ötf
(
USAGE
);

1315 
	`exô
(
ªt
);

1316 
	}
}

1318 
	sfb∑øms
 {

1319 *
	mexe˙ame
;

1320 *
	mfs¸ùäame
;

1321 *
	m¥o˙ame
;

1322 *
	mshmaddr
;

1323 *
	mshm∑th
;

1324 
	mö°™˚
;

1325 *
	mcv¨ty≥
;

1329 
	$öô_fb∑øms
(
fb∑øms
 *fbparams)

1331 
	`mem£t
(
fb∑øms
, 0, (*fbparams));

1332 
fb∑øms
->
ö°™˚
 = -1;

1333 
	}
}

1335 
	#FB_MODE_NONE
 0

	)

1336 
	#FB_MODE_HELP
 1

	)

1337 
	#FB_MODE_MASTER
 2

	)

1338 
	#FB_MODE_WORKER
 3

	)

1339 
	#FB_MODE_CVARS
 4

	)

1342 
	$∑r£_›ti⁄s
(
¨gc
, *
¨gv
[], 
fb∑øms
 *fbparams)

1344 c⁄° 
cmd_›ti⁄s
[] = "m:s:a:i:hf:c:";

1345 
mode
 = 
FB_MODE_NONE
;

1346 
›t
;

1348 
	`öô_fb∑øms
(
fb∑øms
);

1349 
fb∑øms
->
exe˙ame
 = 
¨gv
[0];

1358 
›ãº
 = 0;

1366 (
›t
 = 
	`gë›t
(
¨gc
, 
¨gv
, 
cmd_›ti⁄s
)) > 0) {

1367 
›t
) {

1370 i‡(
mode
 !
FB_MODE_NONE
)

1371 
	`ußge_exô
(1, "Too many options specified");

1372 
mode
 = 
FB_MODE_HELP
;

1375 i‡(
mode
 !
FB_MODE_NONE
)

1376 
	`ußge_exô
(1, "Too many options specified");

1377 
mode
 = 
FB_MODE_CVARS
;

1378 
fb∑øms
->
cv¨ty≥
 = 
›èrg
;

1381 i‡(
mode
 !
FB_MODE_NONE
)

1382 
	`ußge_exô
(1, "Too many options specified");

1383 
mode
 = 
FB_MODE_MASTER
;

1384 
fb∑øms
->
fs¸ùäame
 = 
›èrg
;

1388 i‡(
mode
 !
FB_MODE_NONE
 &&

1389 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
¥o˙ame
))

1390 
	`ußge_exô
(1, "Too many options");

1391 
mode
 = 
FB_MODE_WORKER
;

1392 
fb∑øms
->
¥o˙ame
 = 
›èrg
;

1395 i‡(
mode
 !
FB_MODE_NONE
 &&

1396 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shmaddr
))

1397 
	`ußge_exô
(1, "Too many options");

1398 
mode
 = 
FB_MODE_WORKER
;

1399 
	`ssˇnf
(
›èrg
, "%p", &
fb∑øms
->
shmaddr
);

1402 i‡(
mode
 !
FB_MODE_NONE
 &&

1403 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
shm∑th
))

1404 
	`ußge_exô
(1, "Too many options");

1405 
mode
 = 
FB_MODE_WORKER
;

1406 
fb∑øms
->
shm∑th
 = 
›èrg
;

1409 i‡(
mode
 !
FB_MODE_NONE
 &&

1410 (
mode
 !
FB_MODE_WORKER
 || 
fb∑øms
->
ö°™˚
 != -1))

1411 
	`ußge_exô
(1, "Too many options");

1412 
mode
 = 
FB_MODE_WORKER
;

1413 
	`ssˇnf
(
›èrg
, "%d", &
fb∑øms
->
ö°™˚
);

1416 i‡(
›t›t
 == 'c') {

1417 i‡(
mode
 !
FB_MODE_NONE
)

1418 
	`ußge_exô
(1, "Too many options");

1419 
mode
 = 
FB_MODE_CVARS
;

1423 
	`ußge_exô
(1, "Unrecognized option");

1428 i‡(
mode
 =
FB_MODE_NONE
)

1429 
	`ußge_exô
(1, "NoÑuntime options specified");

1431 i‡(
mode
 =
FB_MODE_WORKER
) {

1432 i‡(!
fb∑øms
->
¥o˙ame
 ||

1433 !
fb∑øms
->
shmaddr
 ||

1434 !
fb∑øms
->
shm∑th
 ||

1435 
fb∑øms
->
ö°™˚
 == -1)

1436 
	`ußge_exô
(1, "Invalid worker settings");

1439  
mode
;

1440 
	}
}

1443 
	$w‹kî_mode
(
fb∑øms
 *fbparams)

1445 
ªt
;

1447 
ªt
 = 
	`ùc_©èch
(
fb∑øms
->
shmaddr
, fb∑øms->
shm∑th
);

1448 i‡(
ªt
 < 0) {

1449 
	`fûebích_log
(
LOG_FATAL
, "Cannotáttach shm for %s",

1450 
fb∑øms
->
¥o˙ame
);

1451 
	`exô
(1);

1455 
	`Êow›_öô
(0);

1458 
ªt
 = 
	`öô_cv¨_libørõs
();

1459 i‡(
ªt
)

1460 
	`exô
(1);

1462 
ªt
 = 
	`ªvÆid©e_cv¨_h™dÀs
();

1463 i‡(
ªt
)

1464 
	`exô
(1);

1467 
ªt
 = 
	`¥ocÊow_exec
(
fb∑øms
->
¥o˙ame
, fb∑øms->
ö°™˚
);

1468 i‡(
ªt
 < 0) {

1469 
	`fûebích_log
(
LOG_FATAL
, "Cannot startupÖrocess %s",

1470 
fb∑øms
->
¥o˙ame
);

1471 
	`exô
(1);

1474 
	`exô
(0);

1475 
	}
}

1477 
	$∑r£r_li°_cv¨_ty≥s
()

1479 
cv¨_libøry_öfo_t
 *
t
;

1481 i‡(!
fûebích_shm
->
shm_cv¨_lib_öfo_li°
) {

1482 
	`¥ötf
("No custom variables supported.\n");

1486 
	`¥ötf
("Custom variableÅypes supported:\n");

1487 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å;Å =Å->
√xt
)

1488 
	`¥ötf
(" %s\n", 
t
->
ty≥
);

1491 
	}
}

1493 
	$∑r£r_li°_cv¨_ty≥_∑ømëîs
(*
ty≥
)

1495 c⁄° *
vîsi⁄
 = 
NULL
;

1496 c⁄° *
ußge
 = 
NULL
;

1498 
cv¨_libøry_öfo_t
 *
t
;

1500 
t
 = 
fûebích_shm
->
shm_cv¨_lib_öfo_li°
;Å !
NULL
;Å =Å->
√xt
) {

1501 i‡(!
	`°rcmp
(
ty≥
, 
t
->type))

1505 i‡(!
t
) {

1506 
	`¥ötf
("Unknow¿cu°om v¨übÀÅy≥ %s.\n", 
ty≥
);

1510 
	`¥ötf
("Cu°om v¨übÀÅy≥: %s\n", 
t
->
ty≥
);

1511 
	`¥ötf
("Suµ‹tögÜibøry: %s\n", 
t
->
fûíame
);

1513 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_vîsi⁄
)

1514 
vîsi⁄
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_vîsi⁄
();

1516 i‡(
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
cv¨_ußge
)

1517 
ußge
 = 
cv¨_libørõs
[
t
->
ödex
]->
cv¨_›
.
	`cv¨_ußge
();

1520 i‡(
vîsi⁄
)

1521 
	`¥ötf
("Vîsi⁄: %s\n", 
vîsi⁄
);

1523 
	`¥ötf
("Oops. No version informationÖrovided.\n");

1525 i‡(
ußge
)

1526 
	`¥ötf
("Ußge:\n%s\n", 
ußge
);

1528 
	`¥ötf
("Oops. No usage informationÖrovided.\n");

1531 
	}
}

1534 
	$cv¨s_mode
(
fb∑øms
 *fbparams)

1536 
ªt
;

1538 
	`ùc_öô
();

1540 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

1541 i‡(
ªt
)

1542 
	`fûebích_shutdown
(1);

1544 
ªt
 = 
	`öô_cv¨_libørõs
();

1545 i‡(
ªt
)

1546 
	`fûebích_shutdown
(1);

1548 i‡(
fb∑øms
->
cv¨ty≥
)

1549 
	`∑r£r_li°_cv¨_ty≥_∑ømëîs
(
fb∑øms
->
cv¨ty≥
);

1551 
	`∑r£r_li°_cv¨_ty≥s
();

1553 
	`ùc_föi
();

1555 
	`exô
(0);

1556 
	}
}

1562 
	$∑r£r_ab‹t
(
¨g
)

1564 (Ë
	`sigign‹e
(
SIGINT
);

1565 
	`fûebích_log
(
LOG_INFO
, "Aborting...");

1566 
	`fûebích_shutdown
(1);

1567 
	}
}

1570 
	$ma°î_mode
(
fb∑øms
 *fbparams) {

1571 
ªt
;

1573 
	`¥ötf
("Fûebích Vîsi⁄ %s\n", 
FILEBENCH_VERSION
);

1575 
yyö
 = 
	`f›í
(
fb∑øms
->
fs¸ùäame
, "r");

1576 i‡(!
yyö
) {

1577 
	`fûebích_log
(
LOG_FATAL
,

1578 "C™nŸ o≥¿fûê%s!", 
fb∑øms
->
fs¸ùäame
);

1579 
	`exô
(1);

1582 
exe˙ame
 = 
fb∑øms
->execname;

1583 
	`fb_£t_shmmax
();

1585 
	`ùc_öô
();

1588 ()
	`°r˝y
(
fûebích_shm
->
shm_fs¸ùäame
,

1589 
fb∑øms
->
fs¸ùäame
);

1591 
	`Êow›_öô
(1);

1592 
	`evítgí_öô
();

1595 
ªt
 = 
	`öô_cv¨_libøry_öfo
(
FBLIBDIR
);

1596 i‡(
ªt
)

1597 
	`fûebích_shutdown
(1);

1599 
ªt
 = 
	`öô_cv¨_libørõs
();

1600 i‡(
ªt
)

1601 
	`fûebích_shutdown
(1);

1603 
	`sig«l
(
SIGINT
, 
∑r£r_ab‹t
);

1606 
	`yy∑r£
();

1611 
	`¥ötf
("Warning:ÇoÑun command inÅhe WML script!\n");

1612 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

1613 
	}
}

1616 
	$öô_comm⁄
()

1618 
	`dißbÀ_a¶r
();

1619 
my_pid
 = 
	`gëpid
();

1620 
	`fb_£t_æimô
();

1621 
	}
}

1638 
	$maö
(
¨gc
, *
¨gv
[])

1640 
fb∑øms
 fbparams;

1641 
mode
;

1644 
mode
 = 
	`∑r£_›ti⁄s
(
¨gc
, 
¨gv
, &
fb∑øms
);

1646 i‡(
mode
 =
FB_MODE_HELP
)

1647 
	`ußge_exô
(0, 
NULL
);

1649 i‡(
mode
 =
FB_MODE_CVARS
)

1650 
	`cv¨s_mode
(&
fb∑øms
);

1652 
	`öô_comm⁄
();

1654 i‡(
mode
 =
FB_MODE_MASTER
)

1655 
	`ma°î_mode
(&
fb∑øms
);

1657 i‡(
mode
 =
FB_MODE_WORKER
)

1658 
	`w‹kî_mode
(&
fb∑øms
);

1662 
	}
}

1670 
	$∑r£r_li°2°rög
(
li°_t
 *
li°
)

1672 
li°_t
 *
l
;

1673 *
°rög
;

1674 *
tmp
;

1676 
°rög
 = 
	`mÆloc
(
MAXPATHLEN
);

1677 i‡(!
°rög
) {

1678 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate memory");

1679  
NULL
;

1682 *
°rög
 = 0;

1685 
l
 = 
li°
;Ü !
NULL
;Ü =Ü->
li°_√xt
) {

1687 *
l°r
 = 
	`avd_gë_°r
(
l
->
li°_°rög
);

1689 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "c⁄vîtög såög '%s'", 
l°r
);

1692 i‡(
l
->
li°_öãgî
) {

1693 
fböt_t
 
∑øm_«me
;

1695 
tmp
 = 
NULL
;

1696 
∑øm_«me
 = 
	`avd_gë_öt
(
l
->
li°_öãgî
);

1698 
∑øm_«me
) {

1699 
FSS_TYPE
:

1700 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1701 
RAND_PARAM_TYPE
);

1704 
FSS_SRC
:

1705 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1706 
RAND_PARAM_SRC
);

1709 
FSS_SEED
:

1710 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1711 
RAND_PARAM_SEED
);

1714 
FSS_MIN
:

1715 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1716 
RAND_PARAM_MIN
);

1719 
FSS_MEAN
:

1720 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1721 
RAND_PARAM_MEAN
);

1724 
FSS_GAMMA
:

1725 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1726 
RAND_PARAM_GAMMA
);

1729 
FSS_ROUND
:

1730 
tmp
 = 
	`v¨_øndv¨_to_°rög
(
l°r
,

1731 
RAND_PARAM_ROUND
);

1735 i‡(
tmp
) {

1736 (Ë
	`°rˇt
(
°rög
, 
tmp
);

1737 
	`‰ì
(
tmp
);

1739 (Ë
	`°rˇt
(
°rög
, 
l°r
);

1743 i‡((
tmp
 = 
	`v¨_to_°rög
(
l°r
)Ë!
NULL
) {

1744 (Ë
	`°rˇt
(
°rög
, 
tmp
);

1745 
	`‰ì
(
tmp
);

1747 (Ë
	`°rˇt
(
°rög
, 
l°r
);

1752  
°rög
;

1753 
	}
}

1762 
avd_t


1763 
	$∑r£r_li°2v¨°rög
(
li°_t
 *
li°
)

1765 *
l°r
 = 
	`avd_gë_°r
(
li°
->
li°_°rög
);

1768 i‡((
li°
->
li°_√xt
 =
NULL
Ë&& (*
l°r
 == '$'))

1769  
	`avd_v¨_Æloc
(
l°r
);

1771  (
	`avd_°r_Æloc
(
	`∑r£r_li°2°rög
(
li°
)));

1772 
	}
}

1781 
avd_t


1782 
	$∑r£r_li°2avd
(
li°_t
 *
li°
)

1784 
avd_t
 
avd
;

1785 *
l°r
;

1787 i‡(
li°
 && ((
l°r
 = 
	`avd_gë_°r
÷i°->
li°_°rög
)Ë!
NULL
)) {

1788 
avd
 = 
	`avd_v¨_Æloc
(
l°r
);

1789  (
avd
);

1792  (
NULL
);

1793 
	}
}

1800 
	$∑r£r_evítgí
(
cmd_t
 *
cmd
)

1802 
©å_t
 *
©å
;

1805 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RATE
))) {

1806 i‡(
©å
->
©å_avd
) {

1807 
	`evítgí_£å©e
(
©å
->
©å_avd
);

1810 
	}
}

1817 
	$∑r£r_fûe£t_li°
(
cmd_t
 *
cmd
)

1819 (Ë
	`fûe£t_ôî
(
fûe£t_¥öt
);

1820 
	}
}

1826 
	$∑r£r_Êow›_li°
(
cmd_t
 *
cmd
)

1828 
	`Êow›_¥öèŒ
();

1829 
	}
}

1840 
	$∑r£r_¥oc_deföe
(
cmd_t
 *
cmd
)

1842 
¥ocÊow_t
 *
¥ocÊow
;

1843 *
«me
 = 
NULL
;

1844 
©å_t
 *
©å
;

1845 
avd_t
 
v¨_ö°™˚s
;

1846 
fböt_t
 
ö°™˚s
;

1847 
cmd_t
 *
ö√r_cmd
;

1849 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

1850 i‡(
©å
)

1851 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

1853 
	`fûebích_log
(
LOG_ERROR
, "process specifiesÇoÇame");

1854 
	`fûebích_shutdown
(1);

1857 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

1858 i‡(
©å
) {

1859 
v¨_ö°™˚s
 = 
©å
->
©å_avd
;

1860 
ö°™˚s
 = 
	`avd_gë_öt
(
v¨_ö°™˚s
);

1861 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1862 "Sëtög in°™˚†%Œu", (
u_l⁄gl⁄g_t
)
ö°™˚s
);

1864 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

1866 
v¨_ö°™˚s
 = 
	`avd_öt_Æloc
(1);

1867 
ö°™˚s
 = 1;

1870 
¥ocÊow
 = 
	`¥ocÊow_deföe
(
«me
, 
v¨_ö°™˚s
);

1871 i‡(!
¥ocÊow
) {

1872 
	`fûebích_log
(
LOG_ERROR
,

1874 
ö°™˚s
, 
«me
);

1875 
	`fûebích_shutdown
(1);

1878 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NICE
);

1879 i‡(
©å
) {

1880 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri = %llu",

1881 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
©å
->
©å_avd
));

1882 
¥ocÊow
->
pf_ni˚
 = 
©å
->
©å_avd
;

1884 
¥ocÊow
->
pf_ni˚
 = 
	`avd_öt_Æloc
(0);

1887 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

1888 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

1889 
	`∑r£r_thªad_deföe
(
ö√r_cmd
, 
¥ocÊow
);

1890 
	}
}

1903 
	$∑r£r_thªad_deföe
(
cmd_t
 *
cmd
, 
¥ocÊow_t
 *
¥ocÊow
)

1905 
thªadÊow_t
 *
thªadÊow
, 
ãm∂©e
;

1906 
©å_t
 *
©å
;

1907 
avd_t
 
ö°™˚s
;

1908 
cmd_t
 *
ö√r_cmd
;

1909 *
«me
 = 
NULL
;

1911 
	`mem£t
(&
ãm∂©e
, 0,  (
thªadÊow_t
));

1913 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

1914 i‡(
©å
)

1915 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

1917 
	`fûebích_log
(
LOG_ERROR
,

1919 
¥ocÊow
->
pf_«me
);

1920 
	`fûebích_shutdown
(1);

1923 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INSTANCES
);

1924 i‡(
©å
)

1925 
ö°™˚s
 = 
©å
->
©å_avd
;

1927 
ö°™˚s
 = 
	`avd_öt_Æloc
(1);

1929 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MEMSIZE
);

1930 i‡(
©å
)

1931 
ãm∂©e
.
tf_memsize
 = 
©å
->
©å_avd
;

1933 
ãm∂©e
.
tf_memsize
 = 
	`avd_öt_Æloc
(0);

1935 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOPRIO
);

1936 i‡(
©å
)

1937 
ãm∂©e
.
tf_i›rio
 = 
©å
->
©å_avd
;

1939 
ãm∂©e
.
tf_i›rio
 = 
	`avd_öt_Æloc
(8);

1942 
thªadÊow
 = 
	`thªadÊow_deföe
(
¥ocÊow
, 
«me
, &
ãm∂©e
, 
ö°™˚s
);

1943 i‡(!
thªadÊow
) {

1944 
	`fûebích_log
(
LOG_ERROR
,

1946 
	`fûebích_shutdown
(1);

1949 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_USEISM
);

1950 i‡(
©å
)

1951 
thªadÊow
->
tf_©ås
 |
THREADFLOW_USEISM
;

1954 
ö√r_cmd
 = 
cmd
->
cmd_li°
; inner_cmd;

1955 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
)

1956 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
thªadÊow
,

1957 &
thªadÊow
->
tf_thrd_f›s
, 
FLOW_MASTER
);

1958 
	}
}

1964 
	$∑r£r_Êow›_gë_©ås
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

1966 
©å_t
 *
©å
;

1969 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FILENAME
))) {

1970 
Êow›
->
fo_fûíame
 = 
©å
->
©å_avd
;

1971 i‡(
Êow›
->
fo_fûíame
 =
NULL
) {

1972 
	`fûebích_log
(
LOG_ERROR
,

1974 
	`fûebích_shutdown
(1);

1978 
Êow›
->
fo_fûíame
 = 
NULL
;

1982 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_IOSIZE
)))

1983 
Êow›
->
fo_iosize
 = 
©å
->
©å_avd
;

1985 
Êow›
->
fo_iosize
 = 
	`avd_öt_Æloc
(0);

1988 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WSS
)))

1989 
Êow›
->
fo_wss
 = 
©å
->
©å_avd
;

1991 
Êow›
->
fo_wss
 = 
	`avd_öt_Æloc
(0);

1994 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDOM
)))

1995 
Êow›
->
fo_øndom
 = 
©å
->
©å_avd
;

1997 
Êow›
->
fo_øndom
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2000 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DSYNC
)))

2001 
Êow›
->
fo_dsync
 = 
©å
->
©å_avd
;

2003 
Êow›
->
fo_dsync
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2006 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TARGET
)))

2007 (Ë
	`°r˝y
(
Êow›
->
fo_èrgë«me
,

2008 
	`avd_gë_°r
(
©å
->
©å_avd
));

2011 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

2012 
Êow›
->
fo_vÆue
 = 
©å
->
©å_avd
;

2014 
Êow›
->
fo_vÆue
 = 
	`avd_öt_Æloc
(0);

2017 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_FD
))) {

2018 
Êow›
->
fo_fdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

2019 i‡(
Êow›
->
fo_fûíame
 !
NULL
)

2020 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "It isÇot "

2026 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROTATEFD
)))

2027 
Êow›
->
fo_rŸ©efd
 = 
©å
->
©å_avd
;

2029 
Êow›
->
fo_rŸ©efd
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2032 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SRCFD
)))

2033 
Êow›
->
fo_§cfdnumbî
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

2036 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_BLOCKING
)))

2037 
Êow›
->
fo_blockög
 = 
©å
->
©å_avd
;

2039 
Êow›
->
fo_blockög
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2042 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRECTIO
)))

2043 
Êow›
->
fo_dúe˘io
 = 
©å
->
©å_avd
;

2045 
Êow›
->
fo_dúe˘io
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2048 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_HIGHWATER
))) {

2049 
Êow›
->
fo_highw©î
 = 
©å
->
©å_avd
;

2050 i‡(
	`AVD_IS_RANDOM
(
©å
->
©å_avd
)) {

2051 
	`fûebích_log
(
LOG_ERROR
,

2053 
	`fûebích_shutdown
(1);

2056 
Êow›
->
fo_highw©î
 = 
	`avd_öt_Æloc
(1);

2060 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_INDEXED
)))

2061 
Êow›
->
fo_fûeödex
 = 
©å
->
©å_avd
;

2063 
Êow›
->
fo_fûeödex
 = 
NULL
;

2066 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NOREADAHEAD
)))

2067 
Êow›
->
fo_n‹ódahód
 = 
©å
->
©å_avd
;

2069 
Êow›
->
fo_n‹ódahód
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2072 
	}
}

2083 
	$∑r£r_ö√r_Êow›_deföe
(
thªadÊow_t
 *
thªad
, 
Êow›_t
 *
comp0_Êow
,

2084 
Êow›_t
 *
comp_m°r_Êow
)

2086 
Êow›_t
 *
ö√r_Êowty≥
, *
ö√r_Êow›
;

2089 
ö√r_Êowty≥
 = 
comp0_Êow
->
fo_comp_f›s
;

2090 
comp_m°r_Êow
->
fo_comp_f›s
 = 
NULL
;

2092 
ö√r_Êowty≥
) {

2093 
fuŒ«me
[
MAXPATHLEN
];

2096 
	`¢¥ötf
(
fuŒ«me
, 
MAXPATHLEN
, "%s.%s",

2097 
comp_m°r_Êow
->
fo_«me
, 
ö√r_Êowty≥
->fo_name);

2099 i‡((
ö√r_Êow›
 = 
	`Êow›_deföe
(
thªad
, 
fuŒ«me
,

2100 
ö√r_Êowty≥
, &
comp_m°r_Êow
->
fo_comp_f›s
,

2101 
FLOW_MASTER
, 0)Ë=
NULL
) {

2102 
	`fûebích_log
(
LOG_ERROR
,

2104 
fuŒ«me
);

2105 
	`fûebích_shutdown
(1);

2109 i‡(
ö√r_Êow›
->
fo_fûíame
) {

2110 *
«me
;

2113 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_fûíame
,

2114 
comp_m°r_Êow
->
fo_lv¨_li°
);

2117 
«me
 = 
	`avd_gë_°r
(
ö√r_Êow›
->
fo_fûíame
);

2118 i‡(
«me
) {

2120 
ö√r_Êow›
->
fo_fûe£t
 = 
	`fûe£t_föd
(
«me
);

2122 i‡(
ö√r_Êow›
->
fo_fûe£t
 =
NULL
) {

2123 
	`fûebích_log
(
LOG_ERROR
,

2125 
ö√r_Êow›
->
fo_«me
, 
«me
);

2126 
	`fûebích_shutdown
(1);

2132 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

2133 
comp_m°r_Êow
->
fo_lv¨_li°
);

2136 i‡(
ö√r_Êowty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

2137 
v¨_t
 *
√wlv¨
, *
¥Ÿo_lv¨s
, *
lv¨_±r
;

2139 
¥Ÿo_lv¨s
 = 
ö√r_Êow›
->
fo_lv¨_li°
;

2140 
ö√r_Êow›
->
fo_lv¨_li°
 = 0;

2142 
lv¨_±r
 = 
ö√r_Êowty≥
->
fo_lv¨_li°
;Üvar_ptr;

2143 
lv¨_±r
 =Üv¨_±r->
v¨_√xt
) {

2145 i‡((
√wlv¨
 = 
	`v¨_lv¨_Æloc_loˇl
(

2146 
lv¨_±r
->
v¨_«me
)Ë!
NULL
) {

2148 
	`add_lv¨_to_li°
(
√wlv¨
,

2149 &
ö√r_Êow›
->
fo_lv¨_li°
);

2151 
	`v¨_upd©e_comp_lv¨s
(
√wlv¨
,

2152 
¥Ÿo_lv¨s
,

2153 
comp_m°r_Êow
->
fo_lv¨_li°
);

2157 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

2158 
ö√r_Êowty≥
,

2159 
ö√r_Êow›
);

2161 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

2165 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_iosize
,

2166 
comp_m°r_Êow
->
fo_lv¨_li°
);

2167 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_wss
,

2168 
comp_m°r_Êow
->
fo_lv¨_li°
);

2169 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_ôîs
,

2170 
comp_m°r_Êow
->
fo_lv¨_li°
);

2171 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_vÆue
,

2172 
comp_m°r_Êow
->
fo_lv¨_li°
);

2173 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_øndom
,

2174 
comp_m°r_Êow
->
fo_lv¨_li°
);

2175 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dsync
,

2176 
comp_m°r_Êow
->
fo_lv¨_li°
);

2177 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_rŸ©efd
,

2178 
comp_m°r_Êow
->
fo_lv¨_li°
);

2179 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_blockög
,

2180 
comp_m°r_Êow
->
fo_lv¨_li°
);

2181 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_dúe˘io
,

2182 
comp_m°r_Êow
->
fo_lv¨_li°
);

2183 
	`avd_upd©e
(&
ö√r_Êow›
->
fo_highw©î
,

2184 
comp_m°r_Êow
->
fo_lv¨_li°
);

2186 
ö√r_Êowty≥
 = i¬î_Êowty≥->
fo_exec_√xt
;

2188 
	}
}

2218 
	$∑r£r_Êow›_deföe
(
cmd_t
 *
cmd
, 
thªadÊow_t
 *
thªad
,

2219 
Êow›_t
 **
Êow›li°_hdp
, 
ˇãg‹y
)

2221 
Êow›_t
 *
Êow›
, *
Êow›_ty≥
;

2222 *
ty≥
 = (*)
cmd
->
cmd_«me
;

2223 *
«me
 = 
NULL
;

2224 
©å_t
 *
©å
;

2227 
Êow›_ty≥
 = 
	`Êow›_föd
(
ty≥
);

2228 i‡(
Êow›_ty≥
 =
NULL
) {

2229 
	`fûebích_log
(
LOG_ERROR
,

2231 
ty≥
);

2232 
	`fûebích_shutdown
(1);

2236 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

2237 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

2239 
	`fûebích_log
(
LOG_ERROR
,

2241 
Êow›_ty≥
->
fo_«me
);

2242 
	`fûebích_shutdown
(1);

2245 i‡((
Êow›
 = 
	`Êow›_deföe
(
thªad
, 
«me
,

2246 
Êow›_ty≥
, 
Êow›li°_hdp
, 
ˇãg‹y
, 0)Ë=
NULL
) {

2247 
	`fûebích_log
(
LOG_ERROR
,

2249 
cmd
->
cmd_«me
);

2250 
	`fûebích_shutdown
(1);

2254 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

2255 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

2257 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

2261 i‡(
Êow›_ty≥
->
fo_ty≥
 =
FLOW_TYPE_COMPOSITE
) {

2262 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

2263 i‡(
ˇãg‹y
 =
FLOW_MASTER
)

2264 
	`∑r£r_ö√r_Êow›_deföe
(
thªad
,

2265 
Êow›_ty≥
, 
Êow›
);

2268 
	`∑r£r_Êow›_gë_©ås
(
cmd
, 
Êow›
);

2270 
	}
}

2273 
	$∑r£r_composôe_Êow›_deföe
(
cmd_t
 *
cmd
)

2275 
Êow›_t
 *
Êow›
;

2276 
cmd_t
 *
ö√r_cmd
;

2277 *
«me
 = 
NULL
;

2278 
©å_t
 *
©å
;

2281 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
))) {

2282 
«me
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

2284 
	`fûebích_log
(
LOG_ERROR
,

2287 
	`fûebích_shutdown
(1);

2290 i‡((
Êow›
 = 
	`Êow›_√w_composôe_deföe
(
«me
)Ë=
NULL
) {

2291 
	`fûebích_log
(
LOG_ERROR
,

2293 
cmd
->
cmd_«me
);

2294 
	`fûebích_shutdown
(1);

2298 
	`gë_©å_lv¨s
(
cmd
, 
Êow›
);

2301 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ITERS
)))

2302 
Êow›
->
fo_ôîs
 = 
©å
->
©å_avd
;

2304 
Êow›
->
fo_ôîs
 = 
	`avd_öt_Æloc
(1);

2307 
ö√r_cmd
 = 
cmd
->
cmd_li°
; i¬î_cmd !
NULL
;

2308 
ö√r_cmd
 = i¬î_cmd->
cmd_√xt
) {

2309 
	`∑r£r_Êow›_deföe
(
ö√r_cmd
, 
NULL
,

2310 &
Êow›
->
fo_comp_f›s
, 
FLOW_INNER_DEF
);

2312 
	}
}

2321 
fûe£t_t
 *

2322 
	$∑r£r_fûe£t_deföe_comm⁄
(
cmd_t
 *
cmd
)

2324 
fûe£t_t
 *
fûe£t
;

2325 
©å_t
 *
©å
;

2326 
avd_t
 
«me
;

2327 
avd_t
 
∑th
;

2329 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_NAME
);

2330 i‡(
©å
)

2331 
«me
 = 
©å
->
©å_avd
;

2333 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÇame");

2334  
NULL
;

2337 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PATH
);

2338 i‡(
©å
)

2339 
∑th
 = 
©å
->
©å_avd
;

2341 
	`fûebích_log
(
LOG_ERROR
, "file[set] specifiesÇoÖath");

2342  
NULL
;

2345 
fûe£t
 = 
	`fûe£t_deföe
(
«me
, 
∑th
);

2346 i‡(!
fûe£t
) {

2347 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file[set] %s\n",

2348 
	`avd_gë_°r
(
«me
));

2349  
NULL
;

2352 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PREALLOC
);

2353 i‡(
©å
)

2354 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
©å
->
©å_avd
;

2356 
fûe£t
->
fs_¥óŒo˝î˚¡
 = 
	`avd_öt_Æloc
(0);

2358 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARALLOC
);

2359 i‡(
©å
)

2360 
fûe£t
->
fs_∑øŒoc
 = 
©å
->
©å_avd
;

2362 
fûe£t
->
fs_∑øŒoc
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2364 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_READONLY
);

2365 i‡(
©å
)

2366 
fûe£t
->
fs_ªad⁄ly
 = 
©å
->
©å_avd
;

2368 
fûe£t
->
fs_ªad⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2370 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_WRITEONLY
);

2371 i‡(
©å
)

2372 
fûe£t
->
fs_wrôe⁄ly
 = 
©å
->
©å_avd
;

2374 
fûe£t
->
fs_wrôe⁄ly
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2376 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_REUSE
);

2377 i‡(
©å
)

2378 
fûe£t
->
fs_ªu£
 = 
©å
->
©å_avd
;

2380 
fûe£t
->
fs_ªu£
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2383 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TRUSTTREE
);

2384 i‡(
©å
 )

2385 
fûe£t
->
fs_åu°_åì
 = 
©å
->
©å_avd
;

2387 
fûe£t
->
fs_åu°_åì
 = 
	`avd_boﬁ_Æloc
(
FALSE
);

2389 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_SIZE
);

2390 i‡(
©å
)

2391 
fûe£t
->
fs_size
 = 
©å
->
©å_avd
;

2393 
fûe£t
->
fs_size
 = 
	`avd_öt_Æloc
(1024);

2395  
fûe£t
;

2396 
	}
}

2399 
	$∑r£r_fûe_deföe
(
cmd_t
 *
cmd
)

2401 
fûe£t_t
 *
fûe£t
;

2403 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

2404 i‡(!
fûe£t
) {

2405 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate file");

2406 
	`fûebích_shutdown
(1);

2411 
fûe£t
->
fs_©ås
 = 
FILESET_IS_FILE
;

2412 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(1);

2414 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(10);

2415 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(0);

2416 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

2417 
	}
}

2420 
	$∑r£r_fûe£t_deföe
(
cmd_t
 *
cmd
)

2422 
fûe£t_t
 *
fûe£t
;

2423 
©å_t
 *
©å
;

2425 
fûe£t
 = 
	`∑r£r_fûe£t_deföe_comm⁄
(
cmd
);

2426 i‡(!
fûe£t
) {

2427 
	`fûebích_log
(
LOG_ERROR
, "failedÅo instantiate fileset");

2428 
	`fûebích_shutdown
(1);

2432 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ENTRIES
);

2433 i‡(
©å
)

2434 
fûe£t
->
fs_íåõs
 = 
©å
->
©å_avd
;

2436 
fûe£t
->
fs_íåõs
 = 
	`avd_öt_Æloc
(0);

2438 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_LEAFDIRS
);

2439 i‡(
©å
)

2440 
fûe£t
->
fs_Àafdús
 = 
©å
->
©å_avd
;

2442 
fûe£t
->
fs_Àafdús
 = 
	`avd_öt_Æloc
(0);

2444 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRWIDTH
);

2445 i‡(
©å
)

2446 
fûe£t
->
fs_dúwidth
 = 
©å
->
©å_avd
;

2448 
	`fûebích_log
(
LOG_ERROR
, "Fileset hasÇo directory width");

2449 
fûe£t
->
fs_dúwidth
 = 
	`avd_öt_Æloc
(0);

2452 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRDEPTHRV
);

2453 i‡(
©å
)

2454 
fûe£t
->
fs_dúdïthrv
 = 
©å
->
©å_avd
;

2456 
fûe£t
->
fs_dúdïthrv
 = 
NULL
;

2458 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_DIRGAMMA
);

2459 i‡(
©å
)

2460 
fûe£t
->
fs_dúgamma
 = 
©å
->
©å_avd
;

2462 
fûe£t
->
fs_dúgamma
 = 
	`avd_öt_Æloc
(1500);

2463 
	}
}

2471 
	$∑r£r_fûe£t_¸óã
(
cmd_t
 *
cmd
)

2473 
ªt
;

2475 
ªt
 = 
	`fûe£t_¸óã£ts
();

2476 i‡(
ªt
) {

2477 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo create filesets");

2478 
	`fûebích_shutdown
(1);

2480 
	}
}

2488 
	$∑r£r_fûebích_shutdown
(
cmd_t
 *
cmd
)

2490 
f_ab‹t
 = 
fûebích_shm
->
shm_f_ab‹t
;

2492 
	`ùc_föi
();

2494 i‡(
f_ab‹t
 =
FILEBENCH_ABORT_ERROR
)

2495 
	`fûebích_shutdown
(1);

2497 
	`fûebích_shutdown
(0);

2498 
	}
}

2506 
	$∑r£r_∑u£
(
±ime
)

2508 
time¶ït
 = 0;

2510 i‡(
±ime
) {

2511 
time¶ït
 < 
±ime
) {

2512 (Ë
	`¶ìp
(1);

2513 
time¶ït
++;

2514 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2521 (Ë
	`¶ìp
(1);

2522 
time¶ït
++;

2523 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2528  (
time¶ït
);

2529 
	}
}

2531 
	#TIMED_RUNTIME_DEFAULT
 60

	)

2532 
	#PERIOD_DEFAULT
 10

	)

2542 
	$∑r£r_run
(
cmd_t
 *
cmd
)

2544 
ru¡ime
;

2545 
time¶ït
;

2547 
ru¡ime
 = 
cmd
->
cmd_qty
;

2549 
	`∑r£r_fûe£t_¸óã
(
cmd
);

2550 
	`¥oc_¸óã
();

2553 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2556 
	`fûebích_log
(
LOG_INFO
, "Running...");

2557 
	`°©s_˛ór
();

2560 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

2561 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

2563 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

2565 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

2566 
	`°©s_¢≠
();

2567 
	`¥oc_shutdown
();

2568 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

2569 
	}
}

2572 
	$∑r£r_p§un
(
cmd_t
 *
cmd
)

2574 
ru¡ime
;

2575 
≥riod
;

2576 
time¶ït
 = 0;

2577 
ª£t_°©s
 = 0;

2579 
ru¡ime
 = 
cmd
->
cmd_qty
;

2586 i‡(
cmd
->
cmd_qty1
 < 0) {

2587 
≥riod
 = -
cmd
->
cmd_qty1
;

2588 
ª£t_°©s
 = 1;

2589 } i‡(
cmd
->
cmd_qty1
 > 0) {

2590 
≥riod
 = 
cmd
->
cmd_qty1
;

2591 
ª£t_°©s
 = 0;

2593 
≥riod
 = 
PERIOD_DEFAULT
;

2594 
ª£t_°©s
 = 0;

2597 
	`∑r£r_fûe£t_¸óã
(
cmd
);

2598 
	`¥oc_¸óã
();

2601 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2604 
	`fûebích_log
(
LOG_INFO
, "Running...");

2605 
	`°©s_˛ór
();

2608 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

2609 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

2613 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
)

2614 
≥riod
 =Öîiod > (
ru¡ime
 - 
time¶ït
) ?

2615 (
ru¡ime
 - 
time¶ït
Ë: 
≥riod
;

2617 
time¶ït
 +
	`∑r£r_∑u£
(
≥riod
);

2619 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2622 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 &&

2623 
time¶ït
 >
ru¡ime
)

2626 
	`°©s_¢≠
();

2628 i‡(
ª£t_°©s
)

2629 
	`°©s_˛ór
();

2632 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

2633 
	`°©s_¢≠
();

2634 
	`¥oc_shutdown
();

2635 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

2636 
	}
}

2643 
	$∑r£r_run_v¨übÀ
(
cmd_t
 *
cmd
)

2645 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

2646 
ru¡ime
;

2647 
time¶ït
;

2649 i‡(
öãgî
 =
NULL
) {

2650 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

2651 
cmd
->
cmd_tgt1
);

2655 
ru¡ime
 = 
	`avd_gë_öt
(
öãgî
);

2657 
	`∑r£r_fûe£t_¸óã
(
cmd
);

2658 
	`¥oc_¸óã
();

2661 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2664 
	`fûebích_log
(
LOG_INFO
, "Running...");

2665 
	`°©s_˛ór
();

2668 i‡(
fûebích_shm
->
shm_rmode
 =
FILEBENCH_MODE_TIMEOUT
 && !
ru¡ime
)

2669 
ru¡ime
 = 
TIMED_RUNTIME_DEFAULT
;

2671 
time¶ït
 = 
	`∑r£r_∑u£
(
ru¡ime
);

2673 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

2674 
	`°©s_¢≠
();

2675 
	`¥oc_shutdown
();

2676 
	`∑r£r_fûebích_shutdown
((
cmd_t
 *)0);

2677 
	}
}

2683 
	$∑r£r_íabÀ_mc
(
cmd_t
 *
cmd
)

2685 
©å_t
 *
©å
;

2686 *
ma°î
;

2687 *
˛õ¡
;

2689 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MASTER
))) {

2690 
ma°î
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

2692 
	`fûebích_log
(
LOG_ERROR
,

2697 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_CLIENT
))) {

2698 
˛õ¡
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

2700 
	`fûebích_log
(
LOG_ERROR
,

2705 
	`mc_sync_›í_sock
(
ma°î
, 8001, 
˛õ¡
);

2706 
	}
}

2712 
	$∑r£r_domu…isync
(
cmd_t
 *
cmd
)

2714 
©å_t
 *
©å
;

2715 
fböt_t
 
vÆue
;

2717 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_VALUE
)))

2718 
vÆue
 = 
	`avd_gë_öt
(
©å
->
©å_avd
);

2720 
vÆue
 = 1;

2722 
	`mc_sync_synchr⁄ize
(()
vÆue
);

2723 
	}
}

2729 
	$∑r£r_¶ìp
(
cmd_t
 *
cmd
)

2731 
¶ì±ime
;

2732 
time¶ït
;

2735 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2738 
¶ì±ime
 = 
cmd
->
cmd_qty
;

2739 
	`fûebích_log
(
LOG_INFO
, "Sleeping...");

2741 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

2743 
	`fûebích_log
(
LOG_INFO
, "SÀ± f‹ %d sec⁄ds...", 
time¶ït
);

2744 
	}
}

2751 
	$∑r£r_¶ìp_v¨übÀ
(
cmd_t
 *
cmd
)

2753 
avd_t
 
öãgî
 = 
	`avd_v¨_Æloc
(
cmd
->
cmd_tgt1
);

2754 
¶ì±ime
;

2755 
time¶ït
;

2757 i‡(
öãgî
 =
NULL
) {

2758 
	`fûebích_log
(
LOG_ERROR
, "Unknown variable %s",

2759 
cmd
->
cmd_tgt1
);

2763 
¶ì±ime
 = 
	`avd_gë_öt
(
öãgî
);

2766 i‡(
fûebích_shm
->
shm_f_ab‹t
)

2769 
	`fûebích_log
(
LOG_INFO
, "Running...");

2771 
time¶ït
 = 
	`∑r£r_∑u£
(
¶ì±ime
);

2773 
	`fûebích_log
(
LOG_INFO
, "Ru¿took %d sec⁄ds...", 
time¶ït
);

2774 
	}
}

2783 
	$∑r£r_sy°em
(
cmd_t
 *
cmd
)

2785 *
°rög
;

2787 i‡(!
cmd
->
cmd_∑øm_li°
)

2790 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

2792 i‡(!
°rög
)

2795 
	`fûebích_log
(
LOG_VERBOSE
, "Ru¬ög '%s'", 
°rög
);

2797 i‡(
	`sy°em
(
°rög
) < 0) {

2798 
	`fûebích_log
(
LOG_ERROR
,

2800 
	`°ªº‹
(
î∫o
));

2801 
	`‰ì
(
°rög
);

2802 
	`fûebích_shutdown
(1);

2805 
	`‰ì
(
°rög
);

2806 
	}
}

2812 
	$∑r£r_echo
(
cmd_t
 *
cmd
)

2814 *
°rög
;

2816 i‡(
cmd
->
cmd_∑øm_li°
 =
NULL
)

2819 
°rög
 = 
	`∑r£r_li°2°rög
(
cmd
->
cmd_∑øm_li°
);

2821 i‡(
°rög
 =
NULL
)

2824 
	`fûebích_log
(
LOG_INFO
, "%s", 
°rög
);

2825 
	}
}

2831 
	$∑r£r_vîsi⁄
(
cmd_t
 *
cmd
)

2833 
	`fûebích_log
(
LOG_INFO
, "Fûebích Vîsi⁄: %s", 
FILEBENCH_VERSION
);

2834 
	}
}

2837 
	$∑r£r_íabÀ_œthi°
(
cmd_t
 *
cmd
)

2839 
fûebích_shm
->
œthi°_íabÀd
 = 1;

2840 
	`fûebích_log
(
LOG_INFO
, "Latency histogramÉnabled");

2841 
	}
}

2847 
	$∑r£r_v¨_assign_øndom
(*
«me
, 
cmd_t
 *
cmd
)

2849 
ønddi°_t
 *
∫dp
;

2850 
©å_t
 *
©å
;

2852 
∫dp
 = 
	`ønddi°_Æloc
();

2853 i‡(!
∫dp
) {

2854 
	`fûebích_log
(
LOG_ERROR
,

2859 
∫dp
->
∫d_ty≥
 = 0;

2862 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSRC
))) {

2863 
ønd§c
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

2865 
ønd§c
) {

2866 
FSV_URAND
:

2867 
∫dp
->
∫d_ty≥
 |
RAND_SRC_URANDOM
;

2869 
FSV_RAND48
:

2870 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

2875 
∫dp
->
∫d_ty≥
 |
RAND_SRC_GENERATOR
;

2879 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

2880 
∫dp
->
∫d_mö
 = 
©å
->
©å_avd
;

2882 
∫dp
->
∫d_mö
 = 
	`avd_öt_Æloc
(0);

2885 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

2886 
∫dp
->
∫d_round
 = 
©å
->
©å_avd
;

2888 
∫dp
->
∫d_round
 = 
	`avd_öt_Æloc
(0);

2891 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDTABLE
))) {

2892 
∫dp
->
∫d_¥obèbs
 = (
¥obèbít_t
 *)(
©å
->
©å_obj
);

2893 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_TABLE
;

2895 
∫dp
->
∫d_¥obèbs
 = 
NULL
;

2899 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
))) {

2900 
di°ty≥
 = ()
	`avd_gë_öt
(
©å
->
©å_avd
);

2902 
di°ty≥
) {

2903 
FSV_RANDUNI
:

2904 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_UNIFORM
;

2906 
FSA_RANDGAMMA
:

2907 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

2909 
FSV_RANDTAB
:

2910 
	`fûebích_log
(
LOG_ERROR
,

2916 
∫dp
->
∫d_ty≥
 |
RAND_TYPE_GAMMA
;

2920 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDSEED
)))

2921 
∫dp
->
∫d_£ed
 = 
©å
->
©å_avd
;

2923 
∫dp
->
∫d_£ed
 = 
	`avd_öt_Æloc
(0);

2926 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDGAMMA
)))

2927 
∫dp
->
∫d_gamma
 = 
©å
->
©å_avd
;

2929 
∫dp
->
∫d_gamma
 = 
	`avd_öt_Æloc
(1500);

2932 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_RANDMEAN
))) {

2933 
∫dp
->
∫d_món
 = 
©å
->
©å_avd
;

2934 } i‡((
∫dp
->
∫d_ty≥
 & 
RAND_TYPE_MASK
Ë=
RAND_TYPE_GAMMA
) {

2935 
∫dp
->
∫d_món
 = 
NULL
;

2937 
∫dp
->
∫d_món
 = 
	`avd_öt_Æloc
(0);

2940 
	`v¨_assign_øndom
(
«me
, 
∫dp
);

2942 
	`ønddi°_öô
(
∫dp
);

2943 
	}
}

2949 
cmd_t
 *

2950 
	$Æloc_cmd
()

2952 
cmd_t
 *
cmd
;

2954 
cmd
 = 
	`mÆloc
((*cmd));

2955 i‡(!
cmd
) {

2956 
	`fûebích_log
(
LOG_ERROR
, "Alloc cmd failed");

2957  
NULL
;

2960 
	`mem£t
(
cmd
, 0,  (
cmd_t
));

2962  
cmd
;

2963 
	}
}

2969 
©å_t
 *

2970 
	$Æloc_©å
()

2972 
©å_t
 *
©å
;

2974 
©å
 = 
	`mÆloc
((*attr));

2975 i‡(!
©å
)

2976  (
NULL
);

2978 (Ë
	`mem£t
(
©å
, 0, (*attr));

2980  (
©å
);

2981 
	}
}

2987 
¥obèbít_t
 *

2988 
	$Æloc_¥obèbít
()

2990 
¥obèbít_t
 *
πe
;

2992 i‡((
πe
 = 
	`mÆloc
( (
¥obèbít_t
))Ë=
NULL
) {

2993  (
NULL
);

2996 (Ë
	`mem£t
(
πe
, 0,  (
¥obèbít_t
));

2997  (
πe
);

2998 
	}
}

3004 
©å_t
 *

3005 
	$Æloc_lv¨_©å
(
v¨_t
 *
v¨
)

3007 
©å_t
 *
©å
;

3009 i‡((
©å
 = 
	`Æloc_©å
()Ë=
NULL
)

3010  (
NULL
);

3012 
©å
->
©å_«me
 = 
FSA_LVAR_ASSIGN
;

3013 
©å
->
©å_avd
 = (
avd_t
)
v¨
;

3015  (
©å
);

3016 
	}
}

3027 
©å_t
 *

3028 
	$gë_©å
(
cmd_t
 *
cmd
, 
öt64_t
 
«me
)

3030 
©å_t
 *
©å
;

3031 
©å_t
 *
πn
 = 
NULL
;

3033 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

3034 
©å
 =áâr->
©å_√xt
) {

3036 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

3038 
©å
->
©å_«me
,

3039 
«me
,

3040 
©å
->
©å_avd
);

3042 i‡(
©å
->
©å_«me
 =
«me
)

3043 
πn
 = 
©å
;

3046  
πn
;

3047 
	}
}

3055 
	$add_lv¨_to_li°
(
v¨_t
 *
√wlv¨
, v¨_à**
lv¨_li°
)

3057 
v¨_t
 *
¥ev
;

3060 i‡(
√wlv¨
 =
fûebích_shm
->
shm_v¨_loc_li°
) {

3062 
fûebích_shm
->
shm_v¨_loc_li°
 = 
√wlv¨
->
v¨_√xt
;

3065 
¥ev
 = 
fûebích_shm
->
shm_v¨_loc_li°
;Örev;

3066 
¥ev
 =Öªv->
v¨_√xt
) {

3067 i‡(
¥ev
->
v¨_√xt
 =
√wlv¨
)

3068 
¥ev
->
v¨_√xt
 = 
√wlv¨
->var_next;

3071 
√wlv¨
->
v¨_√xt
 = 
NULL
;

3074 
√wlv¨
->
v¨_√xt
 = *
lv¨_li°
;

3075 *
lv¨_li°
 = 
√wlv¨
;

3076 
	}
}

3086 
	$gë_©å_lv¨s
(
cmd_t
 *
cmd
, 
Êow›_t
 *
Êow›
)

3088 
©å_t
 *
©å
;

3089 
v¨_t
 *
‹ig_lv¨_li°
;

3092 
‹ig_lv¨_li°
 = 
Êow›
->
fo_lv¨_li°
;

3094 
©å
 = 
cmd
->
cmd_©å_li°
;áâ∏!
NULL
;

3095 
©å
 =áâr->
©å_√xt
) {

3097 i‡(
©å
->
©å_«me
 =
FSA_LVAR_ASSIGN
) {

3098 
v¨_t
 *
√wv¨
;

3100 i‡((
√wv¨
 = (
v¨_t
 *)
©å
->
©å_avd
Ë=
NULL
)

3103 
	`add_lv¨_to_li°
(
√wv¨
, &
Êow›
->
fo_lv¨_li°
);

3104 
	`v¨_upd©e_comp_lv¨s
(
√wv¨
, 
‹ig_lv¨_li°
, 
NULL
);

3107 
	}
}

3113 
li°_t
 *

3114 
	$Æloc_li°
()

3116 
li°_t
 *
li°
;

3118 i‡((
li°
 = 
	`mÆloc
( (
li°_t
))Ë=
NULL
) {

3119  (
NULL
);

3122 (Ë
	`mem£t
(
li°
, 0,  (
li°_t
));

3123  (
li°
);

3124 
	}
}

3131 
	$∑r£r_v¨_assign_cu°om
(*
«me
, 
cmd_t
 *
cmd
)

3133 
cv¨_t
 *
cv¨
;

3134 
©å_t
 *
©å
;

3135 *
ty≥
;

3136 *
∑ømëîs
;

3137 
ªt
;

3139 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_TYPE
);

3140 i‡(
©å
)

3141 
ty≥
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

3143 
	`fûebích_log
(
LOG_ERROR
, "define cvar:ÇoÅype specified");

3144 
	`fûebích_shutdown
(1);

3148 
cv¨
 = 
	`cv¨_Æloc
();

3149 i‡(!
cv¨
) {

3150 
	`fûebích_log
(
LOG_ERROR
, "FailedÅoállocate custom variable");

3151 
	`fûebích_shutdown
(1);

3156 (Ë
	`±hªad_muãx_öô
(&
cv¨
->
cv¨_lock
,

3157 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

3160 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MIN
)))

3161 
cv¨
->
mö
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

3163 
cv¨
->
mö
 = 
DBL_MIN
;

3165 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_MAX
)))

3166 
cv¨
->
max
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

3168 
cv¨
->
max
 = 
DBL_MAX
;

3170 i‡((
©å
 = 
	`gë_©å
(
cmd
, 
FSA_ROUND
)))

3171 
cv¨
->
round
 = 
	`avd_gë_dbl
(
©å
->
©å_avd
);

3173 
cv¨
->
round
 = 0;

3175 
©å
 = 
	`gë_©å
(
cmd
, 
FSA_PARAMETERS
);

3176 i‡(
©å
)

3177 
∑ømëîs
 = 
	`avd_gë_°r
(
©å
->
©å_avd
);

3179 
∑ømëîs
 = 
NULL
;

3181 
ªt
 = 
	`öô_cv¨_h™dÀ
(
cv¨
, 
ty≥
, 
∑ømëîs
);

3182 i‡(
ªt
) {

3183 
	`fûebích_log
(
LOG_FATAL
, "define cvar: failed for custom variable %s",

3184 
«me
);

3185 
	`fûebích_shutdown
(1);

3189 
	`v¨_assign_cu°om
(
«me
, 
cv¨
);

3190 
	}
}

	@parser_lex.c

4 
	#YY_INT_ALIGNED
 

	)

8 
	#FLEX_SCANNER


	)

9 
	#YY_FLEX_MAJOR_VERSION
 2

	)

10 
	#YY_FLEX_MINOR_VERSION
 6

	)

11 
	#YY_FLEX_SUBMINOR_VERSION
 4

	)

12 #i‡
YY_FLEX_SUBMINOR_VERSION
 > 0

13 
	#FLEX_BETA


	)

19 
	~<°dio.h
>

20 
	~<°rög.h
>

21 
	~<î∫o.h
>

22 
	~<°dlib.h
>

28 #i‚de‡
FLEXINT_H


29 
	#FLEXINT_H


	)

33 #i‡
deföed
 (
__STDC_VERSION__
) && __STDC_VERSION__ >= 199901L

38 #i‚de‡
__STDC_LIMIT_MACROS


39 
	#__STDC_LIMIT_MACROS
 1

	)

42 
	~<öây≥s.h
>

43 
öt8_t
 
	tÊex_öt8_t
;

44 
uöt8_t
 
	tÊex_uöt8_t
;

45 
öt16_t
 
	tÊex_öt16_t
;

46 
uöt16_t
 
	tÊex_uöt16_t
;

47 
öt32_t
 
	tÊex_öt32_t
;

48 
uöt32_t
 
	tÊex_uöt32_t
;

50 sig√d 
	tÊex_öt8_t
;

51 
	tÊex_öt16_t
;

52 
	tÊex_öt32_t
;

53 
	tÊex_uöt8_t
;

54 
	tÊex_uöt16_t
;

55 
	tÊex_uöt32_t
;

58 #i‚de‡
INT8_MIN


59 
	#INT8_MIN
 (-128)

	)

61 #i‚de‡
INT16_MIN


62 
	#INT16_MIN
 (-32767-1)

	)

64 #i‚de‡
INT32_MIN


65 
	#INT32_MIN
 (-2147483647-1)

	)

67 #i‚de‡
INT8_MAX


68 
	#INT8_MAX
 (127)

	)

70 #i‚de‡
INT16_MAX


71 
	#INT16_MAX
 (32767)

	)

73 #i‚de‡
INT32_MAX


74 
	#INT32_MAX
 (2147483647)

	)

76 #i‚de‡
UINT8_MAX


77 
	#UINT8_MAX
 (255U)

	)

79 #i‚de‡
UINT16_MAX


80 
	#UINT16_MAX
 (65535U)

	)

82 #i‚de‡
UINT32_MAX


83 
	#UINT32_MAX
 (4294967295U)

	)

86 #i‚de‡
SIZE_MAX


87 
	#SIZE_MAX
 (~(
size_t
)0)

	)

97 
	#yyc⁄°
 c⁄°

	)

99 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

100 
	#yyn‹ëu∫
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

102 
	#yyn‹ëu∫


	)

106 
	#YY_NULL
 0

	)

111 
	#YY_SC_TO_UI
(
c
Ë((
YY_CHAR
Ë(c))

	)

117 
	#BEGIN
 (
yy_°¨t
Ë1 + 2 *

	)

122 
	#YY_START
 (((
yy_°¨t
Ë- 1Ë/ 2)

	)

123 
	#YYSTATE
 
YY_START


	)

125 
	#YY_STATE_EOF
(
°©e
Ë(
YY_END_OF_BUFFER
 + sèã + 1)

	)

127 
	#YY_NEW_FILE
 
	`yyª°¨t
–
yyö
 )

	)

128 
	#YY_END_OF_BUFFER_CHAR
 0

	)

131 #i‚de‡
YY_BUF_SIZE


132 #ifde‡
__ü64__


137 
	#YY_BUF_SIZE
 32768

	)

139 
	#YY_BUF_SIZE
 16384

	)

145 
	#YY_STATE_BUF_SIZE
 ((
YY_BUF_SIZE
 + 2Ë* (
yy_°©e_ty≥
))

	)

147 #i‚de‡
YY_TYPEDEF_YY_BUFFER_STATE


148 
	#YY_TYPEDEF_YY_BUFFER_STATE


	)

149 
yy_buf„r_°©e
 *
	tYY_BUFFER_STATE
;

152 #i‚de‡
YY_TYPEDEF_YY_SIZE_T


153 
	#YY_TYPEDEF_YY_SIZE_T


	)

154 
size_t
 
	tyy_size_t
;

157 
yyÀng
;

159 
FILE
 *
yyö
, *
yyout
;

161 
	#EOB_ACT_CONTINUE_SCAN
 0

	)

162 
	#EOB_ACT_END_OF_FILE
 1

	)

163 
	#EOB_ACT_LAST_MATCH
 2

	)

165 
	#YY_LESS_LINENO
(
n
)

	)

166 
	#YY_LINENO_REWIND_TO
(
±r
)

	)

169 
	#yyÀss
(
n
) \

173 
yyÀss_ma¸o_¨g
 = (
n
); \

174 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

175 *
yy_˝
 = (
yy_hﬁd_ch¨
); \

176 
YY_RESTORE_YY_MORE_OFFSET
 \

177 (
yy_c_buf_p
Ë
yy_˝
 = 
yy_bp
 + 
yyÀss_ma¸o_¨g
 - 
YY_MORE_ADJ
; \

178 
YY_DO_BEFORE_ACTION
; \

180  0 )

	)

181 
	#u≈ut
(
c
Ë
	`yyu≈ut
–c, (
yyãxt_±r
Ë)

	)

183 #i‚de‡
YY_STRUCT_YY_BUFFER_STATE


184 
	#YY_STRUCT_YY_BUFFER_STATE


	)

185 
	syy_buf„r_°©e


187 
FILE
 *
	myy_öput_fûe
;

189 *
	myy_ch_buf
;

190 *
	myy_buf_pos
;

195 
	myy_buf_size
;

200 
	myy_n_ch¨s
;

206 
	myy_is_our_buf„r
;

213 
	myy_is_öãø˘ive
;

219 
	myy_©_bﬁ
;

221 
	myy_bs_löío
;

222 
	myy_bs_cﬁumn
;

227 
	myy_fûl_buf„r
;

229 
	myy_buf„r_°©us
;

231 
	#YY_BUFFER_NEW
 0

	)

232 
	#YY_BUFFER_NORMAL
 1

	)

243 
	#YY_BUFFER_EOF_PENDING
 2

	)

249 
size_t
 
	gyy_buf„r_°ack_t›
 = 0;

250 
size_t
 
	gyy_buf„r_°ack_max
 = 0;

251 
YY_BUFFER_STATE
 * 
	gyy_buf„r_°ack
 = 
NULL
;

259 
	#YY_CURRENT_BUFFER
 ( (
yy_buf„r_°ack
) \

260 ? (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)] \

261 : 
NULL
)

	)

265 
	#YY_CURRENT_BUFFER_LVALUE
 (
yy_buf„r_°ack
)[(
yy_buf„r_°ack_t›
)]

	)

268 
	gyy_hﬁd_ch¨
;

269 
	gyy_n_ch¨s
;

270 
	gyyÀng
;

273 *
	gyy_c_buf_p
 = 
NULL
;

274 
	gyy_öô
 = 0;

275 
	gyy_°¨t
 = 0;

280 
	gyy_did_buf„r_swôch_⁄_eof
;

282 
yyª°¨t
 ( 
FILE
 *
öput_fûe
 );

283 
yy_swôch_to_buf„r
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

284 
YY_BUFFER_STATE
 
yy_¸óã_buf„r
 ( 
FILE
 *
fûe
, 
size
 );

285 
yy_dñëe_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

286 
yy_Êush_buf„r
 ( 
YY_BUFFER_STATE
 
b
 );

287 
yypush_buf„r_°©e
 ( 
YY_BUFFER_STATE
 
√w_buf„r
 );

288 
yyp›_buf„r_°©e
 ( );

290 
yyísuª_buf„r_°ack
 ( );

291 
yy_lﬂd_buf„r_°©e
 ( );

292 
yy_öô_buf„r
 ( 
YY_BUFFER_STATE
 
b
, 
FILE
 *
fûe
 );

293 
	#YY_FLUSH_BUFFER
 
	`yy_Êush_buf„r
–
YY_CURRENT_BUFFER
 )

	)

295 
YY_BUFFER_STATE
 
yy_sˇn_buf„r
 ( *
ba£
, 
yy_size_t
 
size
 );

296 
YY_BUFFER_STATE
 
yy_sˇn_°rög
 ( c⁄° *
yy_°r
 );

297 
YY_BUFFER_STATE
 
yy_sˇn_byãs
 ( c⁄° *
byãs
, 
Àn
 );

299 *
yyÆloc
 ( 
yy_size_t
 );

300 *
yyªÆloc
 ( *, 
yy_size_t
 );

301 
yy‰ì
 ( * );

303 
	#yy_√w_buf„r
 
yy_¸óã_buf„r


	)

304 
	#yy_£t_öãø˘ive
(
is_öãø˘ive
) \

306 i‡–! 
YY_CURRENT_BUFFER
 ){ \

307 
	`yyísuª_buf„r_°ack
 (); \

308 
YY_CURRENT_BUFFER_LVALUE
 = \

309 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

311 
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 = 
is_öãø˘ive
; \

312 }

	)

313 
	#yy_£t_bﬁ
(
©_bﬁ
) \

315 i‡–! 
YY_CURRENT_BUFFER
 ){\

316 
	`yyísuª_buf„r_°ack
 (); \

317 
YY_CURRENT_BUFFER_LVALUE
 = \

318 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 ); \

320 
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
 = 
©_bﬁ
; \

321 }

	)

322 
	#YY_AT_BOL
(Ë(
YY_CURRENT_BUFFER_LVALUE
->
yy_©_bﬁ
)

	)

326 
	#yywøp
(Ë–1)

	)

327 
	#YY_SKIP_YYWRAP


	)

328 
Êex_uöt8_t
 
	tYY_CHAR
;

330 
FILE
 *
	gyyö
 = 
NULL
, *
	gyyout
 = NULL;

332 
	tyy_°©e_ty≥
;

334 
yylöío
;

335 
	gyylöío
 = 1;

337 *
yyãxt
;

338 #ifde‡
yyãxt_±r


339 #unde‡
yyãxt_±r


341 
	#yyãxt_±r
 
yyãxt


	)

343 
yy_°©e_ty≥
 
yy_gë_¥evious_°©e
 ( );

344 
yy_°©e_ty≥
 
yy_åy_NUL_å™s
 ( yy_°©e_ty≥ 
cuºít_°©e
 );

345 
yy_gë_√xt_buf„r
 ( );

346 
yyn‹ëu∫
 
yy_Áèl_îr‹
 ( c⁄° * 
msg
 );

351 
	#YY_DO_BEFORE_ACTION
 \

352 (
yyãxt_±r
Ë
yy_bp
; \

353 
yyÀng
 = (Ë(
yy_˝
 - 
yy_bp
); \

354 (
yy_hﬁd_ch¨
Ë*
yy_˝
; \

355 *
yy_˝
 = '\0'; \

356 (
yy_c_buf_p
Ë
yy_˝
;

	)

357 
	#YY_NUM_RULES
 111

	)

358 
	#YY_END_OF_BUFFER
 112

	)

361 
	syy_å™s_öfo


363 
Êex_öt32_t
 
	myy_vîify
;

364 
Êex_öt32_t
 
	myy_nxt
;

366 c⁄° 
Êex_öt16_t
 
	gyy_ac˚±
[886] =

467 c⁄° 
YY_CHAR
 
	gyy_ec
[256] =

499 c⁄° 
YY_CHAR
 
	gyy_mëa
[47] =

508 c⁄° 
Êex_öt16_t
 
	gyy_ba£
[892] =

611 c⁄° 
Êex_öt16_t
 
	gyy_def
[892] =

714 c⁄° 
Êex_öt16_t
 
	gyy_nxt
[1429] =

875 c⁄° 
Êex_öt16_t
 
	gyy_chk
[1429] =

1036 
yy_°©e_ty≥
 
	gyy_œ°_ac˚±ög_°©e
;

1037 *
	gyy_œ°_ac˚±ög_˝os
;

1039 
yy_Êex_debug
;

1040 
	gyy_Êex_debug
 = 0;

1045 
	#REJECT
 
ªje˘_u£d_but_nŸ_dëe˘ed


	)

1046 
	#yym‹e
(Ë
yym‹e_u£d_but_nŸ_dëe˘ed


	)

1047 
	#YY_MORE_ADJ
 0

	)

1048 
	#YY_RESTORE_YY_MORE_OFFSET


	)

1049 *
	gyyãxt
;

1079 
	~<°dlib.h
>

1080 
	~<sys/ty≥s.h
>

1081 
	~<as£π.h
>

1082 
	~<°rög.h
>

1083 
	~<î∫o.h
>

1084 #ifde‡
HAVE_STDINT_H


1085 
	~<°döt.h
>

1088 
	~"fûebích.h
"

1089 
	~"∑r£πy≥s.h
"

1090 
	~"utûs.h
"

1091 
	~"∑r£r_gøm.h
"

1093 
	gÀx_löío
 = 1;

1094 
yyîr‹
(*
s
);

1099 
	#INITIAL
 0

	)

1100 
	#WHITESTRINGSTATE
 1

	)

1102 #i‚de‡
YY_NO_UNISTD_H


1107 
	~<uni°d.h
>

1110 #i‚de‡
YY_EXTRA_TYPE


1111 
	#YY_EXTRA_TYPE
 *

	)

1114 
yy_öô_globÆs
 ( );

1119 
yyÀx_de°roy
 ( );

1121 
yygë_debug
 ( );

1123 
yy£t_debug
 ( 
debug_Êag
 );

1125 
YY_EXTRA_TYPE
 
yygë_exåa
 ( );

1127 
yy£t_exåa
 ( 
YY_EXTRA_TYPE
 
u£r_deföed
 );

1129 
FILE
 *
yygë_ö
 ( );

1131 
yy£t_ö
 ( 
FILE
 * 
_ö_°r
 );

1133 
FILE
 *
yygë_out
 ( );

1135 
yy£t_out
 ( 
FILE
 * 
_out_°r
 );

1137 
yygë_Àng
 ( );

1139 *
yygë_ãxt
 ( );

1141 
yygë_löío
 ( );

1143 
yy£t_löío
 ( 
_löe_numbî
 );

1149 #i‚de‡
YY_SKIP_YYWRAP


1150 #ifde‡
__˝lu•lus


1151 "C" 
yywøp
 ( );

1153 
yywøp
 ( );

1157 #i‚de‡
YY_NO_UNPUT


1161 #i‚de‡
yyãxt_±r


1162 
yy_Êex_°∫˝y
 ( *, const *, );

1165 #ifde‡
YY_NEED_STRLEN


1166 
yy_Êex_°æí
 ( const * );

1169 #i‚de‡
YY_NO_INPUT


1170 #ifde‡
__˝lu•lus


1171 
yyöput
 ( );

1173 
öput
 ( );

1179 #i‚de‡
YY_READ_BUF_SIZE


1180 #ifde‡
__ü64__


1182 
	#YY_READ_BUF_SIZE
 16384

	)

1184 
	#YY_READ_BUF_SIZE
 8192

	)

1189 #i‚de‡
ECHO


1193 
	#ECHO
 dÿ{ i‡(
	`fwrôe
–
yyãxt
, (
size_t
Ë
yyÀng
, 1, 
yyout
 )Ë{} } 0)

	)

1199 #i‚de‡
YY_INPUT


1200 
	#YY_INPUT
(
buf
,
ªsu…
,
max_size
) \

1201 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_is_öãø˘ive
 ) \

1203 
c
 = '*'; \

1204 
n
; \

1205  
n
 = 0;Ç < 
max_size
 && \

1206 (
c
 = 
	`gëc
–
yyö
 )Ë!
EOF
 && c !'\n'; ++
n
 ) \

1207 
buf
[
n
] = (Ë
c
; \

1208 i‡–
c
 == '\n' ) \

1209 
buf
[
n
++] = (Ë
c
; \

1210 i‡–
c
 =
EOF
 && 
	`„º‹
–
yyö
 ) ) \

1211 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1212 
ªsu…
 = 
n
; \

1216 
î∫o
=0; \

1217  (
ªsu…
 = (Ë
	`‰ód
(
buf
, 1, (
yy_size_t
Ë
max_size
, 
yyö
)Ë=0 && 
	`„º‹
(yyin)) \

1219 if–
î∫o
 !
EINTR
) \

1221 
	`YY_FATAL_ERROR
( "input in flex scanner failed" ); \

1224 
î∫o
=0; \

1225 
	`˛óªº
(
yyö
); \

1229 

	)

1236 #i‚de‡
yyãrmö©e


1237 
	#yyãrmö©e
(Ë 
YY_NULL


	)

1241 #i‚de‡
YY_START_STACK_INCR


1242 
	#YY_START_STACK_INCR
 25

	)

1246 #i‚de‡
YY_FATAL_ERROR


1247 
	#YY_FATAL_ERROR
(
msg
Ë
	`yy_Áèl_îr‹
–msg )

	)

1255 #i‚de‡
YY_DECL


1256 
	#YY_DECL_IS_OURS
 1

	)

1258 
yyÀx
 ();

1260 
	#YY_DECL
 
	`yyÀx
 ()

	)

1266 #i‚de‡
YY_USER_ACTION


1267 
	#YY_USER_ACTION


	)

1271 #i‚de‡
YY_BREAK


1272 
	#YY_BREAK
 ;

	)

1275 
	#YY_RULE_SETUP
 \

1276 
YY_USER_ACTION


	)

1280 
	gYY_DECL


1282 
yy_°©e_ty≥
 
	gyy_cuºít_°©e
;

1283 *
	gyy_˝
, *
	gyy_bp
;

1284 
	gyy_a˘
;

1286 i‡–!(
	gyy_öô
) )

1288 (
	gyy_öô
) = 1;

1290 #ifde‡
YY_USER_INIT


1291 
	gYY_USER_INIT
;

1294 i‡–! (
	gyy_°¨t
) )

1295 (
	gyy_°¨t
) = 1;

1297 i‡–! 
	gyyö
 )

1298 
	gyyö
 = 
°dö
;

1300 i‡–! 
	gyyout
 )

1301 
	gyyout
 = 
°dout
;

1303 i‡–! 
	gYY_CURRENT_BUFFER
 ) {

1304 
yyísuª_buf„r_°ack
 ();

1305 
	gYY_CURRENT_BUFFER_LVALUE
 =

1306 
yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

1309 
yy_lﬂd_buf„r_°©e
( );

1320 
	gyy_˝
 = (
yy_c_buf_p
);

1323 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

1328 
	gyy_bp
 = 
yy_˝
;

1330 
	gyy_cuºít_°©e
 = (
yy_°¨t
);

1331 
	gyy_m©ch
:

1334 
YY_CHAR
 
yy_c
 = 
yy_ec
[
YY_SC_TO_UI
(*
yy_˝
)] ;

1335 i‡–
	gyy_ac˚±
[
yy_cuºít_°©e
] )

1337 (
	gyy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

1338 (
	gyy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

1340  
	gyy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
	gyy_c
] != yy_current_state )

1342 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

1343 i‡–
	gyy_cuºít_°©e
 >= 886 )

1344 
yy_c
 = 
yy_mëa
[yy_c];

1346 
	gyy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
];

1347 ++
	gyy_˝
;

1349  
	gyy_ba£
[
yy_cuºít_°©e
] != 1382 );

1351 
	gyy_föd_a˘i⁄
:

1352 
yy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1353 i‡–
	gyy_a˘
 == 0 )

1355 
yy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1356 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1357 
	gyy_a˘
 = 
yy_ac˚±
[
yy_cuºít_°©e
];

1360 
	gYY_DO_BEFORE_ACTION
;

1362 
	gdo_a˘i⁄
:

1364  
yy_a˘
 )

1368 *
yy_˝
 = (
yy_hﬁd_ch¨
);

1369 
	gyy_˝
 = (
yy_œ°_ac˚±ög_˝os
);

1370 
	gyy_cuºít_°©e
 = (
yy_œ°_ac˚±ög_°©e
);

1371 
	gyy_föd_a˘i⁄
;

1375 
YY_RULE_SETUP


1377 { 
Àx_löío
++; }

1378 
YY_BREAK


1380 
YY_RULE_SETUP


1383 
YY_BREAK


1385 
YY_RULE_SETUP


1388 
YY_BREAK


1390 
YY_RULE_SETUP


1392 {  
FSC_CREATE
; }

1393 
YY_BREAK


1395 
YY_RULE_SETUP


1397 {  
FSC_DEFINE
; }

1398 
YY_BREAK


1400 
YY_RULE_SETUP


1402 {  
FSC_DEBUG
; }

1403 
YY_BREAK


1405 
YY_RULE_SETUP


1407 {  
FSC_DOMULTISYNC
; }

1408 
YY_BREAK


1410 
YY_RULE_SETUP


1412 {  
FSC_ECHO
; }

1413 
YY_BREAK


1415 
YY_RULE_SETUP


1417 {  
FSC_ENABLE
; }

1418 
YY_BREAK


1420 
YY_RULE_SETUP


1422 {  
FSC_EVENTGEN
; }

1423 
YY_BREAK


1425 
YY_RULE_SETUP


1427 {  
FSC_QUIT
; }

1428 
YY_BREAK


1430 
YY_RULE_SETUP


1432 {  
FSC_LIST
; }

1433 
YY_BREAK


1435 
YY_RULE_SETUP


1437 {  
FSC_RUN
; }

1438 
YY_BREAK


1440 
YY_RULE_SETUP


1442 {  
FSC_PSRUN
; }

1443 
YY_BREAK


1445 
YY_RULE_SETUP


1447 {  
FSC_SET
; }

1448 
YY_BREAK


1450 
YY_RULE_SETUP


1452 {  
FSC_SLEEP
; }

1453 
YY_BREAK


1455 
YY_RULE_SETUP


1457 {  
FSC_SYSTEM
; }

1458 
YY_BREAK


1460 
YY_RULE_SETUP


1462 {  
FSC_VERSION
; }

1463 
YY_BREAK


1465 
YY_RULE_SETUP


1467 {  
FSE_FILE
; }

1468 
YY_BREAK


1470 
YY_RULE_SETUP


1472 {  
FSE_FILES
; }

1473 
YY_BREAK


1475 
YY_RULE_SETUP


1477 {  
FSE_FILESET
; }

1478 
YY_BREAK


1480 
YY_RULE_SETUP


1482 {  
FSE_PROC
; }

1483 
YY_BREAK


1485 
YY_RULE_SETUP


1487 {  
FSE_THREAD
; }

1488 
YY_BREAK


1490 
YY_RULE_SETUP


1492 {  
FSE_FLOWOP
; }

1493 
YY_BREAK


1495 
YY_RULE_SETUP


1497 {  
FSE_RAND
; }

1498 
YY_BREAK


1500 
YY_RULE_SETUP


1502 {  
FSE_MODE
; }

1503 
YY_BREAK


1505 
YY_RULE_SETUP


1507 {  
FSE_MULTI
; }

1508 
YY_BREAK


1510 
YY_RULE_SETUP


1512 {  
FSE_CVAR
; }

1513 
YY_BREAK


1515 
YY_RULE_SETUP


1517 {  
FSA_ALLDONE
; }

1518 
YY_BREAK


1520 
YY_RULE_SETUP


1522 {  
FSA_BLOCKING
; }

1523 
YY_BREAK


1525 
YY_RULE_SETUP


1527 {  
FSA_CLIENT
; }

1528 
YY_BREAK


1530 
YY_RULE_SETUP


1532 {  
FSA_DIRWIDTH
; }

1533 
YY_BREAK


1535 
YY_RULE_SETUP


1537 {  
FSA_DIRDEPTHRV
; }

1538 
YY_BREAK


1540 
YY_RULE_SETUP


1542 {  
FSA_DIRECTIO
; }

1543 
YY_BREAK


1545 
YY_RULE_SETUP


1547 {  
FSA_DIRGAMMA
; }

1548 
YY_BREAK


1550 
YY_RULE_SETUP


1552 {  
FSA_DSYNC
; }

1553 
YY_BREAK


1555 
YY_RULE_SETUP


1557 {  
FSA_ENTRIES
;}

1558 
YY_BREAK


1560 
YY_RULE_SETUP


1562 {  
FSA_FD
; }

1563 
YY_BREAK


1565 
YY_RULE_SETUP


1567 {  
FSA_FILENAME
; }

1568 
YY_BREAK


1570 
YY_RULE_SETUP


1572 {  
FSA_FILENAME
; }

1573 
YY_BREAK


1575 
YY_RULE_SETUP


1577 {  
FSA_SIZE
; }

1578 
YY_BREAK


1580 
YY_RULE_SETUP


1582 {  
FSA_FIRSTDONE
; }

1583 
YY_BREAK


1585 
YY_RULE_SETUP


1587 {  
FSA_RANDGAMMA
; }

1588 
YY_BREAK


1590 
YY_RULE_SETUP


1592 {  
FSA_HIGHWATER
; }

1593 
YY_BREAK


1595 
YY_RULE_SETUP


1597 {  
FSA_INDEXED
; }

1598 
YY_BREAK


1600 
YY_RULE_SETUP


1602 {  
FSA_INSTANCES
;}

1603 
YY_BREAK


1605 
YY_RULE_SETUP


1607 {  
FSA_IOSIZE
; }

1608 
YY_BREAK


1610 
YY_RULE_SETUP


1612 {  
FSA_ITERS
;}

1613 
YY_BREAK


1615 
YY_RULE_SETUP


1617 {  
FSA_LEAFDIRS
;}

1618 
YY_BREAK


1620 
YY_RULE_SETUP


1622 {  
FSA_MASTER
; }

1623 
YY_BREAK


1625 
YY_RULE_SETUP


1627 {  
FSA_RANDMEAN
; }

1628 
YY_BREAK


1630 
YY_RULE_SETUP


1632 {  
FSA_MEMSIZE
; }

1633 
YY_BREAK


1635 
YY_RULE_SETUP


1637 {  
FSA_IOPRIO
; }

1638 
YY_BREAK


1640 
YY_RULE_SETUP


1642 {  
FSA_MIN
; }

1643 
YY_BREAK


1645 
YY_RULE_SETUP


1647 {  
FSA_MAX
; }

1648 
YY_BREAK


1650 
YY_RULE_SETUP


1652 {  
FSA_NAME
;}

1653 
YY_BREAK


1655 
YY_RULE_SETUP


1657 {  
FSA_NICE
;}

1658 
YY_BREAK


1660 
YY_RULE_SETUP


1662 {  
FSA_ROTATEFD
; }

1663 
YY_BREAK


1665 
YY_RULE_SETUP


1667 {  
FSA_PARALLOC
; }

1668 
YY_BREAK


1670 
YY_RULE_SETUP


1672 {  
FSA_PARAMETERS
; }

1673 
YY_BREAK


1675 
YY_RULE_SETUP


1677 {  
FSA_PATH
; }

1678 
YY_BREAK


1680 
YY_RULE_SETUP


1682 {  
FSA_PREALLOC
; }

1683 
YY_BREAK


1685 
YY_RULE_SETUP


1687 {  
FSA_RANDOM
;}

1688 
YY_BREAK


1690 
YY_RULE_SETUP


1692 {  
FSA_RANDSRC
; }

1693 
YY_BREAK


1695 
YY_RULE_SETUP


1697 {  
FSA_RANDTABLE
; }

1698 
YY_BREAK


1700 
YY_RULE_SETUP


1702 {  
FSA_RATE
;}

1703 
YY_BREAK


1705 
YY_RULE_SETUP


1707 {  
FSA_READONLY
; }

1708 
YY_BREAK


1710 
YY_RULE_SETUP


1712 {  
FSA_WRITEONLY
; }

1713 
YY_BREAK


1715 
YY_RULE_SETUP


1717 {  
FSA_REUSE
; }

1718 
YY_BREAK


1720 
YY_RULE_SETUP


1722 {  
FSA_ROUND
; }

1723 
YY_BREAK


1725 
YY_RULE_SETUP


1727 {  
FSA_RANDSEED
; }

1728 
YY_BREAK


1730 
YY_RULE_SETUP


1732 {  
FSA_SIZE
; }

1733 
YY_BREAK


1735 
YY_RULE_SETUP


1737 {  
FSA_SRCFD
; }

1738 
YY_BREAK


1740 
YY_RULE_SETUP


1742 {  
FSA_TARGET
;}

1743 
YY_BREAK


1745 
YY_RULE_SETUP


1747 {  
FSA_TIMEOUT
; }

1748 
YY_BREAK


1750 
YY_RULE_SETUP


1752 {  
FSA_TRUSTTREE
; }

1753 
YY_BREAK


1755 
YY_RULE_SETUP


1757 {  
FSA_TYPE
; }

1758 
YY_BREAK


1760 
YY_RULE_SETUP


1762 {  
FSA_USEISM
;}

1763 
YY_BREAK


1765 
YY_RULE_SETUP


1767 {  
FSA_VALUE
;}

1768 
YY_BREAK


1770 
YY_RULE_SETUP


1772 {  
FSA_WSS
; }

1773 
YY_BREAK


1775 
YY_RULE_SETUP


1777 {  
FSA_NOUSESTATS
; }

1778 
YY_BREAK


1780 
YY_RULE_SETUP


1782 {  
FSA_LATHIST
; }

1783 
YY_BREAK


1785 
YY_RULE_SETUP


1787 {  
FSV_RANDUNI
; }

1788 
YY_BREAK


1790 
YY_RULE_SETUP


1792 {  
FSV_RANDTAB
; }

1793 
YY_BREAK


1795 
YY_RULE_SETUP


1797 {  
FSV_URAND
; }

1798 
YY_BREAK


1800 
YY_RULE_SETUP


1802 {  
FSV_RAND48
; }

1803 
YY_BREAK


1805 
YY_RULE_SETUP


1807 {  
FSA_NOREADAHEAD
; }

1808 
YY_BREAK


1810 
YY_RULE_SETUP


1813 
BEGIN
 
WHITESTRINGSTATE
;

1814  
	gFSK_QUOTE
;

1816 
YY_BREAK


1818 
YY_RULE_SETUP


1821 
BEGIN
 
INITIAL
;

1822  
	gFSK_QUOTE
;

1824 
YY_BREAK


1827 
YY_RULE_SETUP


1830 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1831 
yyîr‹
("Out of memory");

1832 
fûebích_shutdown
(1);

1834  
	gFSV_WHITESTRING
;

1836 
YY_BREAK


1838 
YY_RULE_SETUP


1841 
yylvÆ
.
svÆ
 = "\n";

1842  
	gFSV_WHITESTRING
;

1844 
YY_BREAK


1847 
YY_RULE_SETUP


1850 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
 + 1)Ë=
NULL
) {

1851 
yyîr‹
("Out of memory");

1852 
fûebích_shutdown
(1);

1854  
	gFSV_WHITESTRING
;

1856 
YY_BREAK


1859 
YY_RULE_SETUP


1862 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1863 
yyîr‹
("Out of memory");

1864 
fûebích_shutdown
(1);

1866  
	gFSV_WHITESTRING
;

1868 
YY_BREAK


1870 
YY_RULE_SETUP


1872 {  
FSK_OPENLST
; }

1873 
YY_BREAK


1875 
YY_RULE_SETUP


1877 {  
FSK_CLOSELST
; }

1878 
YY_BREAK


1880 
YY_RULE_SETUP


1882 {  
FSK_OPENPAR
; }

1883 
YY_BREAK


1885 
YY_RULE_SETUP


1887 {  
FSK_CLOSEPAR
; }

1888 
YY_BREAK


1890 
YY_RULE_SETUP


1892 {  
FSK_ASSIGN
; }

1893 
YY_BREAK


1895 
YY_RULE_SETUP


1897 {  
FSK_SEPLST
; }

1898 
YY_BREAK


1900 
YY_RULE_SETUP


1902 {  
FSK_IN
; }

1903 
YY_BREAK


1905 
YY_RULE_SETUP


1908 
î∫o
 = 0;

1909 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1910 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1911 (Ë
fûebích_log
(
LOG_ERROR
,

1912 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1913 
°ªº‹
(
î∫o
));

1915  
	gFSV_VAL_POSINT
;

1917 
YY_BREAK


1919 
YY_RULE_SETUP


1922 
î∫o
 = 0;

1923 
	gyylvÆ
.
	givÆ
 = 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1924 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1925 (Ë
fûebích_log
(
LOG_ERROR
,

1926 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1927 
°ªº‹
(
î∫o
));

1929  
	gFSV_VAL_NEGINT
;

1931 
YY_BREAK


1933 
YY_RULE_SETUP


1936 
î∫o
 = 0;

1937 
	gyylvÆ
.
	givÆ
 = 
KB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1938 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1939 (Ë
fûebích_log
(
LOG_ERROR
,

1940 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1941 
°ªº‹
(
î∫o
));

1943  
	gFSV_VAL_POSINT
;

1945 
YY_BREAK


1947 
YY_RULE_SETUP


1950 
î∫o
 = 0;

1951 
	gyylvÆ
.
	givÆ
 = 
MB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1952 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1953 (Ë
fûebích_log
(
LOG_ERROR
,

1954 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1955 
°ªº‹
(
î∫o
));

1957  
	gFSV_VAL_POSINT
;

1959 
YY_BREAK


1961 
YY_RULE_SETUP


1964 
î∫o
 = 0;

1965 
	gyylvÆ
.
	givÆ
 = 
GB
 * 
°πﬁl
(
yyãxt
, 
NULL
, 10);

1966 i‡(
	gî∫o
 =
EINVAL
 || 
î∫o
 =
ERANGE
) {

1967 (Ë
fûebích_log
(
LOG_ERROR
,

1968 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

1969 
°ªº‹
(
î∫o
));

1971  
	gFSV_VAL_POSINT
;

1973 
YY_BREAK


1975 
YY_RULE_SETUP


1978 
yylvÆ
.
bvÆ
 = 
TRUE
;

1979  
	gFSV_VAL_BOOLEAN
;

1981 
YY_BREAK


1983 
YY_RULE_SETUP


1986 
yylvÆ
.
bvÆ
 = 
FALSE
;

1987  
	gFSV_VAL_BOOLEAN
;

1989 
YY_BREAK


1991 
YY_RULE_SETUP


1994 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

1995 
yyîr‹
("Out of memory");

1996 
fûebích_shutdown
(1);

1999  
	gFSV_VARIABLE
;

2001 
YY_BREAK


2003 
YY_RULE_SETUP


2006 i‡((
yylvÆ
.
svÆ
 = 
°rdup
(
yyãxt
)Ë=
NULL
) {

2007 
yyîr‹
("Out of memory");

2008 
fûebích_shutdown
(1);

2010  
	gFSV_STRING
;

2012 
YY_BREAK


2014 
YY_RULE_SETUP


2017 
yyîr‹
("Illegal character");

2019 
YY_BREAK


2021 
YY_RULE_SETUP


2023 
ECHO
;

2024 
	gYY_BREAK


2026 
YY_STATE_EOF
(
INITIAL
):

2027 
YY_STATE_EOF
(
WHITESTRINGSTATE
):

2028 
yyãrmö©e
();

2030 
	gYY_END_OF_BUFFER
:

2033 
yy_amou¡_of_m©ched_ãxt
 = (Ë(
yy_˝
 - (
yyãxt_±r
)) - 1;

2036 *
	gyy_˝
 = (
yy_hﬁd_ch¨
);

2037 
YY_RESTORE_YY_MORE_OFFSET


2039 i‡–
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 =
YY_BUFFER_NEW
 )

2050 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2051 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_öput_fûe
 = 
yyö
;

2052 
	gYY_CURRENT_BUFFER_LVALUE
->
	gyy_buf„r_°©us
 = 
YY_BUFFER_NORMAL
;

2062 i‡–(
	gyy_c_buf_p
Ë<&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2064 
yy_°©e_ty≥
 
yy_√xt_°©e
;

2066 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2068 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2079 
	gyy_√xt_°©e
 = 
yy_åy_NUL_å™s
–
yy_cuºít_°©e
 );

2081 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2083 i‡–
	gyy_√xt_°©e
 )

2086 
	gyy_˝
 = ++(
yy_c_buf_p
);

2087 
	gyy_cuºít_°©e
 = 
yy_√xt_°©e
;

2088 
	gyy_m©ch
;

2093 
	gyy_˝
 = (
yy_c_buf_p
);

2094 
	gyy_föd_a˘i⁄
;

2098  
yy_gë_√xt_buf„r
( ) )

2100 
	gEOB_ACT_END_OF_FILE
:

2102 (
yy_did_buf„r_swôch_⁄_eof
) = 0;

2104 i‡–
yywøp
( ) )

2115 (
	gyy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2117 
	gyy_a˘
 = 
YY_STATE_EOF
(
YY_START
);

2118 
	gdo_a˘i⁄
;

2123 i‡–! (
	gyy_did_buf„r_swôch_⁄_eof
) )

2124 
	gYY_NEW_FILE
;

2129 
	gEOB_ACT_CONTINUE_SCAN
:

2130 (
yy_c_buf_p
) =

2131 (
yyãxt_±r
Ë+ 
yy_amou¡_of_m©ched_ãxt
;

2133 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2135 
	gyy_˝
 = (
yy_c_buf_p
);

2136 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2137 
	gyy_m©ch
;

2139 
	gEOB_ACT_LAST_MATCH
:

2140 (
yy_c_buf_p
) =

2141 &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)];

2143 
	gyy_cuºít_°©e
 = 
yy_gë_¥evious_°©e
( );

2145 
	gyy_˝
 = (
yy_c_buf_p
);

2146 
	gyy_bp
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
;

2147 
	gyy_föd_a˘i⁄
;

2153 
YY_FATAL_ERROR
(

2167 
	$yy_gë_√xt_buf„r
 ()

2169 *
de°
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
;

2170 *
sour˚
 = (
yyãxt_±r
);

2171 
numbî_to_move
, 
i
;

2172 
ªt_vÆ
;

2174 i‡–(
yy_c_buf_p
Ë> &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
) + 1] )

2175 
	`YY_FATAL_ERROR
(

2178 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_fûl_buf„r
 == 0 )

2180 i‡–(
yy_c_buf_p
Ë- (
yyãxt_±r
Ë- 
YY_MORE_ADJ
 == 1 )

2185  
EOB_ACT_END_OF_FILE
;

2193  
EOB_ACT_LAST_MATCH
;

2200 
numbî_to_move
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
) - 1);

2202  
i
 = 0; i < 
numbî_to_move
; ++i )

2203 *(
de°
++Ë*(
sour˚
++);

2205 i‡–
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =
YY_BUFFER_EOF_PENDING
 )

2209 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars) = 0;

2213 
num_to_ªad
 =

2214 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 - 
numbî_to_move
 - 1;

2216  
num_to_ªad
 <= 0 )

2220 
YY_BUFFER_STATE
 
b
 = 
YY_CURRENT_BUFFER_LVALUE
;

2222 
yy_c_buf_p_off£t
 =

2223 (Ë((
yy_c_buf_p
Ë- 
b
->
yy_ch_buf
);

2225 i‡–
b
->
yy_is_our_buf„r
 )

2227 
√w_size
 = 
b
->
yy_buf_size
 * 2;

2229 i‡–
√w_size
 <= 0 )

2230 
b
->
yy_buf_size
 += b->yy_buf_size / 8;

2232 
b
->
yy_buf_size
 *= 2;

2234 
b
->
yy_ch_buf
 = (*)

2236 
	`yyªÆloc
–(*Ë
b
->
yy_ch_buf
,

2237 (
yy_size_t
Ë(
b
->
yy_buf_size
 + 2) );

2241 
b
->
yy_ch_buf
 = 
NULL
;

2243 i‡–! 
b
->
yy_ch_buf
 )

2244 
	`YY_FATAL_ERROR
(

2247 (
yy_c_buf_p
Ë&
b
->
yy_ch_buf
[
yy_c_buf_p_off£t
];

2249 
num_to_ªad
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 -

2250 
numbî_to_move
 - 1;

2254 i‡–
num_to_ªad
 > 
YY_READ_BUF_SIZE
 )

2255 
num_to_ªad
 = 
YY_READ_BUF_SIZE
;

2258 
	`YY_INPUT
–(&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[
numbî_to_move
]),

2259 (
yy_n_ch¨s
), 
num_to_ªad
 );

2261 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2264 i‡–(
yy_n_ch¨s
) == 0 )

2266 i‡–
numbî_to_move
 =
YY_MORE_ADJ
 )

2268 
ªt_vÆ
 = 
EOB_ACT_END_OF_FILE
;

2269 
	`yyª°¨t
–
yyö
 );

2274 
ªt_vÆ
 = 
EOB_ACT_LAST_MATCH
;

2275 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf„r_°©us
 =

2276 
YY_BUFFER_EOF_PENDING
;

2281 
ªt_vÆ
 = 
EOB_ACT_CONTINUE_SCAN
;

2283 i‡(((
yy_n_ch¨s
Ë+ 
numbî_to_move
Ë> 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
) {

2285 
√w_size
 = (
yy_n_ch¨s
Ë+ 
numbî_to_move
 + ((yy_n_chars) >> 1);

2286 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 = (*Ë
	`yyªÆloc
(

2287 (*Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
, (
yy_size_t
Ë
√w_size
 );

2288 i‡–! 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
 )

2289 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_get_next_buffer()" );

2291 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_size
 = (Ë(
√w_size
 - 2);

2294 (
yy_n_ch¨s
Ë+
numbî_to_move
;

2295 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] = 
YY_END_OF_BUFFER_CHAR
;

2296 
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
Ë+ 1] = 
YY_END_OF_BUFFER_CHAR
;

2298 (
yyãxt_±r
Ë&
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[0];

2300  
ªt_vÆ
;

2301 
	}
}

2305 
yy_°©e_ty≥
 
	$yy_gë_¥evious_°©e
 ()

2307 
yy_°©e_ty≥
 
yy_cuºít_°©e
;

2308 *
yy_˝
;

2310 
yy_cuºít_°©e
 = (
yy_°¨t
);

2312  
yy_˝
 = (
yyãxt_±r
Ë+ 
YY_MORE_ADJ
; yy_˝ < (
yy_c_buf_p
); ++yy_cp )

2314 
YY_CHAR
 
yy_c
 = (*
yy_˝
 ? 
yy_ec
[
	`YY_SC_TO_UI
(*yy_cp)] : 1);

2315 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2317 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2318 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2320  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2322 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2323 i‡–
yy_cuºít_°©e
 >= 886 )

2324 
yy_c
 = 
yy_mëa
[yy_c];

2326 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

2329  
yy_cuºít_°©e
;

2330 
	}
}

2337 
yy_°©e_ty≥
 
	$yy_åy_NUL_å™s
 (
yy_°©e_ty≥
 
yy_cuºít_°©e
 )

2339 
yy_is_jam
;

2340 *
yy_˝
 = (
yy_c_buf_p
);

2342 
YY_CHAR
 
yy_c
 = 1;

2343 i‡–
yy_ac˚±
[
yy_cuºít_°©e
] )

2345 (
yy_œ°_ac˚±ög_°©e
Ë
yy_cuºít_°©e
;

2346 (
yy_œ°_ac˚±ög_˝os
Ë
yy_˝
;

2348  
yy_chk
[
yy_ba£
[
yy_cuºít_°©e
] + 
yy_c
] != yy_current_state )

2350 
yy_cuºít_°©e
 = (Ë
yy_def
[yy_current_state];

2351 i‡–
yy_cuºít_°©e
 >= 886 )

2352 
yy_c
 = 
yy_mëa
[yy_c];

2354 
yy_cuºít_°©e
 = 
yy_nxt
[
yy_ba£
[yy_cuºít_°©e] + 
yy_c
];

2355 
yy_is_jam
 = (
yy_cuºít_°©e
 == 885);

2357  
yy_is_jam
 ? 0 : 
yy_cuºít_°©e
;

2358 
	}
}

2360 #i‚de‡
YY_NO_UNPUT


2364 #i‚de‡
YY_NO_INPUT


2365 #ifde‡
__˝lu•lus


2366 
	$yyöput
 ()

2368 
	$öput
 ()

2372 
c
;

2374 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2376 i‡–*(
yy_c_buf_p
Ë=
YY_END_OF_BUFFER_CHAR
 )

2382 i‡–(
yy_c_buf_p
Ë< &
YY_CURRENT_BUFFER_LVALUE
->
yy_ch_buf
[(
yy_n_ch¨s
)] )

2384 *(
yy_c_buf_p
) = '\0';

2388 
off£t
 = (Ë((
yy_c_buf_p
Ë- (
yyãxt_±r
));

2389 ++(
yy_c_buf_p
);

2391  
	`yy_gë_√xt_buf„r
( ) )

2393 
EOB_ACT_LAST_MATCH
:

2405 
	`yyª°¨t
–
yyö
 );

2409 
EOB_ACT_END_OF_FILE
:

2411 i‡–
	`yywøp
( ) )

2414 i‡–! (
yy_did_buf„r_swôch_⁄_eof
) )

2415 
YY_NEW_FILE
;

2416 #ifde‡
__˝lu•lus


2417  
	`yyöput
();

2419  
	`öput
();

2423 
EOB_ACT_CONTINUE_SCAN
:

2424 (
yy_c_buf_p
Ë(
yyãxt_±r
Ë+ 
off£t
;

2430 
c
 = *(*Ë(
yy_c_buf_p
);

2431 *(
yy_c_buf_p
) = '\0';

2432 (
yy_hﬁd_ch¨
Ë*++(
yy_c_buf_p
);

2434  
c
;

2435 
	}
}

2443 
	$yyª°¨t
 (
FILE
 * 
öput_fûe
 )

2446 i‡–! 
YY_CURRENT_BUFFER
 ){

2447 
	`yyísuª_buf„r_°ack
 ();

2448 
YY_CURRENT_BUFFER_LVALUE
 =

2449 
	`yy_¸óã_buf„r
–
yyö
, 
YY_BUF_SIZE
 );

2452 
	`yy_öô_buf„r
–
YY_CURRENT_BUFFER
, 
öput_fûe
 );

2453 
	`yy_lﬂd_buf„r_°©e
( );

2454 
	}
}

2460 
	$yy_swôch_to_buf„r
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2468 
	`yyísuª_buf„r_°ack
 ();

2469 i‡–
YY_CURRENT_BUFFER
 =
√w_buf„r
 )

2472 i‡–
YY_CURRENT_BUFFER
 )

2475 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2476 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2477 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2480 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2481 
	`yy_lﬂd_buf„r_°©e
( );

2488 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2489 
	}
}

2491 
	$yy_lﬂd_buf„r_°©e
 ()

2493 (
yy_n_ch¨s
Ë
YY_CURRENT_BUFFER_LVALUE
->yy_n_chars;

2494 (
yyãxt_±r
Ë(
yy_c_buf_p
Ë
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
;

2495 
yyö
 = 
YY_CURRENT_BUFFER_LVALUE
->
yy_öput_fûe
;

2496 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
);

2497 
	}
}

2505 
YY_BUFFER_STATE
 
	$yy_¸óã_buf„r
 (
FILE
 * 
fûe
, 
size
 )

2507 
YY_BUFFER_STATE
 
b
;

2509 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

2510 i‡–! 
b
 )

2511 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2513 
b
->
yy_buf_size
 = 
size
;

2518 
b
->
yy_ch_buf
 = (*Ë
	`yyÆloc
–(
yy_size_t
Ë(b->
yy_buf_size
 + 2) );

2519 i‡–! 
b
->
yy_ch_buf
 )

2520 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_create_buffer()" );

2522 
b
->
yy_is_our_buf„r
 = 1;

2524 
	`yy_öô_buf„r
–
b
, 
fûe
 );

2526  
b
;

2527 
	}
}

2533 
	$yy_dñëe_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2536 i‡–! 
b
 )

2539 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2540 
YY_CURRENT_BUFFER_LVALUE
 = (
YY_BUFFER_STATE
) 0;

2542 i‡–
b
->
yy_is_our_buf„r
 )

2543 
	`yy‰ì
–(*Ë
b
->
yy_ch_buf
 );

2545 
	`yy‰ì
–(*Ë
b
 );

2546 
	}
}

2552 
	$yy_öô_buf„r
 (
YY_BUFFER_STATE
 
b
, 
FILE
 * 
fûe
 )

2555 
€ºno
 = 
î∫o
;

2557 
	`yy_Êush_buf„r
–
b
 );

2559 
b
->
yy_öput_fûe
 = 
fûe
;

2560 
b
->
yy_fûl_buf„r
 = 1;

2566 i‡(
b
 !
YY_CURRENT_BUFFER
){

2567 
b
->
yy_bs_löío
 = 1;

2568 
b
->
yy_bs_cﬁumn
 = 0;

2571 
b
->
yy_is_öãø˘ive
 = 
fûe
 ? (
	`ißây
–
	`fûío
(file) ) > 0) : 0;

2573 
î∫o
 = 
€ºno
;

2574 
	}
}

2580 
	$yy_Êush_buf„r
 (
YY_BUFFER_STATE
 
b
 )

2582 i‡–! 
b
 )

2585 
b
->
yy_n_ch¨s
 = 0;

2591 
b
->
yy_ch_buf
[0] = 
YY_END_OF_BUFFER_CHAR
;

2592 
b
->
yy_ch_buf
[1] = 
YY_END_OF_BUFFER_CHAR
;

2594 
b
->
yy_buf_pos
 = &b->
yy_ch_buf
[0];

2596 
b
->
yy_©_bﬁ
 = 1;

2597 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2599 i‡–
b
 =
YY_CURRENT_BUFFER
 )

2600 
	`yy_lﬂd_buf„r_°©e
( );

2601 
	}
}

2609 
	$yypush_buf„r_°©e
 (
YY_BUFFER_STATE
 
√w_buf„r
 )

2611 i‡(
√w_buf„r
 =
NULL
)

2614 
	`yyísuª_buf„r_°ack
();

2617 i‡–
YY_CURRENT_BUFFER
 )

2620 *(
yy_c_buf_p
Ë(
yy_hﬁd_ch¨
);

2621 
YY_CURRENT_BUFFER_LVALUE
->
yy_buf_pos
 = (
yy_c_buf_p
);

2622 
YY_CURRENT_BUFFER_LVALUE
->
yy_n_ch¨s
 = (yy_n_chars);

2626 i‡(
YY_CURRENT_BUFFER
)

2627 (
yy_buf„r_°ack_t›
)++;

2628 
YY_CURRENT_BUFFER_LVALUE
 = 
√w_buf„r
;

2631 
	`yy_lﬂd_buf„r_°©e
( );

2632 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2633 
	}
}

2639 
	$yyp›_buf„r_°©e
 ()

2641 i‡(!
YY_CURRENT_BUFFER
)

2644 
	`yy_dñëe_buf„r
(
YY_CURRENT_BUFFER
 );

2645 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2646 i‡((
yy_buf„r_°ack_t›
) > 0)

2647 --(
yy_buf„r_°ack_t›
);

2649 i‡(
YY_CURRENT_BUFFER
) {

2650 
	`yy_lﬂd_buf„r_°©e
( );

2651 (
yy_did_buf„r_swôch_⁄_eof
) = 1;

2653 
	}
}

2658 
	$yyísuª_buf„r_°ack
 ()

2660 
yy_size_t
 
num_to_Æloc
;

2662 i‡(!(
yy_buf„r_°ack
)) {

2668 
num_to_Æloc
 = 1;

2669 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyÆloc


2670 (
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2672 i‡–! (
yy_buf„r_°ack
) )

2673 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2675 
	`mem£t
((
yy_buf„r_°ack
), 0, 
num_to_Æloc
 * (
yy_buf„r_°©e
*));

2677 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2678 (
yy_buf„r_°ack_t›
) = 0;

2682 i‡((
yy_buf„r_°ack_t›
Ë>((
yy_buf„r_°ack_max
)) - 1){

2685 
yy_size_t
 
grow_size
 = 8 ;

2687 
num_to_Æloc
 = (
yy_buf„r_°ack_max
Ë+ 
grow_size
;

2688 (
yy_buf„r_°ack
Ë(
yy_buf„r_°©e
**)
yyªÆloc


2689 ((
yy_buf„r_°ack
),

2690 
num_to_Æloc
 * (
yy_buf„r_°©e
*)

2692 i‡–! (
yy_buf„r_°ack
) )

2693 
	`YY_FATAL_ERROR
( "out of dynamic memory in yyensure_buffer_stack()" );

2696 
	`mem£t
((
yy_buf„r_°ack
Ë+ (
yy_buf„r_°ack_max
), 0, 
grow_size
 * (
yy_buf„r_°©e
*));

2697 (
yy_buf„r_°ack_max
Ë
num_to_Æloc
;

2699 
	}
}

2707 
YY_BUFFER_STATE
 
	$yy_sˇn_buf„r
 (* 
ba£
, 
yy_size_t
 
size
 )

2709 
YY_BUFFER_STATE
 
b
;

2711 i‡–
size
 < 2 ||

2712 
ba£
[
size
-2] !
YY_END_OF_BUFFER_CHAR
 ||

2713 
ba£
[
size
-1] !
YY_END_OF_BUFFER_CHAR
 )

2715  
NULL
;

2717 
b
 = (
YY_BUFFER_STATE
Ë
	`yyÆloc
––
yy_buf„r_°©e
 ) );

2718 i‡–! 
b
 )

2719 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_buffer()" );

2721 
b
->
yy_buf_size
 = (Ë(
size
 - 2);

2722 
b
->
yy_buf_pos
 = b->
yy_ch_buf
 = 
ba£
;

2723 
b
->
yy_is_our_buf„r
 = 0;

2724 
b
->
yy_öput_fûe
 = 
NULL
;

2725 
b
->
yy_n_ch¨s
 = b->
yy_buf_size
;

2726 
b
->
yy_is_öãø˘ive
 = 0;

2727 
b
->
yy_©_bﬁ
 = 1;

2728 
b
->
yy_fûl_buf„r
 = 0;

2729 
b
->
yy_buf„r_°©us
 = 
YY_BUFFER_NEW
;

2731 
	`yy_swôch_to_buf„r
–
b
 );

2733  
b
;

2734 
	}
}

2744 
YY_BUFFER_STATE
 
	$yy_sˇn_°rög
 (c⁄° * 
yy°r
 )

2747  
	`yy_sˇn_byãs
–
yy°r
, (Ë
	`°æí
(yystr) );

2748 
	}
}

2757 
YY_BUFFER_STATE
 
	$yy_sˇn_byãs
 (c⁄° * 
yybyãs
, 
_yybyãs_Àn
 )

2759 
YY_BUFFER_STATE
 
b
;

2760 *
buf
;

2761 
yy_size_t
 
n
;

2762 
i
;

2765 
n
 = (
yy_size_t
Ë(
_yybyãs_Àn
 + 2);

2766 
buf
 = (*Ë
	`yyÆloc
–
n
 );

2767 i‡–! 
buf
 )

2768 
	`YY_FATAL_ERROR
( "out of dynamic memory in yy_scan_bytes()" );

2770  
i
 = 0; i < 
_yybyãs_Àn
; ++i )

2771 
buf
[
i
] = 
yybyãs
[i];

2773 
buf
[
_yybyãs_Àn
] = buf[_yybyãs_Àn+1] = 
YY_END_OF_BUFFER_CHAR
;

2775 
b
 = 
	`yy_sˇn_buf„r
–
buf
, 
n
 );

2776 i‡–! 
b
 )

2777 
	`YY_FATAL_ERROR
( "bad buffer in yy_scan_bytes()" );

2782 
b
->
yy_is_our_buf„r
 = 1;

2784  
b
;

2785 
	}
}

2787 #i‚de‡
YY_EXIT_FAILURE


2788 
	#YY_EXIT_FAILURE
 2

	)

2791 
yyn‹ëu∫
 
	$yy_Áèl_îr‹
 (c⁄° * 
msg
 )

2793 
	`Ârötf
–
°dîr
, "%s\n", 
msg
 );

2794 
	`exô
–
YY_EXIT_FAILURE
 );

2795 
	}
}

2799 #unde‡
yyÀss


2800 
	#yyÀss
(
n
) \

2804 
yyÀss_ma¸o_¨g
 = (
n
); \

2805 
	`YY_LESS_LINENO
(
yyÀss_ma¸o_¨g
);\

2806 
yyãxt
[
yyÀng
] = (
yy_hﬁd_ch¨
); \

2807 (
yy_c_buf_p
Ë
yyãxt
 + 
yyÀss_ma¸o_¨g
; \

2808 (
yy_hﬁd_ch¨
Ë*(
yy_c_buf_p
); \

2809 *(
yy_c_buf_p
) = '\0'; \

2810 
yyÀng
 = 
yyÀss_ma¸o_¨g
; \

2812  0 )

	)

2819 
	$yygë_löío
 ()

2822  
yylöío
;

2823 
	}
}

2828 
FILE
 *
	$yygë_ö
 ()

2830  
yyö
;

2831 
	}
}

2836 
FILE
 *
	$yygë_out
 ()

2838  
yyout
;

2839 
	}
}

2844 
	$yygë_Àng
 ()

2846  
yyÀng
;

2847 
	}
}

2853 *
	$yygë_ãxt
 ()

2855  
yyãxt
;

2856 
	}
}

2862 
	$yy£t_löío
 (
_löe_numbî
 )

2865 
yylöío
 = 
_löe_numbî
;

2866 
	}
}

2874 
	$yy£t_ö
 (
FILE
 * 
_ö_°r
 )

2876 
yyö
 = 
_ö_°r
 ;

2877 
	}
}

2879 
	$yy£t_out
 (
FILE
 * 
_out_°r
 )

2881 
yyout
 = 
_out_°r
 ;

2882 
	}
}

2884 
	$yygë_debug
 ()

2886  
yy_Êex_debug
;

2887 
	}
}

2889 
	$yy£t_debug
 (
_bdebug
 )

2891 
yy_Êex_debug
 = 
_bdebug
 ;

2892 
	}
}

2894 
	$yy_öô_globÆs
 ()

2900 (
yy_buf„r_°ack
Ë
NULL
;

2901 (
yy_buf„r_°ack_t›
) = 0;

2902 (
yy_buf„r_°ack_max
) = 0;

2903 (
yy_c_buf_p
Ë
NULL
;

2904 (
yy_öô
) = 0;

2905 (
yy_°¨t
) = 0;

2908 #ifde‡
YY_STDINIT


2909 
yyö
 = 
°dö
;

2910 
yyout
 = 
°dout
;

2912 
yyö
 = 
NULL
;

2913 
yyout
 = 
NULL
;

2920 
	}
}

2923 
	$yyÀx_de°roy
 ()

2927 
YY_CURRENT_BUFFER
){

2928 
	`yy_dñëe_buf„r
–
YY_CURRENT_BUFFER
 );

2929 
YY_CURRENT_BUFFER_LVALUE
 = 
NULL
;

2930 
	`yyp›_buf„r_°©e
();

2934 
	`yy‰ì
((
yy_buf„r_°ack
) );

2935 (
yy_buf„r_°ack
Ë
NULL
;

2939 
	`yy_öô_globÆs
( );

2942 
	}
}

2948 #i‚de‡
yyãxt_±r


2949 
	$yy_Êex_°∫˝y
 (* 
s1
, c⁄° * 
s2
, 
n
 )

2952 
i
;

2953  
i
 = 0; i < 
n
; ++i )

2954 
s1
[
i
] = 
s2
[i];

2955 
	}
}

2958 #ifde‡
YY_NEED_STRLEN


2959 
	$yy_Êex_°æí
 (c⁄° * 
s
 )

2961 
n
;

2962  
n
 = 0; 
s
[n]; ++n )

2965  
n
;

2966 
	}
}

2969 *
	$yyÆloc
 (
yy_size_t
 
size
 )

2971  
	`mÆloc
(
size
);

2972 
	}
}

2974 *
	$yyªÆloc
 (* 
±r
, 
yy_size_t
 
size
 )

2984  
	`ªÆloc
(
±r
, 
size
);

2985 
	}
}

2987 
	$yy‰ì
 (* 
±r
 )

2989 
	`‰ì
–(*Ë
±r
 );

2990 
	}
}

2992 
	#YYTABLES_NAME
 "yyèbÀs"

	)

2998 
	$yyîr‹
(*
s
)

3000 i‡(
yyãxt
[0] == '\0') {

3001 ()
	`fûebích_log
(
LOG_ERROR
, "%s,ÅokíÉx≥˘ed", 
s
);

3005 ()
	`fûebích_log
(
LOG_ERROR
, "%†© '%s'", 
s
, 
yyãxt
);

3006 
	}
}

3008 
yy_buf„r_°©e
 *
	g∑ª¡
;

3009 
yy_buf„r_°©e
 *
	gs¸ùt
;

3012 
	$yy_swôchfûï¨ít
(
FILE
 *
fûe
)

3014 
s¸ùt
 = 
YY_CURRENT_BUFFER
;

3015 
∑ª¡
 = (
yy_buf„r_°©e
 *)
	`yy_¸óã_buf„r
(
yyö
, 128);

3016 
	`yy_swôch_to_buf„r
(
∑ª¡
);

3018 
	}
}

3021 
	$yy_swôchfûes¸ùt
(
FILE
 *
fûe
)

3023 
	`yy_swôch_to_buf„r
(
s¸ùt
);

3025 
	}
}

	@parser_lex.l

29 %
›ti⁄
 
nou≈ut


30 %
›ti⁄
 
noyywøp


34 
	~<°dlib.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<as£π.h
>

37 
	~<°rög.h
>

38 
	~<î∫o.h
>

39 #ifde‡
HAVE_STDINT_H


40 
	~<°döt.h
>

43 
	~"fûebích.h
"

44 
	~"∑r£πy≥s.h
"

45 
	~"utûs.h
"

46 
	~"∑r£r_gøm.h
"

48 
	gÀx_löío
 = 1;

49 
yyîr‹
(*
s
);

52 %
s
 
WHITESTRINGSTATE


54 %
a
 50000

55 %
p
 50000

56 %
o
 50000

57 %
n
 5000

59 %% /* 
	$yyÀx
 */

61 \
n
 { 
Àx_löío
++; }

63 <
INITIAL
>[ \
t
]+ ;

65 <
INITIAL
>#.* ;

67 
¸óã
 {  
FSC_CREATE
; }

68 
deföe
 {  
FSC_DEFINE
; }

69 
debug
 {  
FSC_DEBUG
; }

70 
domu…isync
 {  
FSC_DOMULTISYNC
; }

71 
echo
 {  
FSC_ECHO
; }

72 
íabÀ
 {  
FSC_ENABLE
; }

73 
evítgí
 {  
FSC_EVENTGEN
; }

74 
quô
 {  
FSC_QUIT
; }

75 
li°
 {  
FSC_LIST
; }

76 
run
 {  
FSC_RUN
; }

77 
p§un
 {  
FSC_PSRUN
; }

78 
£t
 {  
FSC_SET
; }

79 
¶ìp
 {  
FSC_SLEEP
; }

80 
sy°em
 {  
FSC_SYSTEM
; }

81 
vîsi⁄
 {  
FSC_VERSION
; }

83 
fûe
 {  
FSE_FILE
; }

84 
fûes
 {  
FSE_FILES
; }

85 
fûe£t
[
s
]* {  
FSE_FILESET
; }

86 
¥o˚ss
[
es
]* {  
FSE_PROC
; }

87 
thªad
 {  
FSE_THREAD
; }

88 
Êow›
 {  
FSE_FLOWOP
; }

89 
øndv¨
 {  
FSE_RAND
; }

90 
mode
 {  
FSE_MODE
; }

91 
mu…i
 {  
FSE_MULTI
; }

92 
cv¨
 {  
FSE_CVAR
; }

94 
Æld⁄e
 {  
FSA_ALLDONE
; }

95 
blockög
 {  
FSA_BLOCKING
; }

96 
˛õ¡
 {  
FSA_CLIENT
; }

97 
dúwidth
 {  
FSA_DIRWIDTH
; }

98 
dúdïthrv
 {  
FSA_DIRDEPTHRV
; }

99 
dúe˘io
 {  
FSA_DIRECTIO
; }

100 
dúgamma
 {  
FSA_DIRGAMMA
; }

101 
dsync
 {  
FSA_DSYNC
; }

102 
íåõs
 {  
FSA_ENTRIES
;}

103 
fd
 {  
FSA_FD
; }

104 
fûíame
 {  
FSA_FILENAME
; }

105 
fûe£äame
 {  
FSA_FILENAME
; }

106 
fûesize
 {  
FSA_SIZE
; }

107 
fú°d⁄e
 {  
FSA_FIRSTDONE
; }

108 
gamma
 {  
FSA_RANDGAMMA
; }

109 
highw©î
 {  
FSA_HIGHWATER
; }

110 
ödexed
 {  
FSA_INDEXED
; }

111 
ö°™˚s
 {  
FSA_INSTANCES
;}

112 
iosize
 {  
FSA_IOSIZE
; }

113 
ôîs
 {  
FSA_ITERS
;}

114 
Àafdús
 {  
FSA_LEAFDIRS
;}

115 
ma°î
 {  
FSA_MASTER
; }

116 
món
 {  
FSA_RANDMEAN
; }

117 
memsize
 {  
FSA_MEMSIZE
; }

118 
i›rio
 {  
FSA_IOPRIO
; }

119 
mö
 {  
FSA_MIN
; }

120 
max
 {  
FSA_MAX
; }

121 
«me
 {  
FSA_NAME
;}

122 
ni˚
 {  
FSA_NICE
;}

123 
›í√xt
 {  
FSA_ROTATEFD
; }

124 
∑øŒoc
 {  
FSA_PARALLOC
; }

125 
∑ømëîs
 {  
FSA_PARAMETERS
; }

126 
∑th
 {  
FSA_PATH
; }

127 
¥óŒoc
 {  
FSA_PREALLOC
; }

128 
øndom
 {  
FSA_RANDOM
;}

129 
ønd§c
 {  
FSA_RANDSRC
; }

130 
øndèbÀ
 {  
FSA_RANDTABLE
; }

131 
øã
 {  
FSA_RATE
;}

132 
ªad⁄ly
 {  
FSA_READONLY
; }

133 
wrôe⁄ly
 {  
FSA_WRITEONLY
; }

134 
ªu£
 {  
FSA_REUSE
; }

135 
round
 {  
FSA_ROUND
; }

136 
£ed
 {  
FSA_RANDSEED
; }

137 
size
 {  
FSA_SIZE
; }

138 
§cfd
 {  
FSA_SRCFD
; }

139 
èrgë
 {  
FSA_TARGET
;}

140 
timeout
 {  
FSA_TIMEOUT
; }

141 
åu°åì
 {  
FSA_TRUSTTREE
; }

142 
ty≥
 {  
FSA_TYPE
; }

143 
u£ism
 {  
FSA_USEISM
;}

144 
vÆue
 {  
FSA_VALUE
;}

145 
w‹kög£t
 {  
FSA_WSS
; }

146 
nou£°©s
 {  
FSA_NOUSESTATS
; }

147 
œthi°
 {  
FSA_LATHIST
; }

149 
unif‹m
 {  
FSV_RANDUNI
; }

150 
èbuœr
 {  
FSV_RANDTAB
; }

151 
uøndom
 {  
FSV_URAND
; }

152 
ønd48
 {  
FSV_RAND48
; }

153 
n‹ódahód
 {  
FSA_NOREADAHEAD
; }

156 <
INITIAL
>\" {

157 
BEGIN
 
WHITESTRINGSTATE
;

158  
FSK_QUOTE
;

161 <
WHITESTRINGSTATE
>\" {

162 
BEGIN
 
INITIAL
;

163  
FSK_QUOTE
;

166 <
WHITESTRINGSTATE
>[^
$
\\"][^$"]*[^\\$"] {

167 i‡((
yylvÆ
.
svÆ
 = 
	`°rdup
(
yyãxt
)Ë=
NULL
) {

168 
	`yyîr‹
("Out of memory");

169 
	`fûebích_shutdown
(1);

171  
FSV_WHITESTRING
;

174 <
WHITESTRINGSTATE
>\\
n
 {

175 
yylvÆ
.
svÆ
 = "\n";

176  
FSV_WHITESTRING
;

180 <
WHITESTRINGSTATE
>\\
$
[^"$\\]+ {

181 i‡((
yylvÆ
.
svÆ
 = 
	`°rdup
(
yyãxt
 + 1)Ë=
NULL
) {

182 
	`yyîr‹
("Out of memory");

183 
	`fûebích_shutdown
(1);

185  
FSV_WHITESTRING
;

188 <
WHITESTRINGSTATE
>[^
$
\\"] {

189 i‡((
yylvÆ
.
svÆ
 = 
	`°rdup
(
yyãxt
)Ë=
NULL
) {

190 
	`yyîr‹
("Out of memory");

191 
	`fûebích_shutdown
(1);

193  
FSV_WHITESTRING
;

197 <
INITIAL
>\{ {  
FSK_OPENLST
; }

198 <
INITIAL
>\} {  
FSK_CLOSELST
; }

199 <
INITIAL
>\–{  
FSK_OPENPAR
; }

200 <
INITIAL
>\Ë{  
FSK_CLOSEPAR
; }

201 <
INITIAL
>{  
FSK_ASSIGN
; }

202 <
INITIAL
>\, {  
FSK_SEPLST
; }

203 <
INITIAL
>
ö
 {  
FSK_IN
; }

205 <
INITIAL
>[0-9]+ {

206 
î∫o
 = 0;

207 
yylvÆ
.
ivÆ
 = 
	`°πﬁl
(
yyãxt
, 
NULL
, 10);

208 i‡(
î∫o
 =
EINVAL
 ||Éºnÿ=
ERANGE
) {

209 (Ë
	`fûebích_log
(
LOG_ERROR
,

210 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

211 
	`°ªº‹
(
î∫o
));

213  
FSV_VAL_POSINT
;

216 <
INITIAL
>-[0-9]+ {

217 
î∫o
 = 0;

218 
yylvÆ
.
ivÆ
 = 
	`°πﬁl
(
yyãxt
, 
NULL
, 10);

219 i‡(
î∫o
 =
EINVAL
 ||Éºnÿ=
ERANGE
) {

220 (Ë
	`fûebích_log
(
LOG_ERROR
,

221 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

222 
	`°ªº‹
(
î∫o
));

224  
FSV_VAL_NEGINT
;

227 <
INITIAL
>[0-9]+
k
 {

228 
î∫o
 = 0;

229 
yylvÆ
.
ivÆ
 = 
KB
 * 
	`°πﬁl
(
yyãxt
, 
NULL
, 10);

230 i‡(
î∫o
 =
EINVAL
 ||Éºnÿ=
ERANGE
) {

231 (Ë
	`fûebích_log
(
LOG_ERROR
,

232 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

233 
	`°ªº‹
(
î∫o
));

235  
FSV_VAL_POSINT
;

238 <
INITIAL
>[0-9]+
m
 {

239 
î∫o
 = 0;

240 
yylvÆ
.
ivÆ
 = 
MB
 * 
	`°πﬁl
(
yyãxt
, 
NULL
, 10);

241 i‡(
î∫o
 =
EINVAL
 ||Éºnÿ=
ERANGE
) {

242 (Ë
	`fûebích_log
(
LOG_ERROR
,

243 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

244 
	`°ªº‹
(
î∫o
));

246  
FSV_VAL_POSINT
;

249 <
INITIAL
>[0-9]+
g
 {

250 
î∫o
 = 0;

251 
yylvÆ
.
ivÆ
 = 
GB
 * 
	`°πﬁl
(
yyãxt
, 
NULL
, 10);

252 i‡(
î∫o
 =
EINVAL
 ||Éºnÿ=
ERANGE
) {

253 (Ë
	`fûebích_log
(
LOG_ERROR
,

254 "InvÆid I vÆuê'%s':%s", 
yyãxt
,

255 
	`°ªº‹
(
î∫o
));

257  
FSV_VAL_POSINT
;

260 <
INITIAL
>
åue
 {

261 
yylvÆ
.
bvÆ
 = 
TRUE
;

262  
FSV_VAL_BOOLEAN
;

265 <
INITIAL
>
Ál£
 {

266 
yylvÆ
.
bvÆ
 = 
FALSE
;

267  
FSV_VAL_BOOLEAN
;

270 
$
[({
A
-
Za
-
z
][A-Za-
z0
-9
_
]*[A-Za-z0-9][)}]* {

271 i‡((
yylvÆ
.
svÆ
 = 
	`°rdup
(
yyãxt
)Ë=
NULL
) {

272 
	`yyîr‹
("Out of memory");

273 
	`fûebích_shutdown
(1);

276  
FSV_VARIABLE
;

279 <
INITIAL
>[/
A
-
Za
-
z
-][/A-Za-
z0
-9.
_
:;-]* {

280 i‡((
yylvÆ
.
svÆ
 = 
	`°rdup
(
yyãxt
)Ë=
NULL
) {

281 
	`yyîr‹
("Out of memory");

282 
	`fûebích_shutdown
(1);

284  
FSV_STRING
;

289 
	`yyîr‹
("Illegal character");

292 
	}
%%

295 
	$yyîr‹
(*
s
)

297 i‡(
yyãxt
[0] == '\0') {

298 ()
	`fûebích_log
(
LOG_ERROR
, "%s,ÅokíÉx≥˘ed", 
s
);

302 ()
	`fûebích_log
(
LOG_ERROR
, "%†© '%s'", 
s
, 
yyãxt
);

303 
	}
}

305 
yy_buf„r_°©e
 *
	g∑ª¡
;

306 
yy_buf„r_°©e
 *
	gs¸ùt
;

309 
	$yy_swôchfûï¨ít
(
FILE
 *
fûe
)

311 
s¸ùt
 = 
YY_CURRENT_BUFFER
;

312 
∑ª¡
 = (
yy_buf„r_°©e
 *)
	`yy_¸óã_buf„r
(
yyö
, 128);

313 
	`yy_swôch_to_buf„r
(
∑ª¡
);

315 
	}
}

318 
	$yy_swôchfûes¸ùt
(
FILE
 *
fûe
)

320 
	`yy_swôch_to_buf„r
(
s¸ùt
);

322 
	}
}

	@parsertypes.h

27 #i‚def 
_FB_PARSERTYPES_H


28 
	#_FB_PARSERTYPES_H


	)

30 
	~"fûebích.h
"

32 
	#DOFILE_FALSE
 0

	)

33 
	#DOFILE_TRUE
 1

	)

35 
	#FSE_SYSTEM
 1

	)

37 
	sli°
 {

38 
li°
 *
	mli°_√xt
;

39 
avd_t
 
	mli°_°rög
;

40 
avd_t
 
	mli°_öãgî
;

41 } 
	tli°_t
;

43 
	s©å
 {

44 
	m©å_«me
;

45 
©å
 *
	m©å_√xt
;

46 
avd_t
 
	m©å_avd
;

47 *
	m©å_obj
;

48 } 
	t©å_t
;

50 
	scmd
 {

51 (*
	mcmd
)(cmd *);

52 *
	mcmd_«me
;

53 *
	mcmd_tgt1
;

54 *
	mcmd_tgt2
;

55 *
	mcmd_tgt3
;

56 *
	mthªad_«me
;

57 
	mcmd_subty≥
;

58 
uöt64_t
 
	mcmd_qty
;

59 
öt64_t
 
	mcmd_qty1
;

60 
cmd
 *
	mcmd_li°
;

61 
cmd
 *
	mcmd_√xt
;

62 
©å_t
 *
	mcmd_©å_li°
;

63 
li°_t
 *
	mcmd_∑øm_li°
;

64 
li°_t
 *
	mcmd_∑øm_li°2
;

65 } 
	tcmd_t
;

68 
öt64_t
 
	mi
;

69 
	mb
;

70 *
	ms
;

71 } 
	tfs_u
;

73 
	spidli°
 {

74 
pidli°
 *
	m∂_√xt
;

75 
	m∂_fd
;

76 
pid_t
 
	m∂_pid
;

77 } 
	tpidli°_t
;

79 (*
	tcmdfunc
)(
	tcmd_t
 *);

80 
	`yy_swôchfûï¨ít
(
FILE
 *
fûe
);

81 
	`yy_swôchfûes¸ùt
(
FILE
 *
fûe
);

	@procflow.c

28 
	~<sig«l.h
>

29 
	~<f˙é.h
>

30 
	~<sys/°©.h
>

31 
	~<sys/waô.h
>

33 
	~"fûebích.h
"

34 
	~"¥ocÊow.h
"

35 
	~"Êow›.h
"

36 
	~"ùc.h
"

37 
	~"evítgí.h
"

40 
pid_t
 
	gmy_pid
;

41 
¥ocÊow_t
 *
	gmy_¥ocÊow
 = 
NULL
;

43 
¥ocÊow_t
 *
¥ocÊow_deföe_comm⁄
’rocÊow_à**
li°
, *
«me
,

44 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
);

45 
¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
);

68 
	$¥ocÊow_¸óã¥oc
(
¥ocÊow_t
 *
¥ocÊow
)

70 
pid_t
 
pid
 = 0;

72 
ö°™˚
[128];

73 
shmaddr
[128];

74 
¥o˙ame
[128];

76 (Ë
	`¢¥ötf
(
ö°™˚
,  (instance), "%d",

77 
¥ocÊow
->
pf_ö°™˚
);

78 (Ë
	`¢¥ötf
(
¥o˙ame
,  (¥o˙ame), "%s", 
¥ocÊow
->
pf_«me
);

79 (Ë
	`¢¥ötf
(
shmaddr
,  (shmaddr), "%p", 
fûebích_shm
);

80 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "creatingÖrocess %s",

81 
¥ocÊow
->
pf_«me
);

83 
¥ocÊow
->
pf_ru¬ög
 = 0;

85 #ifde‡
HAVE_FORK1


86 i‡((
pid
 = 
	`f‹k1
()) < 0) {

87 
	`fûebích_log
(
LOG_ERROR
,

89 
	`°ªº‹
(
î∫o
));

93 i‡((
pid
 = 
	`f‹k
()) < 0) {

94 
	`fûebích_log
(
LOG_ERROR
,

96 
	`°ªº‹
(
î∫o
));

102 i‡(
pid
 == 0) {

103 #ifde‡
USE_SYSTEM


104 
syscmd
[1024];

107 (Ë
	`sigign‹e
(
SIGINT
);

108 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

109 "Sèπög %s-%d", 
¥ocÊow
->
pf_«me
,

110 
¥ocÊow
->
pf_ö°™˚
);

113 #ifde‡
USE_SYSTEM


114 (Ë
	`¢¥ötf
(
syscmd
,  (syscmd), "%s -a %s -i %s -s %s",

115 
exe˙ame
,

116 
¥o˙ame
,

117 
ö°™˚
,

118 
shmaddr
);

119 i‡(
	`sy°em
(
syscmd
) < 0) {

120 
	`fûebích_log
(
LOG_ERROR
,

122 
	`°ªº‹
(
î∫o
));

123 
	`fûebích_shutdown
(1);

127 i‡(
	`exe˛p
(
exe˙ame
, 
¥o˙ame
, "-a",Örocname, "-i",

128 
ö°™˚
, "-s", 
shmaddr
, "-m", 
shm∑th
, 
NULL
) < 0) {

129 
	`fûebích_log
(
LOG_ERROR
,

131 
	`°ªº‹
(
î∫o
));

132 
	`fûebích_shutdown
(1);

135 
	`exô
(1);

138 
¥ocÊow
->
pf_pid
 = 
pid
;

141 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "procflow_createproc createdÖid %d",

142 
pid
);

145 
	}
}

155 
	$¥ocÊow_¸óã_Æl_¥ocs
()

157 
¥ocÊow_t
 *
¥ocÊow
;

158 
ªt
 = 0;

160 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

161 
¥ocÊow
) {

162 
ö°™˚s
;

163 
i
;

165 
ö°™˚s
 = ()
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
);

166 
	`fûebích_log
(
LOG_INFO
, "Starting %d %s instances",

167 
ö°™˚s
, 
¥ocÊow
->
pf_«me
);

170 
i
 = 0; (ò< 
ö°™˚s
Ë&& (
ªt
 == 0); i++) {

171 
¥ocÊow_t
 *
√w¥oc
;

174 
√w¥oc
 =

175 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

176 
¥ocÊow
->
pf_«me
,ÖrocÊow, 
i
 + 1);

186 i‡(!
√w¥oc
) {

187 
ªt
 = -1;

189 
	`˛ór_Êag
(&
√w¥oc
->
pf_thªads_deföed_Êag
);

190 
ªt
 = 
	`¥ocÊow_¸óã¥oc
(
√w¥oc
);

194 i‡(
ªt
)

197 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

202 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

203 
¥ocÊow
) {

204 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

205 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

206 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

210 
	`waô_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

212 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

215  (
ªt
);

216 
	}
}

225 
¥ocÊow_t
 *

226 
	$¥ocÊow_föd
(*
«me
, 
ö°™˚
)

228 
¥ocÊow_t
 *
¥ocÊow
;

230 ()
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

232 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

234 
¥ocÊow
) {

235 i‡((
	`°rcmp
(
«me
, 
¥ocÊow
->
pf_«me
) == 0) &&

236 (
ö°™˚
 =
¥ocÊow
->
pf_ö°™˚
)) {

237 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

238  (
¥ocÊow
);

241 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

244 ()
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

246  (
NULL
);

247 
	}
}

260 
	$¥ocÊow_exec
(*
«me
, 
ö°™˚
)

262 
¥ocÊow_t
 *
¥ocÊow
;

263 
¥oc_ni˚
;

264 #ifde‡
HAVE_SETRLIMIT


265 
æimô
 
æp
;

267 
ªt
;

269 i‡((
¥ocÊow
 = 
	`¥ocÊow_föd
(
«me
, 
ö°™˚
)Ë=
NULL
) {

270 
	`fûebích_log
(
LOG_FATAL
,

272 
«me
, 
ö°™˚
);

277 
my_¥ocÊow
 = 
¥ocÊow
;

280 
¥ocÊow
->
pf_pid
 = 
my_pid
;

282 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

283 "Sèπed u∞%†pid %d", 
¥ocÊow
->
pf_«me
, 
my_pid
);

285 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

286 "ni˚ = %Œx", 
¥ocÊow
->
pf_ni˚
);

288 
¥oc_ni˚
 = 
	`avd_gë_öt
(
¥ocÊow
->
pf_ni˚
);

289 i‡(
¥oc_ni˚
)

290 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "SettingÖri of %s-%dÅo %d",

291 
«me
, 
ö°™˚
, 
	`ni˚
(
¥oc_ni˚
));

293 
¥ocÊow
->
pf_ru¬ög
 = 1;

295 #ifde‡
HAVE_SETRLIMIT


297 (Ë
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

298 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "%d fûêdes¸ùt‹s", 
æp
.
æim_cur
);

301 i‡((
ªt
 = 
	`thªadÊow_öô
(
¥ocÊow
)Ë!
FILEBENCH_OK
) {

302 i‡(
ªt
 < 0) {

303 
	`fûebích_log
(
LOG_ERROR
,

305 
¥ocÊow
->
pf_«me
, 
my_pid
);

308 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

312 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

313 
fûebích_shm
->
shm_¥ocs_ru¬ög
 --;

314 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

315 
¥ocÊow
->
pf_ru¬ög
 = 0;

317  (
ªt
);

318 
	}
}

327 
	$¥ocÊow_¸óãnwaô
(*
unu£d
)

330 
	`¥ocÊow_¸óã_Æl_¥ocs
();

339 
	`£t_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

345 #ifde‡
HAVE_WAITID


346 
sigöfo_t
 
°©us
;

347 i‡(
	`waôid
(
P_ALL
, 0, &
°©us
, 
WEXITED
) != 0)

349 
°©us
;

350 i‡(
	`waôpid
(-1, &
°©us
, 0) < 0)

352 
	`±hªad_exô
(0);

354 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

356 i‡(
fûebích_shm
->
shm_f_ab‹t
) {

357 (Ë
	`ùc_muãx_u∆ock
(

358 &
fûebích_shm
->
shm_¥ocÊow_lock
);

359 
	`±hªad_exô
(0);

363 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 == 0) {

364 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_RSRC
;

365 (Ë
	`ùc_muãx_u∆ock
(

366 &
fûebích_shm
->
shm_¥ocÊow_lock
);

367 
	`±hªad_exô
(0);

369 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

371 #ifde‡
HAVE_WAITID


372 i‡(
°©us
.
si_code
 =
CLD_EXITED
) {

374 i‡(
°©us
.
si_°©us
 != 0) {

375 
	`fûebích_log
(
LOG_ERROR
,

377 
°©us
.
si_°©us
);

378 
	`fûebích_shutdown
(1);

382 
	`fûebích_log
(
LOG_ERROR
,

384 
°©us
.
si_code
, sètus.
si_î∫o
);

385 
	`fûebích_shutdown
(1);

389 i‡(
	`WIFSTOPPED
(
°©us
Ë|| 
	`WIFCONTINUED
(status))

392 i‡(
	`WIFEXITED
(
°©us
)) {

394 i‡(
	`WEXITSTATUS
(
°©us
) != 0) {

395 
	`fûebích_log
(
LOG_ERROR
,

397 
	`WEXITSTATUS
(
°©us
));

398 
	`fûebích_shutdown
(1);

402 
	`fûebích_log
(
LOG_ERROR
,

404 
	`WTERMSIG
(
°©us
));

405 
	`fûebích_shutdown
(1);

411  (
NULL
);

412 
	}
}

420 
	$¥ocÊow_ˇn˚l
(
¨g1
)

422 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Process signal handler onÖid %",

423 
my_¥ocÊow
->
pf_pid
);

425 
	`¥ocÊow_¶ìp
(
my_¥ocÊow
, 
SHUTDOWN_WAIT_SECONDS
);

427 
	`thªadÊow_dñëe_Æl
(&
my_¥ocÊow
->
pf_thªads
);

430 
	`exô
(0);

431 
	}
}

438 
	$¥ocÊow_öô
()

440 
¥ocÊow_t
 *
¥ocÊow
;

441 
±hªad_t
 
tid
;

442 
ªt
 = 0;

444 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

446 i‡(!
¥ocÊow
) {

447 
	`fûebích_log
(
LOG_ERROR
, "Workload hasÇoÖrocesses");

448  (
FILEBENCH_ERROR
);

451 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

453 
¥ocÊow
->
pf_«me
,

454 (
u_l⁄gl⁄g_t
)
	`avd_gë_öt
(
¥ocÊow
->
pf_ö°™˚s
));

461 
	`˛ór_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

463 
ªt
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
¥ocÊow_¸óãnwaô
, NULL);

464 i‡(
ªt
)

465  
ªt
;

467 (Ë
	`sig«l
(
SIGUSR1
, 
¥ocÊow_ˇn˚l
);

473 
	`waô_Êag
(&
fûebích_shm
->
shm_¥ocÊows_deföed_Êag
);

475  (
ªt
);

476 
	}
}

483 
	$¥ocÊow_waô
(
pid_t
 
pid
)

485 
pid_t
 
wpid
;

486 
°©
;

488 (Ë
	`waôpid
(
pid
, &
°©
, 0);

489 (
wpid
 = 
	`waôpid
(
	`gëpid
(Ë* -1, &
°©
, 
WNOHANG
)) > 0)

490 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Waôed f‹Öid %d", ()
wpid
);

491 
	}
}

498 
	$¥ocÊow_¶ìp
(
¥ocÊow_t
 *
¥ocÊow
, 
waô_˙t
)

500 
¥ocÊow
->
pf_ru¬ög
 & 
waô_˙t
) {

501 (Ë
	`¶ìp
(1);

502 
waô_˙t
--;

504 
	}
}

514 
	$¥ocÊow_˛ónup
(
¥ocÊow_t
 *
¥ocÊow
)

516 
¥ocÊow_t
 *
íåy
;

518 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

520 
¥ocÊow
->
pf_«me
,

521 
¥ocÊow
->
pf_ö°™˚
,

522 
¥ocÊow
->
pf_pid
);

524 
¥ocÊow
->
pf_ru¬ög
 = 0;

527 
íåy
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

530 i‡(
íåy
 =
¥ocÊow
) {

532 
fûebích_shm
->
shm_¥ocÊowli°
 = 
¥ocÊow
->
pf_√xt
;

535 
íåy
 &&É¡ry->
pf_√xt
 !
¥ocÊow
)

536 
íåy
 =É¡ry->
pf_√xt
;

539 i‡(
íåy
 =
NULL
)

542 
íåy
->
pf_√xt
 = 
¥ocÊow
->pf_next;

546 
	`ùc_‰ì
(
FILEBENCH_PROCFLOW
, (*)
¥ocÊow
);

548 
	}
}

563 
	$¥ocÊow_Æl°¨ãd
()

565 
¥ocÊow_t
 *
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

566 
ru¬ög_¥ocs
 = 0;

567 
ªt
 = 0;

569 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

571 (Ë
	`¶ìp
(1);

573 
¥ocÊow
) {

574 
waôs
;

576 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

577 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

578 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

582 
waôs
 = 10;

583 
waôs
 && 
¥ocÊow
->
pf_ru¬ög
 == 0) {

584 (Ë
	`ùc_muãx_u∆ock
(

585 &
fûebích_shm
->
shm_¥ocÊow_lock
);

586 i‡(
fûebích_shm
->
shm_f_ab‹t
 == 1)

589 i‡(
waôs
 < 3)

590 
	`fûebích_log
(
LOG_INFO
,

592 
¥ocÊow
->
pf_«me
,

593 
¥ocÊow
->
pf_ö°™˚
,

594 
¥ocÊow
->
pf_pid
);

596 (Ë
	`¶ìp
(3);

597 
waôs
--;

598 (Ë
	`ùc_muãx_lock
(

599 &
fûebích_shm
->
shm_¥ocÊow_lock
);

602 i‡(
waôs
 == 0)

603 
	`fûebích_log
(
LOG_INFO
,

605 
¥ocÊow
->
pf_«me
,

606 
¥ocÊow
->
pf_ö°™˚
);

608 
ru¬ög_¥ocs
++;

609 
	`thªadÊow_Æl°¨ãd
(
¥ocÊow
->
pf_pid
,ÖrocÊow->
pf_thªads
);

611 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

614 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

615 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 
ru¬ög_¥ocs
;

616 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

618 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

621  (
ªt
);

622 
	}
}

634 
	$¥ocÊow_shutdown
()

636 
¥ocÊow_t
 *
¥ocÊow
, *
√xt_¥ocÊow
;

637 
waô_˙t
 = 
SHUTDOWN_WAIT_SECONDS
;

639 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

640 i‡(
fûebích_shm
->
shm_¥ocs_ru¬ög
 <= 0) {

642 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

645 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

647 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

648 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_FINI
) {

649 (Ë
	`ùc_muãx_u∆ock
(

650 &
fûebích_shm
->
shm_¥ocÊow_lock
);

654 
¥ocÊow
 = 
fûebích_shm
->
shm_¥ocÊowli°
;

655 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_OK
)

656 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_DONE
;

658 
¥ocÊow
) {

659 i‡(
¥ocÊow
->
pf_ö°™˚
 &&

660 (
¥ocÊow
->
pf_ö°™˚
 =
FLOW_MASTER
)) {

661 
¥ocÊow
 =ÖrocÊow->
pf_√xt
;

664 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÖrocess %s-%d %d",

665 
¥ocÊow
->
pf_«me
,

666 
¥ocÊow
->
pf_ö°™˚
,

667 
¥ocÊow
->
pf_pid
);

669 
√xt_¥ocÊow
 = 
¥ocÊow
->
pf_√xt
;

675 
	`¥ocÊow_¶ìp
(
¥ocÊow
, 
waô_˙t
);

676 i‡(
¥ocÊow
->
pf_ru¬ög
) {

677 
pid_t
 
pid
;

679 
pid
 = 
¥ocÊow
->
pf_pid
;

680 #ifde‡
HAVE_SIGSEND


681 (Ë
	`sig£nd
(
P_PID
, 
pid
, 
SIGUSR1
);

683 (Ë
	`kûl
(
pid
, 
SIGUSR1
);

685 
	`¥ocÊow_waô
(
pid
);

687 (Ë
	`¥ocÊow_˛ónup
(
¥ocÊow
);

688 
¥ocÊow
 = 
√xt_¥ocÊow
;

689 i‡(
waô_˙t
 > 0)

690 
waô_˙t
--;

693 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_ABORT_FINI
;

694 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

697 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

698 
fûebích_shm
->
shm_¥ocs_ru¬ög
 = 0;

699 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocs_ru¬ög_lock
);

700 
	}
}

714 
¥ocÊow_t
 *

715 
	$¥ocÊow_deföe_comm⁄
(
¥ocÊow_t
 **
li°
, *
«me
,

716 
¥ocÊow_t
 *
öhîô
, 
ö°™˚
)

718 
¥ocÊow_t
 *
¥ocÊow
;

720 i‡(
«me
 =
NULL
)

721  (
NULL
);

723 
¥ocÊow
 = (
¥ocÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_PROCFLOW
);

725 i‡(
¥ocÊow
 =
NULL
)

726  (
NULL
);

728 i‡(
öhîô
)

729 (Ë
	`mem˝y
(
¥ocÊow
, 
öhîô
,  (
¥ocÊow_t
));

731 (Ë
	`mem£t
(
¥ocÊow
, 0,  (
¥ocÊow_t
));

733 
¥ocÊow
->
pf_ö°™˚
 = 
ö°™˚
;

734 (Ë
	`°r˝y
(
¥ocÊow
->
pf_«me
, 
«me
);

736 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "deföögÖro˚s†%s-%d", 
«me
, 
ö°™˚
);

739 i‡(*
li°
 =
NULL
) {

740 *
li°
 = 
¥ocÊow
;

741 
¥ocÊow
->
pf_√xt
 = 
NULL
;

743 
¥ocÊow
->
pf_√xt
 = *
li°
;

744 *
li°
 = 
¥ocÊow
;

746 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "process %s-%dÖroclist %zx",

747 
«me
, 
ö°™˚
, 
fûebích_shm
->
shm_¥ocÊowli°
);

749  (
¥ocÊow
);

750 
	}
}

761 
¥ocÊow_t
 *

762 
	$¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
)

764 
¥ocÊow_t
 *
¥ocÊow
;

766 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

768 
¥ocÊow
 = 
	`¥ocÊow_deföe_comm⁄
(&
fûebích_shm
->
shm_¥ocÊowli°
,

769 
«me
, 
NULL
, 
FLOW_MASTER
);

770 
¥ocÊow
->
pf_ö°™˚s
 = 
ö°™˚s
;

772 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_¥ocÊow_lock
);

774  (
¥ocÊow
);

775 
	}
}

790 
	$¥oc_¸óã
()

792 
fûebích_shm
->
shm_1°_îr
 = 0;

793 
fûebích_shm
->
shm_f_ab‹t
 = 
FILEBENCH_OK
;

795 (Ë
	`±hªad_rwlock_rdlock
(&
fûebích_shm
->
shm_run_lock
);

797 i‡(
	`¥ocÊow_öô
() != 0) {

798 
	`fûebích_log
(
LOG_ERROR
, "FailedÅo createÖrocesses\n");

799 
	`fûebích_shutdown
(1);

803 i‡(
	`¥ocÊow_Æl°¨ãd
() != 0) {

804 
	`fûebích_log
(
LOG_ERROR
, "CouldÇot startÑun");

812 i‡(
fûebích_shm
->
shm_ªquúed
 &&

813 (
	`ùc_ism¸óã
(
fûebích_shm
->
shm_ªquúed
) < 0)) {

814 
	`fûebích_log
(
LOG_ERROR
, "CouldÇotállocate shared memory");

819 (Ë
	`±hªad_rwlock_u∆ock
(&
fûebích_shm
->
shm_run_lock
);

821 
fûebích_shm
->
shm_°¨âime
 = 
	`gëhπime
();

822 
	`evítgí_ª£t
();

823 
	}
}

831 
	$¥oc_shutdown
()

833 
	`fûebích_log
(
LOG_INFO
, "Shutting downÖrocesses");

834 
	`¥ocÊow_shutdown
();

835 i‡(
fûebích_shm
->
shm_ªquúed
)

836 
	`ùc_ismdñëe
();

837 
	`evítgí_ª£t
();

838 
	}
}

	@procflow.h

26 #i‚de‡
_FB_PROCFLOW_H


27 
	#_FB_PROCFLOW_H


	)

29 #¥agm®
idít
 "%Z%%M% %I% %E% SMI"

31 
	~"fûebích.h
"

33 
	s¥ocÊow
 {

34 
	mpf_«me
[128];

35 
	mpf_ö°™˚
;

36 
avd_t
 
	mpf_ö°™˚s
;

37 
	mpf_ru¬ög
;

38 
Êag_t
 
	mpf_thªads_deföed_Êag
;

39 
¥ocÊow
 *
	mpf_√xt
;

40 
pid_t
 
	mpf_pid
;

41 
±hªad_t
 
	mpf_tid
;

42 
thªadÊow
 *
	mpf_thªads
;

43 
	mpf_©ås
;

44 
avd_t
 
	mpf_ni˚
;

45 } 
	t¥ocÊow_t
;

47 
¥ocÊow_t
 *
¥ocÊow_deföe
(*
«me
, 
avd_t
 
ö°™˚s
);

48 
¥oc_¸óã
();

49 
¥ocÊow_shutdown
();

50 
¥oc_shutdown
();

51 
¥ocÊow_exec
(*
«me
, 
ö°™˚
);

	@stats.c

27 
	~<°dio.h
>

28 
	~<f˙é.h
>

29 
	~<sys/ty≥s.h
>

30 
	~<°d¨g.h
>

31 
	~<limôs.h
>

33 
	~"fûebích.h
"

34 
	~"Êow›.h
"

35 
	~"v¨s.h
"

36 
	~"°©s.h
"

37 
	~"fbtime.h
"

45 
Êow°©s
 *
	gglobÆ°©s
 = 
NULL
;

51 
	$°©s_add
(
Êow°©s
 *
a
, Êow°©†*
b
)

53 
i
;

55 
a
->
fs_cou¡
 +
b
->fs_count;

56 
a
->
fs_rcou¡
 +
b
->fs_rcount;

57 
a
->
fs_wcou¡
 +
b
->fs_wcount;

58 
a
->
fs_byãs
 +
b
->fs_bytes;

59 
a
->
fs_rbyãs
 +
b
->fs_rbytes;

60 
a
->
fs_wbyãs
 +
b
->fs_wbytes;

61 
a
->
fs_tŸÆ_œt
 +
b
->fs_total_lat;

63 i‡(
b
->
fs_maxœt
 > 
a
->fs_maxlat)

64 
a
->
fs_maxœt
 = 
b
->fs_maxlat;

66 i‡(
b
->
fs_möœt
 < 
a
->fs_minlat)

67 
a
->
fs_möœt
 = 
b
->fs_minlat;

69 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++)

70 
a
->
fs_di°ributi⁄
[
i
] +
b
->fs_distribution[i];

71 
	}
}

83 
	$°©s_¢≠
()

85 
Êow°©s
 *
io°©
 = &
globÆ°©s
[
FLOW_TYPE_IO
];

86 
Êow°©s
 *
aio°©
 = &
globÆ°©s
[
FLOW_TYPE_AIO
];

87 
hπime_t
 
‹ig_°¨âime
;

88 
Êow›_t
 *
Êow›
;

89 *
°r
;

90 
tŸÆ_time_£c
;

92 i‡(!
globÆ°©s
) {

93 
	`fûebích_log
(
LOG_ERROR
,

99 i‡(
fûebích_shm
->
shm_f_ab‹t
 =
FILEBENCH_ABORT_ERROR
) {

100 
	`fûebích_log
(
LOG_ERROR
,

106 
fûebích_shm
->
shm_bequõt
 = 1;

113 
‹ig_°¨âime
 = 
globÆ°©s
->
fs_°ime
;

114 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 * (
Êow°©s
));

115 
globÆ°©s
->
fs_°ime
 = 
‹ig_°¨âime
;

116 
globÆ°©s
->
fs_ëime
 = 
	`gëhπime
();

118 
tŸÆ_time_£c
 = (
globÆ°©s
->
fs_ëime
 -

119 
globÆ°©s
->
fs_°ime
Ë/ 
SEC2NS_FLOAT
;

120 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "StatsÖeriod = %.0f sec",

121 
tŸÆ_time_£c
);

124 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

125 
Êow›
) {

126 i‡(
Êow›
->
fo_ö°™˚
 =
FLOW_MASTER
) {

127 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0, (
Êow°©s
));

128 
Êow›
->
fo_°©s
.
fs_möœt
 = 
ULLONG_MAX
;

130 
Êow›
 = flow›->
fo_√xt
;

134 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

135 
Êow›
) {

136 
Êow›_t
 *
Êow›_ma°î
;

138 i‡(
Êow›
->
fo_ö°™˚
 <
FLOW_DEFINITION
) {

139 
Êow›
 = flow›->
fo_√xt
;

144 
	`°©s_add
(&
globÆ°©s
[
Êow›
->
fo_ty≥
], &Êow›->
fo_°©s
);

145 
	`°©s_add
(&
globÆ°©s
[
FLOW_TYPE_GLOBAL
], &
Êow›
->
fo_°©s
);

147 
Êow›_ma°î
 = 
	`Êow›_föd_⁄e
(
Êow›
->
fo_«me
, 
FLOW_MASTER
);

148 i‡(
Êow›_ma°î
) {

150 
	`°©s_add
(&
Êow›_ma°î
->
fo_°©s
, &
Êow›
->fo_stats);

152 
	`fûebích_log
(
LOG_DEBUG_NEVER
,

154 
Êow›
->
fo_«me
);

157 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
,

160 
Êow›
->
fo_«me
,

161 
Êow›
->
fo_ö°™˚
,

162 
Êow›
->
fo_°©s
.
fs_cou¡
,

163 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

164 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

165 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

166 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

167 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

169 
Êow›
 = flow›->
fo_√xt
;

173 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

174 
°r
 = 
	`mÆloc
(1048576);

175 *
°r
 = '\0';

176 (Ë
	`°r˝y
(
°r
, "Per-Operation Breakdown\n");

177 
Êow›
) {

178 
löe
[1024];

179 
hi°ogøm
[1024];

180 
hi°_ªadög
[20];

181 
i
 = 0;

183 i‡(
Êow›
->
fo_ö°™˚
 !
FLOW_MASTER
) {

184 
Êow›
 = flow›->
fo_√xt
;

188 (Ë
	`¢¥ötf
(
löe
, (line), "%-20s %dops %8.0lfops/s "

190 
Êow›
->
fo_«me
,

191 
Êow›
->
fo_°©s
.
fs_cou¡
,

192 
Êow›
->
fo_°©s
.
fs_cou¡
 / 
tŸÆ_time_£c
,

193 (
Êow›
->
fo_°©s
.
fs_byãs
 / 
MB_FLOAT
Ë/ 
tŸÆ_time_£c
,

194 
Êow›
->
fo_°©s
.
fs_cou¡
 ?

195 
Êow›
->
fo_°©s
.
fs_tŸÆ_œt
 /

196 (
Êow›
->
fo_°©s
.
fs_cou¡
 * 
SEC2MS_FLOAT
) : 0);

197 (Ë
	`°rˇt
(
°r
, 
löe
);

199 (Ë
	`¢¥ötf
(
löe
, (line)," [%.3fms - %5.3fms]",

200 
Êow›
->
fo_°©s
.
fs_möœt
 / 
SEC2MS_FLOAT
,

201 
Êow›
->
fo_°©s
.
fs_maxœt
 / 
SEC2MS_FLOAT
);

202 (Ë
	`°rˇt
(
°r
, 
löe
);

204 i‡(
fûebích_shm
->
œthi°_íabÀd
) {

205 (Ë
	`•rötf
(
hi°ogøm
, "\t[ ");

206 
i
 = 0; i < 
OSPROF_BUCKET_NUMBER
; i++) {

207 (Ë
	`•rötf
(
hi°_ªadög
, "%lu ",

208 
Êow›
->
fo_°©s
.
fs_di°ributi⁄
[
i
]);

209 (Ë
	`°rˇt
(
hi°ogøm
, 
hi°_ªadög
);

211 (Ë
	`°rˇt
(
hi°ogøm
, "]\n");

212 (Ë
	`°rˇt
(
°r
, 
hi°ogøm
);

214 (Ë
	`°rˇt
(
°r
, "\n");

216 
Êow›
 = flow›->
fo_√xt
;

220 
°r
[
	`°æí
(str) - 1] = '\0';

222 
	`fûebích_log
(
LOG_INFO
, "%s", 
°r
);

223 
	`‰ì
(
°r
);

225 
	`fûebích_log
(
LOG_INFO
,

228 
io°©
->
fs_cou¡
 + 
aio°©
->fs_count,

229 (
io°©
->
fs_cou¡
 + 
aio°©
->fs_cou¡Ë/ 
tŸÆ_time_£c
,

230 (
io°©
->
fs_rcou¡
 + 
aio°©
->fs_rcou¡Ë/ 
tŸÆ_time_£c
,

231 (
io°©
->
fs_wcou¡
 + 
aio°©
->fs_wcou¡Ë/ 
tŸÆ_time_£c
,

232 ((
io°©
->
fs_byãs
 + 
aio°©
->fs_byãsË/ 
MB_FLOAT
)

233 / 
tŸÆ_time_£c
,

234 (
io°©
->
fs_cou¡
 + 
aio°©
->fs_count) ?

235 (
io°©
->
fs_tŸÆ_œt
 + 
aio°©
->fs_total_lat) /

236 ((
io°©
->
fs_cou¡
 + 
aio°©
->fs_cou¡Ë* 
SEC2MS_FLOAT
) : 0);

238 
fûebích_shm
->
shm_bequõt
 = 0;

239 
	}
}

247 
	$°©s_˛ór
()

249 
Êow›_t
 *
Êow›
;

251 i‡(
globÆ°©s
 =
NULL
)

252 
globÆ°©s
 = 
	`mÆloc
(
FLOW_TYPES
 *  (
Êow°©s
));

254 (Ë
	`mem£t
(
globÆ°©s
, 0, 
FLOW_TYPES
 *  (
Êow°©s
));

256 
Êow›
 = 
fûebích_shm
->
shm_Êow›li°
;

258 
Êow›
) {

259 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "Clearing stats for %s-%d",

260 
Êow›
->
fo_«me
,

261 
Êow›
->
fo_ö°™˚
);

262 (Ë
	`mem£t
(&
Êow›
->
fo_°©s
, 0,  (
Êow°©s
));

263 
Êow›
 = flow›->
fo_√xt
;

266 (Ë
	`mem£t
(
globÆ°©s
, 0, (
Êow°©s
));

267 
globÆ°©s
->
fs_°ime
 = 
	`gëhπime
();

268 
	}
}

	@stats.h

26 #i‚def 
_FB_STATS_H


27 
	#_FB_STATS_H


	)

29 
	~"fûebích.h
"

30 
	~"fbtime.h
"

32 
°©s_˛ór
();

33 
°©s_¢≠
();

35 
	#OSPROF_BUCKET_NUMBER
 64

	)

37 
	sÊow°©s
 {

40 
	mfs_cou¡
;

41 
uöt64_t
 
	mfs_rcou¡
;

42 
uöt64_t
 
	mfs_wcou¡
;

44 
uöt64_t
 
	mfs_byãs
;

45 
uöt64_t
 
	mfs_rbyãs
;

46 
uöt64_t
 
	mfs_wbyãs
;

48 
	mfs_di°ributi⁄
[
OSPROF_BUCKET_NUMBER
];

49 
hπime_t
 
	mfs_tŸÆ_œt
;

50 
	mfs_maxœt
;

51 
	mfs_möœt
;

56 
hπime_t
 
	mfs_°ime
;

57 
hπime_t
 
	mfs_ëime
;

60 
	#IS_FLOW_IOP
(
x
Ë(x->
fo_°©s
.
fs_rcou¡
 + x->fo_°©s.
fs_wcou¡
)

	)

61 
	#STAT_IOPS
(
x
Ë((x->
fs_rcou¡
Ë+ (x->
fs_wcou¡
))

	)

62 
	#IS_FLOW_ACTIVE
(
x
Ë(x->
fo_°©s
.
fs_cou¡
)

	)

63 
	#STAT_CPUTIME
(
x
Ë(x->
fs_˝u_›
)

	)

64 
	#STAT_OHEADTIME
(
x
Ë(x->
fs_˝u_ohód
)

	)

	@threadflow.c

28 
	~"c⁄fig.h
"

29 
	~<±hªad.h
>

30 
	~<sig«l.h
>

32 
	~"fûebích.h
"

33 
	~"thªadÊow.h
"

34 
	~"Êow›.h
"

35 
	~"ùc.h
"

37 
thªadÊow_t
 *
thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
,

38 *
«me
, 
thªadÊow_t
 *
öhîô
, 
ö°™˚
);

64 
	$thªadÊow_¸óãthªad
(
thªadÊow_t
 *
thªadÊow
)

66 
fböt_t
 
memsize
;

67 
memsize
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_memsize
);

68 
thªadÊow
->
tf_c⁄°memsize
 = 
memsize
;

69 
ªt
;

71 
	`fûebích_log
(
LOG_DEBUG_SCRIPT
, "CreatingÅhread %s, memory = %ld",

72 
thªadÊow
->
tf_«me
, 
memsize
);

74 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

75 
fûebích_shm
->
shm_ªquúed
 +
memsize
;

77 
ªt
 = 
	`±hªad_¸óã
(&
thªadÊow
->
tf_tid
, 
NULL
,

78 (*(*)(*))
Êow›_°¨t
, 
thªadÊow
);

79 i‡(
ªt
 != 0) {

80 
	`fûebích_log
(
LOG_ERROR
, "thªad cª©êÁûed: %s", 
	`°ªº‹
(
ªt
));

81 
	`fûebích_shutdown
(1);

82  (
FILEBENCH_ERROR
);

85  (
FILEBENCH_OK
);

86 
	}
}

105 
	$thªadÊow_öô
(
¥ocÊow_t
 *
¥ocÊow
)

107 
thªadÊow_t
 *
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

108 
ªt
 = 0;

110 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

112 
thªadÊow
) {

113 
thªadÊow_t
 *
√wthªad
;

114 
ö°™˚s
;

115 
i
;

117 
ö°™˚s
 = 
	`avd_gë_öt
(
thªadÊow
->
tf_ö°™˚s
);

118 
	`fûebích_log
(
LOG_VERBOSE
,

120 
ö°™˚s
, 
thªadÊow
->
tf_«me
);

122 
i
 = 1; i < 
ö°™˚s
; i++) {

124 
√wthªad
 =

125 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

126 
thªadÊow
->
tf_«me
,ÅhªadÊow, 
i
 + 1);

127 i‡(
√wthªad
 =
NULL
)

129 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

132 
√wthªad
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
,

133 
thªadÊow
->
tf_«me
,

134 
thªadÊow
, 1);

136 i‡(
√wthªad
 =
NULL
)

140 
ªt
 |
	`thªadÊow_¸óãthªad
(
√wthªad
);

142 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

145 
thªadÊow
 = 
¥ocÊow
->
pf_thªads
;

147 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

157 
	`£t_Êag
(&
¥ocÊow
->
pf_thªads_deföed_Êag
);

159 
thªadÊow
) {

161 i‡(
thªadÊow
->
tf_tid
) {

162 *
°©us
;

164 i‡(
	`±hªad_joö
(
thªadÊow
->
tf_tid
, &
°©us
) == 0)

165 
ªt
 +*(*)
°©us
;

167 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

170 
¥ocÊow
->
pf_ru¬ög
 = 0;

172  (
ªt
);

173 
	}
}

180 
	$thªadÊow_kûl
(
thªadÊow_t
 *
thªadÊow
)

182 
waô_˙t
 = 2;

185 
thªadÊow
->
tf_ab‹t
 = 1;

188 
waô_˙t
 && 
thªadÊow
->
tf_ru¬ög
) {

189 (Ë
	`¶ìp
(1);

190 
waô_˙t
--;

193 i‡(
thªadÊow
->
tf_ru¬ög
) {

194 
thªadÊow
->
tf_ru¬ög
 = 
FALSE
;

195 (Ë
	`±hªad_kûl
(
thªadÊow
->
tf_tid
, 
SIGKILL
);

197 
	}
}

209 
	$thªadÊow_dñëe
(
thªadÊow_t
 **
thªadli°
,ÅhªadÊow_à*
thªadÊow
)

211 
thªadÊow_t
 *
íåy
 = *
thªadli°
;

213 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingÅhread: (%s-%d)",

214 
thªadÊow
->
tf_«me
,

215 
thªadÊow
->
tf_ö°™˚
);

217 i‡(
thªadÊow
->
tf_©ås
 & 
THREADFLOW_USEISM
)

218 
fûebích_shm
->
shm_ªquúed
 -
thªadÊow
->
tf_c⁄°memsize
;

220 i‡(
thªadÊow
 =*
thªadli°
) {

222 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletedÅhread: (%s-%d)",

223 
thªadÊow
->
tf_«me
,

224 
thªadÊow
->
tf_ö°™˚
);

226 
	`thªadÊow_kûl
(
thªadÊow
);

227 
	`Êow›_dñëe_Æl
(&
thªadÊow
->
tf_thrd_f›s
);

228 *
thªadli°
 = 
thªadÊow
->
tf_√xt
;

229 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

230 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

234 
íåy
->
tf_√xt
) {

235 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

237 
íåy
->
tf_√xt
->
tf_«me
,

238 
íåy
->
tf_√xt
->
tf_ö°™˚
,

239 
thªadÊow
->
tf_«me
,

240 
thªadÊow
->
tf_ö°™˚
);

242 i‡(
thªadÊow
 =
íåy
->
tf_√xt
) {

244 
	`fûebích_log
(
LOG_DEBUG_IMPL
,

246 
íåy
->
tf_√xt
->
tf_«me
,

247 
íåy
->
tf_√xt
->
tf_ö°™˚
);

248 
	`thªadÊow_kûl
(
íåy
->
tf_√xt
);

249 
	`Êow›_dñëe_Æl
(&
íåy
->
tf_√xt
->
tf_thrd_f›s
);

250 (Ë
	`±hªad_muãx_de°roy
(&
thªadÊow
->
tf_lock
);

251 
	`ùc_‰ì
(
FILEBENCH_THREADFLOW
, (*)
thªadÊow
);

252 
íåy
->
tf_√xt
 =Éntry->tf_next->tf_next;

255 
íåy
 =É¡ry->
tf_√xt
;

259 
	}
}

267 
	$thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
)

269 
thªadÊow_t
 *
thªadÊow
;

271 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

273 
thªadÊow
 = *
thªadli°
;

274 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DeletingállÅhreads");

276 
thªadÊow
) {

277 i‡(
thªadÊow
->
tf_ö°™˚
 &&

278 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

279 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

282 (Ë
	`thªadÊow_dñëe
(
thªadli°
, 
thªadÊow
);

283 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

286 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

287 
	}
}

297 
	$thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
)

299 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

301 
thªadÊow
) {

302 
waôs
;

304 i‡((
thªadÊow
->
tf_ö°™˚
 == 0) ||

305 (
thªadÊow
->
tf_ö°™˚
 =
FLOW_MASTER
)) {

306 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

310 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "CheckingÖid %dÅhread %s-%d",

311 
pid
,

312 
thªadÊow
->
tf_«me
,

313 
thªadÊow
->
tf_ö°™˚
);

315 
waôs
 = 10;

316 
waôs
 && (
thªadÊow
->
tf_ru¬ög
 == 0) &&

317 (
fûebích_shm
->
shm_f_ab‹t
 == 0)) {

318 (Ë
	`ùc_muãx_u∆ock
(

319 &
fûebích_shm
->
shm_thªadÊow_lock
);

320 i‡(
waôs
 < 3)

321 
	`fûebích_log
(
LOG_INFO
,

323 
pid
,

324 
thªadÊow
->
tf_«me
,

325 
thªadÊow
->
tf_ö°™˚
);

327 (Ë
	`¶ìp
(1);

328 (Ë
	`ùc_muãx_lock
(

329 &
fûebích_shm
->
shm_thªadÊow_lock
);

330 
waôs
--;

333 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

336 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

337 
	}
}

352 
thªadÊow_t
 *

353 
	$thªadÊow_deföe_comm⁄
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

354 
thªadÊow_t
 *
öhîô
, 
ö°™˚
)

356 
thªadÊow_t
 *
thªadÊow
;

357 
thªadÊow_t
 **
thªadli°p
 = &
¥ocÊow
->
pf_thªads
;

359 i‡(
«me
 =
NULL
)

360  (
NULL
);

362 
thªadÊow
 = (
thªadÊow_t
 *)
	`ùc_mÆloc
(
FILEBENCH_THREADFLOW
);

364 i‡(
thªadÊow
 =
NULL
)

365  (
NULL
);

367 i‡(
öhîô
)

368 (Ë
	`mem˝y
(
thªadÊow
, 
öhîô
,  (
thªadÊow_t
));

370 (Ë
	`mem£t
(
thªadÊow
, 0,  (
thªadÊow_t
));

372 
thªadÊow
->
tf_utid
 = ++
fûebích_shm
->
shm_utid
;

374 
thªadÊow
->
tf_ö°™˚
 = 
ö°™˚
;

375 (Ë
	`°r˝y
(
thªadÊow
->
tf_«me
, 
«me
);

376 
thªadÊow
->
tf_¥o˚ss
 = 
¥ocÊow
;

377 (Ë
	`±hªad_muãx_öô
(&
thªadÊow
->
tf_lock
,

378 
	`ùc_muãx©å
(
IPC_MUTEX_NORMAL
));

380 
	`fûebích_log
(
LOG_DEBUG_IMPL
, "DefiningÅhread %s-%d",

381 
«me
, 
ö°™˚
);

384 i‡(*
thªadli°p
 =
NULL
) {

385 *
thªadli°p
 = 
thªadÊow
;

386 
thªadÊow
->
tf_√xt
 = 
NULL
;

388 
thªadÊow
->
tf_√xt
 = *
thªadli°p
;

389 *
thªadli°p
 = 
thªadÊow
;

392  
thªadÊow
;

393 
	}
}

403 
thªadÊow_t
 *

404 
	$thªadÊow_deföe
(
¥ocÊow_t
 *
¥ocÊow
, *
«me
,

405 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
)

407 
thªadÊow_t
 *
thªadÊow
;

409 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

411 i‡((
thªadÊow
 = 
	`thªadÊow_deföe_comm⁄
(
¥ocÊow
, 
«me
,

412 
öhîô
, 
FLOW_MASTER
)Ë=
NULL
)

413  (
NULL
);

415 
thªadÊow
->
tf_ö°™˚s
 = 
ö°™˚s
;

417 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

419  (
thªadÊow
);

420 
	}
}

428 
thªadÊow_t
 *

429 
	$thªadÊow_föd
(
thªadÊow_t
 *
thªadli°
, *
«me
)

431 
thªadÊow_t
 *
thªadÊow
 = 
thªadli°
;

433 (Ë
	`ùc_muãx_lock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

435 
thªadÊow
) {

436 i‡(
	`°rcmp
(
«me
, 
thªadÊow
->
tf_«me
) == 0) {

438 (Ë
	`ùc_muãx_u∆ock
(

439 &
fûebích_shm
->
shm_thªadÊow_lock
);

441  (
thªadÊow
);

443 
thªadÊow
 =ÅhªadÊow->
tf_√xt
;

446 (Ë
	`ùc_muãx_u∆ock
(&
fûebích_shm
->
shm_thªadÊow_lock
);

449  (
NULL
);

450 
	}
}

	@threadflow.h

26 #i‚de‡
_FB_THREADFLOW_H


27 
	#_FB_THREADFLOW_H


	)

29 
	~"fûebích.h
"

31 
	#AL_READ
 1

	)

32 
	#AL_WRITE
 2

	)

34 #ifde‡
HAVE_AIO


35 
	saiﬁi°
 {

36 
	mÆ_ty≥
;

37 
aiﬁi°
 *
	mÆ_√xt
;

38 
aiﬁi°
 *
	mÆ_w‹k√xt
;

39 
aiocb64
 
	mÆ_aiocb
;

40 } 
	taiﬁi°_t
;

43 
	#THREADFLOW_MAXFD
 128

	)

44 
	#THREADFLOW_USEISM
 0x1

	)

46 
	sthªadÊow
 {

47 
	mtf_«me
[128];

48 
	mtf_©ås
;

49 
	mtf_ö°™˚
;

50 
	mtf_ru¬ög
;

51 
	mtf_ab‹t
;

52 
	mtf_utid
;

53 
¥ocÊow
 *
	mtf_¥o˚ss
;

54 
±hªad_t
 
	mtf_tid
;

55 
±hªad_muãx_t
 
	mtf_lock
;

56 
avd_t
 
	mtf_ö°™˚s
;

57 
thªadÊow
 *
	mtf_√xt
;

58 
Êow›
 *
	mtf_thrd_f›s
;

59 
ˇddr_t
 
	mtf_mem
;

60 
avd_t
 
	mtf_memsize
;

61 
fböt_t
 
	mtf_c⁄°memsize
;

62 
fb_fdesc_t
 
	mtf_fd
[
THREADFLOW_MAXFD
 + 1];

63 
fûe£ã¡ry_t
 *
	mtf_f£
[
THREADFLOW_MAXFD
 + 1];

64 
	mtf_fdrŸ‹
;

65 
Êow°©s
 
	mtf_°©s
;

66 
hπime_t
 
	mtf_°ime
;

67 #ifde‡
HAVE_AIO


68 
aiﬁi°_t
 *
	mtf_aiﬁi°
;

70 
avd_t
 
	mtf_i›rio
;

72 } 
	tthªadÊow_t
;

75 
	#THREADFLOW_DEFAULTMEM
 1024*1024LL;

	)

77 
thªadÊow_t
 *
thªadÊow_deföe
(
¥ocÊow_t
 *, *
«me
,

78 
thªadÊow_t
 *
öhîô
, 
avd_t
 
ö°™˚s
);

79 
thªadÊow_t
 *
thªadÊow_föd
(threadflow_t *, *);

80 
thªadÊow_öô
(
¥ocÊow_t
 *);

81 
Êow›_°¨t
(
thªadÊow_t
 *
thªadÊow
);

82 
thªadÊow_Æl°¨ãd
(
pid_t
 
pid
, 
thªadÊow_t
 *
thªadÊow
);

83 
thªadÊow_dñëe_Æl
(
thªadÊow_t
 **
thªadli°
);

	@utils.c

28 
	~<limôs.h
>

29 
	~<°rög.h
>

30 
	~<°dlib.h
>

31 
	~<°d¨g.h
>

32 
	~<°dio.h
>

33 
	~<î∫o.h
>

34 #ifde‡
HAVE_STDINT_H


35 
	~<°döt.h
>

38 
	~"fûebích.h
"

39 
	~"utûs.h
"

40 
	~"∑r£πy≥s.h
"

58 
	$fb_°øŒoc
(*
°r
)

60 *
√w°r
;

62 i‡((
√w°r
 = 
	`mÆloc
(
	`°æí
(
°r
Ë+ 1)Ë=
NULL
)

63  (
NULL
);

64 (Ë
	`°r˝y
(
√w°r
, 
°r
);

65  (
√w°r
);

66 
	}
}

68 #i‚de‡
HAVE_STRLCPY


74 
size_t


75 
	$fb_°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

77 
uöt_t
 
i
;

79 
i
 = 0; i < (
d°size
 - 1); i++) {

82 i‡(
§c
[
i
] == '\0')

85 
d°
[
i
] = 
§c
[i];

89 
d°
[
i
] = '\0';

90 
i
++;

92  (
i
);

93 
	}
}

96 #i‚de‡
HAVE_STRLCAT


102 
size_t


103 
	$fb_°æˇt
(*
d°
, c⁄° *
§c
, 
size_t
 
d°size
)

105 
uöt_t
 
i
, 
j
;

108 
i
 = 0; i < (
d°size
 - 1); i++) {

109 i‡(
d°
[
i
] == '\0')

114 
j
 = 0; 
i
 < (
d°size
 - 1); i++) {

115 i‡(
§c
[
j
] == '\0')

118 
d°
[
i
] = 
§c
[
j
];

119 
j
++;

123 
d°
[
i
] = '\0';

124 
i
++;

126  (
i
);

127 
	}
}

131 #ifde‡
HAVE_PROC_SYS_KERNEL_SHMMAX


138 
	$fb_£t_shmmax
()

140 
FILE
 *
f
;

141 
ªt
;

143 
f
 = 
	`f›í
("/proc/sys/kernel/shmmax", "r+");

144 i‡(!
f
) {

145 
	`fûebích_log
(
LOG_FATAL
, "WARNING: CouldÇot open "

155 
	#SOME_LARGE_SHMAX
 "268435456"

	)

156 
ªt
 = 
	`fwrôe
(
SOME_LARGE_SHMAX
, (SOME_LARGE_SHMAX), 1, 
f
);

157 i‡(
ªt
 != 1)

158 
	`fûebích_log
(
LOG_ERROR
, "CoudÇot writeÅo "

160 #unde‡
SOME_LARGE_SHMAX


162 
	`f˛o£
(
f
);

165 
	}
}

168 
	$fb_£t_shmmax
()

171 
	}
}

174 #ifde‡
HAVE_SETRLIMIT


189 
	$fb_£t_æimô
()

191 
æimô
 
æp
;

193 ()
	`gëæimô
(
RLIMIT_NOFILE
, &
æp
);

194 
æp
.
æim_cur
 =ÑÕ.
æim_max
;

195 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

196 
	#SOME_LARGE_NUMBER_OF_FILES
 50000

	)

197 
æp
.
æim_cur
 =ÑÕ.
æim_max
 = 
SOME_LARGE_NUMBER_OF_FILES
;

198 #unde‡
SOME_LARGE_NUMBER_OF_FILES


199 ()
	`£ålimô
(
RLIMIT_NOFILE
, &
æp
);

201 
	}
}

204 
	$fb_£t_æimô
()

207 
	}
}

	@utils.h

26 #i‚def 
_FB_UTILS_H


27 
	#_FB_UTILS_H


	)

29 
	~"fûebích.h
"

31 *
fb_°øŒoc
(*
°r
);

33 #ifde‡
HAVE_STRLCAT


34 
	#fb_°æˇt
 
°æˇt


	)

36 
size_t
 
fb_°æˇt
(*
d°
, c⁄° *
§c
, size_à
d°size
);

39 #ifde‡
HAVE_STRLCPY


40 
	#fb_°æ˝y
 
°æ˝y


	)

42 
size_t
 
fb_°æ˝y
(*
d°
, c⁄° *
§c
, size_à
d°size
);

45 
fb_£t_shmmax
();

46 
fb_£t_æimô
();

	@vars.c

29 
	~<°dlib.h
>

30 
	~<°dio.h
>

31 
	~<°rög.h
>

32 
	~<î∫o.h
>

33 
	~<as£π.h
>

35 
	~"fûebích.h
"

36 
	~"v¨s.h
"

37 
	~"misc.h
"

38 
	~"utûs.h
"

39 
	~"°©s.h
"

40 
	~"evítgí.h
"

41 
	~"fb_øndom.h
"

73 
	$avd_gë_ty≥_ãxtifõd
(
avd_t
 
avd
)

75 
avd
->
avd_ty≥
) {

76 
AVD_INVALID
:

78 
AVD_VAL_BOOL
:

80 
AVD_VARVAL_BOOL
:

82 
AVD_VAL_INT
:

84 
AVD_VARVAL_INT
:

86 
AVD_VAL_DBL
:

88 
AVD_VARVAL_DBL
:

90 
AVD_VAL_STR
:

92 
AVD_VARVAL_STR
:

94 
AVD_VARVAL_RANDOM
:

96 
AVD_VARVAL_CUSTOM
:

98 
AVD_VARVAL_UNKNOWN
:

103 
	}
}

106 
	$£t_avd_ty≥_by_v¨
(
avd_t
 
avd
, 
v¨_t
 *
v¨
, 
îr‹_⁄_unknown
) {

107 
v¨
->
v¨_ty≥
) {

108 
VAR_BOOL
:

109 
avd
->
avd_ty≥
 = 
AVD_VARVAL_BOOL
;

110 
avd
->
avd_vÆ
.
boﬁ±r
 = &
v¨
->
v¨_vÆ
.
boﬁón
;

112 
VAR_INT
:

113 
avd
->
avd_ty≥
 = 
AVD_VARVAL_INT
;

114 
avd
->
avd_vÆ
.
öçå
 = &
v¨
->
v¨_vÆ
.
öãgî
;

116 
VAR_DBL
:

117 
avd
->
avd_ty≥
 = 
AVD_VARVAL_DBL
;

118 
avd
->
avd_vÆ
.
dbÕå
 = &
v¨
->
v¨_vÆ
.
dbl
;

120 
VAR_STR
:

121 
avd
->
avd_ty≥
 = 
AVD_VARVAL_STR
;

122 
avd
->
avd_vÆ
.
°Ωå
 = &
v¨
->
v¨_vÆ
.
°rög
;

124 
VAR_RANDOM
:

125 
avd
->
avd_ty≥
 = 
AVD_VARVAL_RANDOM
;

126 
avd
->
avd_vÆ
.
ønd±r
 = 
v¨
->
v¨_vÆ
.randptr;

128 
VAR_CUSTOM
:

129 
avd
->
avd_ty≥
 = 
AVD_VARVAL_CUSTOM
;

130 
avd
->
avd_vÆ
.
cv¨±r
 = 
v¨
->
v¨_vÆ
.cvarptr;

132 
VAR_UNKNOWN
:

133 i‡(
îr‹_⁄_unknown
) {

134 
	`fûebích_log
(
LOG_ERROR
,

135 "N⁄öôülized v¨übÀ %s", 
v¨
->
v¨_«me
);

136 
	`fûebích_shutdown
(1);

138 
avd
->
avd_ty≥
 = 
AVD_VARVAL_UNKNOWN
;

139 
avd
->
avd_vÆ
.
v¨±r
 = 
v¨
;

142 
	`fûebích_log
(
LOG_ERROR
,

143 "InvÆid v¨übÀÅy≥ (v¨übÀ: %s)", 
v¨
->
v¨_«me
);

144 
	`fûebích_shutdown
(1);

146 
	}
}

148 
boﬁón_t


149 
	$avd_gë_boﬁ
(
avd_t
 
avd
)

151 
v¨_t
 *
v¨
;

153 
	`as£π
(
avd
);

155 
avd
->
avd_ty≥
) {

156 
AVD_VAL_BOOL
:

157  
avd
->
avd_vÆ
.
boﬁvÆ
;

158 
AVD_VARVAL_BOOL
:

159 
	`as£π
(
avd
->
avd_vÆ
.
boﬁ±r
);

160  *(
avd
->
avd_vÆ
.
boﬁ±r
);

161 
AVD_VAL_INT
:

162 i‡(
avd
->
avd_vÆ
.
ötvÆ
)

163  
TRUE
;

164  
FALSE
;

165 
AVD_VARVAL_INT
:

166 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

167 i‡(*(
avd
->
avd_vÆ
.
öçå
))

168  
TRUE
;

169  
FALSE
;

170 
AVD_VAL_DBL
:

171 i‡(
avd
->
avd_vÆ
.
dblvÆ
)

172  
TRUE
;

173  
FALSE
;

174 
AVD_VARVAL_DBL
:

175 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

176 i‡(*(
avd
->
avd_vÆ
.
dbÕå
))

177  
TRUE
;

178  
FALSE
;

179 
AVD_VARVAL_UNKNOWN
:

180 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

181 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

182  
	`avd_gë_boﬁ
(
avd
);

184 
	`fûebích_log
(
LOG_ERROR
,

186 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

187  
FALSE
;

189 
	}
}

191 
uöt64_t


192 
	$avd_gë_öt
(
avd_t
 
avd
)

194 
ønddi°_t
 *
∫dp
;

195 
cv¨_t
 *
cv¨
;

196 
v¨_t
 *
v¨
;

198 
	`as£π
(
avd
);

200 
avd
->
avd_ty≥
) {

201 
AVD_VAL_INT
:

202  
avd
->
avd_vÆ
.
ötvÆ
;

203 
AVD_VARVAL_INT
:

204 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

205  *(
avd
->
avd_vÆ
.
öçå
);

206 
AVD_VAL_DBL
:

207  (
uöt64_t
)
avd
->
avd_vÆ
.
dblvÆ
;

208 
AVD_VARVAL_DBL
:

209 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

210  (
uöt64_t
)*(
avd
->
avd_vÆ
.
dbÕå
);

211 
AVD_VARVAL_RANDOM
:

212 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

213 
	`as£π
(
∫dp
);

214  (
uöt64_t
)
∫dp
->
	`∫d_gë
(rndp);

215 
AVD_VARVAL_CUSTOM
:

216 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

217 
	`as£π
(
cv¨
);

218  (
uöt64_t
)
	`gë_cv¨_vÆue
(
cv¨
);

219 
AVD_VARVAL_UNKNOWN
:

220 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

221 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

222  
	`avd_gë_öt
(
avd
);

224 
	`fûebích_log
(
LOG_ERROR
,

226 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

229 
	}
}

232 
	$avd_gë_dbl
(
avd_t
 
avd
)

234 
ønddi°_t
 *
∫dp
;

235 
cv¨_t
 *
cv¨
;

236 
v¨_t
 *
v¨
;

238 
	`as£π
(
avd
);

240 
avd
->
avd_ty≥
) {

241 
AVD_VAL_DBL
:

242  
avd
->
avd_vÆ
.
dblvÆ
;

243 
AVD_VARVAL_DBL
:

244 
	`as£π
(
avd
->
avd_vÆ
.
dbÕå
);

245  *(
avd
->
avd_vÆ
.
dbÕå
);

246 
AVD_VAL_INT
:

247  ()
avd
->
avd_vÆ
.
ötvÆ
;

248 
AVD_VARVAL_INT
:

249 
	`as£π
(
avd
->
avd_vÆ
.
öçå
);

250  ()(*(
avd
->
avd_vÆ
.
öçå
));

251 
AVD_VARVAL_RANDOM
:

252 
∫dp
 = 
avd
->
avd_vÆ
.
ønd±r
;

253 
	`as£π
(
∫dp
);

254  
∫dp
->
	`∫d_gë
(rndp);

255 
AVD_VARVAL_CUSTOM
:

256 
cv¨
 = 
avd
->
avd_vÆ
.
cv¨±r
;

257 
	`as£π
(
cv¨
);

258  
	`gë_cv¨_vÆue
(
cv¨
);

259 
AVD_VARVAL_UNKNOWN
:

260 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

261 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

262  
	`avd_gë_dbl
(
avd
);

264 
	`fûebích_log
(
LOG_ERROR
,

266 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

269 
	}
}

272 
	$avd_gë_°r
(
avd_t
 
avd
)

274 
	`as£π
(
avd
);

275 
v¨_t
 *
v¨
;

277 
avd
->
avd_ty≥
) {

278 
AVD_VAL_STR
:

279  
avd
->
avd_vÆ
.
°rvÆ
;

280 
AVD_VARVAL_STR
:

281 
	`as£π
(
avd
->
avd_vÆ
.
°Ωå
);

282  *
avd
->
avd_vÆ
.
°Ωå
;

283 
AVD_VARVAL_UNKNOWN
:

284 
v¨
 = 
avd
->
avd_vÆ
.
v¨±r
;

285 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 1);

286  
	`avd_gë_°r
(
avd
);

288 
	`fûebích_log
(
LOG_ERROR
,

290 
	`avd_gë_ty≥_ãxtifõd
(
avd
));

291  
NULL
;

293 
	}
}

295 
avd_t


296 
	$avd_Æloc_cmn
()

298 
avd_t
 
avd
;

300 
avd
 = (
avd_t
)
	`ùc_mÆloc
(
FILEBENCH_AVD
);

301 i‡(!
avd
)

302 
	`fûebích_log
(
LOG_ERROR
, "AVDállocation failed");

304  
avd
;

305 
	}
}

307 
avd_t


308 
	$avd_boﬁ_Æloc
(
boﬁón_t
 
vÆ
)

310 
avd_t
 
avd
;

312 
avd
 = 
	`avd_Æloc_cmn
();

313 i‡(!
avd
)

314  
NULL
;

316 
avd
->
avd_ty≥
 = 
AVD_VAL_BOOL
;

317 
avd
->
avd_vÆ
.
boﬁvÆ
 = 
vÆ
;

319  
avd
;

320 
	}
}

322 
avd_t


323 
	$avd_öt_Æloc
(
uöt64_t
 
vÆ
)

325 
avd_t
 
avd
;

327 
avd
 = 
	`avd_Æloc_cmn
();

328 i‡(!
avd
)

329  
NULL
;

331 
avd
->
avd_ty≥
 = 
AVD_VAL_INT
;

332 
avd
->
avd_vÆ
.
ötvÆ
 = 
vÆ
;

334  
avd
;

335 
	}
}

337 
avd_t


338 
	$avd_dbl_Æloc
(
vÆ
)

340 
avd_t
 
avd
;

342 
avd
 = 
	`avd_Æloc_cmn
();

343 i‡(!
avd
)

344  
NULL
;

346 
avd
->
avd_ty≥
 = 
AVD_VAL_DBL
;

347 
avd
->
avd_vÆ
.
dblvÆ
 = 
vÆ
;

349  
avd
;

350 
	}
}

352 
avd_t


353 
	$avd_°r_Æloc
(*
°rög
)

355 
avd_t
 
avd
;

357 
	`as£π
(
°rög
);

359 
avd
 = 
	`avd_Æloc_cmn
();

360 i‡(!
avd
)

361  
NULL
;

363 
avd
->
avd_ty≥
 = 
AVD_VAL_STR
;

364 
avd
->
avd_vÆ
.
°rvÆ
 = 
	`ùc_°øŒoc
(
°rög
);

366  
avd
;

367 
	}
}

369 
v¨_t
 *

370 
	$v¨_Æloc
(*
«me
)

372 
v¨_t
 *
v¨
;

374 
v¨
 = (
v¨_t
 *)
	`ùc_mÆloc
(
FILEBENCH_VARIABLE
);

375 i‡(!
v¨
) {

376 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for variables");

377  
NULL
;

380 
	`mem£t
(
v¨
, 0, (*var));

381 
	`VAR_SET_UNKNOWN
(
v¨
);

383 
v¨
->
v¨_«me
 = 
	`ùc_°øŒoc
(
«me
);

384 i‡(!
v¨
->
v¨_«me
) {

385 
	`fûebích_log
(
LOG_ERROR
, "Out of memory for strings");

386  
NULL
;

389 
v¨
->
v¨_√xt
 = 
fûebích_shm
->
shm_v¨_li°
;

390 
fûebích_shm
->
shm_v¨_li°
 = 
v¨
;

392  
v¨
;

393 
	}
}

395 
v¨_t
 *

396 
	$v¨_föd
(*
«me
)

398 
v¨_t
 *
v¨
;

400 
v¨
 = 
fûebích_shm
->
shm_v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
)

401 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

402  
v¨
;

404  
NULL
;

405 
	}
}

407 
v¨_t
 *

408 
	$v¨_föd_Æloc
(*
«me
)

410 
v¨_t
 *
v¨
;

412 
v¨
 = 
	`v¨_föd
(
«me
);

413 i‡(!
v¨
)

414 
v¨
 = 
	`v¨_Æloc
(
«me
);

416  
v¨
;

417 
	}
}

420 
	$v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

422 
v¨_t
 *
v¨
;

424 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

425 i‡(!
v¨
) {

426 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

430 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

433 
	}
}

436 
	$v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

438 
v¨_t
 *
v¨
;

440 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

441 i‡(!
v¨
) {

442 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

446 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

449 
	}
}

452 
	$v¨_assign_doubÀ
(*
«me
, 
dbl
)

454 
v¨_t
 *
v¨
;

456 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

457 i‡(!
v¨
) {

458 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

462 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

465 
	}
}

468 
	$v¨_assign_°rög
(*
«me
, *
°rög
)

470 
v¨_t
 *
v¨
;

471 *
°Ωå
;

473 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

474 i‡(!
v¨
) {

475 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

479 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

480 i‡(!
°Ωå
) {

481 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

485 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

488 
	}
}

491 
	$v¨_assign_øndom
(*
«me
, 
ønddi°_t
 *
∫dp
)

493 
v¨_t
 *
v¨
;

495 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

496 i‡(!
v¨
) {

497 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

501 
	`VAR_SET_RANDOM
(
v¨
, 
∫dp
);

504 
	}
}

507 
	$v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar)

509 
v¨_t
 *
v¨
;

511 
v¨
 = 
	`v¨_föd_Æloc
(
«me
);

512 i‡(!
v¨
) {

513 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸássig¿v¨übÀ %s", 
«me
);

517 
	`VAR_SET_CUSTOM
(
v¨
, 
cv¨
);

520 
	}
}

530 
avd_t


531 
	$avd_v¨_Æloc
(*
v¨«me
)

533 
v¨_t
 *
v¨
;

534 
avd_t
 
avd
;

536 
v¨
 = 
	`v¨_föd_Æloc
(
v¨«me
);

537 i‡(!
v¨
) {

538 
	`fûebích_log
(
LOG_ERROR
, "CouldÇŸác˚s†v¨übÀ %s", 
v¨«me
);

539 
	`fûebích_shutdown
(1);

542 
avd
 = 
	`avd_Æloc_cmn
();

543 i‡(!
avd
)

544  
NULL
;

546 
	`£t_avd_ty≥_by_v¨
(
avd
, 
v¨
, 0);

548  
avd
;

549 
	}
}

552 
	$__v¨_to_°rög
(
v¨_t
 *
v¨
)

554 
tmp
[128];

556 i‡(
	`VAR_HAS_RANDOM
(
v¨
)) {

557 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

558 
RAND_TYPE_UNIFORM
:

559  
	`fb_°øŒoc
("uniformÑandom var");

560 
RAND_TYPE_GAMMA
:

561  
	`fb_°øŒoc
("gammaÑandom var");

562 
RAND_TYPE_TABLE
:

563  
	`fb_°øŒoc
("tabularÑandom var");

565  
	`fb_°øŒoc
("unitializedÑandom var");

569 i‡(
	`VAR_HAS_CUSTOM
(
v¨
))

570  
	`fb_°øŒoc
("custom variable");

572 i‡(
	`VAR_HAS_STRING
(
v¨
Ë&& v¨->
v¨_vÆ
.
°rög
)

573  
	`fb_°øŒoc
(
v¨
->
v¨_vÆ
.
°rög
);

575 i‡(
	`VAR_HAS_BOOLEAN
(
v¨
)) {

576 i‡(
v¨
->
v¨_vÆ
.
boﬁón
)

577  
	`fb_°øŒoc
("true");

579  
	`fb_°øŒoc
("false");

582 i‡(
	`VAR_HAS_INTEGER
(
v¨
)) {

583 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%llu",

584 (
u_l⁄gl⁄g_t
)
v¨
->
v¨_vÆ
.
öãgî
);

585  
	`fb_°øŒoc
(
tmp
);

588 i‡(
	`VAR_HAS_DOUBLE
(
v¨
)) {

589 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%lf",

590 
v¨
->
v¨_vÆ
.
dbl
);

591  
	`fb_°øŒoc
(
tmp
);

594  
	`fb_°øŒoc
("No default");

595 
	}
}

598 
	$v¨_to_°rög
(*
«me
)

600 
v¨_t
 *
v¨
;

602 
v¨
 = 
	`v¨_föd
(
«me
);

603 i‡(!
v¨
)

604  
NULL
;

606  
	`__v¨_to_°rög
(
v¨
);

607 
	}
}

610 
	$v¨_øndv¨_to_°rög
(*
«me
, 
∑øm_«me
)

612 
v¨_t
 *
v¨
;

613 
uöt64_t
 
vÆue
;

614 
tmp
[128];

616 
v¨
 = 
	`v¨_föd
(
«me
);

617 i‡(!
v¨
)

618  
	`v¨_to_°rög
(
«me
);

620 i‡(!
	`VAR_HAS_RANDOM
(
v¨
))

621  
	`v¨_to_°rög
(
«me
);

623 
∑øm_«me
) {

624 
RAND_PARAM_TYPE
:

625 
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_TYPE_MASK
) {

626 
RAND_TYPE_UNIFORM
:

627  
	`fb_°øŒoc
("uniform");

628 
RAND_TYPE_GAMMA
:

629  
	`fb_°øŒoc
("gamma");

630 
RAND_TYPE_TABLE
:

631  
	`fb_°øŒoc
("tabular");

633  
	`fb_°øŒoc
("uninitialized");

636 
RAND_PARAM_SRC
:

637 i‡(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_ty≥
 & 
RAND_SRC_GENERATOR
)

638  
	`fb_°øŒoc
("rand48");

640  
	`fb_°øŒoc
("urandom");

642 
RAND_PARAM_SEED
:

643 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_£ed
);

646 
RAND_PARAM_MIN
:

647 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_mö
);

650 
RAND_PARAM_MEAN
:

651 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_món
);

654 
RAND_PARAM_GAMMA
:

655 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_gamma
);

658 
RAND_PARAM_ROUND
:

659 
vÆue
 = 
	`avd_gë_öt
(
v¨
->
v¨_vÆ
.
ønd±r
->
∫d_round
);

663  
NULL
;

668 (Ë
	`¢¥ötf
(
tmp
,  (tmp), "%Œu", (
u_l⁄gl⁄g_t
)
vÆue
);

669  (
	`fb_°øŒoc
(
tmp
));

670 
	}
}

674 
v¨_t
 *

675 
	$v¨_föd_li°_⁄ly
(*
«me
, 
v¨_t
 *
v¨_li°
)

677 
v¨_t
 *
v¨
;

679 
v¨
 = 
v¨_li°
; v¨; v¨ = v¨->
v¨_√xt
) {

680 i‡(!
	`°rcmp
(
v¨
->
v¨_«me
, 
«me
))

681  
v¨
;

684  
NULL
;

685 
	}
}

687 
v¨_t
 *

688 
	$v¨_föd_loˇl_n‹mÆ
(*
«me
)

690 
v¨_t
 *
v¨
;

692 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_loc_li°
);

693 i‡(!
v¨
)

694 
v¨
 = 
	`v¨_föd_li°_⁄ly
(
«me
, 
fûebích_shm
->
shm_v¨_li°
);

696  
v¨
;

697 
	}
}

704 
	$v¨_c›y
(
v¨_t
 *
d°_v¨
, v¨_à*
§c_v¨
) {

705 *
°Ωå
;

707 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
))

708 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

710 i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
))

711 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

713 i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
))

714 
	`VAR_SET_DBL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

716 i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

717 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

718 i‡(!
°Ωå
) {

719 
	`fûebích_log
(
LOG_ERROR
,

721 
d°_v¨
->
v¨_«me
);

724 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

728 
	}
}

734 
v¨_t
 *

735 
	$v¨_lv¨_Æloc_loˇl
(*
«me
)

737  
	`v¨_Æloc
(
«me
);

738 
	}
}

747 
v¨_t
 *

748 
	$v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
)

750 
v¨_t
 *
d°_v¨
, *
§c_v¨
;

751 *
°Ωå
;

753 
§c_«me
 += 1;

755 
§c_v¨
 = 
	`v¨_föd_loˇl_n‹mÆ
(
§c_«me
);

756 i‡(!
§c_v¨
) {

757 
	`fûebích_log
(
LOG_ERROR
,

758 "C™nŸ föd sour˚ v¨übÀ %s", 
§c_«me
);

759  
NULL
;

762 
d°_v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

763 i‡(!
d°_v¨
) {

764 
	`fûebích_log
(
LOG_ERROR
, "C™nŸássig¿v¨übÀ %s", 
«me
);

765  
NULL
;

768 i‡(
	`VAR_HAS_BOOLEAN
(
§c_v¨
)) {

769 
	`VAR_SET_BOOL
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
boﬁón
);

770 } i‡(
	`VAR_HAS_INTEGER
(
§c_v¨
)) {

771 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
öãgî
);

772 } i‡(
	`VAR_HAS_STRING
(
§c_v¨
)) {

773 
°Ωå
 = 
	`ùc_°øŒoc
(
§c_v¨
->
v¨_vÆ
.
°rög
);

774 i‡(!
°Ωå
) {

775 
	`fûebích_log
(
LOG_ERROR
,

776 "C™nŸássig¿v¨übÀ %s", 
«me
);

777  
NULL
;

779 
	`VAR_SET_STR
(
d°_v¨
, 
°Ωå
);

780 } i‡(
	`VAR_HAS_DOUBLE
(
§c_v¨
)) {

781 
	`VAR_SET_INT
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
dbl
);

782 } i‡(
	`VAR_HAS_RANDOM
(
§c_v¨
))

783 
	`VAR_SET_RANDOM
(
d°_v¨
, 
§c_v¨
->
v¨_vÆ
.
ønd±r
);

785  
d°_v¨
;

786 
	}
}

788 
v¨_t
 *

789 
	$v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
)

791 
v¨_t
 *
v¨
;

793 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

794 i‡(!
v¨
) {

795 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

796 
«me
);

797  
NULL
;

800 
	`VAR_SET_BOOL
(
v¨
, 
boﬁ
);

802  
v¨
;

803 
	}
}

805 
v¨_t
 *

806 
	$v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
)

808 
v¨_t
 *
v¨
;

810 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

811 i‡(!
v¨
) {

812 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

813 
«me
);

814  
NULL
;

817 
	`VAR_SET_INT
(
v¨
, 
öãgî
);

819  
v¨
;

820 
	}
}

822 
v¨_t
 *

823 
	$v¨_lv¨_assign_doubÀ
(*
«me
, 
dbl
)

825 
v¨_t
 *
v¨
;

827 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

829 i‡(!
v¨
) {

830 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

831 
«me
);

832  
NULL
;

835 
	`VAR_SET_DBL
(
v¨
, 
dbl
);

837  
v¨
;

838 
	}
}

840 
v¨_t
 *

841 
	$v¨_lv¨_assign_°rög
(*
«me
, *
°rög
)

843 
v¨_t
 *
v¨
;

844 *
°Ωå
;

846 
v¨
 = 
	`v¨_lv¨_Æloc_loˇl
(
«me
);

847 i‡(!
v¨
) {

848 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

849 
«me
);

850  
NULL
;

853 
°Ωå
 = 
	`ùc_°øŒoc
(
°rög
);

854 i‡(!
°Ωå
) {

855 
	`fûebích_log
(
LOG_ERROR
, "Cannotássign variable %s",

856 
«me
);

857  
NULL
;

860 
	`VAR_SET_STR
(
v¨
, 
°Ωå
);

862  
v¨
;

863 
	}
}

871 
	$avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
)

875 
	}
}

878 
	$v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

879 
v¨_t
 *
m°r_lv¨s
)

881 
v¨_t
 *
¥Ÿo_lv¨
;

884 
¥Ÿo_lv¨
 = 
	`v¨_föd_li°_⁄ly
(
√wlv¨
->
v¨_«me
, 
¥Ÿo_comp_v¨s
);

886 i‡(!
¥Ÿo_lv¨
)

893 i‡(
	`VAR_HAS_UNKNOWN
(
√wlv¨
)) {

895 (Ë
	`v¨_c›y
(
√wlv¨
, 
¥Ÿo_lv¨
);

897 
	}
}

	@vars.h

27 #i‚de‡
_VARS_H


28 
	#_VARS_H


	)

30 
	~"fûebích.h
"

33 
	eavd_ty≥
 {

34 
	mAVD_INVALID
 = 0,

36 
	mAVD_VAL_BOOL
,

37 
	mAVD_VARVAL_BOOL
,

38 
	mAVD_VAL_INT
,

39 
	mAVD_VARVAL_INT
,

40 
	mAVD_VAL_DBL
,

41 
	mAVD_VARVAL_DBL
,

42 
	mAVD_VAL_STR
,

43 
	mAVD_VARVAL_STR
,

45 
	mAVD_VARVAL_UNKNOWN
,

48 
	mAVD_VARVAL_RANDOM
,

51 
	mAVD_VARVAL_CUSTOM


54 } 
	tavd_ty≥_t
;

57 
	savd
 {

58 
avd_ty≥_t
 
	mavd_ty≥
;

60 
boﬁón_t
 
	mboﬁvÆ
;

61 
boﬁón_t
 *
	mboﬁ±r
;

62 
uöt64_t
 
	mötvÆ
;

63 
uöt64_t
 *
	möçå
;

64 
	mdblvÆ
;

65 *
	mdbÕå
;

66 *
	m°rvÆ
;

67 **
	m°Ωå
;

68 
v¨
 *
	mv¨±r
;

73 
ønddi°
 *
	mønd±r
;

74 
cv¨
 *
	mcv¨±r
;

75 } 
	mavd_vÆ
;

76 } *
	tavd_t
;

78 
	#AVD_IS_RANDOM
(
vp
Ë((vpË&& ((vp)->
avd_ty≥
 =
AVD_VARVAL_RANDOM
))

	)

79 
	#AVD_IS_STRING
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_STR
) || \

80 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_STR
)))

	)

81 
	#AVD_IS_BOOL
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_BOOL
) || \

82 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_BOOL
)))

	)

83 
	#AVD_IS_INT
(
vp
Ë((vpË&& (((vp)->
avd_ty≥
 =
AVD_VAL_INT
) || \

84 ((
vp
)->
avd_ty≥
 =
AVD_VARVAL_INT
)))

	)

87 
	ev¨_ty≥
 {

88 
	mVAR_INVALID
 = 0,

89 
	mVAR_BOOL
,

90 
	mVAR_INT
,

91 
	mVAR_DBL
,

92 
	mVAR_STR
,

93 
	mVAR_RANDOM
,

94 
	mVAR_CUSTOM
,

95 
	mVAR_UNKNOWN
,

96 } 
	tv¨_ty≥_t
;

98 
	sv¨
 {

99 *
	mv¨_«me
;

100 
v¨_ty≥_t
 
	mv¨_ty≥
;

101 
v¨
 *
	mv¨_√xt
;

103 
boﬁón_t
 
	mboﬁón
;

104 
uöt64_t
 
	möãgî
;

105 
	mdbl
;

106 *
	m°rög
;

107 
ønddi°
 *
	mønd±r
;

108 
cv¨
 *
	mcv¨±r
;

109 } 
	mv¨_vÆ
;

110 } 
	tv¨_t
;

113 
	#VAR_HAS_BOOLEAN
(
vp
) \

114 ((
vp
)->
v¨_ty≥
 =
VAR_BOOL
)

	)

115 
	#VAR_HAS_INTEGER
(
vp
) \

116 ((
vp
)->
v¨_ty≥
 =
VAR_INT
)

	)

117 
	#VAR_HAS_DOUBLE
(
vp
) \

118 ((
vp
)->
v¨_ty≥
 =
VAR_DBL
)

	)

119 
	#VAR_HAS_STRING
(
vp
) \

120 ((
vp
)->
v¨_ty≥
 =
VAR_STR
)

	)

121 
	#VAR_HAS_RANDOM
(
vp
) \

122 ((
vp
)->
v¨_ty≥
 =
VAR_RANDOM
)

	)

123 
	#VAR_HAS_CUSTOM
(
vp
) \

124 ((
vp
)->
v¨_ty≥
 =
VAR_CUSTOM
)

	)

125 
	#VAR_HAS_UNKNOWN
(
vp
) \

126 ((
vp
)->
v¨_ty≥
 =
VAR_UNKNOWN
)

	)

128 
	#VAR_SET_BOOL
(
vp
, 
vÆ
) \

130 (
vp
)->
v¨_vÆ
.
boﬁón
 = (
vÆ
); \

131 (
vp
)->
v¨_ty≥
 = 
VAR_BOOL
;\

132 }

	)

133 
	#VAR_SET_INT
(
vp
, 
vÆ
) \

135 (
vp
)->
v¨_vÆ
.
öãgî
 = (
vÆ
); \

136 (
vp
)->
v¨_ty≥
 = 
VAR_INT
; \

137 }

	)

138 
	#VAR_SET_DBL
(
vp
, 
vÆ
) \

140 (
vp
)->
v¨_vÆ
.
dbl
 = (
vÆ
); \

141 (
vp
)->
v¨_ty≥
 = 
VAR_DBL
; \

142 }

	)

143 
	#VAR_SET_STR
(
vp
, 
vÆ
) \

145 (
vp
)->
v¨_vÆ
.
°rög
 = (
vÆ
); \

146 (
vp
)->
v¨_ty≥
 = 
VAR_STR
; \

147 }

	)

148 
	#VAR_SET_RANDOM
(
vp
, 
vÆ
) \

150 (
vp
)->
v¨_vÆ
.
ønd±r
 = (
vÆ
); \

151 (
vp
)->
v¨_ty≥
 = 
VAR_RANDOM
; \

152 }

	)

153 
	#VAR_SET_CUSTOM
(
vp
, 
vÆ
) \

155 (
vp
)->
v¨_vÆ
.
cv¨±r
 = (
vÆ
); \

156 (
vp
)->
v¨_ty≥
 = 
VAR_CUSTOM
; \

157 }

	)

158 
	#VAR_SET_UNKNOWN
(
vp
) \

160 (
vp
)->
v¨_ty≥
 = 
VAR_UNKNOWN
; \

161 }

	)

163 
avd_t
 
avd_boﬁ_Æloc
(
boﬁón_t
 
boﬁ
);

164 
avd_t
 
avd_öt_Æloc
(
uöt64_t
 
öãgî
);

165 
avd_t
 
avd_dbl_Æloc
(
öãgî
);

166 
avd_t
 
avd_°r_Æloc
(*
°rög
);

167 
avd_t
 
avd_v¨_Æloc
(*
v¨«me
);

169 
v¨_assign_boﬁón
(*
«me
, 
boﬁón_t
 
boﬁ
);

170 
v¨_assign_öãgî
(*
«me
, 
uöt64_t
 
öãgî
);

171 
v¨_assign_doubÀ
(*
«me
, 
dbl
);

172 
v¨_assign_°rög
(*
«me
, *
°rög
);

173 
v¨_assign_øndom
(*
«me
, 
ønddi°
 *
∫dp
);

174 
v¨_assign_cu°om
(*
«me
, 
cv¨
 *cvar);

176 
boﬁón_t
 
avd_gë_boﬁ
(
avd_t
);

177 
uöt64_t
 
avd_gë_öt
(
avd_t
);

178 
avd_gë_dbl
(
avd_t
);

179 *
avd_gë_°r
(
avd_t
);

182 
avd_upd©e
(
avd_t
 *
avdp
, 
v¨_t
 *
lv¨_li°
);

183 
v¨_upd©e_comp_lv¨s
(
v¨_t
 *
√wlv¨
, v¨_à*
¥Ÿo_comp_v¨s
,

184 
v¨_t
 *
m°r_lv¨s
);

185 
v¨_t
 *
v¨_lv¨_Æloc_loˇl
(*
«me
);

186 
v¨_t
 *
v¨_lv¨_assign_boﬁón
(*
«me
, 
boﬁón_t
);

187 
v¨_t
 *
v¨_lv¨_assign_öãgî
(*
«me
, 
uöt64_t
);

188 
v¨_t
 *
v¨_lv¨_assign_doubÀ
(*
«me
, );

189 
v¨_t
 *
v¨_lv¨_assign_°rög
(*
«me
, *
°rög
);

190 
v¨_t
 *
v¨_lv¨_assign_v¨
(*
«me
, *
§c_«me
);

193 *
v¨_to_°rög
(*
«me
);

194 *
v¨_øndv¨_to_°rög
(*
«me
, 
∑øm
);

	@/usr/include/aio.h

22 #i‚de‡
_AIO_H


23 
	#_AIO_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<bôs/ty≥s/sigevít_t.h
>

28 
	~<bôs/sigevít-c⁄°s.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

31 
__BEGIN_DECLS


34 
	saiocb


36 
	maio_fûdes
;

37 
	maio_lio_›code
;

38 
	maio_ªq¥io
;

39 vﬁ©ûê*
	maio_buf
;

40 
size_t
 
	maio_nbyãs
;

41 
sigevít
 
	maio_sigevít
;

44 
aiocb
 *
	m__√xt_¥io
;

45 
	m__abs_¥io
;

46 
	m__pﬁicy
;

47 
	m__îr‹_code
;

48 
__ssize_t
 
	m__ªtu∫_vÆue
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
__off_t
 
	maio_off£t
;

52 
	m__∑d
[ (
__off64_t
Ë-  (
__off_t
)];

54 
__off64_t
 
	maio_off£t
;

56 
	m__glibc_ª£rved
[32];

61 #ifde‡
__USE_LARGEFILE64


62 
	saiocb64


64 
	maio_fûdes
;

65 
	maio_lio_›code
;

66 
	maio_ªq¥io
;

67 vﬁ©ûê*
	maio_buf
;

68 
size_t
 
	maio_nbyãs
;

69 
sigevít
 
	maio_sigevít
;

72 
aiocb
 *
	m__√xt_¥io
;

73 
	m__abs_¥io
;

74 
	m__pﬁicy
;

75 
	m__îr‹_code
;

76 
__ssize_t
 
	m__ªtu∫_vÆue
;

78 
__off64_t
 
	maio_off£t
;

79 
	m__glibc_ª£rved
[32];

84 #ifde‡
__USE_GNU


87 
	saioöô


89 
	maio_thªads
;

90 
	maio_num
;

91 
	maio_locks
;

92 
	maio_u£dba
;

93 
	maio_debug
;

94 
	maio_numu£rs
;

95 
	maio_idÀ_time
;

97 
	maio_ª£rved
;

105 
	mAIO_CANCELED
,

106 
	#AIO_CANCELED
 
AIO_CANCELED


	)

107 
	mAIO_NOTCANCELED
,

108 
	#AIO_NOTCANCELED
 
AIO_NOTCANCELED


	)

109 
	mAIO_ALLDONE


110 
	#AIO_ALLDONE
 
AIO_ALLDONE


	)

117 
	mLIO_READ
,

118 
	#LIO_READ
 
LIO_READ


	)

119 
	mLIO_WRITE
,

120 
	#LIO_WRITE
 
LIO_WRITE


	)

121 
	mLIO_NOP


122 
	#LIO_NOP
 
LIO_NOP


	)

129 
	mLIO_WAIT
,

130 
	#LIO_WAIT
 
LIO_WAIT


	)

131 
	mLIO_NOWAIT


132 
	#LIO_NOWAIT
 
LIO_NOWAIT


	)

137 #ifde‡
__USE_GNU


138 
	$aio_öô
 (c⁄° 
aioöô
 *
__öô
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

142 #i‚de‡
__USE_FILE_OFFSET64


144 
	$aio_ªad
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

146 
	$aio_wrôe
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$lio_li°io
 (
__mode
,

150 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

151 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

155 
	$aio_îr‹
 (c⁄° 
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

157 
__ssize_t
 
	$aio_ªtu∫
 (
aiocb
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

161 
	$aio_ˇn˚l
 (
__fûdes
, 
aiocb
 *
__aiocbp
Ë
__THROW
;

168 
	$aio_su•íd
 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

169 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

170 
	`__n⁄nuŒ
 ((1));

174 
	$aio_fsync
 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
)

175 
__THROW
 
	`__n⁄nuŒ
 ((2));

177 #ifde‡
__REDIRECT_NTH


178 
	`__REDIRECT_NTH
 (
aio_ªad
, (
aiocb
 *
__aiocbp
), 
aio_ªad64
)

179 
	`__n⁄nuŒ
 ((1));

180 
	`__REDIRECT_NTH
 (
aio_wrôe
, (
aiocb
 *
__aiocbp
), 
aio_wrôe64
)

181 
	`__n⁄nuŒ
 ((1));

183 
	`__REDIRECT_NTH
 (
lio_li°io
,

184 (
__mode
,

185 
aiocb
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

186 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
),

187 
lio_li°io64
Ë
	`__n⁄nuŒ
 ((2));

189 
	`__REDIRECT_NTH
 (
aio_îr‹
, (c⁄° 
aiocb
 *
__aiocbp
),

190 
aio_îr‹64
Ë
	`__n⁄nuŒ
 ((1));

191 
__ssize_t
 
	`__REDIRECT_NTH
 (
aio_ªtu∫
, (
aiocb
 *
__aiocbp
),

192 
aio_ªtu∫64
Ë
	`__n⁄nuŒ
 ((1));

194 
	`__REDIRECT_NTH
 (
aio_ˇn˚l
,

195 (
__fûdes
, 
aiocb
 *
__aiocbp
),

196 
aio_ˇn˚l64
);

198 
	`__REDIRECT_NTH
 (
aio_su•íd
,

199 (c⁄° 
aiocb
 *c⁄° 
__li°
[], 
__√¡
,

200 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
),

201 
aio_su•íd64
Ë
	`__n⁄nuŒ
 ((1));

203 
	`__REDIRECT_NTH
 (
aio_fsync
,

204 (
__›î©i⁄
, 
aiocb
 *
__aiocbp
),

205 
aio_fsync64
Ë
	`__n⁄nuŒ
 ((2));

208 
	#aio_ªad
 
aio_ªad64


	)

209 
	#aio_wrôe
 
aio_wrôe64


	)

210 
	#lio_li°io
 
lio_li°io64


	)

211 
	#aio_îr‹
 
aio_îr‹64


	)

212 
	#aio_ªtu∫
 
aio_ªtu∫64


	)

213 
	#aio_ˇn˚l
 
aio_ˇn˚l64


	)

214 
	#aio_su•íd
 
aio_su•íd64


	)

215 
	#aio_fsync
 
aio_fsync64


	)

219 #ifde‡
__USE_LARGEFILE64


220 
	$aio_ªad64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 
	$aio_wrôe64
 (
aiocb64
 *
__aiocbp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

223 
	$lio_li°io64
 (
__mode
,

224 
aiocb64
 *c⁄° 
__li°
[
__ª°ri˘_¨r
],

225 
__√¡
, 
sigevít
 *
__ª°ri˘
 
__sig
)

226 
__THROW
 
	`__n⁄nuŒ
 ((2));

228 
	$aio_îr‹64
 (c⁄° 
aiocb64
 *
__aiocbp
)

229 
__THROW
 
	`__n⁄nuŒ
 ((1));

230 
__ssize_t
 
	$aio_ªtu∫64
 (
aiocb64
 *
__aiocbp
)

231 
__THROW
 
	`__n⁄nuŒ
 ((1));

233 
	$aio_ˇn˚l64
 (
__fûdes
, 
aiocb64
 *
__aiocbp
Ë
__THROW
;

235 
	$aio_su•íd64
 (c⁄° 
aiocb64
 *c⁄° 
__li°
[], 
__√¡
,

236 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

237 
__THROW
 
	`__n⁄nuŒ
 ((1));

239 
	$aio_fsync64
 (
__›î©i⁄
, 
aiocb64
 *
__aiocbp
)

240 
__THROW
 
	`__n⁄nuŒ
 ((2));

243 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

82 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

83 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

88 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

89 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

94 
	$öë_nßp_addr
 (c⁄° *
__˝
,

95 *
__buf
, 
__Àn
Ë
__THROW
;

99 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

100 *
__buf
Ë
__THROW
;

103 
__END_DECLS


	@/usr/include/asm/unistd.h

2 #i‚de‡
_ASM_X86_UNISTD_H


3 
	#_ASM_X86_UNISTD_H


	)

6 
	#__X32_SYSCALL_BIT
 0x40000000

	)

8 #ifde‡
__i386__


9 
	~<asm/uni°d_32.h
>

10 #ñi‡
deföed
(
__ILP32__
)

11 
	~<asm/uni°d_x32.h
>

13 
	~<asm/uni°d_64.h
>

	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name : \

90 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


35 
	#RTLD_NEXT
 ((*Ë-1l)

	)

40 
	#RTLD_DEFAULT
 ((*Ë0)

	)

44 
	tLmid_t
;

47 
	#LM_ID_BASE
 0

	)

48 
	#LM_ID_NEWLM
 -1

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

165 
RTLD_DI_MAX
 = 10

173 *
dls_«me
;

174 
dls_Êags
;

175 } 
	tDl_£Ω©h
;

181 
size_t
 
dls_size
;

182 
dls_˙t
;

183 
Dl_£Ω©h
 
dls_£Ω©h
[1];

184 } 
	tDl_£röfo
;

188 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

50 #i‚de‡
__îr‹_t_deföed


51 
	#__îr‹_t_deföed
 1

	)

52 
	tîr‹_t
;

57 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 
f˙é
 (
__fd
, 
__cmd
, ...);

156 #i‚de‡
__USE_FILE_OFFSET64


157 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__REDIRECT


160 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

161 
	`__n⁄nuŒ
 ((1));

163 
	#›í
 
›í64


	)

166 #ifde‡
__USE_LARGEFILE64


167 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

170 #ifde‡
__USE_ATFILE


180 #i‚de‡
__USE_FILE_OFFSET64


181 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

184 #ifde‡
__REDIRECT


185 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

186 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

188 
	#›í©
 
›í©64


	)

191 #ifde‡
__USE_LARGEFILE64


192 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

193 
	`__n⁄nuŒ
 ((2));

202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #ifde‡
__REDIRECT


206 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

207 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

209 
	#¸ót
 
¸ót64


	)

212 #ifde‡
__USE_LARGEFILE64


213 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

216 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

217 && !
deföed
 
__USE_POSIX
))

226 
	#F_ULOCK
 0

	)

227 
	#F_LOCK
 1

	)

228 
	#F_TLOCK
 2

	)

229 
	#F_TEST
 3

	)

231 #i‚de‡
__USE_FILE_OFFSET64


232 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

234 #ifde‡
__REDIRECT


235 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

237 
	#lockf
 
lockf64


	)

240 #ifde‡
__USE_LARGEFILE64


241 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

245 #ifde‡
__USE_XOPEN2K


248 #i‚de‡
__USE_FILE_OFFSET64


249 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

250 
__advi£
Ë
__THROW
;

252 #ifde‡
__REDIRECT_NTH


253 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

254 
__off64_t
 
__Àn
, 
__advi£
),

255 
posix_Ádvi£64
);

257 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

260 #ifde‡
__USE_LARGEFILE64


261 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

262 
__advi£
Ë
__THROW
;

270 #i‚de‡
__USE_FILE_OFFSET64


271 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

273 #ifde‡
__REDIRECT


274 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

275 
__off64_t
 
__Àn
),

276 
posix_ÁŒoˇã64
);

278 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

281 #ifde‡
__USE_LARGEFILE64


282 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

288 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

289 && 
deföed
 
__va_¨g_∑ck_Àn


290 
	~<bôs/f˙é2.h
>

293 
__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 #ifde‡
__USE_EXTERN_INLINES


316 #i‡
__WORDSIZE
 == 64

318 
	$__°πﬁ_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

319 **
__ª°ri˘
 
__íd±r
,

320 
__ba£
, 
__group
)

321 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

323 
__exã∫_ölöe
 
ötmax_t


324 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

325 
ba£
))

327  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

328 
	}
}

330 
	$__°πoul_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 ** 
__ª°ri˘
 
__íd±r
,

332 
__ba£
, 
__group
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

335 
__exã∫_ölöe
 
uötmax_t


336 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

337 
ba£
))

339  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

340 
	}
}

342 
	$__wc°ﬁ_öã∫Æ
 (c⁄° 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

343 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

344 
__ba£
, 
__group
)

345 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

347 
__exã∫_ölöe
 
ötmax_t


348 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

349 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

351  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

352 
	}
}

354 
	$__wc°oul_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

355 
__ª°ri˘
 
__≈å
,

356 
__gwch¨_t
 **

357 
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
__group
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

361 
__exã∫_ölöe
 
uötmax_t


362 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

363 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

365  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

366 
	}
}

370 
__exãnsi⁄__


371 
	$__°πﬁl_öã∫Æ
 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
__group
)

374 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

376 
__exã∫_ölöe
 
ötmax_t


377 
	`__NTH
 (
	$°πoimax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

378 
ba£
))

380  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

381 
	}
}

383 
__exãnsi⁄__


384 
	$__°πouŒ_öã∫Æ
 (const *

385 
__ª°ri˘
 
__≈å
,

387 
__ª°ri˘
 
__íd±r
,

388 
__ba£
,

389 
__group
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

392 
__exã∫_ölöe
 
uötmax_t


393 
	`__NTH
 (
	$°πoumax
 (c⁄° *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

394 
ba£
))

396  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

397 
	}
}

399 
__exãnsi⁄__


400 
	$__wc°ﬁl_öã∫Æ
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

401 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

402 
__ba£
, 
__group
)

403 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

405 
__exã∫_ölöe
 
ötmax_t


406 
	`__NTH
 (
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

407 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

409  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

410 
	}
}

413 
__exãnsi⁄__


414 
	$__wc°ouŒ_öã∫Æ
 (c⁄° 
__gwch¨_t
 *

415 
__ª°ri˘
 
__≈å
,

416 
__gwch¨_t
 **

417 
__ª°ri˘
 
__íd±r
,

418 
__ba£
,

419 
__group
)

420 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

422 
__exã∫_ölöe
 
uötmax_t


423 
	`__NTH
 (
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

424 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

426  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

427 
	}
}

432 
	g__END_DECLS


	@/usr/include/libgen.h

18 #i‚de‡
_LIBGEN_H


19 
	#_LIBGEN_H
 1

	)

21 
	~<„©uªs.h
>

23 
__BEGIN_DECLS


26 *
	$dú«me
 (*
__∑th
Ë
__THROW
;

34 *
	$__xpg_ba£«me
 (*
__∑th
Ë
__THROW
;

35 
	#ba£«me
 
__xpg_ba£«me


	)

37 
__END_DECLS


	@/usr/include/libintl.h

20 #i‚de‡
_LIBINTL_H


21 
	#_LIBINTL_H
 1

	)

23 
	~<„©uªs.h
>

27 
	#__USE_GNU_GETTEXT
 1

	)

31 
	#__GNU_GETTEXT_SUPPORTED_REVISION
(
maj‹
) \

32 ((
maj‹
Ë=0 ? 1 : -1)

	)

34 
__BEGIN_DECLS


39 *
	$gëãxt
 (c⁄° *
__msgid
)

40 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (1);

44 *
	$dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

45 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

46 *
	$__dgëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid
)

47 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

51 *
	$dcgëãxt
 (c⁄° *
__domaö«me
,

52 c⁄° *
__msgid
, 
__ˇãg‹y
)

53 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

54 *
	$__dcgëãxt
 (c⁄° *
__domaö«me
,

55 c⁄° *
__msgid
, 
__ˇãg‹y
)

56 
__THROW
 
	`__©åibuã_f‹m©_¨g__
 (2);

61 *
	$ngëãxt
 (c⁄° *
__msgid1
, c⁄° *
__msgid2
,

62 
__n
)

63 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (1Ë
	`__©åibuã_f‹m©_¨g__
 (2);

67 *
	$dngëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

68 c⁄° *
__msgid2
, 
__n
)

69 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

73 *
	$d˙gëãxt
 (c⁄° *
__domaö«me
, c⁄° *
__msgid1
,

74 c⁄° *
__msgid2
, 
__n
,

75 
__ˇãg‹y
)

76 
__THROW
 
	$__©åibuã_f‹m©_¨g__
 (2Ë
	`__©åibuã_f‹m©_¨g__
 (3);

82 *
	$ãxtdomaö
 (c⁄° *
__domaö«me
Ë
__THROW
;

86 *
	$bödãxtdomaö
 (c⁄° *
__domaö«me
,

87 c⁄° *
__dú«me
Ë
__THROW
;

91 *
	$böd_ãxtdomaö_code£t
 (c⁄° *
__domaö«me
,

92 c⁄° *
__code£t
Ë
__THROW
;

96 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


99 
	#__√ed_NULL


	)

100 
	~<°ddef.h
>

103 
	~<loˇÀ.h
>

109 
	#gëãxt
(
msgid
Ë
	`dgëãxt
 (
NULL
, msgid)

	)

111 
	#dgëãxt
(
domaö«me
, 
msgid
) \

112 
	`dcgëãxt
 (
domaö«me
, 
msgid
, 
LC_MESSAGES
)

	)

114 
	#ngëãxt
(
msgid1
, 
msgid2
, 
n
Ë
	`dngëãxt
 (
NULL
, msgid1, msgid2,Ç)

	)

116 
	#dngëãxt
(
domaö«me
, 
msgid1
, 
msgid2
, 
n
) \

117 
	`d˙gëãxt
 (
domaö«me
, 
msgid1
, 
msgid2
, 
n
, 
LC_MESSAGES
)

	)

121 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

181 #ifdef 
__USE_POSIX


183 
	~<bôs/posix1_lim.h
>

186 #ifdef 
__USE_POSIX2


187 
	~<bôs/posix2_lim.h
>

190 #ifdef 
__USE_XOPEN


191 
	~<bôs/x›í_lim.h
>

	@/usr/include/locale.h

22 #i‚def 
_LOCALE_H


23 
	#_LOCALE_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_NULL


	)

28 
	~<°ddef.h
>

29 
	~<bôs/loˇÀ.h
>

31 
	g__BEGIN_DECLS


35 
	#LC_CTYPE
 
__LC_CTYPE


	)

36 
	#LC_NUMERIC
 
__LC_NUMERIC


	)

37 
	#LC_TIME
 
__LC_TIME


	)

38 
	#LC_COLLATE
 
__LC_COLLATE


	)

39 
	#LC_MONETARY
 
__LC_MONETARY


	)

40 
	#LC_MESSAGES
 
__LC_MESSAGES


	)

41 
	#LC_ALL
 
__LC_ALL


	)

42 
	#LC_PAPER
 
__LC_PAPER


	)

43 
	#LC_NAME
 
__LC_NAME


	)

44 
	#LC_ADDRESS
 
__LC_ADDRESS


	)

45 
	#LC_TELEPHONE
 
__LC_TELEPHONE


	)

46 
	#LC_MEASUREMENT
 
__LC_MEASUREMENT


	)

47 
	#LC_IDENTIFICATION
 
__LC_IDENTIFICATION


	)

51 
	slc⁄v


55 *
	mdecimÆ_poöt
;

56 *
	mthoußnds_£p
;

62 *
	mgroupög
;

68 *
	möt_cuº_symbﬁ
;

69 *
	mcuºícy_symbﬁ
;

70 *
	mm⁄_decimÆ_poöt
;

71 *
	mm⁄_thoußnds_£p
;

72 *
	mm⁄_groupög
;

73 *
	mposôive_sign
;

74 *
	m√g©ive_sign
;

75 
	möt_‰ac_digôs
;

76 
	m‰ac_digôs
;

78 
	mp_cs_¥e˚des
;

80 
	mp_£p_by_•a˚
;

82 
	mn_cs_¥e˚des
;

84 
	mn_£p_by_•a˚
;

91 
	mp_sign_po¢
;

92 
	mn_sign_po¢
;

93 #ifde‡
__USE_ISOC99


95 
	möt_p_cs_¥e˚des
;

97 
	möt_p_£p_by_•a˚
;

99 
	möt_n_cs_¥e˚des
;

101 
	möt_n_£p_by_•a˚
;

108 
	möt_p_sign_po¢
;

109 
	möt_n_sign_po¢
;

111 
	m__öt_p_cs_¥e˚des
;

112 
	m__öt_p_£p_by_•a˚
;

113 
	m__öt_n_cs_¥e˚des
;

114 
	m__öt_n_£p_by_•a˚
;

115 
	m__öt_p_sign_po¢
;

116 
	m__öt_n_sign_po¢
;

122 *
	$£éoˇÀ
 (
__ˇãg‹y
, c⁄° *
__loˇÀ
Ë
__THROW
;

125 
lc⁄v
 *
	$loˇÀc⁄v
 (Ë
__THROW
;

128 #ifdef 
__USE_XOPEN2K8


135 
	~<bôs/ty≥s/loˇÀ_t.h
>

141 
loˇÀ_t
 
	$√wloˇÀ
 (
__ˇãg‹y_mask
, c⁄° *
__loˇÀ
,

142 
loˇÀ_t
 
__ba£
Ë
__THROW
;

148 
	#LC_CTYPE_MASK
 (1 << 
__LC_CTYPE
)

	)

149 
	#LC_NUMERIC_MASK
 (1 << 
__LC_NUMERIC
)

	)

150 
	#LC_TIME_MASK
 (1 << 
__LC_TIME
)

	)

151 
	#LC_COLLATE_MASK
 (1 << 
__LC_COLLATE
)

	)

152 
	#LC_MONETARY_MASK
 (1 << 
__LC_MONETARY
)

	)

153 
	#LC_MESSAGES_MASK
 (1 << 
__LC_MESSAGES
)

	)

154 
	#LC_PAPER_MASK
 (1 << 
__LC_PAPER
)

	)

155 
	#LC_NAME_MASK
 (1 << 
__LC_NAME
)

	)

156 
	#LC_ADDRESS_MASK
 (1 << 
__LC_ADDRESS
)

	)

157 
	#LC_TELEPHONE_MASK
 (1 << 
__LC_TELEPHONE
)

	)

158 
	#LC_MEASUREMENT_MASK
 (1 << 
__LC_MEASUREMENT
)

	)

159 
	#LC_IDENTIFICATION_MASK
 (1 << 
__LC_IDENTIFICATION
)

	)

160 
	#LC_ALL_MASK
 (
LC_CTYPE_MASK
 \

161 | 
LC_NUMERIC_MASK
 \

162 | 
LC_TIME_MASK
 \

163 | 
LC_COLLATE_MASK
 \

164 | 
LC_MONETARY_MASK
 \

165 | 
LC_MESSAGES_MASK
 \

166 | 
LC_PAPER_MASK
 \

167 | 
LC_NAME_MASK
 \

168 | 
LC_ADDRESS_MASK
 \

169 | 
LC_TELEPHONE_MASK
 \

170 | 
LC_MEASUREMENT_MASK
 \

171 | 
LC_IDENTIFICATION_MASK
 \

172 )

	)

176 
loˇÀ_t
 
	$du∂oˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

180 
	$‰ìloˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

187 
loˇÀ_t
 
	$u£loˇÀ
 (
loˇÀ_t
 
__d©a£t
Ë
__THROW
;

191 
	#LC_GLOBAL_LOCALE
 ((
loˇÀ_t
Ë-1L)

	)

195 
__END_DECLS


	@/usr/include/malloc.h

19 #i‚de‡
_MALLOC_H


20 
	#_MALLOC_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<°ddef.h
>

24 
	~<°dio.h
>

26 #ifde‡
_LIBC


27 
	#__MALLOC_HOOK_VOLATILE


	)

28 
	#__MALLOC_DEPRECATED


	)

30 
	#__MALLOC_HOOK_VOLATILE
 vﬁ©ûe

	)

31 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

35 
__BEGIN_DECLS


38 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

41 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

42 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

49 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

50 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

57 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

58 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

61 
	$‰ì
 (*
__±r
Ë
__THROW
;

64 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

65 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

68 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

72 *
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

76 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

79 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

80 
__THROW
 
__©åibuã_mÆloc__
;

84 
	smÆlöfo


86 
¨ía
;

87 
‹dblks
;

88 
smblks
;

89 
hblks
;

90 
hblkhd
;

91 
usmblks
;

92 
fsmblks
;

93 
u‹dblks
;

94 
f‹dblks
;

95 
kìpco°
;

99 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

102 #i‚de‡
M_MXFAST


103 
	#M_MXFAST
 1

	)

105 #i‚de‡
M_NLBLKS


106 
	#M_NLBLKS
 2

	)

108 #i‚de‡
M_GRAIN


109 
	#M_GRAIN
 3

	)

111 #i‚de‡
M_KEEP


112 
	#M_KEEP
 4

	)

116 
	#M_TRIM_THRESHOLD
 -1

	)

117 
	#M_TOP_PAD
 -2

	)

118 
	#M_MMAP_THRESHOLD
 -3

	)

119 
	#M_MMAP_MAX
 -4

	)

120 
	#M_CHECK_ACTION
 -5

	)

121 
	#M_PERTURB
 -6

	)

122 
	#M_ARENA_TEST
 -7

	)

123 
	#M_ARENA_MAX
 -8

	)

126 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

130 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

134 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

137 
	$mÆloc_°©s
 (Ë
__THROW
;

140 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

143 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

145 
__MALLOC_DEPRECATED
;

146 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
)(
size_t
 
__size
,

148 
__MALLOC_DEPRECATED
;

149 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
)(*
__±r
,

150 
size_t
 
__size
,

152 
__MALLOC_DEPRECATED
;

153 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
)(
size_t
 
__Æignmít
,

154 
size_t
 
__size
,

156 
__MALLOC_DEPRECATED
;

157 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

160 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

163 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

116 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

118 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

119 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

121 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

122 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

124 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

125 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

127 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

128 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

130 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

131 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

133 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

138 
	~<bôs/Êt-evÆ-mëhod.h
>

140 #ifde‡
__USE_ISOC99


148 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

149 
	tÊﬂt_t
;

150 
	tdoubÀ_t
;

151 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

152 
	tÊﬂt_t
;

153 
	tdoubÀ_t
;

154 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

155 
	tÊﬂt_t
;

156 
	tdoubÀ_t
;

157 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

158 
_Flﬂt32
 
	tÊﬂt_t
;

159 
	tdoubÀ_t
;

160 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

161 
_Flﬂt32x
 
	tÊﬂt_t
;

162 
_Flﬂt32x
 
	tdoubÀ_t
;

163 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

164 
_Flﬂt64
 
	tÊﬂt_t
;

165 
_Flﬂt64
 
	tdoubÀ_t
;

166 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

167 
_Flﬂt64x
 
	tÊﬂt_t
;

168 
_Flﬂt64x
 
	tdoubÀ_t
;

169 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

170 
_Flﬂt128
 
	tÊﬂt_t
;

171 
_Flﬂt128
 
	tdoubÀ_t
;

172 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

173 
_Flﬂt128x
 
	tÊﬂt_t
;

174 
_Flﬂt128x
 
	tdoubÀ_t
;

190 
	~<bôs/Â-logb.h
>

191 #ifde‡
__USE_ISOC99


192 #i‡
__FP_LOGB0_IS_MIN


193 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

195 
	#FP_ILOGB0
 (-2147483647)

	)

197 #i‡
__FP_LOGBNAN_IS_MIN


198 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

200 
	#FP_ILOGBNAN
 2147483647

	)

203 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

204 #i‡
__WORDSIZE
 == 32

205 
	#__FP_LONG_MAX
 0x7fffffffL

	)

207 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

209 #i‡
__FP_LOGB0_IS_MIN


210 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

212 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

214 #i‡
__FP_LOGBNAN_IS_MIN


215 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

217 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

233 
	~<bôs/Â-Á°.h
>

235 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

239 
	mFP_INT_UPWARD
 =

240 
	#FP_INT_UPWARD
 0

	)

241 
FP_INT_UPWARD
,

242 
	mFP_INT_DOWNWARD
 =

243 
	#FP_INT_DOWNWARD
 1

	)

244 
FP_INT_DOWNWARD
,

245 
	mFP_INT_TOWARDZERO
 =

246 
	#FP_INT_TOWARDZERO
 2

	)

247 
FP_INT_TOWARDZERO
,

248 
	mFP_INT_TONEARESTFROMZERO
 =

249 
	#FP_INT_TONEARESTFROMZERO
 3

	)

250 
FP_INT_TONEARESTFROMZERO
,

251 
	mFP_INT_TONEAREST
 =

252 
	#FP_INT_TONEAREST
 4

	)

253 
FP_INT_TONEAREST
,

262 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

264 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

265 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

266 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

268 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

269 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

270 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

272 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

273 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

274 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

275 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

276 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

277 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

278 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

279 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

280 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

281 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

282 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

285 
	#_MdoubÀ_
 

	)

286 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

287 
	#__MATH_DECLARING_DOUBLE
 1

	)

288 
	#__MATH_DECLARING_FLOATN
 0

	)

289 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

290 
	~<bôs/m©hˇŒs.h
>

291 #unde‡
_MdoubÀ_


292 #unde‡
__MATH_PRECNAME


293 #unde‡
__MATH_DECLARING_DOUBLE


294 #unde‡
__MATH_DECLARING_FLOATN


296 #ifde‡
__USE_ISOC99


302 
	#_MdoubÀ_
 

	)

303 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

304 
	#__MATH_DECLARING_DOUBLE
 0

	)

305 
	#__MATH_DECLARING_FLOATN
 0

	)

306 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

307 
	~<bôs/m©hˇŒs.h
>

308 #unde‡
_MdoubÀ_


309 #unde‡
__MATH_PRECNAME


310 #unde‡
__MATH_DECLARING_DOUBLE


311 #unde‡
__MATH_DECLARING_FLOATN


313 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

314 || 
deföed
 
__LDBL_COMPAT
 \

315 || 
deföed
 
_LIBC_TEST


316 #ifde‡
__LDBL_COMPAT


318 #ifde‡
__USE_ISOC99


319 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

320 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

321 #ifde‡
__REDIRECT_NTH


322 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

323 
__∆dbl_√xâow¨df
)

324 
	`__©åibuã__
 ((
__c⁄°__
));

325 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

326 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

327 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

328 (
__x
, 
__y
),

329 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

333 #unde‡
__MATHDECL_1


334 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

335 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

336 
¨gs
, 
Æüs
)

	)

337 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

338 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

344 
	#_MdoubÀ_
 

	)

345 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

346 
	#__MATH_DECLARING_DOUBLE
 0

	)

347 
	#__MATH_DECLARING_FLOATN
 0

	)

348 
	#__MATH_DECLARE_LDOUBLE
 1

	)

349 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

350 
	~<bôs/m©hˇŒs.h
>

351 #unde‡
_MdoubÀ_


352 #unde‡
__MATH_PRECNAME


353 #unde‡
__MATH_DECLARING_DOUBLE


354 #unde‡
__MATH_DECLARING_FLOATN


363 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

364 
	#_MdoubÀ_
 
_Flﬂt16


	)

365 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

366 
	#__MATH_DECLARING_DOUBLE
 0

	)

367 
	#__MATH_DECLARING_FLOATN
 1

	)

368 #i‡
__HAVE_DISTINCT_FLOAT16


369 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

371 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

372 
	~<bôs/m©hˇŒs.h
>

374 #unde‡
_MdoubÀ_


375 #unde‡
__MATH_PRECNAME


376 #unde‡
__MATH_DECLARING_DOUBLE


377 #unde‡
__MATH_DECLARING_FLOATN


380 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

381 
	#_MdoubÀ_
 
_Flﬂt32


	)

382 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

383 
	#__MATH_DECLARING_DOUBLE
 0

	)

384 
	#__MATH_DECLARING_FLOATN
 1

	)

385 #i‡
__HAVE_DISTINCT_FLOAT32


386 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

388 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

389 
	~<bôs/m©hˇŒs.h
>

391 #unde‡
_MdoubÀ_


392 #unde‡
__MATH_PRECNAME


393 #unde‡
__MATH_DECLARING_DOUBLE


394 #unde‡
__MATH_DECLARING_FLOATN


397 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

398 
	#_MdoubÀ_
 
_Flﬂt64


	)

399 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

400 
	#__MATH_DECLARING_DOUBLE
 0

	)

401 
	#__MATH_DECLARING_FLOATN
 1

	)

402 #i‡
__HAVE_DISTINCT_FLOAT64


403 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

405 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

406 
	~<bôs/m©hˇŒs.h
>

408 #unde‡
_MdoubÀ_


409 #unde‡
__MATH_PRECNAME


410 #unde‡
__MATH_DECLARING_DOUBLE


411 #unde‡
__MATH_DECLARING_FLOATN


414 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

415 
	#_MdoubÀ_
 
_Flﬂt128


	)

416 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

417 
	#__MATH_DECLARING_DOUBLE
 0

	)

418 
	#__MATH_DECLARING_FLOATN
 1

	)

419 #i‡
__HAVE_DISTINCT_FLOAT128


420 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

422 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

423 
	~<bôs/m©hˇŒs.h
>

425 #unde‡
_MdoubÀ_


426 #unde‡
__MATH_PRECNAME


427 #unde‡
__MATH_DECLARING_DOUBLE


428 #unde‡
__MATH_DECLARING_FLOATN


431 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

432 
	#_MdoubÀ_
 
_Flﬂt32x


	)

433 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

434 
	#__MATH_DECLARING_DOUBLE
 0

	)

435 
	#__MATH_DECLARING_FLOATN
 1

	)

436 #i‡
__HAVE_DISTINCT_FLOAT32X


437 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

439 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

440 
	~<bôs/m©hˇŒs.h
>

442 #unde‡
_MdoubÀ_


443 #unde‡
__MATH_PRECNAME


444 #unde‡
__MATH_DECLARING_DOUBLE


445 #unde‡
__MATH_DECLARING_FLOATN


448 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

449 
	#_MdoubÀ_
 
_Flﬂt64x


	)

450 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

451 
	#__MATH_DECLARING_DOUBLE
 0

	)

452 
	#__MATH_DECLARING_FLOATN
 1

	)

453 #i‡
__HAVE_DISTINCT_FLOAT64X


454 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

456 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

457 
	~<bôs/m©hˇŒs.h
>

459 #unde‡
_MdoubÀ_


460 #unde‡
__MATH_PRECNAME


461 #unde‡
__MATH_DECLARING_DOUBLE


462 #unde‡
__MATH_DECLARING_FLOATN


465 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

466 
	#_MdoubÀ_
 
_Flﬂt128x


	)

467 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

468 
	#__MATH_DECLARING_DOUBLE
 0

	)

469 
	#__MATH_DECLARING_FLOATN
 1

	)

470 #i‡
__HAVE_DISTINCT_FLOAT128X


471 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

473 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

474 
	~<bôs/m©hˇŒs.h
>

476 #unde‡
_MdoubÀ_


477 #unde‡
__MATH_PRECNAME


478 #unde‡
__MATH_DECLARING_DOUBLE


479 #unde‡
__MATH_DECLARING_FLOATN


482 #unde‡
__MATHDECL_1


483 #unde‡
__MATHDECL


484 #unde‡
__MATHCALL


487 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


489 
signgam
;

492 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

493 || 
__HAVE_DISTINCT_FLOAT32
 \

494 || 
__HAVE_DISTINCT_FLOAT64
 \

495 || 
__HAVE_DISTINCT_FLOAT32X
 \

496 || 
__HAVE_DISTINCT_FLOAT64X
 \

497 || 
__HAVE_DISTINCT_FLOAT128X
)

510 #ifde‡
__NO_LONG_DOUBLE_MATH


511 #i‡
__HAVE_DISTINCT_FLOAT128


514 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

515 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

516 #ñi‡
__HAVE_DISTINCT_FLOAT128


517 #i‡
__HAVE_GENERIC_SELECTION


518 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


519 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

521 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

523 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


524 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


525 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

527 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

530 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

532 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

533 
	`_Gíîic
 ((
TG_ARG
), \

534 : 
FUNC
 ## 
f
 
ARGS
, \

535 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

536 : 
FUNC
 
ARGS
, \

537 : 
FUNC
 ## 
l
 
ARGS
, \

538 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

539 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

541 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


544 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

545 
__buûtö_choo£_ex¥
 \

546 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

547 
FUNC
 ## 
f
 
ARGS
, \

548 
__buûtö_choo£_ex¥
 \

549 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

550 
FUNC
 
ARGS
, \

551 
__buûtö_choo£_ex¥
 \

552 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

553 
FUNC
 ## 
l
 
ARGS
, \

554 
FUNC
 ## 
f128
 
ARGS
)))

	)

557 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

558 ( (
TG_ARG
) ==  () \

559 ? 
FUNC
 ## 
f
 
ARGS
 \

560 :  (
TG_ARG
) ==  () \

561 ? 
FUNC
 
ARGS
 \

562 : 
FUNC
 ## 
l
 
ARGS
)

	)

566 #ifde‡
__USE_ISOC99


571 
FP_NAN
 =

572 
	#FP_NAN
 0

	)

573 
FP_NAN
,

574 
FP_INFINITE
 =

575 
	#FP_INFINITE
 1

	)

576 
FP_INFINITE
,

577 
FP_ZERO
 =

578 
	#FP_ZERO
 2

	)

579 
FP_ZERO
,

580 
FP_SUBNORMAL
 =

581 
	#FP_SUBNORMAL
 3

	)

582 
FP_SUBNORMAL
,

583 
FP_NORMAL
 =

584 
	#FP_NORMAL
 4

	)

585 
FP_NORMAL


593 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
 \

594 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

601 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

602 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

604 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

608 #i‡
	`__GNUC_PREREQ
 (6,0)

609 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

610 #ñi‡
deföed
 
__˝lu•lus


618 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

619 #ñi‡
	`__GNUC_PREREQ
 (4,0)

620 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

622 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

626 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


627 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

629 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

633 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


634 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

636 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

641 #i‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


642 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

644 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

648 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

649 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus


655 
	#isöf
(
x
) \

656 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

657 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

658 #ñi‡
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__


659 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

661 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

665 
	#MATH_ERRNO
 1

	)

666 
	#MATH_ERREXCEPT
 2

	)

673 #ifde‡
__FAST_MATH__


674 
	#m©h_îrh™dlög
 0

	)

675 #ñi‡
deföed
 
__NO_MATH_ERRNO__


676 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

678 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

683 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

684 
	~<bôs/isˇn⁄iˇl.h
>

687 #i‚de‡
__˝lu•lus


688 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

697 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

698 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

699 
ölöe
 

700 
	`issig«lög
 (
__vÆ
)

702 #ifde‡
__NO_LONG_DOUBLE_MATH


703  
	`__issig«lög
 (
__vÆ
);

705  
	`__issig«lögl
 (
__vÆ
);

708 #i‡
__HAVE_DISTINCT_FLOAT128


709 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

711 
	}
}

715 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

718 #i‚de‡
__˝lu•lus


719 #ifde‡
__SUPPORT_SNAN__


720 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

722 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

726 #ifde‡
__SUPPORT_SNAN__


727 
ölöe
 

728 
iszîo
 (
__vÆ
)

730  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

732 
ölöe
 

733 
iszîo
 (
__vÆ
)

735  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

737 
ölöe
 

738 
iszîo
 (
__vÆ
)

740 #ifde‡
__NO_LONG_DOUBLE_MATH


741  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

743  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

746 #i‡
__HAVE_DISTINCT_FLOAT128


747 
ölöe
 

748 
iszîo
 (
_Flﬂt128
 
__vÆ
)

750  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

754 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


755 
iszîo
 (
__T
 
__vÆ
)

757  
__vÆ
 == 0;

764 #ifde‡
__USE_XOPEN


766 
	#MAXFLOAT
 3.40282347e+38F

	)

771 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


772 
	#M_E
 2.7182818284590452354

	)

773 
	#M_LOG2E
 1.4426950408889634074

	)

774 
	#M_LOG10E
 0.43429448190325182765

	)

775 
	#M_LN2
 0.69314718055994530942

	)

776 
	#M_LN10
 2.30258509299404568402

	)

777 
	#M_PI
 3.14159265358979323846

	)

778 
	#M_PI_2
 1.57079632679489661923

	)

779 
	#M_PI_4
 0.78539816339744830962

	)

780 
	#M_1_PI
 0.31830988618379067154

	)

781 
	#M_2_PI
 0.63661977236758134308

	)

782 
	#M_2_SQRTPI
 1.12837916709551257390

	)

783 
	#M_SQRT2
 1.41421356237309504880

	)

784 
	#M_SQRT1_2
 0.70710678118654752440

	)

790 #ifde‡
__USE_GNU


791 
	#M_El
 2.718281828459045235360287471352662498L

	)

792 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

793 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

794 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

795 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

796 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

797 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

798 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

799 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

800 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

801 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

802 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

803 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

806 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


807 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

808 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

809 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

810 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

811 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

812 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

813 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

814 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

815 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

816 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

817 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

818 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

819 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

822 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


823 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

824 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

825 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

826 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

827 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

828 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

829 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

830 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

831 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

832 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

833 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

834 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

835 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

838 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


839 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

840 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

841 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

842 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

843 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

844 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

845 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

846 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

847 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

848 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

849 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

850 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

851 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

854 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


855 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

856 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

857 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

858 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

859 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

860 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

861 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

862 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

863 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

864 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

865 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

866 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

867 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

870 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


871 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

872 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

873 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

874 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

875 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

876 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

877 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

878 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

879 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

880 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

881 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

882 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

883 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

886 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


887 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

888 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

889 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

890 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

891 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

892 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

893 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

894 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

895 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

896 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

897 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

898 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

899 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

902 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


909 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


910 
	#__NO_MATH_INLINES
 1

	)

913 #ifde‡
__USE_ISOC99


914 #i‡
__GNUC_PREREQ
 (3, 1)

921 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

922 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

923 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

924 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

925 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

926 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

928 
	#isgª©î
(
x
, 
y
) \

929 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

930 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

931 
	#isgª©îequÆ
(
x
, 
y
) \

932 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

933 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

934 
	#i¶ess
(
x
, 
y
) \

935 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

936 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

937 
	#i¶es£quÆ
(
x
, 
y
) \

938 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

939 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

940 
	#i¶essgª©î
(
x
, 
y
) \

941 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

942 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

944 
	#isun‹dîed
(
x
, 
y
) \

945 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

946 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

951 #ifde‡
__USE_EXTERN_INLINES


952 
	~<bôs/m©hölöe.h
>

957 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

960 
	#_MdoubÀ_
 

	)

961 
	#__MATH_DECLARING_DOUBLE
 1

	)

962 
	#__MATH_DECLARING_FLOATN
 0

	)

963 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

964 
fun˘i⁄
 ## 
ªíå™t


	)

965 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

966 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

967 
	~<bôs/m©h-föôe.h
>

968 #unde‡
_MdoubÀ_


969 #unde‡
__MATH_DECLARING_DOUBLE


970 #unde‡
__MATH_DECLARING_FLOATN


971 #unde‡
__REDIRFROM_X


972 #unde‡
__REDIRTO_X


976 #ifde‡
__USE_ISOC99


979 
	#_MdoubÀ_
 

	)

980 
	#__MATH_DECLARING_DOUBLE
 0

	)

981 
	#__MATH_DECLARING_FLOATN
 0

	)

982 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

983 
fun˘i⁄
 ## 
f
 ## 
ªíå™t


	)

984 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

985 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

986 
	~<bôs/m©h-föôe.h
>

987 #unde‡
_MdoubÀ_


988 #unde‡
__MATH_DECLARING_DOUBLE


989 #unde‡
__MATH_DECLARING_FLOATN


990 #unde‡
__REDIRFROM_X


991 #unde‡
__REDIRTO_X


994 #ifde‡
__MATH_DECLARE_LDOUBLE


995 
	#_MdoubÀ_
 

	)

996 
	#__MATH_DECLARING_DOUBLE
 0

	)

997 
	#__MATH_DECLARING_FLOATN
 0

	)

998 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

999 
fun˘i⁄
 ## 
l
 ## 
ªíå™t


	)

1000 #ifde‡
__NO_LONG_DOUBLE_MATH


1001 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1002 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1004 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1005 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1007 
	~<bôs/m©h-föôe.h
>

1008 #unde‡
_MdoubÀ_


1009 #unde‡
__MATH_DECLARING_DOUBLE


1010 #unde‡
__MATH_DECLARING_FLOATN


1011 #unde‡
__REDIRFROM_X


1012 #unde‡
__REDIRTO_X


1019 #i‡(
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)) \

1020 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1021 
	#_MdoubÀ_
 
_Flﬂt16


	)

1022 
	#__MATH_DECLARING_DOUBLE
 0

	)

1023 
	#__MATH_DECLARING_FLOATN
 1

	)

1024 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1025 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t


	)

1026 #i‡
__HAVE_DISTINCT_FLOAT16


1027 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1028 
__
 ## 
fun˘i⁄
 ## 
f16
 ## 
ªíå™t
 ## 
_föôe


	)

1032 
	~<bôs/m©h-föôe.h
>

1033 #unde‡
_MdoubÀ_


1034 #unde‡
__MATH_DECLARING_DOUBLE


1035 #unde‡
__MATH_DECLARING_FLOATN


1036 #unde‡
__REDIRFROM_X


1037 #unde‡
__REDIRTO_X


1040 #i‡(
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)) \

1041 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1042 
	#_MdoubÀ_
 
_Flﬂt32


	)

1043 
	#__MATH_DECLARING_DOUBLE
 0

	)

1044 
	#__MATH_DECLARING_FLOATN
 1

	)

1045 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1046 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t


	)

1047 #i‡
__HAVE_DISTINCT_FLOAT32


1048 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1049 
__
 ## 
fun˘i⁄
 ## 
f32
 ## 
ªíå™t
 ## 
_föôe


	)

1051 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1052 
__
 ## 
fun˘i⁄
 ## 
f
 ## 
ªíå™t
 ## 
_föôe


	)

1054 
	~<bôs/m©h-föôe.h
>

1055 #unde‡
_MdoubÀ_


1056 #unde‡
__MATH_DECLARING_DOUBLE


1057 #unde‡
__MATH_DECLARING_FLOATN


1058 #unde‡
__REDIRFROM_X


1059 #unde‡
__REDIRTO_X


1062 #i‡(
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)) \

1063 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1064 
	#_MdoubÀ_
 
_Flﬂt64


	)

1065 
	#__MATH_DECLARING_DOUBLE
 0

	)

1066 
	#__MATH_DECLARING_FLOATN
 1

	)

1067 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1068 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t


	)

1069 #i‡
__HAVE_DISTINCT_FLOAT64


1070 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1071 
__
 ## 
fun˘i⁄
 ## 
f64
 ## 
ªíå™t
 ## 
_föôe


	)

1073 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1074 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1076 
	~<bôs/m©h-föôe.h
>

1077 #unde‡
_MdoubÀ_


1078 #unde‡
__MATH_DECLARING_DOUBLE


1079 #unde‡
__MATH_DECLARING_FLOATN


1080 #unde‡
__REDIRFROM_X


1081 #unde‡
__REDIRTO_X


1084 #i‡(
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)) \

1085 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1086 
	#_MdoubÀ_
 
_Flﬂt128


	)

1087 
	#__MATH_DECLARING_DOUBLE
 0

	)

1088 
	#__MATH_DECLARING_FLOATN
 1

	)

1089 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1090 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t


	)

1091 #i‡
__HAVE_DISTINCT_FLOAT128


1092 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1093 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1095 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1096 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1098 
	~<bôs/m©h-föôe.h
>

1099 #unde‡
_MdoubÀ_


1100 #unde‡
__MATH_DECLARING_DOUBLE


1101 #unde‡
__MATH_DECLARING_FLOATN


1102 #unde‡
__REDIRFROM_X


1103 #unde‡
__REDIRTO_X


1106 #i‡(
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)) \

1107 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1108 
	#_MdoubÀ_
 
_Flﬂt32x


	)

1109 
	#__MATH_DECLARING_DOUBLE
 0

	)

1110 
	#__MATH_DECLARING_FLOATN
 1

	)

1111 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1112 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t


	)

1113 #i‡
__HAVE_DISTINCT_FLOAT32X


1114 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1115 
__
 ## 
fun˘i⁄
 ## 
f32x
 ## 
ªíå™t
 ## 
_föôe


	)

1117 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1118 
__
 ## 
fun˘i⁄
 ## 
ªíå™t
 ## 
_föôe


	)

1120 
	~<bôs/m©h-föôe.h
>

1121 #unde‡
_MdoubÀ_


1122 #unde‡
__MATH_DECLARING_DOUBLE


1123 #unde‡
__MATH_DECLARING_FLOATN


1124 #unde‡
__REDIRFROM_X


1125 #unde‡
__REDIRTO_X


1128 #i‡(
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)) \

1129 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1130 
	#_MdoubÀ_
 
_Flﬂt64x


	)

1131 
	#__MATH_DECLARING_DOUBLE
 0

	)

1132 
	#__MATH_DECLARING_FLOATN
 1

	)

1133 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1134 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t


	)

1135 #i‡
__HAVE_DISTINCT_FLOAT64X


1136 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1137 
__
 ## 
fun˘i⁄
 ## 
f64x
 ## 
ªíå™t
 ## 
_föôe


	)

1138 #ñi‡
__HAVE_FLOAT64X_LONG_DOUBLE


1139 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1140 
__
 ## 
fun˘i⁄
 ## 
l
 ## 
ªíå™t
 ## 
_föôe


	)

1142 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1143 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
ªíå™t
 ## 
_föôe


	)

1145 
	~<bôs/m©h-föôe.h
>

1146 #unde‡
_MdoubÀ_


1147 #unde‡
__MATH_DECLARING_DOUBLE


1148 #unde‡
__MATH_DECLARING_FLOATN


1149 #unde‡
__REDIRFROM_X


1150 #unde‡
__REDIRTO_X


1153 #i‡(
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)) \

1154 && 
	$__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

1155 
	#_MdoubÀ_
 
_Flﬂt128x


	)

1156 
	#__MATH_DECLARING_DOUBLE
 0

	)

1157 
	#__MATH_DECLARING_FLOATN
 1

	)

1158 
	#__REDIRFROM_X
(
fun˘i⁄
, 
ªíå™t
) \

1159 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t


	)

1160 #i‡
__HAVE_DISTINCT_FLOAT128X


1161 
	#__REDIRTO_X
(
fun˘i⁄
, 
ªíå™t
) \

1162 
__
 ## 
fun˘i⁄
 ## 
f128x
 ## 
ªíå™t
 ## 
_föôe


	)

1166 
	~<bôs/m©h-föôe.h
>

1167 #unde‡
_MdoubÀ_


1168 #unde‡
__MATH_DECLARING_DOUBLE


1169 #unde‡
__MATH_DECLARING_FLOATN


1170 #unde‡
__REDIRFROM_X


1171 #unde‡
__REDIRTO_X


1176 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

1179 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1180 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1181 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1182 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1183 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1184 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1186 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1191 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1192 
	#i£qsig
(
x
, 
y
) \

1193 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1206 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1208 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1210 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1212  
	`__i£qsigf
 (
__x
, 
__y
);

1216 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1218 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1220  
	`__i£qsig
 (
__x
, 
__y
);

1224 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1226 
	`__ˇŒ
 (
__x
, 
__y
Ë
	`throw
 ()

1228 #i‚de‡
__NO_LONG_DOUBLE_MATH


1229  
	`__i£qsigl
 (
__x
, 
__y
);

1231  
	`__i£qsig
 (
__x
, 
__y
);

1236 #i‡
__HAVE_DISTINCT_FLOAT128


1237 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1239 
	`__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
	`throw
 ()

1241  
	`__i£qsigf128
 (
__x
, 
__y
);

1246 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1247 
ölöe
 

1248 
	`i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
	`throw
 ()

1250 #i‡
__˝lu•lus
 >= 201103L

1251 
	`de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1253 
	`__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1255  
__i£qsig_ty≥
<
_T3
>::
	`__ˇŒ
 (
__x
, 
__y
);

1258 
	}
}

1263 
__END_DECLS


	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<bôs/°döt-uöä.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	~<bôs/ty≥s/sigevít_t.h
>

37 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

40 
	~<bôs/√tdb.h
>

43 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

44 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

45 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

46 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

47 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

48 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

51 
	g__BEGIN_DECLS


53 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


56 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

59 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

63 
	#HOST_NOT_FOUND
 1

	)

64 
	#TRY_AGAIN
 2

	)

66 
	#NO_RECOVERY
 3

	)

68 
	#NO_DATA
 4

	)

71 #ifde‡
__USE_MISC


72 
	#NETDB_INTERNAL
 -1

	)

73 
	#NETDB_SUCCESS
 0

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

77 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


79 
	#IPPORT_RESERVED
 1024

	)

82 #ifde‡
__USE_GNU


84 
	#SCOPE_DELIMITER
 '%'

	)

87 #ifde‡
__USE_MISC


90 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

93 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

98 
	sho°ít


100 *
h_«me
;

101 **
h_Æü£s
;

102 
h_addπy≥
;

103 
h_Àngth
;

104 **
h_addr_li°
;

105 #ifde‡
__USE_MISC


106 
	#h_addr
 
h_addr_li°
[0]

	)

115 
	`£tho°ít
 (
__°ay_›í
);

121 
	`ídho°ít
 ();

128 
ho°ít
 *
	`gëho°ít
 ();

135 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

136 
__ty≥
);

142 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

144 #ifde‡
__USE_MISC


153 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

165 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

167 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

168 *
__ª°ri˘
 
__h_î∫›
);

170 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

171 
__ty≥
,

172 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

173 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

174 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

175 *
__ª°ri˘
 
__h_î∫›
);

177 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

178 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

179 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

180 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

181 *
__ª°ri˘
 
__h_î∫›
);

183 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

184 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

185 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

186 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

187 *
__ª°ri˘
 
__h_î∫›
);

196 
	`£äëít
 (
__°ay_›í
);

202 
	`íd√ã¡
 ();

209 
√ã¡
 *
	`gë√ã¡
 ();

216 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

222 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

224 #ifdef 
__USE_MISC


235 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

236 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

237 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

238 *
__ª°ri˘
 
__h_î∫›
);

240 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

241 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

242 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

243 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

244 *
__ª°ri˘
 
__h_î∫›
);

246 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

247 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

248 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

249 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

250 *
__ª°ri˘
 
__h_î∫›
);

255 
	s£rvít


257 *
s_«me
;

258 **
s_Æü£s
;

259 
s_p‹t
;

260 *
s_¥Ÿo
;

268 
	`£t£rvít
 (
__°ay_›í
);

274 
	`íd£rvít
 ();

281 
£rvít
 *
	`gë£rvít
 ();

288 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

295 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

298 #ifdef 
__USE_MISC


306 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

307 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

308 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

310 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

311 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

312 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

313 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

314 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

316 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

317 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

318 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

319 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

324 
	s¥Ÿ€¡


326 *
p_«me
;

327 **
p_Æü£s
;

328 
p_¥Ÿo
;

336 
	`£çrŸ€¡
 (
__°ay_›í
);

342 
	`íd¥Ÿ€¡
 ();

349 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

355 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

361 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

364 #ifdef 
__USE_MISC


372 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

373 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

374 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

376 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

377 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

378 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

379 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

381 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

382 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

383 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

384 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

393 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

401 
	`íd√tgª¡
 ();

410 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

411 **
__ª°ri˘
 
__u£Ω
,

412 **
__ª°ri˘
 
__domaöp
);

421 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

422 c⁄° *
__u£r
, c⁄° *
__domaö
);

430 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

431 **
__ª°ri˘
 
__u£Ω
,

432 **
__ª°ri˘
 
__domaöp
,

433 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

437 #ifde‡
__USE_MISC


449 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

450 c⁄° *
__ª°ri˘
 
__locu£r
,

451 c⁄° *
__ª°ri˘
 
__ªmu£r
,

452 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

461 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

462 c⁄° *
__ª°ri˘
 
__locu£r
,

463 c⁄° *
__ª°ri˘
 
__ªmu£r
,

464 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

465 
ß_Ámûy_t
 
__af
);

477 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

478 c⁄° *
__ª°ri˘
 
__«me
,

479 c⁄° *
__ª°ri˘
 
__∑ss
,

480 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

489 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

490 c⁄° *
__ª°ri˘
 
__«me
,

491 c⁄° *
__ª°ri˘
 
__∑ss
,

492 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

493 
ß_Ámûy_t
 
__af
);

503 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

504 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

513 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

514 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

515 
ß_Ámûy_t
 
__af
);

526 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

527 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

537 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

538 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

539 
ß_Ámûy_t
 
__af
);

549 
	`ºesvp‹t
 (*
__Æp‹t
);

558 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

563 #ifde‡
__USE_XOPEN2K


565 
	saddröfo


567 
ai_Êags
;

568 
ai_Ámûy
;

569 
ai_sockty≥
;

570 
ai_¥Ÿocﬁ
;

571 
sockÀn_t
 
ai_addæí
;

572 
sockaddr
 *
ai_addr
;

573 *
ai_ˇn⁄«me
;

574 
addröfo
 *
ai_√xt
;

577 #ifde‡
__USE_GNU


579 
	sgaicb


581 c⁄° *
¨_«me
;

582 c⁄° *
¨_£rvi˚
;

583 c⁄° 
addröfo
 *
¨_ªque°
;

584 
addröfo
 *
¨_ªsu…
;

586 
__ªtu∫
;

587 
__glibc_ª£rved
[5];

591 
	#GAI_WAIT
 0

	)

592 
	#GAI_NOWAIT
 1

	)

596 
	#AI_PASSIVE
 0x0001

	)

597 
	#AI_CANONNAME
 0x0002

	)

598 
	#AI_NUMERICHOST
 0x0004

	)

599 
	#AI_V4MAPPED
 0x0008

	)

600 
	#AI_ALL
 0x0010

	)

601 
	#AI_ADDRCONFIG
 0x0020

	)

603 #ifde‡
__USE_GNU


604 
	#AI_IDN
 0x0040

	)

607 
	#AI_CANONIDN
 0x0080

	)

608 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

610 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

613 
	#AI_NUMERICSERV
 0x0400

	)

616 
	#EAI_BADFLAGS
 -1

	)

617 
	#EAI_NONAME
 -2

	)

618 
	#EAI_AGAIN
 -3

	)

619 
	#EAI_FAIL
 -4

	)

620 
	#EAI_FAMILY
 -6

	)

621 
	#EAI_SOCKTYPE
 -7

	)

622 
	#EAI_SERVICE
 -8

	)

623 
	#EAI_MEMORY
 -10

	)

624 
	#EAI_SYSTEM
 -11

	)

625 
	#EAI_OVERFLOW
 -12

	)

626 #ifde‡
__USE_GNU


627 
	#EAI_NODATA
 -5

	)

628 
	#EAI_ADDRFAMILY
 -9

	)

629 
	#EAI_INPROGRESS
 -100

	)

630 
	#EAI_CANCELED
 -101

	)

631 
	#EAI_NOTCANCELED
 -102

	)

632 
	#EAI_ALLDONE
 -103

	)

633 
	#EAI_INTR
 -104

	)

634 
	#EAI_IDN_ENCODE
 -105

	)

637 #ifde‡
__USE_MISC


638 
	#NI_MAXHOST
 1025

	)

639 
	#NI_MAXSERV
 32

	)

642 
	#NI_NUMERICHOST
 1

	)

643 
	#NI_NUMERICSERV
 2

	)

644 
	#NI_NOFQDN
 4

	)

645 
	#NI_NAMEREQD
 8

	)

646 
	#NI_DGRAM
 16

	)

647 #ifde‡
__USE_GNU


648 
	#NI_IDN
 32

	)

649 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

651 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

660 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

661 c⁄° *
__ª°ri˘
 
__£rvi˚
,

662 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

663 
addröfo
 **
__ª°ri˘
 
__∑i
);

666 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

669 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

675 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

676 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

677 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

678 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

681 #ifde‡
__USE_GNU


690 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

691 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

701 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

702 c⁄° 
time•ec
 *
__timeout
);

705 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

708 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

711 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


98 #i‡!
__USE_KERNEL_IPV6_DEFS


101 
	mIPPROTO_HOPOPTS
 = 0,

102 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

103 
	mIPPROTO_ROUTING
 = 43,

104 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

105 
	mIPPROTO_FRAGMENT
 = 44,

106 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

107 
	mIPPROTO_ICMPV6
 = 58,

108 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

109 
	mIPPROTO_NONE
 = 59,

110 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

111 
	mIPPROTO_DSTOPTS
 = 60,

112 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

113 
	mIPPROTO_MH
 = 135

114 
	#IPPROTO_MH
 
IPPROTO_MH


	)

119 
uöt16_t
 
	tö_p‹t_t
;

124 
	mIPPORT_ECHO
 = 7,

125 
	mIPPORT_DISCARD
 = 9,

126 
	mIPPORT_SYSTAT
 = 11,

127 
	mIPPORT_DAYTIME
 = 13,

128 
	mIPPORT_NETSTAT
 = 15,

129 
	mIPPORT_FTP
 = 21,

130 
	mIPPORT_TELNET
 = 23,

131 
	mIPPORT_SMTP
 = 25,

132 
	mIPPORT_TIMESERVER
 = 37,

133 
	mIPPORT_NAMESERVER
 = 42,

134 
	mIPPORT_WHOIS
 = 43,

135 
	mIPPORT_MTP
 = 57,

137 
	mIPPORT_TFTP
 = 69,

138 
	mIPPORT_RJE
 = 77,

139 
	mIPPORT_FINGER
 = 79,

140 
	mIPPORT_TTYLINK
 = 87,

141 
	mIPPORT_SUPDUP
 = 95,

144 
	mIPPORT_EXECSERVER
 = 512,

145 
	mIPPORT_LOGINSERVER
 = 513,

146 
	mIPPORT_CMDSERVER
 = 514,

147 
	mIPPORT_EFSSERVER
 = 520,

150 
	mIPPORT_BIFFUDP
 = 512,

151 
	mIPPORT_WHOSERVER
 = 513,

152 
	mIPPORT_ROUTESERVER
 = 520,

155 
	mIPPORT_RESERVED
 = 1024,

158 
	mIPPORT_USERRESERVED
 = 5000

166 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

167 
	#IN_CLASSA_NET
 0xff000000

	)

168 
	#IN_CLASSA_NSHIFT
 24

	)

169 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

170 
	#IN_CLASSA_MAX
 128

	)

172 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

173 
	#IN_CLASSB_NET
 0xffff0000

	)

174 
	#IN_CLASSB_NSHIFT
 16

	)

175 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

176 
	#IN_CLASSB_MAX
 65536

	)

178 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

179 
	#IN_CLASSC_NET
 0xffffff00

	)

180 
	#IN_CLASSC_NSHIFT
 8

	)

181 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

183 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

184 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

186 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

187 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

190 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

192 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

194 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

197 
	#IN_LOOPBACKNET
 127

	)

199 #i‚de‡
INADDR_LOOPBACK


200 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

204 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

205 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

206 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

207 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

209 #i‡!
__USE_KERNEL_IPV6_DEFS


211 
	sö6_addr


215 
uöt8_t
 
	m__u6_addr8
[16];

216 
uöt16_t
 
	m__u6_addr16
[8];

217 
uöt32_t
 
	m__u6_addr32
[4];

218 } 
	m__ö6_u
;

219 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

220 #ifde‡
__USE_MISC


221 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

222 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

227 c⁄° 
ö6_addr
 
ö6addr_™y
;

228 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

229 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

230 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

232 
	#INET_ADDRSTRLEN
 16

	)

233 
	#INET6_ADDRSTRLEN
 46

	)

237 
	ssockaddr_ö


239 
__SOCKADDR_COMMON
 (
sö_
);

240 
ö_p‹t_t
 
	msö_p‹t
;

241 
ö_addr
 
	msö_addr
;

244 
	msö_zîo
[ (
sockaddr
) -

245 
__SOCKADDR_COMMON_SIZE
 -

246  (
ö_p‹t_t
) -

247  (
ö_addr
)];

250 #i‡!
__USE_KERNEL_IPV6_DEFS


252 
	ssockaddr_ö6


254 
__SOCKADDR_COMMON
 (
sö6_
);

255 
ö_p‹t_t
 
	msö6_p‹t
;

256 
uöt32_t
 
	msö6_Êowöfo
;

257 
ö6_addr
 
	msö6_addr
;

258 
uöt32_t
 
	msö6_sc›e_id
;

262 #ifde‡
__USE_MISC


264 
	sù_mªq


267 
ö_addr
 
	mimr_mu…üddr
;

270 
ö_addr
 
	mimr_öãrÁ˚
;

273 
	sù_mªq_sour˚


276 
ö_addr
 
	mimr_mu…üddr
;

279 
ö_addr
 
	mimr_öãrÁ˚
;

282 
ö_addr
 
	mimr_sour˚addr
;

286 #i‡!
__USE_KERNEL_IPV6_DEFS


288 
	sùv6_mªq


291 
ö6_addr
 
	mùv6mr_mu…üddr
;

294 
	mùv6mr_öãrÁ˚
;

298 #ifde‡
__USE_MISC


300 
	sgroup_ªq


303 
uöt32_t
 
	mgr_öãrÁ˚
;

306 
sockaddr_°‹age
 
	mgr_group
;

309 
	sgroup_sour˚_ªq


312 
uöt32_t
 
	mg§_öãrÁ˚
;

315 
sockaddr_°‹age
 
	mg§_group
;

318 
sockaddr_°‹age
 
	mg§_sour˚
;

323 
	sù_msfûãr


326 
ö_addr
 
	mimsf_mu…üddr
;

329 
ö_addr
 
	mimsf_öãrÁ˚
;

332 
uöt32_t
 
	mimsf_fmode
;

335 
uöt32_t
 
	mimsf_num§c
;

337 
ö_addr
 
	mimsf_¶i°
[1];

340 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

341 -  (
ö_addr
) \

342 + (
num§c
Ë*  (
ö_addr
))

	)

344 
	sgroup_fûãr


347 
uöt32_t
 
	mgf_öãrÁ˚
;

350 
sockaddr_°‹age
 
	mgf_group
;

353 
uöt32_t
 
	mgf_fmode
;

356 
uöt32_t
 
	mgf_num§c
;

358 
sockaddr_°‹age
 
	mgf_¶i°
[1];

361 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

362 -  (
sockaddr_°‹age
) \

363 + ((
num§c
) \

364 *  (
sockaddr_°‹age
)))

	)

374 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

375 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

376 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

377 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

378 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

379 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

380 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

382 
	~<ídün.h
>

385 
	~<bôs/byãsw≠.h
>

386 
	~<bôs/uöä-idítôy.h
>

388 #ifde‡
__OPTIMIZE__


392 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


395 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

396 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

397 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

398 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

400 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


401 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

402 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

403 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

404 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

409 #ifde‡
__GNUC__


410 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

411 (
__exãnsi⁄__
 \

412 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

413 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

414 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

415 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

416 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

418 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

419 (
__exãnsi⁄__
 \

420 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

421 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

422 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

426 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

429 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

431 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

432 (
__exãnsi⁄__
 \

433 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

434 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

436 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

437 (
__exãnsi⁄__
 \

438 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

439 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

440 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

441 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

443 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

444 (
__exãnsi⁄__
 \

445 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

446 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

447 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

449 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

451 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

452 (
__exãnsi⁄__
 \

453 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

454 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

455 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

456 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

457 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

458 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

460 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

461 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

462 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

463 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

464 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

466 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

467 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

468 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

469 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

472 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

473 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

474 =
	`ht⁄l
 (0x„800000))

	)

476 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

477 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

478 =
	`ht⁄l
 (0x„c00000))

	)

480 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

481 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

482 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

483 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

485 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

486 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

487 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

488 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

489 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

491 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

492 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

493 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

494 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

498 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

500 #ifde‡
__USE_MISC


502 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

505 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

506 
__THROW
;

510 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

511 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

512 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

514 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

515 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

516 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

518 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

519 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

520 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

522 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

523 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

524 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

526 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

527 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

528 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

531 #ifde‡
__USE_GNU


532 
cmsghdr
;

534 #i‡!
__USE_KERNEL_IPV6_DEFS


536 
	sö6_pktöfo


538 
ö6_addr
 
ùi6_addr
;

539 
ùi6_ifödex
;

543 
	sù6_mtuöfo


545 
sockaddr_ö6
 
ù6m_addr
;

546 
uöt32_t
 
ù6m_mtu
;

551 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

552 
__THROW
 
__©åibuã_dïªˇãd__
;

553 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

554 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

555 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

556 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

557 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

558 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

559 
__mu…x
, 
__∂usy
)

560 
__THROW
 
__©åibuã_dïªˇãd__
;

561 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

562 
uöt8_t
 **
__çåp
)

563 
__THROW
 
__©åibuã_dïªˇãd__
;

564 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

565 
uöt8_t
 **
__çåp
, 
__ty≥
)

566 
__THROW
 
__©åibuã_dïªˇãd__
;

570 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

571 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

572 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

573 **
__d©abuÂ
Ë
__THROW
;

574 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

575 
__THROW
;

576 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

577 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

578 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

579 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

580 **
__d©abuÂ
Ë
__THROW
;

581 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

582 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

583 **
__d©abuÂ
Ë
__THROW
;

584 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

585 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

589 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

590 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

591 
__£gmíts
Ë
__THROW
;

592 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

593 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

594 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

595 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

596 
__THROW
;

602 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

603 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

604 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

605 
__THROW
;

608 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

609 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

610 
uöt32_t
 
__num§c
,

611 c⁄° 
ö_addr
 *
__¶i°
)

612 
__THROW
;

616 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

617 c⁄° 
sockaddr
 *
__group
,

618 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

619 
uöt32_t
 *
__num§c
,

620 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

623 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

624 c⁄° 
sockaddr
 *
__group
,

625 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

626 
uöt32_t
 
__num§c
,

627 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

630 
__END_DECLS


	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

29 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

35 
	mPTHREAD_CREATE_JOINABLE
,

36 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

37 
	mPTHREAD_CREATE_DETACHED


38 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

45 
	mPTHREAD_MUTEX_TIMED_NP
,

46 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

47 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

48 
	mPTHREAD_MUTEX_ADAPTIVE_NP


49 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


51 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

52 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

53 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

54 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


56 #ifde‡
__USE_GNU


58 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


63 #ifde‡
__USE_XOPEN2K


67 
	mPTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_ROBUST
,

70 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


75 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


79 
	mPTHREAD_PRIO_NONE
,

80 
	mPTHREAD_PRIO_INHERIT
,

81 
	mPTHREAD_PRIO_PROTECT


86 #i‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 
__PTHREAD_SPINS
, { 0, 0 } } }

	)

99 
	#PTHREAD_MUTEX_INITIALIZER
 \

100 { { 0, 0, 0, 0, 0, { 
__PTHREAD_SPINS
 } } }

	)

101 #ifde‡
__USE_GNU


102 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

103 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

104 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

105 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

106 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

107 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 
__PTHREAD_SPINS
 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


126 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


127 #i‡
__WORDSIZE
 == 64

128 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

133 
	#PTHREAD_RWLOCK_INITIALIZER
 \

134 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

135 #ifde‡
__USE_GNU


136 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, \

139 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

141 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


142 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

143 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

144 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 0 } }

	)

146 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

147 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

148 0 } }

	)

158 
	mPTHREAD_INHERIT_SCHED
,

159 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

160 
	mPTHREAD_EXPLICIT_SCHED


161 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

168 
	mPTHREAD_SCOPE_SYSTEM
,

169 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

170 
	mPTHREAD_SCOPE_PROCESS


171 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

178 
	mPTHREAD_PROCESS_PRIVATE
,

179 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

180 
	mPTHREAD_PROCESS_SHARED


181 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

187 
	#PTHREAD_COND_INITIALIZER
 { { {0}, {0}, {0, 0}, {0, 0}, 0, 0, {0, 0} } }

	)

191 
	s_±hªad_˛ónup_buf„r


193 (*
	m__routöe
) (*);

194 *
	m__¨g
;

195 
	m__ˇn˚…y≥
;

196 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

202 
	mPTHREAD_CANCEL_ENABLE
,

203 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

204 
	mPTHREAD_CANCEL_DISABLE


205 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

209 
	mPTHREAD_CANCEL_DEFERRED
,

210 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

211 
	mPTHREAD_CANCEL_ASYNCHRONOUS


212 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

214 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

218 
	#PTHREAD_ONCE_INIT
 0

	)

221 #ifde‡
__USE_XOPEN2K


225 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

229 
__BEGIN_DECLS


234 
	$±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

235 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

236 *(*
__°¨t_routöe
) (*),

237 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 3));

243 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

251 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

253 #ifde‡
__USE_GNU


256 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

264 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

265 c⁄° 
time•ec
 *
__ab°ime
);

272 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

276 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

279 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

280 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

288 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

291 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

295 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

296 *
__dëach°©e
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

300 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

301 
__dëach°©e
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1));

306 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

307 
size_t
 *
__gu¨dsize
)

308 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

311 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

312 
size_t
 
__gu¨dsize
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1));

317 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

318 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

322 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

323 c⁄° 
sched_∑øm
 *
__ª°ri˘


324 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

327 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


337 
__©å
, *
__ª°ri˘
 
__öhîô
)

338 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

341 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

342 
__öhîô
)

343 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

348 *
__ª°ri˘
 
__sc›e
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

352 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

356 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


357 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

358 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

364 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

365 *
__°ackaddr
)

366 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

369 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


370 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

371 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

376 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

377 
size_t
 
__°acksize
)

378 
__THROW
 
	`__n⁄nuŒ
 ((1));

380 #ifde‡
__USE_XOPEN2K


382 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

383 **
__ª°ri˘
 
__°ackaddr
,

384 
size_t
 *
__ª°ri˘
 
__°acksize
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

390 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

391 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

394 #ifde‡
__USE_GNU


397 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

398 
size_t
 
__˝u£tsize
,

399 c⁄° 
˝u_£t_t
 *
__˝u£t
)

400 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

405 
size_t
 
__˝u£tsize
,

406 
˝u_£t_t
 *
__˝u£t
)

407 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

410 
	$±hªad_gë©å_deÁu…_≈
 (
±hªad_©å_t
 *
__©å
)

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

415 
	$±hªad_£èâr_deÁu…_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
)

416 
__THROW
 
	`__n⁄nuŒ
 ((1));

421 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

422 
__THROW
 
	`__n⁄nuŒ
 ((2));

430 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

431 c⁄° 
sched_∑øm
 *
__∑øm
)

432 
__THROW
 
	`__n⁄nuŒ
 ((3));

435 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

436 *
__ª°ri˘
 
__pﬁicy
,

437 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

441 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

442 
__THROW
;

445 #ifde‡
__USE_GNU


447 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

448 
size_t
 
__buÊí
)

449 
__THROW
 
	`__n⁄nuŒ
 ((2));

452 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

453 
__THROW
 
	`__n⁄nuŒ
 ((2));

457 #ifde‡
__USE_UNIX98


459 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

462 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

465 #ifde‡
__USE_GNU


470 
	$±hªad_yõld
 (Ë
__THROW
;

475 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

476 c⁄° 
˝u_£t_t
 *
__˝u£t
)

477 
__THROW
 
	`__n⁄nuŒ
 ((3));

480 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

481 
˝u_£t_t
 *
__˝u£t
)

482 
__THROW
 
	`__n⁄nuŒ
 ((3));

495 
	$±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

496 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

507 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

511 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

514 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

519 
	`±hªad_ã°ˇn˚l
 ();

528 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

529 
__mask_was_ßved
;

530 } 
__ˇn˚l_jmp_buf
[1];

531 *
__∑d
[4];

532 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

535 #i‚de‡
__˛ónup_f˘_©åibuã


536 
	#__˛ónup_f˘_©åibuã


	)

541 
	s__±hªad_˛ónup_‰ame


543 (*
__ˇn˚l_routöe
) (*);

544 *
__ˇn˚l_¨g
;

545 
__do_ô
;

546 
__ˇn˚l_ty≥
;

549 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


550 #ifde‡
__˝lu•lus


552 ˛as†
	c__±hªad_˛ónup_˛ass


554 (*
__ˇn˚l_routöe
) (*);

555 *
__ˇn˚l_¨g
;

556 
__do_ô
;

557 
__ˇn˚l_ty≥
;

559 
public
:

560 
	$__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

561 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

562 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

563 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

564 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

565 &
__ˇn˚l_ty≥
); 
	}
}

566 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

576 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

578 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

582 
	#±hªad_˛ónup_p›
(
execuã
) \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

586 #ifde‡
__USE_GNU


590 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

592 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

593 
__˛‰ame
.
	`__de„r
 ()

	)

598 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

599 
__˛‰ame
.
	`__ª°‹e
 (); \

600 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

601 } 0)

	)

608 
__exã∫_ölöe
 

609 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

611 i‡(
__‰ame
->
__do_ô
)

612 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

613 
	}
}

622 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 };

	)

631 
	#±hªad_˛ónup_p›
(
execuã
) \

632 
__˛‰ame
.
__do_ô
 = (
execuã
); \

633 } 0)

	)

635 #ifde‡
__USE_GNU


639 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

641 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

642 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

643 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

644 .
__do_ô
 = 1 }; \

645 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

646 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

651 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

652 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

653 
__˛‰ame
.
__do_ô
 = (
execuã
); \

654 } 0)

	)

665 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

667 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

668 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

669 *
__ˇn˚l_¨g
 = (
¨g
); \

670 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

671 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

672 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

679 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 dÿ{

	)

681 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

682 
__˛ónup_f˘_©åibuã
;

686 
	#±hªad_˛ónup_p›
(
execuã
) \

689 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

690 i‡(
execuã
) \

691 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

692 } 0)

	)

693 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

694 
__˛ónup_f˘_©åibuã
;

696 #ifde‡
__USE_GNU


700 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

702 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

703 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

704 *
__ˇn˚l_¨g
 = (
¨g
); \

705 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

706 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

707 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

709 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

710 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

714 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

715 dÿ{

	)

716 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

717 
__˛ónup_f˘_©åibuã
;

722 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

725 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

726 i‡(
execuã
) \

727 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

728 
	}
} 0)

	)

729 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

730 
__˛ónup_f˘_©åibuã
;

734 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

735 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

736 #i‚de‡
SHARED


737 
	`__©åibuã__
 ((
__wók__
))

743 
__jmp_buf_èg
;

744 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

750 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

751 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

752 
__THROW
 
	`__n⁄nuŒ
 ((1));

755 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

756 
__THROW
 
	`__n⁄nuŒ
 ((1));

759 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

760 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

763 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

764 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

766 #ifde‡
__USE_XOPEN2K


768 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

769 c⁄° 
time•ec
 *
__ª°ri˘


770 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

774 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

775 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

779 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

780 
__ª°ri˘
 
__muãx
,

781 *
__ª°ri˘
 
__¥io˚ûög
)

782 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

786 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

787 
__¥io˚ûög
,

788 *
__ª°ri˘
 
__ﬁd_˚ûög
)

789 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

792 #ifde‡
__USE_XOPEN2K8


794 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

796 #ifde‡
__USE_GNU


797 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

807 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1));

811 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

816 
__ª°ri˘
 
__©å
,

817 *
__ª°ri˘
 
__psh¨ed
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

821 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

822 
__psh¨ed
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1));

825 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


827 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


828 
__©å
, *
__ª°ri˘
 
__köd
)

829 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

834 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

835 
__THROW
 
	`__n⁄nuŒ
 ((1));

839 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

840 
__ª°ri˘
 
__©å
,

841 *
__ª°ri˘
 
__¥Ÿocﬁ
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

846 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

847 
__¥Ÿocﬁ
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

852 
__ª°ri˘
 
__©å
,

853 *
__ª°ri˘
 
__¥io˚ûög
)

854 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

857 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

858 
__¥io˚ûög
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1));

861 #ifde‡
__USE_XOPEN2K


863 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

864 *
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

868 *
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

873 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

874 
__robu°√ss
)

875 
__THROW
 
	`__n⁄nuŒ
 ((1));

876 #ifde‡
__USE_GNU


877 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

878 
__robu°√ss
)

879 
__THROW
 
	`__n⁄nuŒ
 ((1));

884 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


889 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

890 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


891 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

894 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

895 
__THROW
 
	`__n⁄nuŒ
 ((1));

898 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

899 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

902 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

903 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

905 #ifde‡
__USE_XOPEN2K


907 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

908 c⁄° 
time•ec
 *
__ª°ri˘


909 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

913 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

914 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

917 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

918 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

920 #ifde‡
__USE_XOPEN2K


922 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

923 c⁄° 
time•ec
 *
__ª°ri˘


924 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

928 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

929 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

935 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1));

939 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1));

943 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

944 
__ª°ri˘
 
__©å
,

945 *
__ª°ri˘
 
__psh¨ed
)

946 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

949 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

950 
__psh¨ed
)

951 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

955 
__ª°ri˘
 
__©å
,

956 *
__ª°ri˘
 
__¥ef
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

960 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

961 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

969 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

970 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

971 
__THROW
 
	`__n⁄nuŒ
 ((1));

974 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

975 
__THROW
 
	`__n⁄nuŒ
 ((1));

978 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

979 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

982 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

983 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

990 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

991 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

992 
	`__n⁄nuŒ
 ((1, 2));

1001 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

1002 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

1003 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

1004 
	`__n⁄nuŒ
 ((1, 2, 3));

1009 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1));

1013 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1018 
__ª°ri˘
 
__©å
,

1019 *
__ª°ri˘
 
__psh¨ed
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1023 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1024 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1026 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1029 
__ª°ri˘
 
__©å
,

1030 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1034 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1035 
__˛ockid_t
 
__˛ock_id
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 #ifde‡
__USE_XOPEN2K


1045 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1046 
__THROW
 
	`__n⁄nuŒ
 ((1));

1049 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1050 
__THROW
 
	`__n⁄nuŒ
 ((1));

1053 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1054 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1057 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1058 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1061 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1062 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1070 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1071 
__©å
, 
__cou¡
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1076 
__THROW
 
	`__n⁄nuŒ
 ((1));

1079 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1080 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1084 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1));

1088 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1089 
__THROW
 
	`__n⁄nuŒ
 ((1));

1092 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1093 
__ª°ri˘
 
__©å
,

1094 *
__ª°ri˘
 
__psh¨ed
)

1095 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1098 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1099 
__psh¨ed
)

1100 
__THROW
 
	`__n⁄nuŒ
 ((1));

1112 
	$±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1113 (*
__de°r_fun˘i⁄
) (*))

1114 
__THROW
 
	`__n⁄nuŒ
 ((1));

1117 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1120 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1123 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1124 c⁄° *
__poöãr
Ë
__THROW
 ;

1127 #ifde‡
__USE_XOPEN2K


1129 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1130 
__˛ockid_t
 *
__˛ock_id
)

1131 
__THROW
 
	`__n⁄nuŒ
 ((2));

1146 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1147 (*
__∑ª¡
) (),

1148 (*
__chûd
Ë()Ë
__THROW
;

1151 #ifde‡
__USE_EXTERN_INLINES


1153 
__exã∫_ölöe
 

1154 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1156  
__thªad1
 =
__thªad2
;

1157 
	}
}

1160 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

28 
	~<bôs/£m≠h‹e.h
>

31 
__BEGIN_DECLS


35 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

36 
__THROW
;

38 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

41 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

44 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

47 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

53 
	`£m_waô
 (
£m_t
 *
__£m
);

55 #ifde‡
__USE_XOPEN2K


60 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

61 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

65 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

68 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

71 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

72 
__THROW
;

75 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

153 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

155 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

160 #ifde‡
__USE_MISC


167 
	#sigmask
(
sig
Ë(()(1u << ((sigË- 1)))

	)

170 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

173 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

180 #ifde‡
__USE_MISC


181 
	#NSIG
 
_NSIG


	)

184 #ifde‡
__USE_GNU


185 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

189 #ifde‡
__USE_MISC


190 
__sigh™dÀr_t
 
	tsig_t
;

193 #ifde‡
__USE_POSIX


196 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

209 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__USE_GNU


213 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

216 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

217 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

220 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

221 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

226 
	~<bôs/siga˘i⁄.h
>

229 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

230 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

237 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

240 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

241 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

244 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__USE_POSIX199506


252 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

253 
	`__n⁄nuŒ
 ((1, 2));

256 #ifde‡
__USE_POSIX199309


261 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

262 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

269 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

270 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

271 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

272 
	`__n⁄nuŒ
 ((1));

276 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

277 
__THROW
;

282 #ifde‡
__USE_MISC


286 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

287 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

291 
	~<bôs/sigc⁄ãxt.h
>

294 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

299 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


300 
	#__√ed_size_t


	)

301 
	~<°ddef.h
>

303 
	~<bôs/ty≥s/°ack_t.h
>

304 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


306 
	~<sys/uc⁄ãxt.h
>

310 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


314 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

316 
	~<bôs/sig°ack.h
>

317 
	~<bôs/ss_Êags.h
>

321 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

322 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

325 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

326 || 
deföed
 
__USE_MISC
)

327 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

330 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

331 || 
deföed
 
__USE_MISC
)

335 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

336 
__THROW
 
__©åibuã_dïªˇãd__
;

339 #ifde‡
__USE_XOPEN_EXTENDED


343 
	$sighﬁd
 (
__sig
Ë
__THROW
;

346 
	$sigªl£
 (
__sig
Ë
__THROW
;

349 
	$sigign‹e
 (
__sig
Ë
__THROW
;

352 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

355 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


358 
	~<bôs/±hªadty≥s.h
>

359 
	~<bôs/sigthªad.h
>

366 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

368 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

370 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

371 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

373 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 sig√d 
	töt_Àa°8_t
;

44 
	töt_Àa°16_t
;

45 
	töt_Àa°32_t
;

46 #i‡
__WORDSIZE
 == 64

47 
	töt_Àa°64_t
;

49 
__exãnsi⁄__


50 
	töt_Àa°64_t
;

54 
	tuöt_Àa°8_t
;

55 
	tuöt_Àa°16_t
;

56 
	tuöt_Àa°32_t
;

57 #i‡
__WORDSIZE
 == 64

58 
	tuöt_Àa°64_t
;

60 
__exãnsi⁄__


61 
	tuöt_Àa°64_t
;

68 sig√d 
	töt_Á°8_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Á°16_t
;

71 
	töt_Á°32_t
;

72 
	töt_Á°64_t
;

74 
	töt_Á°16_t
;

75 
	töt_Á°32_t
;

76 
__exãnsi⁄__


77 
	töt_Á°64_t
;

81 
	tuöt_Á°8_t
;

82 #i‡
__WORDSIZE
 == 64

83 
	tuöt_Á°16_t
;

84 
	tuöt_Á°32_t
;

85 
	tuöt_Á°64_t
;

87 
	tuöt_Á°16_t
;

88 
	tuöt_Á°32_t
;

89 
__exãnsi⁄__


90 
	tuöt_Á°64_t
;

95 #i‡
__WORDSIZE
 == 64

96 #i‚de‡
__öçå_t_deföed


97 
	töçå_t
;

98 
	#__öçå_t_deföed


	)

100 
	tuöçå_t
;

102 #i‚de‡
__öçå_t_deföed


103 
	töçå_t
;

104 
	#__öçå_t_deföed


	)

106 
	tuöçå_t
;

111 
__ötmax_t
 
	tötmax_t
;

112 
__uötmax_t
 
	tuötmax_t
;

115 #i‡
__WORDSIZE
 == 64

116 
	#__INT64_C
(
c
Ë¯## 
L


	)

117 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

119 
	#__INT64_C
(
c
Ë¯## 
LL


	)

120 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

126 
	#INT8_MIN
 (-128)

	)

127 
	#INT16_MIN
 (-32767-1)

	)

128 
	#INT32_MIN
 (-2147483647-1)

	)

129 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

131 
	#INT8_MAX
 (127)

	)

132 
	#INT16_MAX
 (32767)

	)

133 
	#INT32_MAX
 (2147483647)

	)

134 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

137 
	#UINT8_MAX
 (255)

	)

138 
	#UINT16_MAX
 (65535)

	)

139 
	#UINT32_MAX
 (4294967295U)

	)

140 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

144 
	#INT_LEAST8_MIN
 (-128)

	)

145 
	#INT_LEAST16_MIN
 (-32767-1)

	)

146 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

147 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

149 
	#INT_LEAST8_MAX
 (127)

	)

150 
	#INT_LEAST16_MAX
 (32767)

	)

151 
	#INT_LEAST32_MAX
 (2147483647)

	)

152 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

155 
	#UINT_LEAST8_MAX
 (255)

	)

156 
	#UINT_LEAST16_MAX
 (65535)

	)

157 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

158 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

162 
	#INT_FAST8_MIN
 (-128)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

165 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

167 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

168 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

170 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

172 
	#INT_FAST8_MAX
 (127)

	)

173 #i‡
__WORDSIZE
 == 64

174 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

175 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

177 
	#INT_FAST16_MAX
 (2147483647)

	)

178 
	#INT_FAST32_MAX
 (2147483647)

	)

180 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

183 
	#UINT_FAST8_MAX
 (255)

	)

184 #i‡
__WORDSIZE
 == 64

185 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

186 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

188 
	#UINT_FAST16_MAX
 (4294967295U)

	)

189 
	#UINT_FAST32_MAX
 (4294967295U)

	)

191 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

195 #i‡
__WORDSIZE
 == 64

196 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

197 
	#INTPTR_MAX
 (9223372036854775807L)

	)

198 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

200 
	#INTPTR_MIN
 (-2147483647-1)

	)

201 
	#INTPTR_MAX
 (2147483647)

	)

202 
	#UINTPTR_MAX
 (4294967295U)

	)

207 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

209 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

212 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

220 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

222 #i‡
__WORDSIZE32_PTRDIFF_LONG


223 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

224 
	#PTRDIFF_MAX
 (2147483647L)

	)

226 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

227 
	#PTRDIFF_MAX
 (2147483647)

	)

232 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

233 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

236 #i‡
__WORDSIZE
 == 64

237 
	#SIZE_MAX
 (18446744073709551615UL)

	)

239 #i‡
__WORDSIZE32_SIZE_ULONG


240 
	#SIZE_MAX
 (4294967295UL)

	)

242 
	#SIZE_MAX
 (4294967295U)

	)

247 #i‚de‡
WCHAR_MIN


249 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

250 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

254 
	#WINT_MIN
 (0u)

	)

255 
	#WINT_MAX
 (4294967295u)

	)

258 
	#INT8_C
(
c
Ë
	)
c

259 
	#INT16_C
(
c
Ë
	)
c

260 
	#INT32_C
(
c
Ë
	)
c

261 #i‡
__WORDSIZE
 == 64

262 
	#INT64_C
(
c
Ë¯## 
L


	)

264 
	#INT64_C
(
c
Ë¯## 
LL


	)

268 
	#UINT8_C
(
c
Ë
	)
c

269 
	#UINT16_C
(
c
Ë
	)
c

270 
	#UINT32_C
(
c
Ë¯## 
U


	)

271 #i‡
__WORDSIZE
 == 64

272 
	#UINT64_C
(
c
Ë¯## 
UL


	)

274 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

278 #i‡
__WORDSIZE
 == 64

279 
	#INTMAX_C
(
c
Ë¯## 
L


	)

280 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

282 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

283 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

286 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

288 
	#INT8_WIDTH
 8

	)

289 
	#UINT8_WIDTH
 8

	)

290 
	#INT16_WIDTH
 16

	)

291 
	#UINT16_WIDTH
 16

	)

292 
	#INT32_WIDTH
 32

	)

293 
	#UINT32_WIDTH
 32

	)

294 
	#INT64_WIDTH
 64

	)

295 
	#UINT64_WIDTH
 64

	)

297 
	#INT_LEAST8_WIDTH
 8

	)

298 
	#UINT_LEAST8_WIDTH
 8

	)

299 
	#INT_LEAST16_WIDTH
 16

	)

300 
	#UINT_LEAST16_WIDTH
 16

	)

301 
	#INT_LEAST32_WIDTH
 32

	)

302 
	#UINT_LEAST32_WIDTH
 32

	)

303 
	#INT_LEAST64_WIDTH
 64

	)

304 
	#UINT_LEAST64_WIDTH
 64

	)

306 
	#INT_FAST8_WIDTH
 8

	)

307 
	#UINT_FAST8_WIDTH
 8

	)

308 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

309 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

310 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

311 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

312 
	#INT_FAST64_WIDTH
 64

	)

313 
	#UINT_FAST64_WIDTH
 64

	)

315 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

316 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

318 
	#INTMAX_WIDTH
 64

	)

319 
	#UINTMAX_WIDTH
 64

	)

321 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

322 
	#SIG_ATOMIC_WIDTH
 32

	)

323 
	#SIZE_WIDTH
 
__WORDSIZE


	)

324 
	#WCHAR_WIDTH
 32

	)

325 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	~<bôs/ty≥s/__FILE.h
>

37 
	~<bôs/ty≥s/FILE.h
>

39 
	#_STDIO_USES_IOSTREAM


	)

41 
	~<bôs/libio.h
>

43 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


44 #ifde‡
__GNUC__


45 #i‚de‡
_VA_LIST_DEFINED


46 
_G_va_li°
 
	tva_li°
;

47 
	#_VA_LIST_DEFINED


	)

50 
	~<°d¨g.h
>

54 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


55 #i‚de‡
__off_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__off_t
 
	toff_t
;

59 
__off64_t
 
	toff_t
;

61 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

69 #ifde‡
__USE_XOPEN2K8


70 #i‚de‡
__ssize_t_deföed


71 
__ssize_t
 
	tssize_t
;

72 
	#__ssize_t_deföed


	)

77 #i‚de‡
__USE_FILE_OFFSET64


78 
_G_Âos_t
 
	tÂos_t
;

80 
_G_Âos64_t
 
	tÂos_t
;

82 #ifde‡
__USE_LARGEFILE64


83 
_G_Âos64_t
 
	tÂos64_t
;

87 
	#_IOFBF
 0

	)

88 
	#_IOLBF
 1

	)

89 
	#_IONBF
 2

	)

93 #i‚de‡
BUFSIZ


94 
	#BUFSIZ
 
_IO_BUFSIZ


	)

100 #i‚de‡
EOF


101 
	#EOF
 (-1)

	)

107 
	#SEEK_SET
 0

	)

108 
	#SEEK_CUR
 1

	)

109 
	#SEEK_END
 2

	)

110 #ifde‡
__USE_GNU


111 
	#SEEK_DATA
 3

	)

112 
	#SEEK_HOLE
 4

	)

116 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


118 
	#P_tmpdú
 "/tmp"

	)

131 
	~<bôs/°dio_lim.h
>

135 
_IO_FILE
 *
°dö
;

136 
_IO_FILE
 *
°dout
;

137 
_IO_FILE
 *
°dîr
;

139 
	#°dö
 
°dö


	)

140 
	#°dout
 
°dout


	)

141 
	#°dîr
 
°dîr


	)

144 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

146 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

148 #ifde‡
__USE_ATFILE


150 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

151 c⁄° *
__√w
Ë
__THROW
;

158 #i‚de‡
__USE_FILE_OFFSET64


159 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

161 #ifde‡
__REDIRECT


162 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

164 
	#tmpfûe
 
tmpfûe64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

173 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

175 #ifde‡
__USE_MISC


178 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

182 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


190 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

191 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

199 
	`f˛o£
 (
FILE
 *
__°ªam
);

204 
	`fÊush
 (
FILE
 *
__°ªam
);

206 #ifde‡
__USE_MISC


213 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

216 #ifde‡
__USE_GNU


223 
	`f˛o£Æl
 ();

227 #i‚de‡
__USE_FILE_OFFSET64


232 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

233 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

238 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

239 c⁄° *
__ª°ri˘
 
__modes
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

242 #ifde‡
__REDIRECT


243 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

244 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

245 
__wur
;

246 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

247 c⁄° *
__ª°ri˘
 
__modes
,

248 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

249 
__wur
;

251 
	#f›í
 
f›í64


	)

252 
	#‰e›í
 
‰e›í64


	)

255 #ifde‡
__USE_LARGEFILE64


256 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

257 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

258 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

259 c⁄° *
__ª°ri˘
 
__modes
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

263 #ifdef 
__USE_POSIX


265 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

268 #ifdef 
__USE_GNU


271 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

276 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

278 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

279 
__THROW
 
__wur
;

284 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

290 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

294 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

295 
__modes
, 
size_t
 
__n
Ë
__THROW
;

297 #ifdef 
__USE_MISC


300 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

301 
size_t
 
__size
Ë
__THROW
;

304 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

312 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

313 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

318 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

320 
	$•rötf
 (*
__ª°ri˘
 
__s
,

321 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

327 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

328 
_G_va_li°
 
__¨g
);

333 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

335 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

336 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

338 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


340 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

341 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

342 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

344 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

345 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

346 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

349 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

352 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

353 
_G_va_li°
 
__¨g
)

354 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

355 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

356 c⁄° *
__ª°ri˘
 
__fmt
, ...)

357 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

358 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

359 c⁄° *
__ª°ri˘
 
__fmt
, ...)

360 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

363 #ifde‡
__USE_XOPEN2K8


365 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

366 
_G_va_li°
 
__¨g
)

367 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

368 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

369 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

377 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

378 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

383 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

385 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

388 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

389 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

390 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

391 #ifde‡
__REDIRECT


395 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

396 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

397 
__isoc99_fsˇnf
Ë
__wur
;

398 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

399 
__isoc99_sˇnf
Ë
__wur
;

400 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

401 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

402 
__isoc99_ssˇnf
);

404 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

405 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

406 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

407 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

408 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

409 
	#fsˇnf
 
__isoc99_fsˇnf


	)

410 
	#sˇnf
 
__isoc99_sˇnf


	)

411 
	#ssˇnf
 
__isoc99_ssˇnf


	)

415 #ifdef 
__USE_ISOC99


420 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

421 
_G_va_li°
 
__¨g
)

422 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

428 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

429 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

432 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

433 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

434 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

436 #i‡!
deföed
 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
vfsˇnf
,

444 (
FILE
 *
__ª°ri˘
 
__s
,

445 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

446 
__isoc99_vfsˇnf
)

447 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

448 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

449 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

450 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

451 
	`__REDIRECT_NTH
 (
vssˇnf
,

452 (c⁄° *
__ª°ri˘
 
__s
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
,

454 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

455 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

457 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

458 c⁄° *
__ª°ri˘
 
__f‹m©
,

459 
_G_va_li°
 
__¨g
Ë
__wur
;

460 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

461 
_G_va_li°
 
__¨g
Ë
__wur
;

462 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

463 c⁄° *
__ª°ri˘
 
__f‹m©
,

464 
_G_va_li°
 
__¨g
Ë
__THROW
;

465 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

466 
	#vsˇnf
 
__isoc99_vsˇnf


	)

467 
	#vssˇnf
 
__isoc99_vssˇnf


	)

477 
	`fgëc
 (
FILE
 *
__°ªam
);

478 
	`gëc
 (
FILE
 *
__°ªam
);

484 
	`gëch¨
 ();

488 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

490 #ifde‡
__USE_POSIX199506


495 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

496 
	`gëch¨_u∆ocked
 ();

499 #ifde‡
__USE_MISC


506 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

517 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

518 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

524 
	`putch¨
 (
__c
);

528 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

530 #ifde‡
__USE_MISC


537 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

540 #ifde‡
__USE_POSIX199506


545 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

546 
	`putch¨_u∆ocked
 (
__c
);

550 #i‡
deföed
 
__USE_MISC
 \

551 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

553 
	`gëw
 (
FILE
 *
__°ªam
);

556 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

564 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

565 
__wur
;

567 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

577 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

580 #ifde‡
__USE_GNU


587 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

588 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

592 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

603 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

604 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

605 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

606 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

607 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

608 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

616 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

617 
size_t
 *
__ª°ri˘
 
__n
,

618 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

626 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

632 
	`puts
 (c⁄° *
__s
);

639 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

646 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

647 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

652 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

653 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

655 #ifde‡
__USE_GNU


662 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
);

666 #ifde‡
__USE_MISC


673 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

674 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

684 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

689 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

694 
	`ªwöd
 (
FILE
 *
__°ªam
);

701 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


702 #i‚de‡
__USE_FILE_OFFSET64


707 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

712 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

714 #ifde‡
__REDIRECT


715 
	`__REDIRECT
 (
f£eko
,

716 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

717 
f£eko64
);

718 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

720 
	#f£eko
 
f£eko64


	)

721 
	#·ñlo
 
·ñlo64


	)

726 #i‚de‡
__USE_FILE_OFFSET64


731 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

736 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

738 #ifde‡
__REDIRECT


739 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

740 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

741 
	`__REDIRECT
 (
f£ços
,

742 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

744 
	#fgëpos
 
fgëpos64


	)

745 
	#f£ços
 
f£ços64


	)

749 #ifde‡
__USE_LARGEFILE64


750 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

751 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

753 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

757 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

759 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

761 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

763 #ifde‡
__USE_MISC


765 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

766 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

767 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

775 
	`≥º‹
 (c⁄° *
__s
);

781 
	~<bôs/sys_îæi°.h
>

784 #ifdef 
__USE_POSIX


786 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

789 #ifde‡
__USE_MISC


791 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

795 #ifde‡
__USE_POSIX2


800 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

806 
	`p˛o£
 (
FILE
 *
__°ªam
);

810 #ifdef 
__USE_POSIX


812 *
	$˘îmid
 (*
__s
Ë
__THROW
;

816 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


818 *
	`cu£rid
 (*
__s
);

822 #ifdef 
__USE_GNU


823 
ob°ack
;

826 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

827 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

828 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

829 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

830 c⁄° *
__ª°ri˘
 
__f‹m©
,

831 
_G_va_li°
 
__¨gs
)

832 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

836 #ifde‡
__USE_POSIX199506


840 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

844 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

847 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

850 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


853 
	~<bôs/gë›t_posix.h
>

858 #ifde‡
__USE_EXTERN_INLINES


859 
	~<bôs/°dio.h
>

861 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


862 
	~<bôs/°dio2.h
>

864 #ifde‡
__LDBL_COMPAT


865 
	~<bôs/°dio-ldbl.h
>

868 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

25 
	~<bôs/libc-hódî-°¨t.h
>

28 
	#__√ed_size_t


	)

29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

31 
	~<°ddef.h
>

33 
	g__BEGIN_DECLS


35 
	#_STDLIB_H
 1

	)

37 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


39 
	~<bôs/waôÊags.h
>

40 
	~<bôs/waô°©us.h
>

43 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

44 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

45 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

46 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

47 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

48 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

49 #ifde‡
__WIFCONTINUED


50 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

55 
	~<bôs/Êﬂä.h
>

60 
	mquŸ
;

61 
	mªm
;

62 } 
	tdiv_t
;

65 #i‚de‡
__ldiv_t_deföed


68 
	mquŸ
;

69 
	mªm
;

70 } 
	tldiv_t
;

71 
	#__ldiv_t_deföed
 1

	)

74 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


76 
__exãnsi⁄__
 struct

78 
	mquŸ
;

79 
	mªm
;

80 } 
	tŒdiv_t
;

81 
	#__Œdiv_t_deföed
 1

	)

86 
	#RAND_MAX
 2147483647

	)

91 
	#EXIT_FAILURE
 1

	)

92 
	#EXIT_SUCCESS
 0

	)

96 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

97 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

101 
	$©of
 (c⁄° *
__≈å
)

102 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

104 
	$©oi
 (c⁄° *
__≈å
)

105 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

107 
	$©ﬁ
 (c⁄° *
__≈å
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

110 #ifde‡
__USE_ISOC99


112 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

113 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

117 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

118 **
__ª°ri˘
 
__íd±r
)

119 
__THROW
 
	`__n⁄nuŒ
 ((1));

121 #ifdef 
__USE_ISOC99


123 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

124 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

126 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

127 **
__ª°ri˘
 
__íd±r
)

128 
__THROW
 
	`__n⁄nuŒ
 ((1));

133 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

134 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

135 **
__ª°ri˘
 
__íd±r
)

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

139 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

140 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

141 **
__ª°ri˘
 
__íd±r
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1));

145 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

146 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

147 **
__ª°ri˘
 
__íd±r
)

148 
__THROW
 
	`__n⁄nuŒ
 ((1));

151 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

152 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

153 **
__ª°ri˘
 
__íd±r
)

154 
__THROW
 
	`__n⁄nuŒ
 ((1));

157 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

158 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

159 **
__ª°ri˘
 
__íd±r
)

160 
__THROW
 
	`__n⁄nuŒ
 ((1));

163 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

164 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

169 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

170 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

171 **
__ª°ri˘
 
__íd±r
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1));

176 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1));

180 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

181 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

182 
__THROW
 
	`__n⁄nuŒ
 ((1));

184 #ifde‡
__USE_MISC


186 
__exãnsi⁄__


187 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

191 
__exãnsi⁄__


192 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

193 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

194 
__THROW
 
	`__n⁄nuŒ
 ((1));

197 #ifde‡
__USE_ISOC99


199 
__exãnsi⁄__


200 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

204 
__exãnsi⁄__


205 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

206 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

207 
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

212 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

213 
__f
)

214 
__THROW
 
	`__n⁄nuŒ
 ((3));

216 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

217 
__f
)

218 
__THROW
 
	`__n⁄nuŒ
 ((3));

220 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

221 
__f
)

222 
__THROW
 
	`__n⁄nuŒ
 ((3));

225 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

226 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

227 
_Flﬂt16
 
__f
)

228 
__THROW
 
	`__n⁄nuŒ
 ((3));

231 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

232 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

233 
_Flﬂt32
 
__f
)

234 
__THROW
 
	`__n⁄nuŒ
 ((3));

237 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

238 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

239 
_Flﬂt64
 
__f
)

240 
__THROW
 
	`__n⁄nuŒ
 ((3));

243 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

244 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

245 
_Flﬂt128
 
__f
)

246 
__THROW
 
	`__n⁄nuŒ
 ((3));

249 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

250 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

251 
_Flﬂt32x
 
__f
)

252 
__THROW
 
	`__n⁄nuŒ
 ((3));

255 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

256 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

257 
_Flﬂt64x
 
__f
)

258 
__THROW
 
	`__n⁄nuŒ
 ((3));

261 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

262 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

263 
_Flﬂt128x
 
__f
)

264 
__THROW
 
	`__n⁄nuŒ
 ((3));

268 #ifde‡
__USE_GNU


272 
	~<bôs/ty≥s/loˇÀ_t.h
>

274 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

275 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

276 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

278 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

279 **
__ª°ri˘
 
__íd±r
,

280 
__ba£
, 
loˇÀ_t
 
__loc
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

283 
__exãnsi⁄__


284 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

285 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

286 
loˇÀ_t
 
__loc
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

289 
__exãnsi⁄__


290 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

291 **
__ª°ri˘
 
__íd±r
,

292 
__ba£
, 
loˇÀ_t
 
__loc
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

295 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

296 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

299 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

300 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

301 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

303 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

304 **
__ª°ri˘
 
__íd±r
,

305 
loˇÀ_t
 
__loc
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

308 #i‡
__HAVE_FLOAT16


309 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

310 **
__ª°ri˘
 
__íd±r
,

311 
loˇÀ_t
 
__loc
)

312 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

315 #i‡
__HAVE_FLOAT32


316 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

317 **
__ª°ri˘
 
__íd±r
,

318 
loˇÀ_t
 
__loc
)

319 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

322 #i‡
__HAVE_FLOAT64


323 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

324 **
__ª°ri˘
 
__íd±r
,

325 
loˇÀ_t
 
__loc
)

326 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

329 #i‡
__HAVE_FLOAT128


330 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

331 **
__ª°ri˘
 
__íd±r
,

332 
loˇÀ_t
 
__loc
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

336 #i‡
__HAVE_FLOAT32X


337 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

338 **
__ª°ri˘
 
__íd±r
,

339 
loˇÀ_t
 
__loc
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

343 #i‡
__HAVE_FLOAT64X


344 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

350 #i‡
__HAVE_FLOAT128X


351 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

352 **
__ª°ri˘
 
__íd±r
,

353 
loˇÀ_t
 
__loc
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

359 #ifde‡
__USE_EXTERN_INLINES


360 
__exã∫_ölöe
 

361 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

363  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

364 
	}
}

365 
__exã∫_ölöe
 

366 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

368  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

369 
	}
}

371 #ifde‡
__USE_ISOC99


372 
__exãnsi⁄__
 
__exã∫_ölöe
 

373 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

375  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

376 
	}
}

381 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


385 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

388 
	$a64l
 (c⁄° *
__s
)

389 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

393 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


394 
	~<sys/ty≥s.h
>

401 
	$øndom
 (Ë
__THROW
;

404 
	$§™dom
 (
__£ed
Ë
__THROW
;

410 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

411 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

415 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

418 #ifde‡
__USE_MISC


423 
	søndom_d©a


425 
öt32_t
 *
Âå
;

426 
öt32_t
 *
Ωå
;

427 
öt32_t
 *
°©e
;

428 
ønd_ty≥
;

429 
ønd_deg
;

430 
ønd_£p
;

431 
öt32_t
 *
íd_±r
;

434 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

435 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

437 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

441 
size_t
 
__°©ñí
,

442 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

445 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

446 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

447 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$ønd
 (Ë
__THROW
;

455 
	$§™d
 (
__£ed
Ë
__THROW
;

457 #ifde‡
__USE_POSIX199506


459 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

463 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


467 
	$dønd48
 (Ë
__THROW
;

468 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

471 
	$Ã™d48
 (Ë
__THROW
;

472 
	$ƒ™d48
 (
__xsubi
[3])

473 
__THROW
 
	`__n⁄nuŒ
 ((1));

476 
	$mønd48
 (Ë
__THROW
;

477 
	$jønd48
 (
__xsubi
[3])

478 
__THROW
 
	`__n⁄nuŒ
 ((1));

481 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

482 *
	$£ed48
 (
__£ed16v
[3])

483 
__THROW
 
	`__n⁄nuŒ
 ((1));

484 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

486 #ifde‡
__USE_MISC


490 
	sdønd48_d©a


492 
__x
[3];

493 
__ﬁd_x
[3];

494 
__c
;

495 
__öô
;

496 
__exãnsi⁄__
 
__a
;

501 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

502 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

503 
	$î™d48_r
 (
__xsubi
[3],

504 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

505 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

508 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

509 *
__ª°ri˘
 
__ªsu…
)

510 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

511 
	$ƒ™d48_r
 (
__xsubi
[3],

512 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

513 *
__ª°ri˘
 
__ªsu…
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

517 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

518 *
__ª°ri˘
 
__ªsu…
)

519 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

520 
	$jønd48_r
 (
__xsubi
[3],

521 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

522 *
__ª°ri˘
 
__ªsu…
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

526 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

527 
__THROW
 
	`__n⁄nuŒ
 ((2));

529 
	$£ed48_r
 (
__£ed16v
[3],

530 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

532 
	$lc⁄g48_r
 (
__∑øm
[7],

533 
dønd48_d©a
 *
__buf„r
)

534 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

539 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

541 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

542 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

549 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

550 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

552 #ifde‡
__USE_GNU


558 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

559 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

563 
	$‰ì
 (*
__±r
Ë
__THROW
;

565 #ifde‡
__USE_MISC


566 
	~<Æloˇ.h
>

569 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

570 || 
deföed
 
__USE_MISC


572 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

575 #ifde‡
__USE_XOPEN2K


577 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

581 #ifde‡
__USE_ISOC11


583 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

584 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

588 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

592 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

594 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


596 #ifde‡
__˝lu•lus


597 "C++" 
	$©_quick_exô
 ((*
__func
) ())

598 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

600 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #ifdef 
__USE_MISC


607 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

608 
__THROW
 
	`__n⁄nuŒ
 ((1));

614 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

616 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


620 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

623 #ifde‡
__USE_ISOC99


626 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

631 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_GNU


636 *
	$£cuª_gëív
 (c⁄° *
__«me
)

637 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

640 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


644 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

647 #ifde‡
__USE_XOPEN2K


650 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

651 
__THROW
 
	`__n⁄nuŒ
 ((2));

654 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifdef 
__USE_MISC


661 
	$˛óªnv
 (Ë
__THROW
;

665 #i‡
deföed
 
__USE_MISC
 \

666 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

672 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

675 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


684 #i‚de‡
__USE_FILE_OFFSET64


685 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

687 #ifde‡
__REDIRECT


688 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

689 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

691 
	#mk°emp
 
mk°emp64


	)

694 #ifde‡
__USE_LARGEFILE64


695 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

699 #ifde‡
__USE_MISC


706 #i‚de‡
__USE_FILE_OFFSET64


707 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

711 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

713 
	#mk°emps
 
mk°emps64


	)

716 #ifde‡
__USE_LARGEFILE64


717 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

718 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_XOPEN2K8


728 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

731 #ifde‡
__USE_GNU


738 #i‚de‡
__USE_FILE_OFFSET64


739 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__REDIRECT


742 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

743 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

745 
	#mko°emp
 
mko°emp64


	)

748 #ifde‡
__USE_LARGEFILE64


749 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

758 #i‚de‡
__USE_FILE_OFFSET64


759 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

760 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

762 #ifde‡
__REDIRECT


763 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

764 
__Êags
), 
mko°emps64
)

765 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

767 
	#mko°emps
 
mko°emps64


	)

770 #ifde‡
__USE_LARGEFILE64


771 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

772 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

781 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

784 #ifdef 
__USE_GNU


787 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


797 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

798 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

803 #i‚de‡
__COMPAR_FN_T


804 
	#__COMPAR_FN_T


	)

805 (*
	t__com∑r_‚_t
) (const *, const *);

807 #ifdef 
__USE_GNU


808 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

811 #ifde‡
__USE_GNU


812 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

817 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

818 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

819 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

821 #ifde‡
__USE_EXTERN_INLINES


822 
	~<bôs/°dlib-b£¨ch.h
>

827 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

828 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

829 #ifde‡
__USE_GNU


830 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

831 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

832 
	`__n⁄nuŒ
 ((1, 4));

837 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

838 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

840 #ifde‡
__USE_ISOC99


841 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

842 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
div_t
 
	$div
 (
__numî
, 
__díom
)

850 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

852 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

854 #ifde‡
__USE_ISOC99


855 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

856 
__díom
)

857 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

861 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

862 || 
deföed
 
__USE_MISC


869 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

870 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

875 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

876 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

881 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

882 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

885 #ifde‡
__USE_MISC


887 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

888 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

889 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

890 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

891 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

892 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

893 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

894 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

899 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

900 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

901 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

902 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

903 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

904 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

906 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

907 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

908 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

910 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

911 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

912 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

913 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

919 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

922 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

923 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

926 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

930 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

931 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

934 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

935 
__THROW
;

938 #ifde‡
__USE_MISC


943 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

947 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


954 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

955 *c⁄° *
__ª°ri˘
 
__tokís
,

956 **
__ª°ri˘
 
__vÆuï
)

957 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

961 #ifde‡
__USE_XOPEN


963 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

969 #ifde‡
__USE_XOPEN2KXSI


971 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

974 #ifde‡
__USE_XOPEN_EXTENDED


979 
	$gø¡±
 (
__fd
Ë
__THROW
;

983 
	$u∆ock±
 (
__fd
Ë
__THROW
;

988 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

991 #ifde‡
__USE_GNU


995 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

996 
__THROW
 
	`__n⁄nuŒ
 ((2));

999 
	`gë±
 ();

1002 #ifde‡
__USE_MISC


1006 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1));

1010 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1013 
	$ây¶Ÿ
 (Ë
__THROW
;

1016 
	~<bôs/°dlib-Êﬂt.h
>

1019 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1020 
	~<bôs/°dlib.h
>

1022 #ifde‡
__LDBL_COMPAT


1023 
	~<bôs/°dlib-ldbl.h
>

1026 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

37 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

52 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


53 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

54 
__c
, 
size_t
 
__n
)

55 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

63 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

64 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

67 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


70 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

71 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

72 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

75 #ifde‡
__OPTIMIZE__


76 
__exã∫_Æways_ölöe
 *

77 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


79  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

82 
__exã∫_Æways_ölöe
 const *

83 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


85  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

88 
	}
}

90 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

91 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

94 #ifde‡
__USE_GNU


97 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


98 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

99 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

100 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

101 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

108 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


109 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

110 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

112 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

121 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

122 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

124 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

125 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

129 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

132 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

133 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

137 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

139 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

140 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

147 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

148 
__THROW
 
	`__n⁄nuŒ
 ((2));

150 #ifde‡
__USE_XOPEN2K8


152 
	~<bôs/ty≥s/loˇÀ_t.h
>

155 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

156 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

159 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

160 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

163 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

164 || 
	$__GLIBC_USE
 (
LIB_EXT2
))

166 *
	$°rdup
 (c⁄° *
__s
)

167 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

173 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

174 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

175 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

178 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


180 
	#°rdu∑
(
s
) \

181 (
__exãnsi⁄__
 \

183 c⁄° *
__ﬁd
 = (
s
); \

184 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

185 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

186 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

187 
	}
}))

	)

190 
	#°∫du∑
(
s
, 
n
) \

191 (
__exãnsi⁄__
 \

193 c⁄° *
__ﬁd
 = (
s
); \

194 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

195 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

196 
__√w
[
__Àn
] = '\0'; \

197 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

198 }))

	)

202 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


205 *
°rchr
 (*
__s
, 
__c
)

206 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

207 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

208 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

210 #ifde‡
__OPTIMIZE__


211 
__exã∫_Æways_ölöe
 *

212 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


214  
__buûtö_°rchr
 (
__s
, 
__c
);

217 
__exã∫_Æways_ölöe
 const *

218 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


220  
__buûtö_°rchr
 (
__s
, 
__c
);

225 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

226 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

229 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


232 *
	`°ºchr
 (*
__s
, 
__c
)

233 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

234 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

235 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__OPTIMIZE__


238 
__exã∫_Æways_ölöe
 *

239 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


241  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

244 
__exã∫_Æways_ölöe
 const *

245 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


247  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

250 
	}
}

252 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

253 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

256 #ifde‡
__USE_GNU


259 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


260 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

261 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

263 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

266 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

272 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

273 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

276 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

279 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


282 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

283 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

284 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

285 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

287 #ifde‡
__OPTIMIZE__


288 
__exã∫_Æways_ölöe
 *

289 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


291  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

294 
__exã∫_Æways_ölöe
 const *

295 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


297  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

300 
	}
}

302 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

303 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

306 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


309 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

310 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

311 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

312 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

314 #ifde‡
__OPTIMIZE__


315 
__exã∫_Æways_ölöe
 *

316 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


318  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

321 
__exã∫_Æways_ölöe
 const *

322 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


324  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

327 
	}
}

329 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

330 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

336 
__THROW
 
	`__n⁄nuŒ
 ((2));

340 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

341 c⁄° *
__ª°ri˘
 
__dñim
,

342 **
__ª°ri˘
 
__ßve_±r
)

343 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

344 #ifde‡
__USE_POSIX


345 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

346 **
__ª°ri˘
 
__ßve_±r
)

347 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

350 #ifde‡
__USE_GNU


352 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


353 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

354 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

355 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

356 c⁄° *
__√edÀ
)

357 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

359 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

360 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

364 #ifde‡
__USE_GNU


368 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

369 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

374 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

375 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

377 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

378 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

379 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

384 
size_t
 
	$°æí
 (c⁄° *
__s
)

385 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

387 #ifdef 
__USE_XOPEN2K8


390 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

396 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

397 #ifde‡
__USE_XOPEN2K


405 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


408 #ifde‡
__REDIRECT_NTH


409 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

410 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

411 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

413 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

414 
__THROW
 
	`__n⁄nuŒ
 ((2));

415 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

420 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

425 #ifde‡
__USE_XOPEN2K8


427 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

430 #ifde‡
__USE_MISC


431 
	~<°rögs.h
>

435 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

439 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

440 c⁄° *
__ª°ri˘
 
__dñim
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 #ifdef 
__USE_XOPEN2K8


446 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

449 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

451 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

456 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

457 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

458 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

460 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

464 #ifdef 
__USE_GNU


466 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

467 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

470 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

473 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

475 #i‚de‡
ba£«me


480 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


481 "C++" *
	$ba£«me
 (*
__fûíame
)

482 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

483 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

484 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

486 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

491 #i‡
	`__GNUC_PREREQ
 (3,4)

492 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


494 
	~<bôs/°rög_f‹tifõd.h
>

498 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/errno.h

1 
	~<î∫o.h
>

	@/usr/include/sys/ipc.h

18 #i‚de‡
_SYS_IPC_H


19 
	#_SYS_IPC_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ù˘y≥s.h
>

25 
	~<bôs/ùc.h
>

27 #i‚de‡
__uid_t_deföed


28 
__uid_t
 
	tuid_t
;

29 
	#__uid_t_deföed


	)

32 #i‚de‡
__gid_t_deföed


33 
__gid_t
 
	tgid_t
;

34 
	#__gid_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 #i‚de‡
__key_t_deföed


43 
__key_t
 
	tkey_t
;

44 
	#__key_t_deföed


	)

47 
__BEGIN_DECLS


50 
key_t
 
	$·ok
 (c⁄° *
__∑th«me
, 
__¥oj_id
Ë
__THROW
;

52 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

149 
__END_DECLS


	@/usr/include/sys/param.h

19 #i‚de‡
_SYS_PARAM_H


20 
	#_SYS_PARAM_H
 1

	)

22 
	#__√ed_NULL


	)

23 
	~<°ddef.h
>

25 
	~<sys/ty≥s.h
>

26 
	~<limôs.h
>

27 
	~<ídün.h
>

28 
	~<sig«l.h
>

31 
	~<bôs/∑øm.h
>

36 
	#NBBY
 
CHAR_BIT


	)

38 #i‡!
deföed
 
NGROUPS
 && deföed 
NGROUPS_MAX


39 
	#NGROUPS
 
NGROUPS_MAX


	)

41 #i‡!
deföed
 
MAXSYMLINKS
 && deföed 
SYMLOOP_MAX


42 
	#MAXSYMLINKS
 
SYMLOOP_MAX


	)

44 #i‡!
deföed
 
CANBSIZ
 && deföed 
MAX_CANON


45 
	#CANBSIZ
 
MAX_CANON


	)

47 #i‡!
deföed
 
MAXPATHLEN
 && deföed 
PATH_MAX


48 
	#MAXPATHLEN
 
PATH_MAX


	)

50 #i‡!
deföed
 
NOFILE
 && deföed 
OPEN_MAX


51 
	#NOFILE
 
OPEN_MAX


	)

53 #i‡!
deföed
 
MAXHOSTNAMELEN
 && deföed 
HOST_NAME_MAX


54 
	#MAXHOSTNAMELEN
 
HOST_NAME_MAX


	)

56 #i‚de‡
NCARGS


57 #ifde‡
ARG_MAX


58 
	#NCARGS
 
ARG_MAX


	)

62 
	#NCARGS
 
INT_MAX


	)

68 #i‚de‡
NOGROUP


69 
	#NOGROUP
 65535

	)

71 #i‚de‡
NODEV


72 
	#NODEV
 ((
dev_t
Ë-1Ë

	)

77 #i‚de‡
DEV_BSIZE


78 
	#DEV_BSIZE
 512

	)

83 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

84 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

85 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

86 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

89 #i‚de‡
howm™y


90 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

92 #ifde‡
__GNUC__


93 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

94 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

95 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

97 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

99 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

102 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

103 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

	@/usr/include/sys/personality.h

20 #i‚de‡
_SYS_PERSONALITY_H


21 
	#_SYS_PERSONALITY_H
 1

	)

23 
	~<„©uªs.h
>

29 
	mUNAME26
 = 0x0020000,

30 
	mADDR_NO_RANDOMIZE
 = 0x0040000,

31 
	mFDPIC_FUNCPTRS
 = 0x0080000,

32 
	mMMAP_PAGE_ZERO
 = 0x0100000,

33 
	mADDR_COMPAT_LAYOUT
 = 0x0200000,

34 
	mREAD_IMPLIES_EXEC
 = 0x0400000,

35 
	mADDR_LIMIT_32BIT
 = 0x0800000,

36 
	mSHORT_INODE
 = 0x1000000,

37 
	mWHOLE_SECONDS
 = 0x2000000,

38 
	mSTICKY_TIMEOUTS
 = 0x4000000,

39 
	mADDR_LIMIT_3GB
 = 0x8000000

48 
	mPER_LINUX
 = 0x0000,

49 
	mPER_LINUX_32BIT
 = 0x0000 | 
ADDR_LIMIT_32BIT
,

50 
	mPER_LINUX_FDPIC
 = 0x0000 | 
FDPIC_FUNCPTRS
,

51 
	mPER_SVR4
 = 0x0001 | 
STICKY_TIMEOUTS
 | 
MMAP_PAGE_ZERO
,

52 
	mPER_SVR3
 = 0x0002 | 
STICKY_TIMEOUTS
 | 
SHORT_INODE
,

53 
	mPER_SCOSVR3
 = 0x0003 | 
STICKY_TIMEOUTS
 | 
WHOLE_SECONDS
 | 
SHORT_INODE
,

54 
	mPER_OSR5
 = 0x0003 | 
STICKY_TIMEOUTS
 | 
WHOLE_SECONDS
,

55 
	mPER_WYSEV386
 = 0x0004 | 
STICKY_TIMEOUTS
 | 
SHORT_INODE
,

56 
	mPER_ISCR4
 = 0x0005 | 
STICKY_TIMEOUTS
,

57 
	mPER_BSD
 = 0x0006,

58 
	mPER_SUNOS
 = 0x0006 | 
STICKY_TIMEOUTS
,

59 
	mPER_XENIX
 = 0x0007 | 
STICKY_TIMEOUTS
 | 
SHORT_INODE
,

60 
	mPER_LINUX32
 = 0x0008,

61 
	mPER_LINUX32_3GB
 = 0x0008 | 
ADDR_LIMIT_3GB
,

62 
	mPER_IRIX32
 = 0x0009 | 
STICKY_TIMEOUTS
,

63 
	mPER_IRIXN32
 = 0x000®| 
STICKY_TIMEOUTS
,

64 
	mPER_IRIX64
 = 0x000b | 
STICKY_TIMEOUTS
,

65 
	mPER_RISCOS
 = 0x000c,

66 
	mPER_SOLARIS
 = 0x000d | 
STICKY_TIMEOUTS
,

67 
	mPER_UW7
 = 0x000ê| 
STICKY_TIMEOUTS
 | 
MMAP_PAGE_ZERO
,

68 
	mPER_OSF4
 = 0x000f,

69 
	mPER_HPUX
 = 0x0010,

70 
	mPER_MASK
 = 0x00ff,

73 
__BEGIN_DECLS


76 
	$≥rs⁄Æôy
 (
__≥rs⁄a
Ë
__THROW
;

78 
__END_DECLS


	@/usr/include/sys/resource.h

18 #i‚def 
_SYS_RESOURCE_H


19 
	#_SYS_RESOURCE_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ªsour˚.h
>

26 #i‚de‡
__id_t_deföed


27 
__id_t
 
	tid_t
;

28 
	#__id_t_deföed


	)

31 
	g__BEGIN_DECLS


37 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


38 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

39 
__rußge_who
 
	t__rußge_who_t
;

40 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

42 
	t__æimô_ªsour˚_t
;

43 
	t__rußge_who_t
;

44 
	t__¥i‹ôy_which_t
;

49 #i‚de‡
__USE_FILE_OFFSET64


50 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

51 
æimô
 *
__æimôs
Ë
__THROW
;

53 #ifde‡
__REDIRECT_NTH


54 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

55 
æimô
 *
__æimôs
), 
gëæimô64
);

57 
	#gëæimô
 
gëæimô64


	)

60 #ifde‡
__USE_LARGEFILE64


61 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

62 
æimô64
 *
__æimôs
Ë
__THROW
;

68 #i‚de‡
__USE_FILE_OFFSET64


69 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

70 c⁄° 
æimô
 *
__æimôs
Ë
__THROW
;

72 #ifde‡
__REDIRECT_NTH


73 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

74 c⁄° 
æimô
 *
__æimôs
),

75 
£ålimô64
);

77 
	#£ålimô
 
£ålimô64


	)

80 #ifde‡
__USE_LARGEFILE64


81 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

82 c⁄° 
æimô64
 *
__æimôs
Ë
__THROW
;

87 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

93 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

97 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

98 
__THROW
;

100 
__END_DECLS


	@/usr/include/sys/sem.h

18 #i‚de‡
_SYS_SEM_H


19 
	#_SYS_SEM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/£m.h
>

32 #ifde‡
__USE_GNU


33 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

40 
	s£mbuf


42 
	m£m_num
;

43 
	m£m_›
;

44 
	m£m_Êg
;

48 
__BEGIN_DECLS


51 
	$£m˘l
 (
__£mid
, 
__£mnum
, 
__cmd
, ...Ë
__THROW
;

54 
	$£mgë
 (
key_t
 
__key
, 
__n£ms
, 
__£mÊg
Ë
__THROW
;

57 
	$£m›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
Ë
__THROW
;

59 #ifde‡
__USE_GNU


61 
	$£mtimed›
 (
__£mid
, 
£mbuf
 *
__s›s
, 
size_t
 
__ns›s
,

62 c⁄° 
time•ec
 *
__timeout
Ë
__THROW
;

65 
__END_DECLS


	@/usr/include/sys/shm.h

18 #i‚de‡
_SYS_SHM_H


19 
	#_SYS_SHM_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<sys/ùc.h
>

30 
	~<bôs/shm.h
>

33 
	~<bôs/ty≥s/time_t.h
>

35 #ifde‡
__USE_XOPEN


36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
__BEGIN_DECLS


49 
	$shm˘l
 (
__shmid
, 
__cmd
, 
shmid_ds
 *
__buf
Ë
__THROW
;

52 
	$shmgë
 (
key_t
 
__key
, 
size_t
 
__size
, 
__shmÊg
Ë
__THROW
;

55 *
	$shm©
 (
__shmid
, c⁄° *
__shmaddr
, 
__shmÊg
)

56 
__THROW
;

59 
	$shmdt
 (c⁄° *
__shmaddr
Ë
__THROW
;

61 
__END_DECLS


	@/usr/include/sys/socket.h

19 #i‚def 
_SYS_SOCKET_H


20 
	#_SYS_SOCKET_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


26 
	~<bôs/ty≥s/°ru˘_iovec.h
>

27 
	#__√ed_size_t


	)

28 
	~<°ddef.h
>

33 
	~<bôs/sockë.h
>

35 #ifde‡
__USE_MISC


36 
	~<bôs/ty≥s/°ru˘_osockaddr.h
>

43 
	mSHUT_RD
 = 0,

44 
	#SHUT_RD
 
SHUT_RD


	)

45 
	mSHUT_WR
,

46 
	#SHUT_WR
 
SHUT_WR


	)

47 
	mSHUT_RDWR


48 
	#SHUT_RDWR
 
SHUT_RDWR


	)

57 #i‡
deföed
 
__˝lu•lus
 || !
__GNUC_PREREQ
 (2, 7Ë|| !deföed 
__USE_GNU


58 
	#__SOCKADDR_ARG
 
sockaddr
 *
__ª°ri˘


	)

59 
	#__CONST_SOCKADDR_ARG
 c⁄° 
sockaddr
 *

	)

63 
	#__SOCKADDR_ALLTYPES
 \

64 
	`__SOCKADDR_ONETYPE
 (
sockaddr
) \

65 
	`__SOCKADDR_ONETYPE
 (
sockaddr_©
) \

66 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ax25
) \

67 
	`__SOCKADDR_ONETYPE
 (
sockaddr_dl
) \

68 
	`__SOCKADDR_ONETYPE
 (
sockaddr_e⁄
) \

69 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö
) \

70 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö6
) \

71 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ö¨p
) \

72 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ùx
) \

73 
	`__SOCKADDR_ONETYPE
 (
sockaddr_iso
) \

74 
	`__SOCKADDR_ONETYPE
 (
sockaddr_ns
) \

75 
	`__SOCKADDR_ONETYPE
 (
sockaddr_un
) \

76 
	`__SOCKADDR_ONETYPE
 (
sockaddr_x25
)

	)

78 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

79 uni⁄ { 
	m__SOCKADDR_ALLTYPES


80 } 
	t__SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

81 #unde‡
__SOCKADDR_ONETYPE


82 
	#__SOCKADDR_ONETYPE
(
ty≥
Ëc⁄° ty≥ *
__ª°ri˘
 
__
##ty≥##__;

	)

83 uni⁄ { 
	m__SOCKADDR_ALLTYPES


84 } 
	t__CONST_SOCKADDR_ARG
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

85 #unde‡
__SOCKADDR_ONETYPE


88 #ifde‡
__USE_GNU


90 
	smmsghdr


92 
msghdr
 
	mmsg_hdr
;

93 
	mmsg_Àn
;

102 
	$sockë
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
Ë
__THROW
;

108 
	$sockë∑ú
 (
__domaö
, 
__ty≥
, 
__¥Ÿocﬁ
,

109 
__fds
[2]Ë
__THROW
;

112 
	$böd
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
)

113 
__THROW
;

116 
	$gësock«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

117 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

126 
	`c⁄√˘
 (
__fd
, 
__CONST_SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 
__Àn
);

130 
	$gë≥î«me
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

131 
sockÀn_t
 *
__ª°ri˘
 
__Àn
Ë
__THROW
;

138 
ssize_t
 
	`£nd
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
, 
__Êags
);

145 
ssize_t
 
	`ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
);

152 
ssize_t
 
	`£ndto
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

153 
__Êags
, 
__CONST_SOCKADDR_ARG
 
__addr
,

154 
sockÀn_t
 
__addr_Àn
);

163 
ssize_t
 
	`ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

164 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

165 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

173 
ssize_t
 
	`£ndmsg
 (
__fd
, c⁄° 
msghdr
 *
__mesßge
,

174 
__Êags
);

176 #ifde‡
__USE_GNU


182 
	`£ndmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

183 
__vÀn
, 
__Êags
);

191 
ssize_t
 
	`ªcvmsg
 (
__fd
, 
msghdr
 *
__mesßge
, 
__Êags
);

193 #ifde‡
__USE_GNU


199 
	`ªcvmmsg
 (
__fd
, 
mmsghdr
 *
__vmesßges
,

200 
__vÀn
, 
__Êags
,

201 
time•ec
 *
__tmo
);

208 
	$gësock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

209 *
__ª°ri˘
 
__›tvÆ
,

210 
sockÀn_t
 *
__ª°ri˘
 
__›éí
Ë
__THROW
;

215 
	$£tsock›t
 (
__fd
, 
__Àvñ
, 
__›äame
,

216 c⁄° *
__›tvÆ
, 
sockÀn_t
 
__›éí
Ë
__THROW
;

222 
	$li°í
 (
__fd
, 
__n
Ë
__THROW
;

232 
	`ac˚±
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

233 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

235 #ifde‡
__USE_GNU


240 
	`ac˚±4
 (
__fd
, 
__SOCKADDR_ARG
 
__addr
,

241 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
, 
__Êags
);

250 
	$shutdown
 (
__fd
, 
__how
Ë
__THROW
;

253 #ifde‡
__USE_XOPEN2K


255 
	$sock©m¨k
 (
__fd
Ë
__THROW
;

259 #ifde‡
__USE_MISC


263 
	$isfdty≥
 (
__fd
, 
__fdty≥
Ë
__THROW
;

268 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


269 
	~<bôs/sockë2.h
>

272 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_XOPEN2K8


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__REDIRECT_NTH


213 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

214 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

215 
	`__n⁄nuŒ
 ((1, 2));

216 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

217 
	`__n⁄nuŒ
 ((2));

219 
	#°©
 
°©64


	)

220 
	#f°©
 
f°©64


	)

223 #ifde‡
__USE_LARGEFILE64


224 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

225 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

226 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

229 #ifde‡
__USE_ATFILE


233 #i‚de‡
__USE_FILE_OFFSET64


234 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

235 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

236 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

238 #ifde‡
__REDIRECT_NTH


239 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

240 
°©
 *
__ª°ri˘
 
__buf
,

241 
__Êag
),

242 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

244 
	#f°©©
 
f°©©64


	)

248 #ifde‡
__USE_LARGEFILE64


249 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

250 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

251 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

255 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


256 #i‚de‡
__USE_FILE_OFFSET64


259 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

260 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT_NTH


263 
	`__REDIRECT_NTH
 (
l°©
,

264 (c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

266 
	`__n⁄nuŒ
 ((1, 2));

268 
	#l°©
 
l°©64


	)

271 #ifde‡
__USE_LARGEFILE64


272 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

273 
°©64
 *
__ª°ri˘
 
__buf
)

274 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

280 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

281 
__THROW
 
	`__n⁄nuŒ
 ((1));

283 #ifde‡
__USE_MISC


287 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


293 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

296 #ifde‡
__USE_ATFILE


299 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

300 
__Êag
)

301 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

308 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

310 #ifdef 
__USE_GNU


313 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

317 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

318 
__THROW
 
	`__n⁄nuŒ
 ((1));

320 #ifde‡
__USE_ATFILE


324 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

325 
__THROW
 
	`__n⁄nuŒ
 ((2));

331 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


332 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

333 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 #ifde‡
__USE_ATFILE


339 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

340 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1));

349 #ifde‡
__USE_ATFILE


353 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

354 
__THROW
 
	`__n⁄nuŒ
 ((2));

357 #ifde‡
__USE_ATFILE


360 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

361 c⁄° 
time•ec
 
__times
[2],

362 
__Êags
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 #ifde‡
__USE_XOPEN2K8


368 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

386 #i‚de‡
_STAT_VER


387 
	#_STAT_VER
 0

	)

389 #i‚de‡
_MKNOD_VER


390 
	#_MKNOD_VER
 0

	)

394 #i‚de‡
__USE_FILE_OFFSET64


395 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

396 
__THROW
 
	`__n⁄nuŒ
 ((3));

397 
	$__x°©
 (
__vî
, c⁄° *
__fûíame
,

398 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

399 
	$__lx°©
 (
__vî
, c⁄° *
__fûíame
,

400 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

401 
	$__fx°©©
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

402 
°©
 *
__°©_buf
, 
__Êag
)

403 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

405 #ifde‡
__REDIRECT_NTH


406 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

407 
°©
 *
__°©_buf
), 
__fx°©64
)

408 
	`__n⁄nuŒ
 ((3));

409 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, c⁄° *
__fûíame
,

410 
°©
 *
__°©_buf
), 
__x°©64
)

411 
	`__n⁄nuŒ
 ((2, 3));

412 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, c⁄° *
__fûíame
,

413 
°©
 *
__°©_buf
), 
__lx°©64
)

414 
	`__n⁄nuŒ
 ((2, 3));

415 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

416 c⁄° *
__fûíame
,

417 
°©
 *
__°©_buf
, 
__Êag
),

418 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

421 
	#__fx°©
 
__fx°©64


	)

422 
	#__x°©
 
__x°©64


	)

423 
	#__lx°©
 
__lx°©64


	)

427 #ifde‡
__USE_LARGEFILE64


428 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

429 
__THROW
 
	`__n⁄nuŒ
 ((3));

430 
	$__x°©64
 (
__vî
, c⁄° *
__fûíame
,

431 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

432 
	$__lx°©64
 (
__vî
, c⁄° *
__fûíame
,

433 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

434 
	$__fx°©©64
 (
__vî
, 
__fûdes
, c⁄° *
__fûíame
,

435 
°©64
 *
__°©_buf
, 
__Êag
)

436 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

438 
	$__xmknod
 (
__vî
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

439 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

441 
	$__xmknod©
 (
__vî
, 
__fd
, c⁄° *
__∑th
,

442 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

443 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

445 #ifde‡
__USE_EXTERN_INLINES


448 
__exã∫_ölöe
 

449 
	`__NTH
 (
	$°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

451  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

452 
	}
}

454 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


455 
__exã∫_ölöe
 

456 
__NTH
 (
	$l°©
 (c⁄° *
__∑th
, 
°©
 *
__°©buf
))

458  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

459 
	}
}

462 
__exã∫_ölöe
 

463 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

465  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

466 
	}
}

468 #ifde‡
__USE_ATFILE


469 
__exã∫_ölöe
 

470 
__NTH
 (
	$f°©©
 (
__fd
, c⁄° *
__fûíame
, 
°©
 *
__°©buf
,

471 
__Êag
))

473  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

474 
	}
}

477 #ifde‡
__USE_MISC


478 
__exã∫_ölöe
 

479 
__NTH
 (
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

481  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

482 
	}
}

485 #ifde‡
__USE_ATFILE


486 
__exã∫_ölöe
 

487 
__NTH
 (
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

488 
__dev_t
 
__dev
))

490  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

491 
	}
}

494 #i‡
deföed
 
__USE_LARGEFILE64
 \

495 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

496 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

497 
__exã∫_ölöe
 

498 
__NTH
 (
	$°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

500  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

501 
	}
}

503 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


504 
__exã∫_ölöe
 

505 
__NTH
 (
	$l°©64
 (c⁄° *
__∑th
, 
°©64
 *
__°©buf
))

507  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

508 
	}
}

511 
__exã∫_ölöe
 

512 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

514  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

515 
	}
}

517 #ifde‡
__USE_ATFILE


518 
__exã∫_ölöe
 

519 
__NTH
 (
	$f°©©64
 (
__fd
, c⁄° *
__fûíame
, 
°©64
 *
__°©buf
,

520 
__Êag
))

522  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

523 
	}
}

530 
	g__END_DECLS


	@/usr/include/sys/statvfs.h

19 #i‚def 
_SYS_STATVFS_H


20 
	#_SYS_STATVFS_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/°©vfs.h
>

27 #i‚de‡
__USE_FILE_OFFSET64


28 #i‚de‡
__fsblk˙t_t_deföed


29 
__fsblk˙t_t
 
	tfsblk˙t_t
;

30 
	#__fsblk˙t_t_deföed


	)

32 #i‚de‡
__fsfû˙t_t_deföed


33 
__fsfû˙t_t
 
	tfsfû˙t_t
;

34 
	#__fsfû˙t_t_deföed


	)

37 #i‚de‡
__fsblk˙t_t_deföed


38 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

39 
	#__fsblk˙t_t_deföed


	)

41 #i‚de‡
__fsfû˙t_t_deföed


42 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

43 
	#__fsfû˙t_t_deföed


	)

47 
	g__BEGIN_DECLS


50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$°©vfs
 (c⁄° *
__ª°ri˘
 
__fûe
,

52 
°©vfs
 *
__ª°ri˘
 
__buf
)

53 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

55 #ifde‡
__REDIRECT_NTH


56 
	`__REDIRECT_NTH
 (
°©vfs
,

57 (c⁄° *
__ª°ri˘
 
__fûe
,

58 
°©vfs
 *
__ª°ri˘
 
__buf
), 
°©vfs64
)

59 
	`__n⁄nuŒ
 ((1, 2));

61 
	#°©vfs
 
°©vfs64


	)

64 #ifde‡
__USE_LARGEFILE64


65 
	$°©vfs64
 (c⁄° *
__ª°ri˘
 
__fûe
,

66 
°©vfs64
 *
__ª°ri˘
 
__buf
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

72 #i‚de‡
__USE_FILE_OFFSET64


73 
	$f°©vfs
 (
__fûdes
, 
°©vfs
 *
__buf
)

74 
__THROW
 
	`__n⁄nuŒ
 ((2));

76 #ifde‡
__REDIRECT_NTH


77 
	`__REDIRECT_NTH
 (
f°©vfs
, (
__fûdes
, 
°©vfs
 *
__buf
),

78 
f°©vfs64
Ë
	`__n⁄nuŒ
 ((2));

80 
	#f°©vfs
 
f°©vfs64


	)

83 #ifde‡
__USE_LARGEFILE64


84 
	$f°©vfs64
 (
__fûdes
, 
°©vfs64
 *
__buf
)

85 
__THROW
 
	`__n⁄nuŒ
 ((2));

88 
__END_DECLS


	@/usr/include/sys/time.h

18 #i‚de‡
_SYS_TIME_H


19 
	#_SYS_TIME_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/time_t.h
>

25 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

27 #i‚de‡
__su£c⁄ds_t_deföed


28 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

29 
	#__su£c⁄ds_t_deföed


	)

32 
	~<sys/£À˘.h
>

34 
	g__BEGIN_DECLS


36 #ifde‡
__USE_GNU


38 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

39 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

40 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

41 }

	)

42 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

43 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

44 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

45 }

	)

49 #ifde‡
__USE_MISC


52 
	stimez⁄e


54 
	mtz_möuãswe°
;

55 
	mtz_d°time
;

58 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

60 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

68 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

69 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

71 #ifde‡
__USE_MISC


74 
	$£âimeofday
 (c⁄° 
timevÆ
 *
__tv
,

75 c⁄° 
timez⁄e
 *
__tz
)

76 
__THROW
;

82 
	$adjtime
 (c⁄° 
timevÆ
 *
__dñè
,

83 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

88 
	e__ôimî_which


91 
ITIMER_REAL
 = 0,

92 
	#ITIMER_REAL
 
ITIMER_REAL


	)

94 
ITIMER_VIRTUAL
 = 1,

95 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

98 
ITIMER_PROF
 = 2

99 
	#ITIMER_PROF
 
ITIMER_PROF


	)

104 
	sôimîvÆ


107 
timevÆ
 
ô_öãrvÆ
;

109 
timevÆ
 
ô_vÆue
;

112 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


115 
__ôimî_which
 
	t__ôimî_which_t
;

117 
	t__ôimî_which_t
;

122 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

123 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

128 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

129 c⁄° 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

130 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

135 
	$utimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

136 
__THROW
 
	`__n⁄nuŒ
 ((1));

138 #ifde‡
__USE_MISC


140 
	$lutimes
 (c⁄° *
__fûe
, c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

144 
	$futimes
 (
__fd
, c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

147 #ifde‡
__USE_GNU


151 
	$futimeßt
 (
__fd
, c⁄° *
__fûe
,

152 c⁄° 
timevÆ
 
__tvp
[2]Ë
__THROW
;

156 #ifde‡
__USE_MISC


159 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

160 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

161 
	#timîcmp
(
a
, 
b
, 
CMP
) \

162 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

163 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

164 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

165 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

167 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

168 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

169 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

171 ++(
ªsu…
)->
tv_£c
; \

172 (
ªsu…
)->
tv_u£c
 -= 1000000; \

174 
	}
} 0)

	)

175 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

177 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

178 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

179 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

180 --(
ªsu…
)->
tv_£c
; \

181 (
ªsu…
)->
tv_u£c
 += 1000000; \

183 } 0)

	)

186 
	g__END_DECLS


	@/usr/include/sys/timeb.h

18 #i‚de‡
_SYS_TIMEB_H


19 
	#_SYS_TIMEB_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s/time_t.h
>

25 
__BEGIN_DECLS


29 
	stimeb


31 
time_t
 
	mtime
;

32 
	mmûlôm
;

33 
	mtimez⁄e
;

34 
	md°Êag
;

39 
·ime
 (
timeb
 *
__timebuf
);

41 
	g__END_DECLS


	@/usr/include/sys/times.h

22 #i‚def 
_SYS_TIMES_H


23 
	#_SYS_TIMES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s/˛ock_t.h
>

29 
__BEGIN_DECLS


32 
	stms


34 
˛ock_t
 
	mtms_utime
;

35 
˛ock_t
 
	mtms_°ime
;

37 
˛ock_t
 
	mtms_cutime
;

38 
˛ock_t
 
	mtms_c°ime
;

46 
˛ock_t
 
	$times
 (
tms
 *
__buf„r
Ë
__THROW
;

48 
__END_DECLS


	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

44 
__loff_t
 
	tloff_t
;

46 #i‚de‡
__öo_t_deföed


47 #i‚de‡
__USE_FILE_OFFSET64


48 
__öo_t
 
	töo_t
;

50 
__öo64_t
 
	töo_t
;

52 
	#__öo_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


55 
__öo64_t
 
	töo64_t
;

56 
	#__öo64_t_deföed


	)

59 #i‚de‡
__dev_t_deföed


60 
__dev_t
 
	tdev_t
;

61 
	#__dev_t_deföed


	)

64 #i‚de‡
__gid_t_deföed


65 
__gid_t
 
	tgid_t
;

66 
	#__gid_t_deföed


	)

69 #i‚de‡
__mode_t_deföed


70 
__mode_t
 
	tmode_t
;

71 
	#__mode_t_deföed


	)

74 #i‚de‡
__∆ök_t_deföed


75 
__∆ök_t
 
	t∆ök_t
;

76 
	#__∆ök_t_deföed


	)

79 #i‚de‡
__uid_t_deföed


80 
__uid_t
 
	tuid_t
;

81 
	#__uid_t_deföed


	)

84 #i‚de‡
__off_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__off_t
 
	toff_t
;

88 
__off64_t
 
	toff_t
;

90 
	#__off_t_deföed


	)

92 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


93 
__off64_t
 
	toff64_t
;

94 
	#__off64_t_deföed


	)

97 #i‚de‡
__pid_t_deföed


98 
__pid_t
 
	tpid_t
;

99 
	#__pid_t_deföed


	)

102 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

103 && !
deföed
 
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 #i‚de‡
__ssize_t_deföed


109 
__ssize_t
 
	tssize_t
;

110 
	#__ssize_t_deföed


	)

113 #ifdef 
__USE_MISC


114 #i‚de‡
__daddr_t_deföed


115 
__daddr_t
 
	tdaddr_t
;

116 
__ˇddr_t
 
	tˇddr_t
;

117 
	#__daddr_t_deföed


	)

121 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


122 
__key_t
 
	tkey_t
;

123 
	#__key_t_deföed


	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	~<bôs/ty≥s/˛ock_t.h
>

129 
	~<bôs/ty≥s/˛ockid_t.h
>

130 
	~<bôs/ty≥s/time_t.h
>

131 
	~<bôs/ty≥s/timî_t.h
>

133 #ifde‡
__USE_XOPEN


134 #i‚de‡
__u£c⁄ds_t_deföed


135 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

136 
	#__u£c⁄ds_t_deföed


	)

138 #i‚de‡
__su£c⁄ds_t_deföed


139 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

140 
	#__su£c⁄ds_t_deföed


	)

144 
	#__√ed_size_t


	)

145 
	~<°ddef.h
>

147 #ifde‡
__USE_MISC


149 
	tul⁄g
;

150 
	tush‹t
;

151 
	tuöt
;

156 
	~<bôs/°döt-öä.h
>

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 
	tu_öt8_t
;

162 
	tu_öt16_t
;

163 
	tu_öt32_t
;

164 #i‡
__WORDSIZE
 == 64

165 
	tu_öt64_t
;

167 
__exãnsi⁄__
 
	tu_öt64_t
;

170 
	tªgi°î_t
;

175 
	#__u_ötN_t
(
N
, 
MODE
) \

176 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

178 
	t__u_ötN_t
 (8, 
	t__QI__
);

179 
__u_ötN_t
 (16, 
__HI__
);

180 
__u_ötN_t
 (32, 
__SI__
);

181 
__u_ötN_t
 (64, 
__DI__
);

183 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

189 
	#__BIT_TYPES_DEFINED__
 1

	)

192 #ifdef 
__USE_MISC


194 
	~<ídün.h
>

197 
	~<sys/£À˘.h
>

204 
	#__SYSMACROS_DEPRECATED_INCLUSION


	)

205 
	~<sys/sysma¸os.h
>

206 #unde‡
__SYSMACROS_DEPRECATED_INCLUSION


210 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

211 && !
deföed
 
__blksize_t_deföed


212 
__blksize_t
 
	tblksize_t
;

213 
	#__blksize_t_deföed


	)

217 #i‚de‡
__USE_FILE_OFFSET64


218 #i‚de‡
__blk˙t_t_deföed


219 
__blk˙t_t
 
	tblk˙t_t
;

220 
	#__blk˙t_t_deföed


	)

222 #i‚de‡
__fsblk˙t_t_deföed


223 
__fsblk˙t_t
 
	tfsblk˙t_t
;

224 
	#__fsblk˙t_t_deföed


	)

226 #i‚de‡
__fsfû˙t_t_deföed


227 
__fsfû˙t_t
 
	tfsfû˙t_t
;

228 
	#__fsfû˙t_t_deföed


	)

231 #i‚de‡
__blk˙t_t_deföed


232 
__blk˙t64_t
 
	tblk˙t_t
;

233 
	#__blk˙t_t_deföed


	)

235 #i‚de‡
__fsblk˙t_t_deföed


236 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

237 
	#__fsblk˙t_t_deföed


	)

239 #i‚de‡
__fsfû˙t_t_deföed


240 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

241 
	#__fsfû˙t_t_deföed


	)

245 #ifde‡
__USE_LARGEFILE64


246 
__blk˙t64_t
 
	tblk˙t64_t
;

247 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

248 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

253 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


254 
	~<bôs/±hªadty≥s.h
>

257 
	g__END_DECLS


	@/usr/include/sys/utsname.h

22 #i‚def 
_SYS_UTSNAME_H


23 
	#_SYS_UTSNAME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ut¢ame.h
>

31 #i‚de‡
_UTSNAME_SYSNAME_LENGTH


32 
	#_UTSNAME_SYSNAME_LENGTH
 
_UTSNAME_LENGTH


	)

34 #i‚de‡
_UTSNAME_NODENAME_LENGTH


35 
	#_UTSNAME_NODENAME_LENGTH
 
_UTSNAME_LENGTH


	)

37 #i‚de‡
_UTSNAME_RELEASE_LENGTH


38 
	#_UTSNAME_RELEASE_LENGTH
 
_UTSNAME_LENGTH


	)

40 #i‚de‡
_UTSNAME_VERSION_LENGTH


41 
	#_UTSNAME_VERSION_LENGTH
 
_UTSNAME_LENGTH


	)

43 #i‚de‡
_UTSNAME_MACHINE_LENGTH


44 
	#_UTSNAME_MACHINE_LENGTH
 
_UTSNAME_LENGTH


	)

48 
	sut¢ame


51 
	msy¢ame
[
_UTSNAME_SYSNAME_LENGTH
];

54 
	mnodíame
[
_UTSNAME_NODENAME_LENGTH
];

57 
	mªÀa£
[
_UTSNAME_RELEASE_LENGTH
];

59 
	mvîsi⁄
[
_UTSNAME_VERSION_LENGTH
];

62 
	mmachöe
[
_UTSNAME_MACHINE_LENGTH
];

64 #i‡
_UTSNAME_DOMAIN_LENGTH
 - 0

66 #ifde‡
__USE_GNU


67 
	mdomaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

69 
	m__domaö«me
[
_UTSNAME_DOMAIN_LENGTH
];

74 #ifde‡
__USE_MISC


76 
	#SYS_NMLN
 
_UTSNAME_LENGTH


	)

81 
	$u«me
 (
ut¢ame
 *
__«me
Ë
__THROW
;

84 
__END_DECLS


	@/usr/include/sys/wait.h

22 #i‚def 
_SYS_WAIT_H


23 
	#_SYS_WAIT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

35 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


36 
	~<sig«l.h
>

39 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


42 
	~<bôs/ty≥s/°ru˘_rußge.h
>

46 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

49 
	~<bôs/waôÊags.h
>

52 
	~<bôs/waô°©us.h
>

54 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

55 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

56 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

57 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

58 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

59 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

60 #ifde‡
__WIFCONTINUED


61 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

65 #ifdef 
__USE_MISC


66 
	#WCOREFLAG
 
__WCOREFLAG


	)

67 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (°©us)

	)

68 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

69 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

77 
__pid_t
 
waô
 (*
__°©_loc
);

79 #ifdef 
__USE_MISC


81 
	#WAIT_ANY
 (-1Ë

	)

82 
	#WAIT_MYPGRP
 0

	)

100 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

102 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


103 #i‚de‡
__id_t_deföed


104 
__id_t
 
	tid_t
;

105 
	#__id_t_deföed


	)

108 
	~<bôs/ty≥s/sigöfo_t.h
>

121 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

122 
__›ti⁄s
);

125 #i‡
deföed
 
__USE_MISC
 \

126 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K
)

129 
	grußge
;

136 
__pid_t
 
	$waô3
 (*
__°©_loc
, 
__›ti⁄s
,

137 
rußge
 * 
__ußge
Ë
__THROWNL
;

140 #ifde‡
__USE_MISC


142 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, *
__°©_loc
, 
__›ti⁄s
,

143 
rußge
 *
__ußge
Ë
__THROWNL
;

147 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

75 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

78 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

79 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

88 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
,

90 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

92 #ifde‡
__USE_XOPEN


95 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

96 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

97 
__THROW
;

100 #ifde‡
__USE_XOPEN2K8


104 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

105 c⁄° *
__ª°ri˘
 
__f‹m©
,

106 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

107 
loˇÀ_t
 
__loc
Ë
__THROW
;

110 #ifde‡
__USE_GNU


111 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

112 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

113 
loˇÀ_t
 
__loc
Ë
__THROW
;

119 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

123 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

125 #ifde‡
__USE_POSIX


128 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

129 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

133 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

134 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

139 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

142 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

144 #ifde‡
__USE_POSIX


149 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

150 *
__ª°ri˘
 
__buf
Ë
__THROW
;

153 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

154 *
__ª°ri˘
 
__buf
Ë
__THROW
;

159 *
__tz«me
[2];

160 
__daylight
;

161 
__timez⁄e
;

164 #ifdef 
__USE_POSIX


166 *
tz«me
[2];

170 
	$tz£t
 (Ë
__THROW
;

173 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


174 
daylight
;

175 
timez⁄e
;

178 #ifde‡
__USE_MISC


181 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

187 
	#__i¶óp
(
yór
) \

188 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

191 #ifde‡
__USE_MISC


196 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

199 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

202 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

206 #ifde‡
__USE_POSIX199309


211 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

212 
time•ec
 *
__ªmaöög
);

216 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

219 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

222 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

223 
__THROW
;

225 #ifde‡
__USE_XOPEN2K


230 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

231 c⁄° 
time•ec
 *
__ªq
,

232 
time•ec
 *
__ªm
);

235 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

240 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

241 
sigevít
 *
__ª°ri˘
 
__evp
,

242 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

245 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

248 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

249 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

250 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

253 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

254 
__THROW
;

257 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

261 #ifde‡
__USE_ISOC11


263 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

268 #ifde‡
__USE_XOPEN_EXTENDED


280 
gëd©e_îr
;

289 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

292 #ifde‡
__USE_GNU


303 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

304 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

307 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

111 
	#_XOPEN_CRYPT
 1

	)

115 
	#_XOPEN_ENH_I18N
 1

	)

118 
	#_XOPEN_LEGACY
 1

	)

205 
	~<bôs/posix_›t.h
>

208 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


209 
	~<bôs/ívú⁄míts.h
>

213 
	#STDIN_FILENO
 0

	)

214 
	#STDOUT_FILENO
 1

	)

215 
	#STDERR_FILENO
 2

	)

220 
	~<bôs/ty≥s.h
>

222 #i‚def 
__ssize_t_deföed


223 
__ssize_t
 
	tssize_t
;

224 
	#__ssize_t_deföed


	)

227 
	#__√ed_size_t


	)

228 
	#__√ed_NULL


	)

229 
	~<°ddef.h
>

231 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


234 #i‚de‡
__gid_t_deföed


235 
__gid_t
 
	tgid_t
;

236 
	#__gid_t_deföed


	)

239 #i‚de‡
__uid_t_deföed


240 
__uid_t
 
	tuid_t
;

241 
	#__uid_t_deföed


	)

244 #i‚de‡
__off_t_deföed


245 #i‚de‡
__USE_FILE_OFFSET64


246 
__off_t
 
	toff_t
;

248 
__off64_t
 
	toff_t
;

250 
	#__off_t_deföed


	)

252 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


253 
__off64_t
 
	toff64_t
;

254 
	#__off64_t_deföed


	)

257 #i‚de‡
__u£c⁄ds_t_deföed


258 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

259 
	#__u£c⁄ds_t_deföed


	)

262 #i‚de‡
__pid_t_deföed


263 
__pid_t
 
	tpid_t
;

264 
	#__pid_t_deföed


	)

268 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


269 #i‚de‡
__öçå_t_deföed


270 
__öçå_t
 
	töçå_t
;

271 
	#__öçå_t_deföed


	)

275 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


276 #i‚de‡
__sockÀn_t_deföed


277 
__sockÀn_t
 
	tsockÀn_t
;

278 
	#__sockÀn_t_deföed


	)

284 
	#R_OK
 4

	)

285 
	#W_OK
 2

	)

286 
	#X_OK
 1

	)

287 
	#F_OK
 0

	)

290 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

292 #ifde‡
__USE_GNU


295 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

296 
__THROW
 
	`__n⁄nuŒ
 ((1));

299 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

303 #ifde‡
__USE_ATFILE


307 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

308 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

313 #i‚def 
_STDIO_H


314 
	#SEEK_SET
 0

	)

315 
	#SEEK_CUR
 1

	)

316 
	#SEEK_END
 2

	)

317 #ifde‡
__USE_GNU


318 
	#SEEK_DATA
 3

	)

319 
	#SEEK_HOLE
 4

	)

323 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


325 
	#L_SET
 
SEEK_SET


	)

326 
	#L_INCR
 
SEEK_CUR


	)

327 
	#L_XTND
 
SEEK_END


	)

336 #i‚de‡
__USE_FILE_OFFSET64


337 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

339 #ifde‡
__REDIRECT_NTH


340 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

341 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

342 
l£ek64
);

344 
	#l£ek
 
l£ek64


	)

347 #ifde‡
__USE_LARGEFILE64


348 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

349 
__THROW
;

356 
	`˛o£
 (
__fd
);

363 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

369 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

371 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


372 #i‚de‡
__USE_FILE_OFFSET64


379 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

380 
__off_t
 
__off£t
Ë
__wur
;

387 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

388 
__off_t
 
__off£t
Ë
__wur
;

390 #ifde‡
__REDIRECT


391 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

392 
__off64_t
 
__off£t
),

393 
¥ód64
Ë
__wur
;

394 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

395 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

396 
pwrôe64
Ë
__wur
;

398 
	#¥ód
 
¥ód64


	)

399 
	#pwrôe
 
pwrôe64


	)

403 #ifde‡
__USE_LARGEFILE64


407 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

408 
__off64_t
 
__off£t
Ë
__wur
;

411 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

412 
__off64_t
 
__off£t
Ë
__wur
;

420 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

422 #ifde‡
__USE_GNU


425 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

435 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

447 
	`¶ìp
 (
__£c⁄ds
);

449 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

450 || 
deföed
 
__USE_MISC


455 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

456 
__THROW
;

463 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

472 
	`∑u£
 ();

476 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

477 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

479 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


481 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

486 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

487 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

491 #ifde‡
__USE_ATFILE


494 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

495 
__gid_t
 
__group
, 
__Êag
)

496 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

500 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

502 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


504 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

514 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

516 #ifdef 
__USE_GNU


520 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

523 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

524 || 
deföed
 
__USE_MISC


528 *
	$gëwd
 (*
__buf
)

529 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

534 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

537 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

539 #ifde‡
__USE_GNU


542 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

546 **
__ívú⁄
;

547 #ifde‡
__USE_GNU


548 **
ívú⁄
;

554 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

555 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 #ifde‡
__USE_XOPEN2K8


560 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((2));

566 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

588 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

590 #ifde‡
__USE_GNU


593 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

594 *c⁄° 
__ívp
[])

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


601 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

606 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

612 
	~<bôs/c⁄‚ame.h
>

615 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

616 
__THROW
 
	`__n⁄nuŒ
 ((1));

619 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

622 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

624 #ifdef 
__USE_POSIX2


626 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

631 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

634 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

640 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

641 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


642 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

649 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

651 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


663 
	$£çgΩ
 (Ë
__THROW
;

670 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

672 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


674 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

678 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

681 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

684 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

687 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

692 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

694 #ifdef 
__USE_GNU


696 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

703 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

705 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


708 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

711 #ifde‡
__USE_XOPEN2K


713 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

720 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

722 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


725 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

728 #ifde‡
__USE_XOPEN2K


730 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

733 #ifde‡
__USE_GNU


736 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

737 
__THROW
;

741 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

742 
__THROW
;

746 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

747 
__THROW
 
__wur
;

751 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

752 
__THROW
 
__wur
;

759 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

761 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

762 || 
deföed
 
__USE_MISC


767 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

773 *
	$ây«me
 (
__fd
Ë
__THROW
;

777 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

778 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

782 
	$ißây
 (
__fd
Ë
__THROW
;

784 #ifde‡
__USE_MISC


787 
	$ây¶Ÿ
 (Ë
__THROW
;

792 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

793 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

795 #ifde‡
__USE_ATFILE


798 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

799 c⁄° *
__to
, 
__Êags
)

800 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

803 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


805 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

811 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

812 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


818 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

822 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

823 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

824 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

828 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

830 #ifde‡
__USE_ATFILE


832 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

833 
__THROW
 
	`__n⁄nuŒ
 ((2));

837 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

844 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

851 *
	`gëlogö
 ();

852 #ifde‡
__USE_POSIX199506


859 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

862 #ifdef 
__USE_MISC


864 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

868 #ifdef 
__USE_POSIX2


872 
	~<bôs/gë›t_posix.h
>

876 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


880 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 #i‡
deföed
 
__USE_MISC


887 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

888 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

892 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

898 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

900 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

907 
	$vh™gup
 (Ë
__THROW
;

910 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

919 
size_t
 
__off£t
, 
__sˇÀ
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

930 *
	$gëu£rshñl
 (Ë
__THROW
;

931 
	$ídu£rshñl
 (Ë
__THROW
;

932 
	$£tu£rshñl
 (Ë
__THROW
;

938 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

942 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

945 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

949 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

957 
	`fsync
 (
__fd
);

960 #ifde‡
__USE_GNU


963 
	$syncfs
 (
__fd
Ë
__THROW
;

967 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


970 
	`gëho°id
 ();

973 
	$sync
 (Ë
__THROW
;

976 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


979 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

984 
	$gëdèbÀsize
 (Ë
__THROW
;

990 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


993 #i‚de‡
__USE_FILE_OFFSET64


994 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

995 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

997 #ifde‡
__REDIRECT_NTH


998 
	`__REDIRECT_NTH
 (
åunˇã
,

999 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1000 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1002 
	#åunˇã
 
åunˇã64


	)

1005 #ifde‡
__USE_LARGEFILE64


1006 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1007 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1012 #i‡
deföed
 
__USE_POSIX199309
 \

1013 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1016 #i‚de‡
__USE_FILE_OFFSET64


1017 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1019 #ifde‡
__REDIRECT_NTH


1020 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1021 
·runˇã64
Ë
__wur
;

1023 
	#·runˇã
 
·runˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1033 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1034 || 
deföed
 
__USE_MISC


1038 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1044 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1048 #ifde‡
__USE_MISC


1059 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1064 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1076 
	#F_ULOCK
 0

	)

1077 
	#F_LOCK
 1

	)

1078 
	#F_TLOCK
 2

	)

1079 
	#F_TEST
 3

	)

1081 #i‚de‡
__USE_FILE_OFFSET64


1082 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1084 #ifde‡
__REDIRECT


1085 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1086 
lockf64
Ë
__wur
;

1088 
	#lockf
 
lockf64


	)

1091 #ifde‡
__USE_LARGEFILE64


1092 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1097 #ifde‡
__USE_GNU


1102 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1103 (
__exãnsi⁄__
 \

1104 ({ 
__ªsu…
; \

1105 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1106 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1107 
__ªsu…
; 
	}
}))

	)

1110 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1111 
__outfd
, 
__off64_t
 *
__poutoff
,

1112 
size_t
 
__Àngth
, 
__Êags
);

1115 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1118 
fd©async
 (
__fûdes
);

1124 #ifdef 
__USE_XOPEN


1126 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1131 
	$í¸y±
 (*
__glibc_block
, 
__edÊag
)

1132 
__THROW
 
	`__n⁄nuŒ
 ((1));

1139 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1140 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1149 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1152 *
	`cu£rid
 (*
__s
);

1158 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1159 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1160 (*
__∑ª¡
) (),

1161 (*
__chûd
Ë()Ë
__THROW
;

1164 #ifde‡
__USE_MISC


1167 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur
;

1171 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1172 
	~<bôs/uni°d.h
>

1175 
__END_DECLS


	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H
 1

	)

4 
	#__NR_ª°¨t_sysˇŒ
 0

	)

5 
	#__NR_exô
 1

	)

6 
	#__NR_f‹k
 2

	)

7 
	#__NR_ªad
 3

	)

8 
	#__NR_wrôe
 4

	)

9 
	#__NR_›í
 5

	)

10 
	#__NR_˛o£
 6

	)

11 
	#__NR_waôpid
 7

	)

12 
	#__NR_¸ót
 8

	)

13 
	#__NR_lök
 9

	)

14 
	#__NR_u∆ök
 10

	)

15 
	#__NR_execve
 11

	)

16 
	#__NR_chdú
 12

	)

17 
	#__NR_time
 13

	)

18 
	#__NR_mknod
 14

	)

19 
	#__NR_chmod
 15

	)

20 
	#__NR_lchown
 16

	)

21 
	#__NR_bªak
 17

	)

22 
	#__NR_ﬁd°©
 18

	)

23 
	#__NR_l£ek
 19

	)

24 
	#__NR_gëpid
 20

	)

25 
	#__NR_mou¡
 21

	)

26 
	#__NR_umou¡
 22

	)

27 
	#__NR_£tuid
 23

	)

28 
	#__NR_gëuid
 24

	)

29 
	#__NR_°ime
 25

	)

30 
	#__NR_±ø˚
 26

	)

31 
	#__NR_Æ¨m
 27

	)

32 
	#__NR_ﬁdf°©
 28

	)

33 
	#__NR_∑u£
 29

	)

34 
	#__NR_utime
 30

	)

35 
	#__NR_°ty
 31

	)

36 
	#__NR_gây
 32

	)

37 
	#__NR_ac˚ss
 33

	)

38 
	#__NR_ni˚
 34

	)

39 
	#__NR_·ime
 35

	)

40 
	#__NR_sync
 36

	)

41 
	#__NR_kûl
 37

	)

42 
	#__NR_ª«me
 38

	)

43 
	#__NR_mkdú
 39

	)

44 
	#__NR_rmdú
 40

	)

45 
	#__NR_dup
 41

	)

46 
	#__NR_pùe
 42

	)

47 
	#__NR_times
 43

	)

48 
	#__NR_¥of
 44

	)

49 
	#__NR_brk
 45

	)

50 
	#__NR_£tgid
 46

	)

51 
	#__NR_gëgid
 47

	)

52 
	#__NR_sig«l
 48

	)

53 
	#__NR_gëeuid
 49

	)

54 
	#__NR_gëegid
 50

	)

55 
	#__NR_ac˘
 51

	)

56 
	#__NR_umou¡2
 52

	)

57 
	#__NR_lock
 53

	)

58 
	#__NR_io˘l
 54

	)

59 
	#__NR_f˙é
 55

	)

60 
	#__NR_mpx
 56

	)

61 
	#__NR_£çgid
 57

	)

62 
	#__NR_ulimô
 58

	)

63 
	#__NR_ﬁdﬁdu«me
 59

	)

64 
	#__NR_umask
 60

	)

65 
	#__NR_chroŸ
 61

	)

66 
	#__NR_u°©
 62

	)

67 
	#__NR_dup2
 63

	)

68 
	#__NR_gëµid
 64

	)

69 
	#__NR_gëpgΩ
 65

	)

70 
	#__NR_£tsid
 66

	)

71 
	#__NR_siga˘i⁄
 67

	)

72 
	#__NR_sgëmask
 68

	)

73 
	#__NR_s£tmask
 69

	)

74 
	#__NR_£åeuid
 70

	)

75 
	#__NR_£åegid
 71

	)

76 
	#__NR_sigsu•íd
 72

	)

77 
	#__NR_sig≥ndög
 73

	)

78 
	#__NR_£tho°«me
 74

	)

79 
	#__NR_£ålimô
 75

	)

80 
	#__NR_gëæimô
 76

	)

81 
	#__NR_gërußge
 77

	)

82 
	#__NR_gëtimeofday
 78

	)

83 
	#__NR_£âimeofday
 79

	)

84 
	#__NR_gëgroups
 80

	)

85 
	#__NR_£tgroups
 81

	)

86 
	#__NR_£À˘
 82

	)

87 
	#__NR_symlök
 83

	)

88 
	#__NR_ﬁdl°©
 84

	)

89 
	#__NR_ªadlök
 85

	)

90 
	#__NR_u£lib
 86

	)

91 
	#__NR_sw≠⁄
 87

	)

92 
	#__NR_ªboŸ
 88

	)

93 
	#__NR_ªaddú
 89

	)

94 
	#__NR_mm≠
 90

	)

95 
	#__NR_munm≠
 91

	)

96 
	#__NR_åunˇã
 92

	)

97 
	#__NR_·runˇã
 93

	)

98 
	#__NR_fchmod
 94

	)

99 
	#__NR_fchown
 95

	)

100 
	#__NR_gë¥i‹ôy
 96

	)

101 
	#__NR_£çri‹ôy
 97

	)

102 
	#__NR_¥ofû
 98

	)

103 
	#__NR_°©fs
 99

	)

104 
	#__NR_f°©fs
 100

	)

105 
	#__NR_i›îm
 101

	)

106 
	#__NR_sockëˇŒ
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_£tôimî
 104

	)

109 
	#__NR_gëôimî
 105

	)

110 
	#__NR_°©
 106

	)

111 
	#__NR_l°©
 107

	)

112 
	#__NR_f°©
 108

	)

113 
	#__NR_ﬁdu«me
 109

	)

114 
	#__NR_i›l
 110

	)

115 
	#__NR_vh™gup
 111

	)

116 
	#__NR_idÀ
 112

	)

117 
	#__NR_vm86ﬁd
 113

	)

118 
	#__NR_waô4
 114

	)

119 
	#__NR_sw≠off
 115

	)

120 
	#__NR_sysöfo
 116

	)

121 
	#__NR_ùc
 117

	)

122 
	#__NR_fsync
 118

	)

123 
	#__NR_sigªtu∫
 119

	)

124 
	#__NR_˛⁄e
 120

	)

125 
	#__NR_£tdomaö«me
 121

	)

126 
	#__NR_u«me
 122

	)

127 
	#__NR_modify_ldt
 123

	)

128 
	#__NR_adjtimex
 124

	)

129 
	#__NR_m¥Ÿe˘
 125

	)

130 
	#__NR_sig¥ocmask
 126

	)

131 
	#__NR_¸óã_moduÀ
 127

	)

132 
	#__NR_öô_moduÀ
 128

	)

133 
	#__NR_dñëe_moduÀ
 129

	)

134 
	#__NR_gë_kî√l_syms
 130

	)

135 
	#__NR_quŸa˘l
 131

	)

136 
	#__NR_gëpgid
 132

	)

137 
	#__NR_fchdú
 133

	)

138 
	#__NR_bdÊush
 134

	)

139 
	#__NR_sysfs
 135

	)

140 
	#__NR_≥rs⁄Æôy
 136

	)

141 
	#__NR_afs_sysˇŒ
 137

	)

142 
	#__NR_£tfsuid
 138

	)

143 
	#__NR_£tfsgid
 139

	)

144 
	#__NR__Œ£ek
 140

	)

145 
	#__NR_gëdíts
 141

	)

146 
	#__NR__√w£À˘
 142

	)

147 
	#__NR_Êock
 143

	)

148 
	#__NR_msync
 144

	)

149 
	#__NR_ªadv
 145

	)

150 
	#__NR_wrôev
 146

	)

151 
	#__NR_gësid
 147

	)

152 
	#__NR_fd©async
 148

	)

153 
	#__NR__sys˘l
 149

	)

154 
	#__NR_mlock
 150

	)

155 
	#__NR_mu∆ock
 151

	)

156 
	#__NR_mlockÆl
 152

	)

157 
	#__NR_mu∆ockÆl
 153

	)

158 
	#__NR_sched_£ç¨am
 154

	)

159 
	#__NR_sched_gë∑øm
 155

	)

160 
	#__NR_sched_£tscheduÀr
 156

	)

161 
	#__NR_sched_gëscheduÀr
 157

	)

162 
	#__NR_sched_yõld
 158

	)

163 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

164 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

165 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

166 
	#__NR_«no¶ìp
 162

	)

167 
	#__NR_mªm≠
 163

	)

168 
	#__NR_£åesuid
 164

	)

169 
	#__NR_gëªsuid
 165

	)

170 
	#__NR_vm86
 166

	)

171 
	#__NR_quîy_moduÀ
 167

	)

172 
	#__NR_pﬁl
 168

	)

173 
	#__NR_nfs£rv˘l
 169

	)

174 
	#__NR_£åesgid
 170

	)

175 
	#__NR_gëªsgid
 171

	)

176 
	#__NR_¥˘l
 172

	)

177 
	#__NR_π_sigªtu∫
 173

	)

178 
	#__NR_π_siga˘i⁄
 174

	)

179 
	#__NR_π_sig¥ocmask
 175

	)

180 
	#__NR_π_sig≥ndög
 176

	)

181 
	#__NR_π_sigtimedwaô
 177

	)

182 
	#__NR_π_sigqueueöfo
 178

	)

183 
	#__NR_π_sigsu•íd
 179

	)

184 
	#__NR_¥ód64
 180

	)

185 
	#__NR_pwrôe64
 181

	)

186 
	#__NR_chown
 182

	)

187 
	#__NR_gëcwd
 183

	)

188 
	#__NR_ˇpgë
 184

	)

189 
	#__NR_ˇp£t
 185

	)

190 
	#__NR_sigÆt°ack
 186

	)

191 
	#__NR_£ndfûe
 187

	)

192 
	#__NR_gëpmsg
 188

	)

193 
	#__NR_puçmsg
 189

	)

194 
	#__NR_vf‹k
 190

	)

195 
	#__NR_ugëæimô
 191

	)

196 
	#__NR_mm≠2
 192

	)

197 
	#__NR_åunˇã64
 193

	)

198 
	#__NR_·runˇã64
 194

	)

199 
	#__NR_°©64
 195

	)

200 
	#__NR_l°©64
 196

	)

201 
	#__NR_f°©64
 197

	)

202 
	#__NR_lchown32
 198

	)

203 
	#__NR_gëuid32
 199

	)

204 
	#__NR_gëgid32
 200

	)

205 
	#__NR_gëeuid32
 201

	)

206 
	#__NR_gëegid32
 202

	)

207 
	#__NR_£åeuid32
 203

	)

208 
	#__NR_£åegid32
 204

	)

209 
	#__NR_gëgroups32
 205

	)

210 
	#__NR_£tgroups32
 206

	)

211 
	#__NR_fchown32
 207

	)

212 
	#__NR_£åesuid32
 208

	)

213 
	#__NR_gëªsuid32
 209

	)

214 
	#__NR_£åesgid32
 210

	)

215 
	#__NR_gëªsgid32
 211

	)

216 
	#__NR_chown32
 212

	)

217 
	#__NR_£tuid32
 213

	)

218 
	#__NR_£tgid32
 214

	)

219 
	#__NR_£tfsuid32
 215

	)

220 
	#__NR_£tfsgid32
 216

	)

221 
	#__NR_pivŸ_roŸ
 217

	)

222 
	#__NR_möc‹e
 218

	)

223 
	#__NR_madvi£
 219

	)

224 
	#__NR_gëdíts64
 220

	)

225 
	#__NR_f˙é64
 221

	)

226 
	#__NR_gëtid
 224

	)

227 
	#__NR_ªadahód
 225

	)

228 
	#__NR_£tx©å
 226

	)

229 
	#__NR_l£tx©å
 227

	)

230 
	#__NR_f£tx©å
 228

	)

231 
	#__NR_gëx©å
 229

	)

232 
	#__NR_lgëx©å
 230

	)

233 
	#__NR_fgëx©å
 231

	)

234 
	#__NR_li°x©å
 232

	)

235 
	#__NR_Œi°x©å
 233

	)

236 
	#__NR_Êi°x©å
 234

	)

237 
	#__NR_ªmovex©å
 235

	)

238 
	#__NR_Ãemovex©å
 236

	)

239 
	#__NR_‰emovex©å
 237

	)

240 
	#__NR_tkûl
 238

	)

241 
	#__NR_£ndfûe64
 239

	)

242 
	#__NR_fuãx
 240

	)

243 
	#__NR_sched_£èfföôy
 241

	)

244 
	#__NR_sched_gëafföôy
 242

	)

245 
	#__NR_£t_thªad_¨ó
 243

	)

246 
	#__NR_gë_thªad_¨ó
 244

	)

247 
	#__NR_io_£tup
 245

	)

248 
	#__NR_io_de°roy
 246

	)

249 
	#__NR_io_gëevíts
 247

	)

250 
	#__NR_io_submô
 248

	)

251 
	#__NR_io_ˇn˚l
 249

	)

252 
	#__NR_Ádvi£64
 250

	)

253 
	#__NR_exô_group
 252

	)

254 
	#__NR_lookup_dcookõ
 253

	)

255 
	#__NR_ïﬁl_¸óã
 254

	)

256 
	#__NR_ïﬁl_˘l
 255

	)

257 
	#__NR_ïﬁl_waô
 256

	)

258 
	#__NR_ªm≠_fûe_∑ges
 257

	)

259 
	#__NR_£t_tid_addªss
 258

	)

260 
	#__NR_timî_¸óã
 259

	)

261 
	#__NR_timî_£âime
 260

	)

262 
	#__NR_timî_gëtime
 261

	)

263 
	#__NR_timî_gëovîrun
 262

	)

264 
	#__NR_timî_dñëe
 263

	)

265 
	#__NR_˛ock_£âime
 264

	)

266 
	#__NR_˛ock_gëtime
 265

	)

267 
	#__NR_˛ock_gëªs
 266

	)

268 
	#__NR_˛ock_«no¶ìp
 267

	)

269 
	#__NR_°©fs64
 268

	)

270 
	#__NR_f°©fs64
 269

	)

271 
	#__NR_tgkûl
 270

	)

272 
	#__NR_utimes
 271

	)

273 
	#__NR_Ádvi£64_64
 272

	)

274 
	#__NR_v£rvî
 273

	)

275 
	#__NR_mböd
 274

	)

276 
	#__NR_gë_mempﬁicy
 275

	)

277 
	#__NR_£t_mempﬁicy
 276

	)

278 
	#__NR_mq_›í
 277

	)

279 
	#__NR_mq_u∆ök
 278

	)

280 
	#__NR_mq_timed£nd
 279

	)

281 
	#__NR_mq_timedª˚ive
 280

	)

282 
	#__NR_mq_nŸify
 281

	)

283 
	#__NR_mq_gë£èâr
 282

	)

284 
	#__NR_kexec_lﬂd
 283

	)

285 
	#__NR_waôid
 284

	)

286 
	#__NR_add_key
 286

	)

287 
	#__NR_ªque°_key
 287

	)

288 
	#__NR_key˘l
 288

	)

289 
	#__NR_i›rio_£t
 289

	)

290 
	#__NR_i›rio_gë
 290

	)

291 
	#__NR_öŸify_öô
 291

	)

292 
	#__NR_öŸify_add_w©ch
 292

	)

293 
	#__NR_öŸify_rm_w©ch
 293

	)

294 
	#__NR_migøã_∑ges
 294

	)

295 
	#__NR_›í©
 295

	)

296 
	#__NR_mkdú©
 296

	)

297 
	#__NR_mknod©
 297

	)

298 
	#__NR_fchow«t
 298

	)

299 
	#__NR_futimeßt
 299

	)

300 
	#__NR_f°©©64
 300

	)

301 
	#__NR_u∆ök©
 301

	)

302 
	#__NR_ª«mót
 302

	)

303 
	#__NR_lök©
 303

	)

304 
	#__NR_symlök©
 304

	)

305 
	#__NR_ªadlök©
 305

	)

306 
	#__NR_fchmod©
 306

	)

307 
	#__NR_Ác˚sßt
 307

	)

308 
	#__NR_p£À˘6
 308

	)

309 
	#__NR_µﬁl
 309

	)

310 
	#__NR_unsh¨e
 310

	)

311 
	#__NR_£t_robu°_li°
 311

	)

312 
	#__NR_gë_robu°_li°
 312

	)

313 
	#__NR_•li˚
 313

	)

314 
	#__NR_sync_fûe_ønge
 314

	)

315 
	#__NR_ãe
 315

	)

316 
	#__NR_vm•li˚
 316

	)

317 
	#__NR_move_∑ges
 317

	)

318 
	#__NR_gë˝u
 318

	)

319 
	#__NR_ïﬁl_pwaô
 319

	)

320 
	#__NR_utimíßt
 320

	)

321 
	#__NR_sig«lfd
 321

	)

322 
	#__NR_timîfd_¸óã
 322

	)

323 
	#__NR_evítfd
 323

	)

324 
	#__NR_ÁŒoˇã
 324

	)

325 
	#__NR_timîfd_£âime
 325

	)

326 
	#__NR_timîfd_gëtime
 326

	)

327 
	#__NR_sig«lfd4
 327

	)

328 
	#__NR_evítfd2
 328

	)

329 
	#__NR_ïﬁl_¸óã1
 329

	)

330 
	#__NR_dup3
 330

	)

331 
	#__NR_pùe2
 331

	)

332 
	#__NR_öŸify_öô1
 332

	)

333 
	#__NR_¥ódv
 333

	)

334 
	#__NR_pwrôev
 334

	)

335 
	#__NR_π_tgsigqueueöfo
 335

	)

336 
	#__NR_≥rf_evít_›í
 336

	)

337 
	#__NR_ªcvmmsg
 337

	)

338 
	#__NR_ÁnŸify_öô
 338

	)

339 
	#__NR_ÁnŸify_m¨k
 339

	)

340 
	#__NR_¥limô64
 340

	)

341 
	#__NR_«me_to_h™dÀ_©
 341

	)

342 
	#__NR_›í_by_h™dÀ_©
 342

	)

343 
	#__NR_˛ock_adjtime
 343

	)

344 
	#__NR_syncfs
 344

	)

345 
	#__NR_£ndmmsg
 345

	)

346 
	#__NR_£äs
 346

	)

347 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

348 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

349 
	#__NR_kcmp
 349

	)

350 
	#__NR_föô_moduÀ
 350

	)

351 
	#__NR_sched_£èâr
 351

	)

352 
	#__NR_sched_gë©å
 352

	)

353 
	#__NR_ª«mót2
 353

	)

354 
	#__NR_£ccomp
 354

	)

355 
	#__NR_gëøndom
 355

	)

356 
	#__NR_memfd_¸óã
 356

	)

357 
	#__NR_bpf
 357

	)

358 
	#__NR_execvót
 358

	)

359 
	#__NR_sockë
 359

	)

360 
	#__NR_sockë∑ú
 360

	)

361 
	#__NR_böd
 361

	)

362 
	#__NR_c⁄√˘
 362

	)

363 
	#__NR_li°í
 363

	)

364 
	#__NR_ac˚±4
 364

	)

365 
	#__NR_gësock›t
 365

	)

366 
	#__NR_£tsock›t
 366

	)

367 
	#__NR_gësock«me
 367

	)

368 
	#__NR_gë≥î«me
 368

	)

369 
	#__NR_£ndto
 369

	)

370 
	#__NR_£ndmsg
 370

	)

371 
	#__NR_ªcv‰om
 371

	)

372 
	#__NR_ªcvmsg
 372

	)

373 
	#__NR_shutdown
 373

	)

374 
	#__NR_u£rÁu…fd
 374

	)

375 
	#__NR_memb¨rõr
 375

	)

376 
	#__NR_mlock2
 376

	)

377 
	#__NR_c›y_fûe_ønge
 377

	)

378 
	#__NR_¥ódv2
 378

	)

379 
	#__NR_pwrôev2
 379

	)

380 
	#__NR_pkey_m¥Ÿe˘
 380

	)

381 
	#__NR_pkey_Æloc
 381

	)

382 
	#__NR_pkey_‰ì
 382

	)

383 
	#__NR_°©x
 383

	)

384 
	#__NR_¨ch_¥˘l
 384

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H
 1

	)

4 
	#__NR_ªad
 0

	)

5 
	#__NR_wrôe
 1

	)

6 
	#__NR_›í
 2

	)

7 
	#__NR_˛o£
 3

	)

8 
	#__NR_°©
 4

	)

9 
	#__NR_f°©
 5

	)

10 
	#__NR_l°©
 6

	)

11 
	#__NR_pﬁl
 7

	)

12 
	#__NR_l£ek
 8

	)

13 
	#__NR_mm≠
 9

	)

14 
	#__NR_m¥Ÿe˘
 10

	)

15 
	#__NR_munm≠
 11

	)

16 
	#__NR_brk
 12

	)

17 
	#__NR_π_siga˘i⁄
 13

	)

18 
	#__NR_π_sig¥ocmask
 14

	)

19 
	#__NR_π_sigªtu∫
 15

	)

20 
	#__NR_io˘l
 16

	)

21 
	#__NR_¥ód64
 17

	)

22 
	#__NR_pwrôe64
 18

	)

23 
	#__NR_ªadv
 19

	)

24 
	#__NR_wrôev
 20

	)

25 
	#__NR_ac˚ss
 21

	)

26 
	#__NR_pùe
 22

	)

27 
	#__NR_£À˘
 23

	)

28 
	#__NR_sched_yõld
 24

	)

29 
	#__NR_mªm≠
 25

	)

30 
	#__NR_msync
 26

	)

31 
	#__NR_möc‹e
 27

	)

32 
	#__NR_madvi£
 28

	)

33 
	#__NR_shmgë
 29

	)

34 
	#__NR_shm©
 30

	)

35 
	#__NR_shm˘l
 31

	)

36 
	#__NR_dup
 32

	)

37 
	#__NR_dup2
 33

	)

38 
	#__NR_∑u£
 34

	)

39 
	#__NR_«no¶ìp
 35

	)

40 
	#__NR_gëôimî
 36

	)

41 
	#__NR_Æ¨m
 37

	)

42 
	#__NR_£tôimî
 38

	)

43 
	#__NR_gëpid
 39

	)

44 
	#__NR_£ndfûe
 40

	)

45 
	#__NR_sockë
 41

	)

46 
	#__NR_c⁄√˘
 42

	)

47 
	#__NR_ac˚±
 43

	)

48 
	#__NR_£ndto
 44

	)

49 
	#__NR_ªcv‰om
 45

	)

50 
	#__NR_£ndmsg
 46

	)

51 
	#__NR_ªcvmsg
 47

	)

52 
	#__NR_shutdown
 48

	)

53 
	#__NR_böd
 49

	)

54 
	#__NR_li°í
 50

	)

55 
	#__NR_gësock«me
 51

	)

56 
	#__NR_gë≥î«me
 52

	)

57 
	#__NR_sockë∑ú
 53

	)

58 
	#__NR_£tsock›t
 54

	)

59 
	#__NR_gësock›t
 55

	)

60 
	#__NR_˛⁄e
 56

	)

61 
	#__NR_f‹k
 57

	)

62 
	#__NR_vf‹k
 58

	)

63 
	#__NR_execve
 59

	)

64 
	#__NR_exô
 60

	)

65 
	#__NR_waô4
 61

	)

66 
	#__NR_kûl
 62

	)

67 
	#__NR_u«me
 63

	)

68 
	#__NR_£mgë
 64

	)

69 
	#__NR_£m›
 65

	)

70 
	#__NR_£m˘l
 66

	)

71 
	#__NR_shmdt
 67

	)

72 
	#__NR_msggë
 68

	)

73 
	#__NR_msg¢d
 69

	)

74 
	#__NR_msgrcv
 70

	)

75 
	#__NR_msg˘l
 71

	)

76 
	#__NR_f˙é
 72

	)

77 
	#__NR_Êock
 73

	)

78 
	#__NR_fsync
 74

	)

79 
	#__NR_fd©async
 75

	)

80 
	#__NR_åunˇã
 76

	)

81 
	#__NR_·runˇã
 77

	)

82 
	#__NR_gëdíts
 78

	)

83 
	#__NR_gëcwd
 79

	)

84 
	#__NR_chdú
 80

	)

85 
	#__NR_fchdú
 81

	)

86 
	#__NR_ª«me
 82

	)

87 
	#__NR_mkdú
 83

	)

88 
	#__NR_rmdú
 84

	)

89 
	#__NR_¸ót
 85

	)

90 
	#__NR_lök
 86

	)

91 
	#__NR_u∆ök
 87

	)

92 
	#__NR_symlök
 88

	)

93 
	#__NR_ªadlök
 89

	)

94 
	#__NR_chmod
 90

	)

95 
	#__NR_fchmod
 91

	)

96 
	#__NR_chown
 92

	)

97 
	#__NR_fchown
 93

	)

98 
	#__NR_lchown
 94

	)

99 
	#__NR_umask
 95

	)

100 
	#__NR_gëtimeofday
 96

	)

101 
	#__NR_gëæimô
 97

	)

102 
	#__NR_gërußge
 98

	)

103 
	#__NR_sysöfo
 99

	)

104 
	#__NR_times
 100

	)

105 
	#__NR_±ø˚
 101

	)

106 
	#__NR_gëuid
 102

	)

107 
	#__NR_sy¶og
 103

	)

108 
	#__NR_gëgid
 104

	)

109 
	#__NR_£tuid
 105

	)

110 
	#__NR_£tgid
 106

	)

111 
	#__NR_gëeuid
 107

	)

112 
	#__NR_gëegid
 108

	)

113 
	#__NR_£çgid
 109

	)

114 
	#__NR_gëµid
 110

	)

115 
	#__NR_gëpgΩ
 111

	)

116 
	#__NR_£tsid
 112

	)

117 
	#__NR_£åeuid
 113

	)

118 
	#__NR_£åegid
 114

	)

119 
	#__NR_gëgroups
 115

	)

120 
	#__NR_£tgroups
 116

	)

121 
	#__NR_£åesuid
 117

	)

122 
	#__NR_gëªsuid
 118

	)

123 
	#__NR_£åesgid
 119

	)

124 
	#__NR_gëªsgid
 120

	)

125 
	#__NR_gëpgid
 121

	)

126 
	#__NR_£tfsuid
 122

	)

127 
	#__NR_£tfsgid
 123

	)

128 
	#__NR_gësid
 124

	)

129 
	#__NR_ˇpgë
 125

	)

130 
	#__NR_ˇp£t
 126

	)

131 
	#__NR_π_sig≥ndög
 127

	)

132 
	#__NR_π_sigtimedwaô
 128

	)

133 
	#__NR_π_sigqueueöfo
 129

	)

134 
	#__NR_π_sigsu•íd
 130

	)

135 
	#__NR_sigÆt°ack
 131

	)

136 
	#__NR_utime
 132

	)

137 
	#__NR_mknod
 133

	)

138 
	#__NR_u£lib
 134

	)

139 
	#__NR_≥rs⁄Æôy
 135

	)

140 
	#__NR_u°©
 136

	)

141 
	#__NR_°©fs
 137

	)

142 
	#__NR_f°©fs
 138

	)

143 
	#__NR_sysfs
 139

	)

144 
	#__NR_gë¥i‹ôy
 140

	)

145 
	#__NR_£çri‹ôy
 141

	)

146 
	#__NR_sched_£ç¨am
 142

	)

147 
	#__NR_sched_gë∑øm
 143

	)

148 
	#__NR_sched_£tscheduÀr
 144

	)

149 
	#__NR_sched_gëscheduÀr
 145

	)

150 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

151 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

152 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

153 
	#__NR_mlock
 149

	)

154 
	#__NR_mu∆ock
 150

	)

155 
	#__NR_mlockÆl
 151

	)

156 
	#__NR_mu∆ockÆl
 152

	)

157 
	#__NR_vh™gup
 153

	)

158 
	#__NR_modify_ldt
 154

	)

159 
	#__NR_pivŸ_roŸ
 155

	)

160 
	#__NR__sys˘l
 156

	)

161 
	#__NR_¥˘l
 157

	)

162 
	#__NR_¨ch_¥˘l
 158

	)

163 
	#__NR_adjtimex
 159

	)

164 
	#__NR_£ålimô
 160

	)

165 
	#__NR_chroŸ
 161

	)

166 
	#__NR_sync
 162

	)

167 
	#__NR_ac˘
 163

	)

168 
	#__NR_£âimeofday
 164

	)

169 
	#__NR_mou¡
 165

	)

170 
	#__NR_umou¡2
 166

	)

171 
	#__NR_sw≠⁄
 167

	)

172 
	#__NR_sw≠off
 168

	)

173 
	#__NR_ªboŸ
 169

	)

174 
	#__NR_£tho°«me
 170

	)

175 
	#__NR_£tdomaö«me
 171

	)

176 
	#__NR_i›l
 172

	)

177 
	#__NR_i›îm
 173

	)

178 
	#__NR_¸óã_moduÀ
 174

	)

179 
	#__NR_öô_moduÀ
 175

	)

180 
	#__NR_dñëe_moduÀ
 176

	)

181 
	#__NR_gë_kî√l_syms
 177

	)

182 
	#__NR_quîy_moduÀ
 178

	)

183 
	#__NR_quŸa˘l
 179

	)

184 
	#__NR_nfs£rv˘l
 180

	)

185 
	#__NR_gëpmsg
 181

	)

186 
	#__NR_puçmsg
 182

	)

187 
	#__NR_afs_sysˇŒ
 183

	)

188 
	#__NR_tuxˇŒ
 184

	)

189 
	#__NR_£curôy
 185

	)

190 
	#__NR_gëtid
 186

	)

191 
	#__NR_ªadahód
 187

	)

192 
	#__NR_£tx©å
 188

	)

193 
	#__NR_l£tx©å
 189

	)

194 
	#__NR_f£tx©å
 190

	)

195 
	#__NR_gëx©å
 191

	)

196 
	#__NR_lgëx©å
 192

	)

197 
	#__NR_fgëx©å
 193

	)

198 
	#__NR_li°x©å
 194

	)

199 
	#__NR_Œi°x©å
 195

	)

200 
	#__NR_Êi°x©å
 196

	)

201 
	#__NR_ªmovex©å
 197

	)

202 
	#__NR_Ãemovex©å
 198

	)

203 
	#__NR_‰emovex©å
 199

	)

204 
	#__NR_tkûl
 200

	)

205 
	#__NR_time
 201

	)

206 
	#__NR_fuãx
 202

	)

207 
	#__NR_sched_£èfföôy
 203

	)

208 
	#__NR_sched_gëafföôy
 204

	)

209 
	#__NR_£t_thªad_¨ó
 205

	)

210 
	#__NR_io_£tup
 206

	)

211 
	#__NR_io_de°roy
 207

	)

212 
	#__NR_io_gëevíts
 208

	)

213 
	#__NR_io_submô
 209

	)

214 
	#__NR_io_ˇn˚l
 210

	)

215 
	#__NR_gë_thªad_¨ó
 211

	)

216 
	#__NR_lookup_dcookõ
 212

	)

217 
	#__NR_ïﬁl_¸óã
 213

	)

218 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

219 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

220 
	#__NR_ªm≠_fûe_∑ges
 216

	)

221 
	#__NR_gëdíts64
 217

	)

222 
	#__NR_£t_tid_addªss
 218

	)

223 
	#__NR_ª°¨t_sysˇŒ
 219

	)

224 
	#__NR_£mtimed›
 220

	)

225 
	#__NR_Ádvi£64
 221

	)

226 
	#__NR_timî_¸óã
 222

	)

227 
	#__NR_timî_£âime
 223

	)

228 
	#__NR_timî_gëtime
 224

	)

229 
	#__NR_timî_gëovîrun
 225

	)

230 
	#__NR_timî_dñëe
 226

	)

231 
	#__NR_˛ock_£âime
 227

	)

232 
	#__NR_˛ock_gëtime
 228

	)

233 
	#__NR_˛ock_gëªs
 229

	)

234 
	#__NR_˛ock_«no¶ìp
 230

	)

235 
	#__NR_exô_group
 231

	)

236 
	#__NR_ïﬁl_waô
 232

	)

237 
	#__NR_ïﬁl_˘l
 233

	)

238 
	#__NR_tgkûl
 234

	)

239 
	#__NR_utimes
 235

	)

240 
	#__NR_v£rvî
 236

	)

241 
	#__NR_mböd
 237

	)

242 
	#__NR_£t_mempﬁicy
 238

	)

243 
	#__NR_gë_mempﬁicy
 239

	)

244 
	#__NR_mq_›í
 240

	)

245 
	#__NR_mq_u∆ök
 241

	)

246 
	#__NR_mq_timed£nd
 242

	)

247 
	#__NR_mq_timedª˚ive
 243

	)

248 
	#__NR_mq_nŸify
 244

	)

249 
	#__NR_mq_gë£èâr
 245

	)

250 
	#__NR_kexec_lﬂd
 246

	)

251 
	#__NR_waôid
 247

	)

252 
	#__NR_add_key
 248

	)

253 
	#__NR_ªque°_key
 249

	)

254 
	#__NR_key˘l
 250

	)

255 
	#__NR_i›rio_£t
 251

	)

256 
	#__NR_i›rio_gë
 252

	)

257 
	#__NR_öŸify_öô
 253

	)

258 
	#__NR_öŸify_add_w©ch
 254

	)

259 
	#__NR_öŸify_rm_w©ch
 255

	)

260 
	#__NR_migøã_∑ges
 256

	)

261 
	#__NR_›í©
 257

	)

262 
	#__NR_mkdú©
 258

	)

263 
	#__NR_mknod©
 259

	)

264 
	#__NR_fchow«t
 260

	)

265 
	#__NR_futimeßt
 261

	)

266 
	#__NR_√wf°©©
 262

	)

267 
	#__NR_u∆ök©
 263

	)

268 
	#__NR_ª«mót
 264

	)

269 
	#__NR_lök©
 265

	)

270 
	#__NR_symlök©
 266

	)

271 
	#__NR_ªadlök©
 267

	)

272 
	#__NR_fchmod©
 268

	)

273 
	#__NR_Ác˚sßt
 269

	)

274 
	#__NR_p£À˘6
 270

	)

275 
	#__NR_µﬁl
 271

	)

276 
	#__NR_unsh¨e
 272

	)

277 
	#__NR_£t_robu°_li°
 273

	)

278 
	#__NR_gë_robu°_li°
 274

	)

279 
	#__NR_•li˚
 275

	)

280 
	#__NR_ãe
 276

	)

281 
	#__NR_sync_fûe_ønge
 277

	)

282 
	#__NR_vm•li˚
 278

	)

283 
	#__NR_move_∑ges
 279

	)

284 
	#__NR_utimíßt
 280

	)

285 
	#__NR_ïﬁl_pwaô
 281

	)

286 
	#__NR_sig«lfd
 282

	)

287 
	#__NR_timîfd_¸óã
 283

	)

288 
	#__NR_evítfd
 284

	)

289 
	#__NR_ÁŒoˇã
 285

	)

290 
	#__NR_timîfd_£âime
 286

	)

291 
	#__NR_timîfd_gëtime
 287

	)

292 
	#__NR_ac˚±4
 288

	)

293 
	#__NR_sig«lfd4
 289

	)

294 
	#__NR_evítfd2
 290

	)

295 
	#__NR_ïﬁl_¸óã1
 291

	)

296 
	#__NR_dup3
 292

	)

297 
	#__NR_pùe2
 293

	)

298 
	#__NR_öŸify_öô1
 294

	)

299 
	#__NR_¥ódv
 295

	)

300 
	#__NR_pwrôev
 296

	)

301 
	#__NR_π_tgsigqueueöfo
 297

	)

302 
	#__NR_≥rf_evít_›í
 298

	)

303 
	#__NR_ªcvmmsg
 299

	)

304 
	#__NR_ÁnŸify_öô
 300

	)

305 
	#__NR_ÁnŸify_m¨k
 301

	)

306 
	#__NR_¥limô64
 302

	)

307 
	#__NR_«me_to_h™dÀ_©
 303

	)

308 
	#__NR_›í_by_h™dÀ_©
 304

	)

309 
	#__NR_˛ock_adjtime
 305

	)

310 
	#__NR_syncfs
 306

	)

311 
	#__NR_£ndmmsg
 307

	)

312 
	#__NR_£äs
 308

	)

313 
	#__NR_gë˝u
 309

	)

314 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

315 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

316 
	#__NR_kcmp
 312

	)

317 
	#__NR_föô_moduÀ
 313

	)

318 
	#__NR_sched_£èâr
 314

	)

319 
	#__NR_sched_gë©å
 315

	)

320 
	#__NR_ª«mót2
 316

	)

321 
	#__NR_£ccomp
 317

	)

322 
	#__NR_gëøndom
 318

	)

323 
	#__NR_memfd_¸óã
 319

	)

324 
	#__NR_kexec_fûe_lﬂd
 320

	)

325 
	#__NR_bpf
 321

	)

326 
	#__NR_execvót
 322

	)

327 
	#__NR_u£rÁu…fd
 323

	)

328 
	#__NR_memb¨rõr
 324

	)

329 
	#__NR_mlock2
 325

	)

330 
	#__NR_c›y_fûe_ønge
 326

	)

331 
	#__NR_¥ódv2
 327

	)

332 
	#__NR_pwrôev2
 328

	)

333 
	#__NR_pkey_m¥Ÿe˘
 329

	)

334 
	#__NR_pkey_Æloc
 330

	)

335 
	#__NR_pkey_‰ì
 331

	)

336 
	#__NR_°©x
 332

	)

	@/usr/include/asm/unistd_x32.h

1 #i‚de‡
_ASM_X86_UNISTD_X32_H


2 
	#_ASM_X86_UNISTD_X32_H
 1

	)

4 
	#__NR_ªad
 (
__X32_SYSCALL_BIT
 + 0)

	)

5 
	#__NR_wrôe
 (
__X32_SYSCALL_BIT
 + 1)

	)

6 
	#__NR_›í
 (
__X32_SYSCALL_BIT
 + 2)

	)

7 
	#__NR_˛o£
 (
__X32_SYSCALL_BIT
 + 3)

	)

8 
	#__NR_°©
 (
__X32_SYSCALL_BIT
 + 4)

	)

9 
	#__NR_f°©
 (
__X32_SYSCALL_BIT
 + 5)

	)

10 
	#__NR_l°©
 (
__X32_SYSCALL_BIT
 + 6)

	)

11 
	#__NR_pﬁl
 (
__X32_SYSCALL_BIT
 + 7)

	)

12 
	#__NR_l£ek
 (
__X32_SYSCALL_BIT
 + 8)

	)

13 
	#__NR_mm≠
 (
__X32_SYSCALL_BIT
 + 9)

	)

14 
	#__NR_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 10)

	)

15 
	#__NR_munm≠
 (
__X32_SYSCALL_BIT
 + 11)

	)

16 
	#__NR_brk
 (
__X32_SYSCALL_BIT
 + 12)

	)

17 
	#__NR_π_sig¥ocmask
 (
__X32_SYSCALL_BIT
 + 14)

	)

18 
	#__NR_¥ód64
 (
__X32_SYSCALL_BIT
 + 17)

	)

19 
	#__NR_pwrôe64
 (
__X32_SYSCALL_BIT
 + 18)

	)

20 
	#__NR_ac˚ss
 (
__X32_SYSCALL_BIT
 + 21)

	)

21 
	#__NR_pùe
 (
__X32_SYSCALL_BIT
 + 22)

	)

22 
	#__NR_£À˘
 (
__X32_SYSCALL_BIT
 + 23)

	)

23 
	#__NR_sched_yõld
 (
__X32_SYSCALL_BIT
 + 24)

	)

24 
	#__NR_mªm≠
 (
__X32_SYSCALL_BIT
 + 25)

	)

25 
	#__NR_msync
 (
__X32_SYSCALL_BIT
 + 26)

	)

26 
	#__NR_möc‹e
 (
__X32_SYSCALL_BIT
 + 27)

	)

27 
	#__NR_madvi£
 (
__X32_SYSCALL_BIT
 + 28)

	)

28 
	#__NR_shmgë
 (
__X32_SYSCALL_BIT
 + 29)

	)

29 
	#__NR_shm©
 (
__X32_SYSCALL_BIT
 + 30)

	)

30 
	#__NR_shm˘l
 (
__X32_SYSCALL_BIT
 + 31)

	)

31 
	#__NR_dup
 (
__X32_SYSCALL_BIT
 + 32)

	)

32 
	#__NR_dup2
 (
__X32_SYSCALL_BIT
 + 33)

	)

33 
	#__NR_∑u£
 (
__X32_SYSCALL_BIT
 + 34)

	)

34 
	#__NR_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 35)

	)

35 
	#__NR_gëôimî
 (
__X32_SYSCALL_BIT
 + 36)

	)

36 
	#__NR_Æ¨m
 (
__X32_SYSCALL_BIT
 + 37)

	)

37 
	#__NR_£tôimî
 (
__X32_SYSCALL_BIT
 + 38)

	)

38 
	#__NR_gëpid
 (
__X32_SYSCALL_BIT
 + 39)

	)

39 
	#__NR_£ndfûe
 (
__X32_SYSCALL_BIT
 + 40)

	)

40 
	#__NR_sockë
 (
__X32_SYSCALL_BIT
 + 41)

	)

41 
	#__NR_c⁄√˘
 (
__X32_SYSCALL_BIT
 + 42)

	)

42 
	#__NR_ac˚±
 (
__X32_SYSCALL_BIT
 + 43)

	)

43 
	#__NR_£ndto
 (
__X32_SYSCALL_BIT
 + 44)

	)

44 
	#__NR_shutdown
 (
__X32_SYSCALL_BIT
 + 48)

	)

45 
	#__NR_böd
 (
__X32_SYSCALL_BIT
 + 49)

	)

46 
	#__NR_li°í
 (
__X32_SYSCALL_BIT
 + 50)

	)

47 
	#__NR_gësock«me
 (
__X32_SYSCALL_BIT
 + 51)

	)

48 
	#__NR_gë≥î«me
 (
__X32_SYSCALL_BIT
 + 52)

	)

49 
	#__NR_sockë∑ú
 (
__X32_SYSCALL_BIT
 + 53)

	)

50 
	#__NR_˛⁄e
 (
__X32_SYSCALL_BIT
 + 56)

	)

51 
	#__NR_f‹k
 (
__X32_SYSCALL_BIT
 + 57)

	)

52 
	#__NR_vf‹k
 (
__X32_SYSCALL_BIT
 + 58)

	)

53 
	#__NR_exô
 (
__X32_SYSCALL_BIT
 + 60)

	)

54 
	#__NR_waô4
 (
__X32_SYSCALL_BIT
 + 61)

	)

55 
	#__NR_kûl
 (
__X32_SYSCALL_BIT
 + 62)

	)

56 
	#__NR_u«me
 (
__X32_SYSCALL_BIT
 + 63)

	)

57 
	#__NR_£mgë
 (
__X32_SYSCALL_BIT
 + 64)

	)

58 
	#__NR_£m›
 (
__X32_SYSCALL_BIT
 + 65)

	)

59 
	#__NR_£m˘l
 (
__X32_SYSCALL_BIT
 + 66)

	)

60 
	#__NR_shmdt
 (
__X32_SYSCALL_BIT
 + 67)

	)

61 
	#__NR_msggë
 (
__X32_SYSCALL_BIT
 + 68)

	)

62 
	#__NR_msg¢d
 (
__X32_SYSCALL_BIT
 + 69)

	)

63 
	#__NR_msgrcv
 (
__X32_SYSCALL_BIT
 + 70)

	)

64 
	#__NR_msg˘l
 (
__X32_SYSCALL_BIT
 + 71)

	)

65 
	#__NR_f˙é
 (
__X32_SYSCALL_BIT
 + 72)

	)

66 
	#__NR_Êock
 (
__X32_SYSCALL_BIT
 + 73)

	)

67 
	#__NR_fsync
 (
__X32_SYSCALL_BIT
 + 74)

	)

68 
	#__NR_fd©async
 (
__X32_SYSCALL_BIT
 + 75)

	)

69 
	#__NR_åunˇã
 (
__X32_SYSCALL_BIT
 + 76)

	)

70 
	#__NR_·runˇã
 (
__X32_SYSCALL_BIT
 + 77)

	)

71 
	#__NR_gëdíts
 (
__X32_SYSCALL_BIT
 + 78)

	)

72 
	#__NR_gëcwd
 (
__X32_SYSCALL_BIT
 + 79)

	)

73 
	#__NR_chdú
 (
__X32_SYSCALL_BIT
 + 80)

	)

74 
	#__NR_fchdú
 (
__X32_SYSCALL_BIT
 + 81)

	)

75 
	#__NR_ª«me
 (
__X32_SYSCALL_BIT
 + 82)

	)

76 
	#__NR_mkdú
 (
__X32_SYSCALL_BIT
 + 83)

	)

77 
	#__NR_rmdú
 (
__X32_SYSCALL_BIT
 + 84)

	)

78 
	#__NR_¸ót
 (
__X32_SYSCALL_BIT
 + 85)

	)

79 
	#__NR_lök
 (
__X32_SYSCALL_BIT
 + 86)

	)

80 
	#__NR_u∆ök
 (
__X32_SYSCALL_BIT
 + 87)

	)

81 
	#__NR_symlök
 (
__X32_SYSCALL_BIT
 + 88)

	)

82 
	#__NR_ªadlök
 (
__X32_SYSCALL_BIT
 + 89)

	)

83 
	#__NR_chmod
 (
__X32_SYSCALL_BIT
 + 90)

	)

84 
	#__NR_fchmod
 (
__X32_SYSCALL_BIT
 + 91)

	)

85 
	#__NR_chown
 (
__X32_SYSCALL_BIT
 + 92)

	)

86 
	#__NR_fchown
 (
__X32_SYSCALL_BIT
 + 93)

	)

87 
	#__NR_lchown
 (
__X32_SYSCALL_BIT
 + 94)

	)

88 
	#__NR_umask
 (
__X32_SYSCALL_BIT
 + 95)

	)

89 
	#__NR_gëtimeofday
 (
__X32_SYSCALL_BIT
 + 96)

	)

90 
	#__NR_gëæimô
 (
__X32_SYSCALL_BIT
 + 97)

	)

91 
	#__NR_gërußge
 (
__X32_SYSCALL_BIT
 + 98)

	)

92 
	#__NR_sysöfo
 (
__X32_SYSCALL_BIT
 + 99)

	)

93 
	#__NR_times
 (
__X32_SYSCALL_BIT
 + 100)

	)

94 
	#__NR_gëuid
 (
__X32_SYSCALL_BIT
 + 102)

	)

95 
	#__NR_sy¶og
 (
__X32_SYSCALL_BIT
 + 103)

	)

96 
	#__NR_gëgid
 (
__X32_SYSCALL_BIT
 + 104)

	)

97 
	#__NR_£tuid
 (
__X32_SYSCALL_BIT
 + 105)

	)

98 
	#__NR_£tgid
 (
__X32_SYSCALL_BIT
 + 106)

	)

99 
	#__NR_gëeuid
 (
__X32_SYSCALL_BIT
 + 107)

	)

100 
	#__NR_gëegid
 (
__X32_SYSCALL_BIT
 + 108)

	)

101 
	#__NR_£çgid
 (
__X32_SYSCALL_BIT
 + 109)

	)

102 
	#__NR_gëµid
 (
__X32_SYSCALL_BIT
 + 110)

	)

103 
	#__NR_gëpgΩ
 (
__X32_SYSCALL_BIT
 + 111)

	)

104 
	#__NR_£tsid
 (
__X32_SYSCALL_BIT
 + 112)

	)

105 
	#__NR_£åeuid
 (
__X32_SYSCALL_BIT
 + 113)

	)

106 
	#__NR_£åegid
 (
__X32_SYSCALL_BIT
 + 114)

	)

107 
	#__NR_gëgroups
 (
__X32_SYSCALL_BIT
 + 115)

	)

108 
	#__NR_£tgroups
 (
__X32_SYSCALL_BIT
 + 116)

	)

109 
	#__NR_£åesuid
 (
__X32_SYSCALL_BIT
 + 117)

	)

110 
	#__NR_gëªsuid
 (
__X32_SYSCALL_BIT
 + 118)

	)

111 
	#__NR_£åesgid
 (
__X32_SYSCALL_BIT
 + 119)

	)

112 
	#__NR_gëªsgid
 (
__X32_SYSCALL_BIT
 + 120)

	)

113 
	#__NR_gëpgid
 (
__X32_SYSCALL_BIT
 + 121)

	)

114 
	#__NR_£tfsuid
 (
__X32_SYSCALL_BIT
 + 122)

	)

115 
	#__NR_£tfsgid
 (
__X32_SYSCALL_BIT
 + 123)

	)

116 
	#__NR_gësid
 (
__X32_SYSCALL_BIT
 + 124)

	)

117 
	#__NR_ˇpgë
 (
__X32_SYSCALL_BIT
 + 125)

	)

118 
	#__NR_ˇp£t
 (
__X32_SYSCALL_BIT
 + 126)

	)

119 
	#__NR_π_sigsu•íd
 (
__X32_SYSCALL_BIT
 + 130)

	)

120 
	#__NR_utime
 (
__X32_SYSCALL_BIT
 + 132)

	)

121 
	#__NR_mknod
 (
__X32_SYSCALL_BIT
 + 133)

	)

122 
	#__NR_≥rs⁄Æôy
 (
__X32_SYSCALL_BIT
 + 135)

	)

123 
	#__NR_u°©
 (
__X32_SYSCALL_BIT
 + 136)

	)

124 
	#__NR_°©fs
 (
__X32_SYSCALL_BIT
 + 137)

	)

125 
	#__NR_f°©fs
 (
__X32_SYSCALL_BIT
 + 138)

	)

126 
	#__NR_sysfs
 (
__X32_SYSCALL_BIT
 + 139)

	)

127 
	#__NR_gë¥i‹ôy
 (
__X32_SYSCALL_BIT
 + 140)

	)

128 
	#__NR_£çri‹ôy
 (
__X32_SYSCALL_BIT
 + 141)

	)

129 
	#__NR_sched_£ç¨am
 (
__X32_SYSCALL_BIT
 + 142)

	)

130 
	#__NR_sched_gë∑øm
 (
__X32_SYSCALL_BIT
 + 143)

	)

131 
	#__NR_sched_£tscheduÀr
 (
__X32_SYSCALL_BIT
 + 144)

	)

132 
	#__NR_sched_gëscheduÀr
 (
__X32_SYSCALL_BIT
 + 145)

	)

133 
	#__NR_sched_gë_¥i‹ôy_max
 (
__X32_SYSCALL_BIT
 + 146)

	)

134 
	#__NR_sched_gë_¥i‹ôy_mö
 (
__X32_SYSCALL_BIT
 + 147)

	)

135 
	#__NR_sched_º_gë_öãrvÆ
 (
__X32_SYSCALL_BIT
 + 148)

	)

136 
	#__NR_mlock
 (
__X32_SYSCALL_BIT
 + 149)

	)

137 
	#__NR_mu∆ock
 (
__X32_SYSCALL_BIT
 + 150)

	)

138 
	#__NR_mlockÆl
 (
__X32_SYSCALL_BIT
 + 151)

	)

139 
	#__NR_mu∆ockÆl
 (
__X32_SYSCALL_BIT
 + 152)

	)

140 
	#__NR_vh™gup
 (
__X32_SYSCALL_BIT
 + 153)

	)

141 
	#__NR_modify_ldt
 (
__X32_SYSCALL_BIT
 + 154)

	)

142 
	#__NR_pivŸ_roŸ
 (
__X32_SYSCALL_BIT
 + 155)

	)

143 
	#__NR_¥˘l
 (
__X32_SYSCALL_BIT
 + 157)

	)

144 
	#__NR_¨ch_¥˘l
 (
__X32_SYSCALL_BIT
 + 158)

	)

145 
	#__NR_adjtimex
 (
__X32_SYSCALL_BIT
 + 159)

	)

146 
	#__NR_£ålimô
 (
__X32_SYSCALL_BIT
 + 160)

	)

147 
	#__NR_chroŸ
 (
__X32_SYSCALL_BIT
 + 161)

	)

148 
	#__NR_sync
 (
__X32_SYSCALL_BIT
 + 162)

	)

149 
	#__NR_ac˘
 (
__X32_SYSCALL_BIT
 + 163)

	)

150 
	#__NR_£âimeofday
 (
__X32_SYSCALL_BIT
 + 164)

	)

151 
	#__NR_mou¡
 (
__X32_SYSCALL_BIT
 + 165)

	)

152 
	#__NR_umou¡2
 (
__X32_SYSCALL_BIT
 + 166)

	)

153 
	#__NR_sw≠⁄
 (
__X32_SYSCALL_BIT
 + 167)

	)

154 
	#__NR_sw≠off
 (
__X32_SYSCALL_BIT
 + 168)

	)

155 
	#__NR_ªboŸ
 (
__X32_SYSCALL_BIT
 + 169)

	)

156 
	#__NR_£tho°«me
 (
__X32_SYSCALL_BIT
 + 170)

	)

157 
	#__NR_£tdomaö«me
 (
__X32_SYSCALL_BIT
 + 171)

	)

158 
	#__NR_i›l
 (
__X32_SYSCALL_BIT
 + 172)

	)

159 
	#__NR_i›îm
 (
__X32_SYSCALL_BIT
 + 173)

	)

160 
	#__NR_öô_moduÀ
 (
__X32_SYSCALL_BIT
 + 175)

	)

161 
	#__NR_dñëe_moduÀ
 (
__X32_SYSCALL_BIT
 + 176)

	)

162 
	#__NR_quŸa˘l
 (
__X32_SYSCALL_BIT
 + 179)

	)

163 
	#__NR_gëpmsg
 (
__X32_SYSCALL_BIT
 + 181)

	)

164 
	#__NR_puçmsg
 (
__X32_SYSCALL_BIT
 + 182)

	)

165 
	#__NR_afs_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 183)

	)

166 
	#__NR_tuxˇŒ
 (
__X32_SYSCALL_BIT
 + 184)

	)

167 
	#__NR_£curôy
 (
__X32_SYSCALL_BIT
 + 185)

	)

168 
	#__NR_gëtid
 (
__X32_SYSCALL_BIT
 + 186)

	)

169 
	#__NR_ªadahód
 (
__X32_SYSCALL_BIT
 + 187)

	)

170 
	#__NR_£tx©å
 (
__X32_SYSCALL_BIT
 + 188)

	)

171 
	#__NR_l£tx©å
 (
__X32_SYSCALL_BIT
 + 189)

	)

172 
	#__NR_f£tx©å
 (
__X32_SYSCALL_BIT
 + 190)

	)

173 
	#__NR_gëx©å
 (
__X32_SYSCALL_BIT
 + 191)

	)

174 
	#__NR_lgëx©å
 (
__X32_SYSCALL_BIT
 + 192)

	)

175 
	#__NR_fgëx©å
 (
__X32_SYSCALL_BIT
 + 193)

	)

176 
	#__NR_li°x©å
 (
__X32_SYSCALL_BIT
 + 194)

	)

177 
	#__NR_Œi°x©å
 (
__X32_SYSCALL_BIT
 + 195)

	)

178 
	#__NR_Êi°x©å
 (
__X32_SYSCALL_BIT
 + 196)

	)

179 
	#__NR_ªmovex©å
 (
__X32_SYSCALL_BIT
 + 197)

	)

180 
	#__NR_Ãemovex©å
 (
__X32_SYSCALL_BIT
 + 198)

	)

181 
	#__NR_‰emovex©å
 (
__X32_SYSCALL_BIT
 + 199)

	)

182 
	#__NR_tkûl
 (
__X32_SYSCALL_BIT
 + 200)

	)

183 
	#__NR_time
 (
__X32_SYSCALL_BIT
 + 201)

	)

184 
	#__NR_fuãx
 (
__X32_SYSCALL_BIT
 + 202)

	)

185 
	#__NR_sched_£èfföôy
 (
__X32_SYSCALL_BIT
 + 203)

	)

186 
	#__NR_sched_gëafföôy
 (
__X32_SYSCALL_BIT
 + 204)

	)

187 
	#__NR_io_de°roy
 (
__X32_SYSCALL_BIT
 + 207)

	)

188 
	#__NR_io_gëevíts
 (
__X32_SYSCALL_BIT
 + 208)

	)

189 
	#__NR_io_ˇn˚l
 (
__X32_SYSCALL_BIT
 + 210)

	)

190 
	#__NR_lookup_dcookõ
 (
__X32_SYSCALL_BIT
 + 212)

	)

191 
	#__NR_ïﬁl_¸óã
 (
__X32_SYSCALL_BIT
 + 213)

	)

192 
	#__NR_ªm≠_fûe_∑ges
 (
__X32_SYSCALL_BIT
 + 216)

	)

193 
	#__NR_gëdíts64
 (
__X32_SYSCALL_BIT
 + 217)

	)

194 
	#__NR_£t_tid_addªss
 (
__X32_SYSCALL_BIT
 + 218)

	)

195 
	#__NR_ª°¨t_sysˇŒ
 (
__X32_SYSCALL_BIT
 + 219)

	)

196 
	#__NR_£mtimed›
 (
__X32_SYSCALL_BIT
 + 220)

	)

197 
	#__NR_Ádvi£64
 (
__X32_SYSCALL_BIT
 + 221)

	)

198 
	#__NR_timî_£âime
 (
__X32_SYSCALL_BIT
 + 223)

	)

199 
	#__NR_timî_gëtime
 (
__X32_SYSCALL_BIT
 + 224)

	)

200 
	#__NR_timî_gëovîrun
 (
__X32_SYSCALL_BIT
 + 225)

	)

201 
	#__NR_timî_dñëe
 (
__X32_SYSCALL_BIT
 + 226)

	)

202 
	#__NR_˛ock_£âime
 (
__X32_SYSCALL_BIT
 + 227)

	)

203 
	#__NR_˛ock_gëtime
 (
__X32_SYSCALL_BIT
 + 228)

	)

204 
	#__NR_˛ock_gëªs
 (
__X32_SYSCALL_BIT
 + 229)

	)

205 
	#__NR_˛ock_«no¶ìp
 (
__X32_SYSCALL_BIT
 + 230)

	)

206 
	#__NR_exô_group
 (
__X32_SYSCALL_BIT
 + 231)

	)

207 
	#__NR_ïﬁl_waô
 (
__X32_SYSCALL_BIT
 + 232)

	)

208 
	#__NR_ïﬁl_˘l
 (
__X32_SYSCALL_BIT
 + 233)

	)

209 
	#__NR_tgkûl
 (
__X32_SYSCALL_BIT
 + 234)

	)

210 
	#__NR_utimes
 (
__X32_SYSCALL_BIT
 + 235)

	)

211 
	#__NR_mböd
 (
__X32_SYSCALL_BIT
 + 237)

	)

212 
	#__NR_£t_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 238)

	)

213 
	#__NR_gë_mempﬁicy
 (
__X32_SYSCALL_BIT
 + 239)

	)

214 
	#__NR_mq_›í
 (
__X32_SYSCALL_BIT
 + 240)

	)

215 
	#__NR_mq_u∆ök
 (
__X32_SYSCALL_BIT
 + 241)

	)

216 
	#__NR_mq_timed£nd
 (
__X32_SYSCALL_BIT
 + 242)

	)

217 
	#__NR_mq_timedª˚ive
 (
__X32_SYSCALL_BIT
 + 243)

	)

218 
	#__NR_mq_gë£èâr
 (
__X32_SYSCALL_BIT
 + 245)

	)

219 
	#__NR_add_key
 (
__X32_SYSCALL_BIT
 + 248)

	)

220 
	#__NR_ªque°_key
 (
__X32_SYSCALL_BIT
 + 249)

	)

221 
	#__NR_key˘l
 (
__X32_SYSCALL_BIT
 + 250)

	)

222 
	#__NR_i›rio_£t
 (
__X32_SYSCALL_BIT
 + 251)

	)

223 
	#__NR_i›rio_gë
 (
__X32_SYSCALL_BIT
 + 252)

	)

224 
	#__NR_öŸify_öô
 (
__X32_SYSCALL_BIT
 + 253)

	)

225 
	#__NR_öŸify_add_w©ch
 (
__X32_SYSCALL_BIT
 + 254)

	)

226 
	#__NR_öŸify_rm_w©ch
 (
__X32_SYSCALL_BIT
 + 255)

	)

227 
	#__NR_migøã_∑ges
 (
__X32_SYSCALL_BIT
 + 256)

	)

228 
	#__NR_›í©
 (
__X32_SYSCALL_BIT
 + 257)

	)

229 
	#__NR_mkdú©
 (
__X32_SYSCALL_BIT
 + 258)

	)

230 
	#__NR_mknod©
 (
__X32_SYSCALL_BIT
 + 259)

	)

231 
	#__NR_fchow«t
 (
__X32_SYSCALL_BIT
 + 260)

	)

232 
	#__NR_futimeßt
 (
__X32_SYSCALL_BIT
 + 261)

	)

233 
	#__NR_√wf°©©
 (
__X32_SYSCALL_BIT
 + 262)

	)

234 
	#__NR_u∆ök©
 (
__X32_SYSCALL_BIT
 + 263)

	)

235 
	#__NR_ª«mót
 (
__X32_SYSCALL_BIT
 + 264)

	)

236 
	#__NR_lök©
 (
__X32_SYSCALL_BIT
 + 265)

	)

237 
	#__NR_symlök©
 (
__X32_SYSCALL_BIT
 + 266)

	)

238 
	#__NR_ªadlök©
 (
__X32_SYSCALL_BIT
 + 267)

	)

239 
	#__NR_fchmod©
 (
__X32_SYSCALL_BIT
 + 268)

	)

240 
	#__NR_Ác˚sßt
 (
__X32_SYSCALL_BIT
 + 269)

	)

241 
	#__NR_p£À˘6
 (
__X32_SYSCALL_BIT
 + 270)

	)

242 
	#__NR_µﬁl
 (
__X32_SYSCALL_BIT
 + 271)

	)

243 
	#__NR_unsh¨e
 (
__X32_SYSCALL_BIT
 + 272)

	)

244 
	#__NR_•li˚
 (
__X32_SYSCALL_BIT
 + 275)

	)

245 
	#__NR_ãe
 (
__X32_SYSCALL_BIT
 + 276)

	)

246 
	#__NR_sync_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 277)

	)

247 
	#__NR_utimíßt
 (
__X32_SYSCALL_BIT
 + 280)

	)

248 
	#__NR_ïﬁl_pwaô
 (
__X32_SYSCALL_BIT
 + 281)

	)

249 
	#__NR_sig«lfd
 (
__X32_SYSCALL_BIT
 + 282)

	)

250 
	#__NR_timîfd_¸óã
 (
__X32_SYSCALL_BIT
 + 283)

	)

251 
	#__NR_evítfd
 (
__X32_SYSCALL_BIT
 + 284)

	)

252 
	#__NR_ÁŒoˇã
 (
__X32_SYSCALL_BIT
 + 285)

	)

253 
	#__NR_timîfd_£âime
 (
__X32_SYSCALL_BIT
 + 286)

	)

254 
	#__NR_timîfd_gëtime
 (
__X32_SYSCALL_BIT
 + 287)

	)

255 
	#__NR_ac˚±4
 (
__X32_SYSCALL_BIT
 + 288)

	)

256 
	#__NR_sig«lfd4
 (
__X32_SYSCALL_BIT
 + 289)

	)

257 
	#__NR_evítfd2
 (
__X32_SYSCALL_BIT
 + 290)

	)

258 
	#__NR_ïﬁl_¸óã1
 (
__X32_SYSCALL_BIT
 + 291)

	)

259 
	#__NR_dup3
 (
__X32_SYSCALL_BIT
 + 292)

	)

260 
	#__NR_pùe2
 (
__X32_SYSCALL_BIT
 + 293)

	)

261 
	#__NR_öŸify_öô1
 (
__X32_SYSCALL_BIT
 + 294)

	)

262 
	#__NR_≥rf_evít_›í
 (
__X32_SYSCALL_BIT
 + 298)

	)

263 
	#__NR_ÁnŸify_öô
 (
__X32_SYSCALL_BIT
 + 300)

	)

264 
	#__NR_ÁnŸify_m¨k
 (
__X32_SYSCALL_BIT
 + 301)

	)

265 
	#__NR_¥limô64
 (
__X32_SYSCALL_BIT
 + 302)

	)

266 
	#__NR_«me_to_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 303)

	)

267 
	#__NR_›í_by_h™dÀ_©
 (
__X32_SYSCALL_BIT
 + 304)

	)

268 
	#__NR_˛ock_adjtime
 (
__X32_SYSCALL_BIT
 + 305)

	)

269 
	#__NR_syncfs
 (
__X32_SYSCALL_BIT
 + 306)

	)

270 
	#__NR_£äs
 (
__X32_SYSCALL_BIT
 + 308)

	)

271 
	#__NR_gë˝u
 (
__X32_SYSCALL_BIT
 + 309)

	)

272 
	#__NR_kcmp
 (
__X32_SYSCALL_BIT
 + 312)

	)

273 
	#__NR_föô_moduÀ
 (
__X32_SYSCALL_BIT
 + 313)

	)

274 
	#__NR_sched_£èâr
 (
__X32_SYSCALL_BIT
 + 314)

	)

275 
	#__NR_sched_gë©å
 (
__X32_SYSCALL_BIT
 + 315)

	)

276 
	#__NR_ª«mót2
 (
__X32_SYSCALL_BIT
 + 316)

	)

277 
	#__NR_£ccomp
 (
__X32_SYSCALL_BIT
 + 317)

	)

278 
	#__NR_gëøndom
 (
__X32_SYSCALL_BIT
 + 318)

	)

279 
	#__NR_memfd_¸óã
 (
__X32_SYSCALL_BIT
 + 319)

	)

280 
	#__NR_kexec_fûe_lﬂd
 (
__X32_SYSCALL_BIT
 + 320)

	)

281 
	#__NR_bpf
 (
__X32_SYSCALL_BIT
 + 321)

	)

282 
	#__NR_u£rÁu…fd
 (
__X32_SYSCALL_BIT
 + 323)

	)

283 
	#__NR_memb¨rõr
 (
__X32_SYSCALL_BIT
 + 324)

	)

284 
	#__NR_mlock2
 (
__X32_SYSCALL_BIT
 + 325)

	)

285 
	#__NR_c›y_fûe_ønge
 (
__X32_SYSCALL_BIT
 + 326)

	)

286 
	#__NR_pkey_m¥Ÿe˘
 (
__X32_SYSCALL_BIT
 + 329)

	)

287 
	#__NR_pkey_Æloc
 (
__X32_SYSCALL_BIT
 + 330)

	)

288 
	#__NR_pkey_‰ì
 (
__X32_SYSCALL_BIT
 + 331)

	)

289 
	#__NR_°©x
 (
__X32_SYSCALL_BIT
 + 332)

	)

290 
	#__NR_π_siga˘i⁄
 (
__X32_SYSCALL_BIT
 + 512)

	)

291 
	#__NR_π_sigªtu∫
 (
__X32_SYSCALL_BIT
 + 513)

	)

292 
	#__NR_io˘l
 (
__X32_SYSCALL_BIT
 + 514)

	)

293 
	#__NR_ªadv
 (
__X32_SYSCALL_BIT
 + 515)

	)

294 
	#__NR_wrôev
 (
__X32_SYSCALL_BIT
 + 516)

	)

295 
	#__NR_ªcv‰om
 (
__X32_SYSCALL_BIT
 + 517)

	)

296 
	#__NR_£ndmsg
 (
__X32_SYSCALL_BIT
 + 518)

	)

297 
	#__NR_ªcvmsg
 (
__X32_SYSCALL_BIT
 + 519)

	)

298 
	#__NR_execve
 (
__X32_SYSCALL_BIT
 + 520)

	)

299 
	#__NR_±ø˚
 (
__X32_SYSCALL_BIT
 + 521)

	)

300 
	#__NR_π_sig≥ndög
 (
__X32_SYSCALL_BIT
 + 522)

	)

301 
	#__NR_π_sigtimedwaô
 (
__X32_SYSCALL_BIT
 + 523)

	)

302 
	#__NR_π_sigqueueöfo
 (
__X32_SYSCALL_BIT
 + 524)

	)

303 
	#__NR_sigÆt°ack
 (
__X32_SYSCALL_BIT
 + 525)

	)

304 
	#__NR_timî_¸óã
 (
__X32_SYSCALL_BIT
 + 526)

	)

305 
	#__NR_mq_nŸify
 (
__X32_SYSCALL_BIT
 + 527)

	)

306 
	#__NR_kexec_lﬂd
 (
__X32_SYSCALL_BIT
 + 528)

	)

307 
	#__NR_waôid
 (
__X32_SYSCALL_BIT
 + 529)

	)

308 
	#__NR_£t_robu°_li°
 (
__X32_SYSCALL_BIT
 + 530)

	)

309 
	#__NR_gë_robu°_li°
 (
__X32_SYSCALL_BIT
 + 531)

	)

310 
	#__NR_vm•li˚
 (
__X32_SYSCALL_BIT
 + 532)

	)

311 
	#__NR_move_∑ges
 (
__X32_SYSCALL_BIT
 + 533)

	)

312 
	#__NR_¥ódv
 (
__X32_SYSCALL_BIT
 + 534)

	)

313 
	#__NR_pwrôev
 (
__X32_SYSCALL_BIT
 + 535)

	)

314 
	#__NR_π_tgsigqueueöfo
 (
__X32_SYSCALL_BIT
 + 536)

	)

315 
	#__NR_ªcvmmsg
 (
__X32_SYSCALL_BIT
 + 537)

	)

316 
	#__NR_£ndmmsg
 (
__X32_SYSCALL_BIT
 + 538)

	)

317 
	#__NR_¥o˚ss_vm_ªadv
 (
__X32_SYSCALL_BIT
 + 539)

	)

318 
	#__NR_¥o˚ss_vm_wrôev
 (
__X32_SYSCALL_BIT
 + 540)

	)

319 
	#__NR_£tsock›t
 (
__X32_SYSCALL_BIT
 + 541)

	)

320 
	#__NR_gësock›t
 (
__X32_SYSCALL_BIT
 + 542)

	)

321 
	#__NR_io_£tup
 (
__X32_SYSCALL_BIT
 + 543)

	)

322 
	#__NR_io_submô
 (
__X32_SYSCALL_BIT
 + 544)

	)

323 
	#__NR_execvót
 (
__X32_SYSCALL_BIT
 + 545)

	)

324 
	#__NR_¥ódv2
 (
__X32_SYSCALL_BIT
 + 546)

	)

325 
	#__NR_pwrôev2
 (
__X32_SYSCALL_BIT
 + 547)

	)

	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

35 
	~<bôs/byãsw≠-16.h
>

38 
	#__bsw≠_c⁄°™t_32
(
x
) \

39 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

40 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

42 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 3)

44 
__ölöe
 

45 
	$__bsw≠_32
 (
__bsx
)

47  
	`__buûtö_bsw≠32
 (
__bsx
);

48 
	}
}

49 #ñi‡
__GNUC__
 >= 2

50 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

51 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

52 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

53 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

54 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

55 || 
deföed
 
	g__amdÁm10__
)

58 
	#__bsw≠_32
(
x
) \

59 (
__exãnsi⁄__
 \

60 ({ 
__v
, 
__x
 = (
x
); \

61 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

62 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

64 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

65 
__v
; }))

	)

67 
	#__bsw≠_32
(
x
) \

68 (
__exãnsi⁄__
 \

69 ({ 
__v
, 
__x
 = (
x
); \

70 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

71 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

73 
	`__asm__
 ("rorw $8, %w0;" \

76 : "Ù" (
__v
) \

77 : "0" (
__x
) \

79 
__v
; }))

	)

82 
	#__bsw≠_32
(
x
) \

83 (
__exãnsi⁄__
 \

84 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

87 
__ölöe
 

88 
	$__bsw≠_32
 (
__bsx
)

90  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

91 
	}
}

95 #i‡
__GNUC_PREREQ
 (2, 0)

97 
	#__bsw≠_c⁄°™t_64
(
x
) \

98 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

99 | (((
x
) & 0x00ff000000000000ull) >> 40) \

100 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

101 | (((
x
) & 0x000000ff00000000ull) >> 8) \

102 | (((
x
) & 0x00000000ff000000ull) << 8) \

103 | (((
x
) & 0x0000000000ff0000ull) << 24) \

104 | (((
x
) & 0x000000000000ff00ull) << 40) \

105 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

107 #i‡
__GNUC_PREREQ
 (4, 3)

108 
__ölöe
 
__uöt64_t


109 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

111  
	`__buûtö_bsw≠64
 (
__bsx
);

112 
	}
}

113 #ñi‡
__WORDSIZE
 == 64

114 
	#__bsw≠_64
(
x
) \

115 (
__exãnsi⁄__
 \

116 ({ 
__uöt64_t
 
__v
, 
__x
 = (
x
); \

117 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

118 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

120 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

121 
__v
; }))

	)

123 
	#__bsw≠_64
(
x
) \

124 (
__exãnsi⁄__
 \

125 ({ uni⁄ { 
__exãnsi⁄__
 
__uöt64_t
 
__Œ
; \

126 
__l
[2]; } 
__w
, 
__r
; \

127 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

128 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

131 
__w
.
__Œ
 = (
x
); \

132 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

133 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

135 
__r
.
__Œ
; }))

	)

138 
	#__bsw≠_c⁄°™t_64
(
x
) \

139 ((((
x
) & 0xff00000000000000ull) >> 56) \

140 | (((
x
) & 0x00ff000000000000ull) >> 40) \

141 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

142 | (((
x
) & 0x000000ff00000000ull) >> 8) \

143 | (((
x
) & 0x00000000ff000000ull) << 8) \

144 | (((
x
) & 0x0000000000ff0000ull) << 24) \

145 | (((
x
) & 0x000000000000ff00ull) << 40) \

146 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

148 
__ölöe
 
__uöt64_t


149 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

151  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

152 
	}
}

	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

535 
	m_CS_PATH
,

536 
	#_CS_PATH
 
_CS_PATH


	)

538 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

539 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

540 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	m_CS_GNU_LIBC_VERSION
,

543 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

544 
	m_CS_GNU_LIBPTHREAD_VERSION
,

545 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

547 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

548 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

549 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

552 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

553 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	m_CS_LFS_CFLAGS
 = 1000,

556 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

557 
	m_CS_LFS_LDFLAGS
,

558 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

559 
	m_CS_LFS_LIBS
,

560 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

561 
	m_CS_LFS_LINTFLAGS
,

562 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

563 
	m_CS_LFS64_CFLAGS
,

564 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

565 
	m_CS_LFS64_LDFLAGS
,

566 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

567 
	m_CS_LFS64_LIBS
,

568 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

569 
	m_CS_LFS64_LINTFLAGS
,

570 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

572 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

573 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

575 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

577 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

579 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

581 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

588 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

589 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LIBS
,

593 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

594 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

596 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

597 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

605 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

606 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

621 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

622 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

629 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

630 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

638 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

639 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

654 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

655 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

662 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

663 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

671 
	m_CS_V6_ENV
,

672 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

673 
	m_CS_V7_ENV


674 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

19 #i‚de‡
_BITS_ERRNO_H


20 
	#_BITS_ERRNO_H
 1

	)

22 #i‡!
deföed
 
_ERRNO_H


26 
	~<löux/î∫o.h
>

29 #i‚de‡
ENOTSUP


30 
	#ENOTSUP
 
EOPNOTSUPP


	)

33 #i‚de‡
ECANCELED


34 
	#ECANCELED
 125

	)

37 #i‚de‡
EOWNERDEAD


38 
	#EOWNERDEAD
 130

	)

41 #i‚de‡
ENOTRECOVERABLE


42 
	#ENOTRECOVERABLE
 131

	)

45 #i‚de‡
ERFKILL


46 
	#ERFKILL
 132

	)

49 #i‚de‡
EHWPOISON


50 
	#EHWPOISON
 133

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	`__GNUC_PREREQ
 (4, 4))) \

32 && !
	`deföed
(
__CUDACC__
Ë&& !
	$deföed
(
__ICC
)

33 
	#__HAVE_FLOAT128
 1

	)

35 
	#__HAVE_FLOAT128
 0

	)

40 #i‡
__HAVE_FLOAT128


41 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

43 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

49 
	#__HAVE_FLOAT64X
 1

	)

55 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

57 #i‚de‡
__ASSEMBLER__


61 #i‡
__HAVE_FLOAT128


62 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


64 
	#__f128
(
x
Ëx##
q


	)

66 
	#__f128
(
x
Ëx##
f128


	)

71 #i‡
__HAVE_FLOAT128


72 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


75 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

76 
	#__CFLOAT128
 
__cÊﬂt128


	)

78 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

83 #i‡
__HAVE_FLOAT128


86 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


87 
__Êﬂt128
 
	t_Flﬂt128
;

91 #i‡!
	`__GNUC_PREREQ
 (7, 0)

92 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

100 #i‡!
	`__GNUC_PREREQ
 (7, 0)

101 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

102 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

103 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

104 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

105 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

112 #i‡!
	`__GNUC_PREREQ
 (6, 0)

113 
	#__buûtö_signbôf128
 
__signbôf128


	)

120 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/in.h

20 #i‚de‡
_NETINET_IN_H


32 #i‡
deföed
 
_UAPI_LINUX_IN6_H
 \

33 || 
deföed
 
	g_UAPI_IPV6_H
 \

34 || 
deföed
 
	g_LINUX_IN6_H
 \

35 || 
deföed
 
	g_IPV6_H


39 
	#__USE_KERNEL_IPV6_DEFS
 1

	)

41 
	#__USE_KERNEL_IPV6_DEFS
 0

	)

47 
	#IP_OPTIONS
 4

	)

48 
	#IP_HDRINCL
 3

	)

49 
	#IP_TOS
 1

	)

50 
	#IP_TTL
 2

	)

51 
	#IP_RECVOPTS
 6

	)

53 
	#IP_RECVRETOPTS
 
IP_RETOPTS


	)

54 
	#IP_RETOPTS
 7

	)

55 
	#IP_MULTICAST_IF
 32

	)

56 
	#IP_MULTICAST_TTL
 33

	)

57 
	#IP_MULTICAST_LOOP
 34

	)

58 
	#IP_ADD_MEMBERSHIP
 35

	)

59 
	#IP_DROP_MEMBERSHIP
 36

	)

60 
	#IP_UNBLOCK_SOURCE
 37

	)

61 
	#IP_BLOCK_SOURCE
 38

	)

62 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

63 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

64 
	#IP_MSFILTER
 41

	)

65 #ifde‡
__USE_MISC


66 
	#MCAST_JOIN_GROUP
 42

	)

67 
	#MCAST_BLOCK_SOURCE
 43

	)

68 
	#MCAST_UNBLOCK_SOURCE
 44

	)

69 
	#MCAST_LEAVE_GROUP
 45

	)

70 
	#MCAST_JOIN_SOURCE_GROUP
 46

	)

71 
	#MCAST_LEAVE_SOURCE_GROUP
 47

	)

72 
	#MCAST_MSFILTER
 48

	)

73 
	#IP_MULTICAST_ALL
 49

	)

74 
	#IP_UNICAST_IF
 50

	)

76 
	#MCAST_EXCLUDE
 0

	)

77 
	#MCAST_INCLUDE
 1

	)

80 
	#IP_ROUTER_ALERT
 5

	)

81 
	#IP_PKTINFO
 8

	)

82 
	#IP_PKTOPTIONS
 9

	)

83 
	#IP_PMTUDISC
 10

	)

84 
	#IP_MTU_DISCOVER
 10

	)

85 
	#IP_RECVERR
 11

	)

86 
	#IP_RECVTTL
 12

	)

87 
	#IP_RECVTOS
 13

	)

88 
	#IP_MTU
 14

	)

89 
	#IP_FREEBIND
 15

	)

90 
	#IP_IPSEC_POLICY
 16

	)

91 
	#IP_XFRM_POLICY
 17

	)

92 
	#IP_PASSSEC
 18

	)

93 
	#IP_TRANSPARENT
 19

	)

94 
	#IP_MULTICAST_ALL
 49

	)

97 
	#IP_ORIGDSTADDR
 20

	)

98 
	#IP_RECVORIGDSTADDR
 
IP_ORIGDSTADDR


	)

100 
	#IP_MINTTL
 21

	)

101 
	#IP_NODEFRAG
 22

	)

102 
	#IP_CHECKSUM
 23

	)

103 
	#IP_BIND_ADDRESS_NO_PORT
 24

	)

104 
	#IP_RECVFRAGSIZE
 25

	)

107 
	#IP_PMTUDISC_DONT
 0

	)

108 
	#IP_PMTUDISC_WANT
 1

	)

109 
	#IP_PMTUDISC_DO
 2

	)

110 
	#IP_PMTUDISC_PROBE
 3

	)

114 
	#IP_PMTUDISC_INTERFACE
 4

	)

116 
	#IP_PMTUDISC_OMIT
 5

	)

118 
	#IP_MULTICAST_IF
 32

	)

119 
	#IP_MULTICAST_TTL
 33

	)

120 
	#IP_MULTICAST_LOOP
 34

	)

121 
	#IP_ADD_MEMBERSHIP
 35

	)

122 
	#IP_DROP_MEMBERSHIP
 36

	)

123 
	#IP_UNBLOCK_SOURCE
 37

	)

124 
	#IP_BLOCK_SOURCE
 38

	)

125 
	#IP_ADD_SOURCE_MEMBERSHIP
 39

	)

126 
	#IP_DROP_SOURCE_MEMBERSHIP
 40

	)

127 
	#IP_MSFILTER
 41

	)

128 
	#IP_MULTICAST_ALL
 49

	)

129 
	#IP_UNICAST_IF
 50

	)

132 
	#SOL_IP
 0

	)

134 
	#IP_DEFAULT_MULTICAST_TTL
 1

	)

135 
	#IP_DEFAULT_MULTICAST_LOOP
 1

	)

136 
	#IP_MAX_MEMBERSHIPS
 20

	)

138 #ifde‡
__USE_MISC


142 
	sù_›ts


144 
ö_addr
 
	mù_d°
;

145 
	mù_›ts
[40];

149 
	sù_mªqn


151 
ö_addr
 
	mimr_mu…üddr
;

152 
ö_addr
 
	mimr_addªss
;

153 
	mimr_ifödex
;

157 
	sö_pktöfo


159 
	mùi_ifödex
;

160 
ö_addr
 
	mùi_•ec_d°
;

161 
ö_addr
 
	mùi_addr
;

168 
	#IPV6_ADDRFORM
 1

	)

169 
	#IPV6_2292PKTINFO
 2

	)

170 
	#IPV6_2292HOPOPTS
 3

	)

171 
	#IPV6_2292DSTOPTS
 4

	)

172 
	#IPV6_2292RTHDR
 5

	)

173 
	#IPV6_2292PKTOPTIONS
 6

	)

174 
	#IPV6_CHECKSUM
 7

	)

175 
	#IPV6_2292HOPLIMIT
 8

	)

177 
	#SCM_SRCRT
 
IPV6_RXSRCRT


	)

179 
	#IPV6_NEXTHOP
 9

	)

180 
	#IPV6_AUTHHDR
 10

	)

181 
	#IPV6_UNICAST_HOPS
 16

	)

182 
	#IPV6_MULTICAST_IF
 17

	)

183 
	#IPV6_MULTICAST_HOPS
 18

	)

184 
	#IPV6_MULTICAST_LOOP
 19

	)

185 
	#IPV6_JOIN_GROUP
 20

	)

186 
	#IPV6_LEAVE_GROUP
 21

	)

187 
	#IPV6_ROUTER_ALERT
 22

	)

188 
	#IPV6_MTU_DISCOVER
 23

	)

189 
	#IPV6_MTU
 24

	)

190 
	#IPV6_RECVERR
 25

	)

191 
	#IPV6_V6ONLY
 26

	)

192 
	#IPV6_JOIN_ANYCAST
 27

	)

193 
	#IPV6_LEAVE_ANYCAST
 28

	)

194 
	#IPV6_IPSEC_POLICY
 34

	)

195 
	#IPV6_XFRM_POLICY
 35

	)

196 
	#IPV6_HDRINCL
 36

	)

199 
	#IPV6_RECVPKTINFO
 49

	)

200 
	#IPV6_PKTINFO
 50

	)

201 
	#IPV6_RECVHOPLIMIT
 51

	)

202 
	#IPV6_HOPLIMIT
 52

	)

203 
	#IPV6_RECVHOPOPTS
 53

	)

204 
	#IPV6_HOPOPTS
 54

	)

205 
	#IPV6_RTHDRDSTOPTS
 55

	)

206 
	#IPV6_RECVRTHDR
 56

	)

207 
	#IPV6_RTHDR
 57

	)

208 
	#IPV6_RECVDSTOPTS
 58

	)

209 
	#IPV6_DSTOPTS
 59

	)

210 
	#IPV6_RECVPATHMTU
 60

	)

211 
	#IPV6_PATHMTU
 61

	)

212 
	#IPV6_DONTFRAG
 62

	)

215 
	#IPV6_RECVTCLASS
 66

	)

216 
	#IPV6_TCLASS
 67

	)

218 
	#IPV6_AUTOFLOWLABEL
 70

	)

221 
	#IPV6_ADDR_PREFERENCES
 72

	)

224 
	#IPV6_MINHOPCOUNT
 73

	)

226 
	#IPV6_ORIGDSTADDR
 74

	)

227 
	#IPV6_RECVORIGDSTADDR
 
IPV6_ORIGDSTADDR


	)

228 
	#IPV6_TRANSPARENT
 75

	)

229 
	#IPV6_UNICAST_IF
 76

	)

230 
	#IPV6_RECVFRAGSIZE
 77

	)

233 #i‡!
__USE_KERNEL_IPV6_DEFS


234 
	#IPV6_ADD_MEMBERSHIP
 
IPV6_JOIN_GROUP


	)

235 
	#IPV6_DROP_MEMBERSHIP
 
IPV6_LEAVE_GROUP


	)

237 
	#IPV6_RXHOPOPTS
 
IPV6_HOPOPTS


	)

238 
	#IPV6_RXDSTOPTS
 
IPV6_DSTOPTS


	)

241 
	#IPV6_PMTUDISC_DONT
 0

	)

242 
	#IPV6_PMTUDISC_WANT
 1

	)

243 
	#IPV6_PMTUDISC_DO
 2

	)

244 
	#IPV6_PMTUDISC_PROBE
 3

	)

245 
	#IPV6_PMTUDISC_INTERFACE
 4

	)

246 
	#IPV6_PMTUDISC_OMIT
 5

	)

249 
	#SOL_IPV6
 41

	)

250 
	#SOL_ICMPV6
 58

	)

253 
	#IPV6_RTHDR_LOOSE
 0

	)

254 
	#IPV6_RTHDR_STRICT
 1

	)

256 
	#IPV6_RTHDR_TYPE_0
 0

	)

	@/usr/include/bits/ipc.h

18 #i‚de‡
_SYS_IPC_H


22 
	~<bôs/ty≥s.h
>

25 
	#IPC_CREAT
 01000

	)

26 
	#IPC_EXCL
 02000

	)

27 
	#IPC_NOWAIT
 04000

	)

30 
	#IPC_RMID
 0

	)

31 
	#IPC_SET
 1

	)

32 
	#IPC_STAT
 2

	)

33 #ifde‡
__USE_GNU


34 
	#IPC_INFO
 3

	)

38 
	#IPC_PRIVATE
 ((
__key_t
Ë0Ë

	)

42 
	sùc_≥rm


44 
__key_t
 
	m__key
;

45 
__uid_t
 
	muid
;

46 
__gid_t
 
	mgid
;

47 
__uid_t
 
	mcuid
;

48 
__gid_t
 
	mcgid
;

49 
	mmode
;

50 
	m__∑d1
;

51 
	m__£q
;

52 
	m__∑d2
;

53 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved1
;

54 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved2
;

	@/usr/include/bits/ipctypes.h

19 #i‚de‡
_SYS_IPC_H


23 #i‚de‡
_BITS_IPCTYPES_H


24 
	#_BITS_IPCTYPES_H
 1

	)

27 #ifde‡
__x86_64__


28 
	t__ùc_pid_t
;

30 
	t__ùc_pid_t
;

	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

47 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


48 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


49 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

51 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

56 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


57 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


58 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

60 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

65 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


67 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

69 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/libio.h

28 #i‚de‡
_BITS_LIBIO_H


29 
	#_BITS_LIBIO_H
 1

	)

31 #i‡!
deföed
 
_STDIO_H
 && !deföed 
_LIBIO_H


35 
	~<bôs/_G_c⁄fig.h
>

37 
	#_IO_Âos_t
 
_G_Âos_t


	)

38 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

39 
	#_IO_size_t
 
size_t


	)

40 
	#_IO_ssize_t
 
__ssize_t


	)

41 
	#_IO_off_t
 
__off_t


	)

42 
	#_IO_off64_t
 
__off64_t


	)

43 
	#_IO_pid_t
 
__pid_t


	)

44 
	#_IO_uid_t
 
__uid_t


	)

45 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

46 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

47 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

48 
	#_IO_va_li°
 
_G_va_li°


	)

49 
	#_IO_wöt_t
 
wöt_t


	)

52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

59 #i‚de‡
__P


60 
	~<sys/cdefs.h
>

63 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

65 #i‚de‡
EOF


66 
	#EOF
 (-1)

	)

68 #i‚de‡
NULL


69 #i‡
deföed
 
__GNUG__
 && \

70 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

71 
	#NULL
 (
__nuŒ
)

	)

73 #i‡!
deföed
(
__˝lu•lus
)

74 
	#NULL
 ((*)0)

	)

76 
	#NULL
 (0)

	)

81 
	#_IOS_INPUT
 1

	)

82 
	#_IOS_OUTPUT
 2

	)

83 
	#_IOS_ATEND
 4

	)

84 
	#_IOS_APPEND
 8

	)

85 
	#_IOS_TRUNC
 16

	)

86 
	#_IOS_NOCREATE
 32

	)

87 
	#_IOS_NOREPLACE
 64

	)

88 
	#_IOS_BIN
 128

	)

96 
	#_IO_MAGIC
 0xFBAD0000

	)

97 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

98 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

99 
	#_IO_USER_BUF
 1

	)

100 
	#_IO_UNBUFFERED
 2

	)

101 
	#_IO_NO_READS
 4

	)

102 
	#_IO_NO_WRITES
 8

	)

103 
	#_IO_EOF_SEEN
 0x10

	)

104 
	#_IO_ERR_SEEN
 0x20

	)

105 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

106 
	#_IO_LINKED
 0x80

	)

107 
	#_IO_IN_BACKUP
 0x100

	)

108 
	#_IO_LINE_BUF
 0x200

	)

109 
	#_IO_TIED_PUT_GET
 0x400

	)

110 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

111 
	#_IO_IS_APPENDING
 0x1000

	)

112 
	#_IO_IS_FILEBUF
 0x2000

	)

113 
	#_IO_BAD_SEEN
 0x4000

	)

114 
	#_IO_USER_LOCK
 0x8000

	)

116 
	#_IO_FLAGS2_MMAP
 1

	)

117 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

118 #ifde‡
_LIBC


119 
	#_IO_FLAGS2_FORTIFY
 4

	)

121 
	#_IO_FLAGS2_USER_WBUF
 8

	)

122 #ifde‡
_LIBC


123 
	#_IO_FLAGS2_SCANF_STD
 16

	)

124 
	#_IO_FLAGS2_NOCLOSE
 32

	)

125 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_FLAGS2_NEED_LOCK
 128

	)

130 
	#_IO_SKIPWS
 01

	)

131 
	#_IO_LEFT
 02

	)

132 
	#_IO_RIGHT
 04

	)

133 
	#_IO_INTERNAL
 010

	)

134 
	#_IO_DEC
 020

	)

135 
	#_IO_OCT
 040

	)

136 
	#_IO_HEX
 0100

	)

137 
	#_IO_SHOWBASE
 0200

	)

138 
	#_IO_SHOWPOINT
 0400

	)

139 
	#_IO_UPPERCASE
 01000

	)

140 
	#_IO_SHOWPOS
 02000

	)

141 
	#_IO_SCIENTIFIC
 04000

	)

142 
	#_IO_FIXED
 010000

	)

143 
	#_IO_UNITBUF
 020000

	)

144 
	#_IO_STDIO
 040000

	)

145 
	#_IO_DONT_CLOSE
 0100000

	)

146 
	#_IO_BOOLALPHA
 0200000

	)

149 
_IO_jump_t
; 
	g_IO_FILE
;

153 #i‚de‡
_IO_lock_t_deföed


154 
	t_IO_lock_t
;

160 
	s_IO_m¨kî
 {

161 
_IO_m¨kî
 *
	m_√xt
;

162 
_IO_FILE
 *
	m_sbuf
;

166 
	m_pos
;

168 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

169 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

170 
	mpublic
:

171 
°ªamm¨kî
(
°ªambuf
 *
sb
);

172 ~
°ªamm¨kî
();

173 
ßvög
(Ë{  
	m_•os
 == -2; }

174 
dñè
(
°ªamm¨kî
&);

175 
dñè
();

180 
	e__codecvt_ªsu…


182 
	m__codecvt_ok
,

183 
	m__codecvt_∑πül
,

184 
	m__codecvt_îr‹
,

185 
	m__codecvt_noc⁄v


188 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


191 
	s_IO_codecvt


193 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

194 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

195 
	m__mb°©e_t
 *,

196 c⁄° 
	mwch¨_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 **, *,

200 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

201 
	m__mb°©e_t
 *, *,

203 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

204 
	m__mb°©e_t
 *,

206 c⁄° **, 
	mwch¨_t
 *,

207 
	mwch¨_t
 *, wchar_t **);

208 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

209 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

211 c⁄° *, c⁄° *, 
	m_IO_size_t
);

212 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

214 
_IO_ic⁄v_t
 
	m__cd_ö
;

215 
_IO_ic⁄v_t
 
	m__cd_out
;

219 
	s_IO_wide_d©a


221 
wch¨_t
 *
	m_IO_ªad_±r
;

222 
wch¨_t
 *
	m_IO_ªad_íd
;

223 
wch¨_t
 *
	m_IO_ªad_ba£
;

224 
wch¨_t
 *
	m_IO_wrôe_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_±r
;

226 
wch¨_t
 *
	m_IO_wrôe_íd
;

227 
wch¨_t
 *
	m_IO_buf_ba£
;

228 
wch¨_t
 *
	m_IO_buf_íd
;

230 
wch¨_t
 *
	m_IO_ßve_ba£
;

231 
wch¨_t
 *
	m_IO_backup_ba£
;

233 
wch¨_t
 *
	m_IO_ßve_íd
;

235 
__mb°©e_t
 
	m_IO_°©e
;

236 
__mb°©e_t
 
	m_IO_œ°_°©e
;

237 
_IO_codecvt
 
	m_codecvt
;

239 
wch¨_t
 
	m_sh‹tbuf
[1];

241 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

245 
	s_IO_FILE
 {

246 
	m_Êags
;

247 
	#_IO_fûe_Êags
 
_Êags


	)

251 * 
	m_IO_ªad_±r
;

252 * 
	m_IO_ªad_íd
;

253 * 
	m_IO_ªad_ba£
;

254 * 
	m_IO_wrôe_ba£
;

255 * 
	m_IO_wrôe_±r
;

256 * 
	m_IO_wrôe_íd
;

257 * 
	m_IO_buf_ba£
;

258 * 
	m_IO_buf_íd
;

260 *
	m_IO_ßve_ba£
;

261 *
	m_IO_backup_ba£
;

262 *
	m_IO_ßve_íd
;

264 
_IO_m¨kî
 *
	m_m¨kîs
;

266 
_IO_FILE
 *
	m_chaö
;

268 
	m_fûío
;

270 
	m_blksize
;

272 
	m_Êags2
;

274 
_IO_off_t
 
	m_ﬁd_off£t
;

276 
	#__HAVE_COLUMN


	)

278 
	m_cur_cﬁumn
;

279 sig√d 
	m_vèbÀ_off£t
;

280 
	m_sh‹tbuf
[1];

284 
_IO_lock_t
 *
	m_lock
;

285 #ifde‡
_IO_USE_OLD_IO_FILE


288 
	s_IO_FILE_com∂ëe


290 
_IO_FILE
 
	m_fûe
;

292 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

293 
_IO_off64_t
 
	m_off£t
;

294 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


296 
_IO_codecvt
 *
	m_codecvt
;

297 
_IO_wide_d©a
 *
	m_wide_d©a
;

298 
_IO_FILE
 *
	m_‰ìªs_li°
;

299 *
	m_‰ìªs_buf
;

301 *
	m__∑d1
;

302 *
	m__∑d2
;

303 *
	m__∑d3
;

304 *
	m__∑d4
;

306 
size_t
 
	m__∑d5
;

307 
	m_mode
;

309 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

313 #i‚de‡
__˝lu•lus


314 
_IO_FILE
 
	t_IO_FILE
;

317 
	g_IO_FILE_∂us
;

319 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

320 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

322 #i‚de‡
_LIBC


323 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

324 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

325 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

327 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

328 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

329 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

337 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

345 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

346 
	tsize_t
 
	t__n
);

354 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

357 
	t__io_˛o£_‚
 (*
	t__cookõ
);

360 #ifde‡
__USE_GNU


362 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

363 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

364 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

365 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

370 
__io_ªad_‚
 *
	mªad
;

371 
__io_wrôe_‚
 *
	mwrôe
;

372 
__io_£ek_‚
 *
	m£ek
;

373 
__io_˛o£_‚
 *
	m˛o£
;

374 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

375 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

377 
	g_IO_cookõ_fûe
;

380 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

381 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

385 #ifde‡
__˝lu•lus


389 
__undîÊow
 (
_IO_FILE
 *);

390 
__uÊow
 (
_IO_FILE
 *);

391 
__ovîÊow
 (
_IO_FILE
 *, );

392 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


393 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

394 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

395 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

398 #i‡ 
__GNUC__
 >= 3

399 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

404 
	#_IO_gëc_u∆ocked
(
_Â
) \

405 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

406 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

407 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

408 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

409 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

410 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

411 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

412 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

413 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

414 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

416 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


417 
	#_IO_gëwc_u∆ocked
(
_Â
) \

418 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

419 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

420 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

421 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

422 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

423 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

424 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

425 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

426 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

427 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

430 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

431 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

433 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

434 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

435 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

436 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

441 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

442 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

444 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

445 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

446 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

449 
	#_IO_Êockfûe
(
_Â
Ë

	)

450 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

451 
	#_IO_·rylockfûe
(
_Â
Ë

	)

452 #i‚de‡
_IO_˛ónup_ªgi⁄_°¨t


453 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

455 #i‚de‡
_IO_˛ónup_ªgi⁄_íd


456 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

459 
	#_IO_√ed_lock
(
_Â
) \

460 (((
_Â
)->
_Êags2
 & 
_IO_FLAGS2_NEED_LOCK
Ë!0)

	)

462 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

463 
_IO_va_li°
, *
__ª°ri˘
);

464 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

465 
_IO_va_li°
);

466 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

467 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

469 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

470 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

472 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

474 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


475 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

476 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

477 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

478 #i‡
__GNUC__
 >= 2

481 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


482 
	~<shlib-com∑t.h
>

483 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

484 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

485 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

486 c⁄° 
_IO_°dö_u£d
;

487 
wók_exã∫
 (
_IO_°dö_u£d
);

490 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


491 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

495 
	#_IO_fwide
(
__Â
, 
__mode
) \

496 ({ 
__ªsu…
 = (
__mode
); \

497 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

499 i‡((
__Â
)->
_mode
 == 0) \

501 (
__Â
)->
_mode
 = -1; \

502 
__ªsu…
 = (
__Â
)->
_mode
; \

504 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

505 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

507 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

508 
__ªsu…
; })

	)

511 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

512 
_IO_va_li°
, *
__ª°ri˘
);

513 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

514 
_IO_va_li°
);

515 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

516 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

519 #ifde‡
__LDBL_COMPAT


520 
	~<bôs/libio-ldbl.h
>

523 #ifde‡
__˝lu•lus


	@/usr/include/bits/locale.h

19 #i‡!
deföed
 
_LOCALE_H
 && !deföed 
_LANGINFO_H


23 #i‚de‡
_BITS_LOCALE_H


24 
	#_BITS_LOCALE_H
 1

	)

26 
	#__LC_CTYPE
 0

	)

27 
	#__LC_NUMERIC
 1

	)

28 
	#__LC_TIME
 2

	)

29 
	#__LC_COLLATE
 3

	)

30 
	#__LC_MONETARY
 4

	)

31 
	#__LC_MESSAGES
 5

	)

32 
	#__LC_ALL
 6

	)

33 
	#__LC_PAPER
 7

	)

34 
	#__LC_NAME
 8

	)

35 
	#__LC_ADDRESS
 9

	)

36 
	#__LC_TELEPHONE
 10

	)

37 
	#__LC_MEASUREMENT
 11

	)

38 
	#__LC_IDENTIFICATION
 12

	)

	@/usr/include/bits/math-finite.h

19 #i‚de‡
_MATH_H


23 
	#__REDIRFROM
(...Ë
	`__REDIRFROM_X
(
__VA_ARGS__
)

	)

25 
	#__REDIRTO
(...Ë
	`__REDIRTO_X
(
__VA_ARGS__
)

	)

27 
	#__MATH_REDIRCALL_X
(
‰om
, 
¨gs
, 
to
) \

28 
_MdoubÀ_
 
	`__REDIRECT_NTH
 (
‰om
, 
¨gs
, 
to
)

	)

29 
	#__MATH_REDIRCALL
(
fun˘i⁄
, 
ªíå™t
, 
¨gs
) \

30 
__MATH_REDIRCALL_X
 \

31 (
	`__REDIRFROM
 (
fun˘i⁄
, 
ªíå™t
), 
¨gs
, \

32 
	`__REDIRTO
 (
fun˘i⁄
, 
ªíå™t
))

	)

33 
	#__MATH_REDIRCALL_2
(
‰om
, 
ªíå™t
, 
¨gs
, 
to
) \

34 
__MATH_REDIRCALL_X
 \

35 (
	`__REDIRFROM
 (
‰om
, 
ªíå™t
), 
¨gs
, \

36 
	`__REDIRTO
 (
to
, 
ªíå™t
))

	)

38 
	#__MATH_REDIRCALL_INTERNAL
(
fun˘i⁄
, 
ªíå™t
, 
¨gs
) \

39 
__MATH_REDIRCALL_X
 \

40 (
	`__REDIRFROM
 (
	`__CONCAT
 (
__
, 
fun˘i⁄
), \

41 
	`__CONCAT
 (
ªíå™t
, 
_föôe
)), \

42 
¨gs
, 
	`__REDIRTO
 (
fun˘i⁄
, 
_r
))

	)

46 
__MATH_REDIRCALL
 (
acos
, , (
_MdoubÀ_
));

48 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


50 
__MATH_REDIRCALL
 (
acosh
, , (
_MdoubÀ_
));

54 
__MATH_REDIRCALL
 (
asö
, , (
_MdoubÀ_
));

57 
__MATH_REDIRCALL
 (
©™2
, , (
_MdoubÀ_
, _Mdouble_));

59 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


61 
__MATH_REDIRCALL
 (
©™h
, , (
_MdoubÀ_
));

65 
__MATH_REDIRCALL
 (
cosh
, , (
_MdoubÀ_
));

68 
__MATH_REDIRCALL
 (
exp
, , (
_MdoubÀ_
));

70 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
)

72 
__MATH_REDIRCALL
 (
exp10
, , (
_MdoubÀ_
));

75 #ifde‡
__USE_ISOC99


77 
__MATH_REDIRCALL
 (
exp2
, , (
_MdoubÀ_
));

81 
__MATH_REDIRCALL
 (
fmod
, , (
_MdoubÀ_
, _Mdouble_));

83 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


85 
__MATH_REDIRCALL
 (
hypŸ
, , (
_MdoubÀ_
, _Mdouble_));

88 #i‡(
__MATH_DECLARING_DOUBLE
 && (
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
)) \

89 || (!
	g__MATH_DECLARING_DOUBLE
 && 
deföed
 
	g__USE_MISC
)

91 
__MATH_REDIRCALL
 (
j0
, , (
_MdoubÀ_
));

94 
__MATH_REDIRCALL
 (
y0
, , (
_MdoubÀ_
));

97 
__MATH_REDIRCALL
 (
j1
, , (
_MdoubÀ_
));

100 
__MATH_REDIRCALL
 (
y1
, , (
_MdoubÀ_
));

103 
__MATH_REDIRCALL
 (
jn
, , (, 
_MdoubÀ_
));

106 
__MATH_REDIRCALL
 (
yn
, , (, 
_MdoubÀ_
));

109 #ifde‡
__USE_MISC


111 
__MATH_REDIRCALL
 (
lgamma
, 
_r
, (
_MdoubÀ_
, *));

117 
__MATH_REDIRCALL_INTERNAL
 (
lgamma
, 
_r
, (
_MdoubÀ_
, *));

119 #i‡((
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99
) \

120 && 
deföed
 
	g__exã∫_Æways_ölöe
)

122 
__exã∫_Æways_ölöe
 
_MdoubÀ_


123 
__NTH
 (
	$__REDIRFROM
 (
lgamma
, ) (
_MdoubÀ_
 
__d
))

125 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


126  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
signgam
);

128 
__loˇl_signgam
 = 0;

129  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
__loˇl_signgam
);

131 
	}
}

134 #i‡((
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)) \

135 && 
deföed
 
	g__exã∫_Æways_ölöe
Ë&& !
__MATH_DECLARING_FLOATN


137 
__exã∫_Æways_ölöe
 
_MdoubÀ_


138 
__NTH
 (
	$__REDIRFROM
 (
gamma
, ) (
_MdoubÀ_
 
__d
))

140  
	`__REDIRTO
 (
lgamma
, 
_r
Ë(
__d
, &
signgam
);

141 
	}
}

145 
__MATH_REDIRCALL
 (
log
, , (
_MdoubÀ_
));

148 
__MATH_REDIRCALL
 (
log10
, , (
_MdoubÀ_
));

150 #ifde‡
__USE_ISOC99


152 
__MATH_REDIRCALL
 (
log2
, , (
_MdoubÀ_
));

156 
__MATH_REDIRCALL
 (
pow
, , (
_MdoubÀ_
, _Mdouble_));

158 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


160 
__MATH_REDIRCALL
 (
ªmaödî
, , (
_MdoubÀ_
, _Mdouble_));

163 #i‡((
__MATH_DECLARING_DOUBLE
 \

164 && (
deföed
 
	g__USE_MISC
 \

165 || (
deföed
 
	g__USE_XOPEN_EXTENDED
 && !deföed 
	g__USE_XOPEN2K8
))) \

166 || (!
deföed
 
	g__MATH_DECLARE_LDOUBLE
 && deföed 
	g__USE_MISC
)) \

167 && !
__MATH_DECLARING_FLOATN


169 
__MATH_REDIRCALL
 (
sˇlb
, , (
_MdoubÀ_
, _Mdouble_));

173 
__MATH_REDIRCALL
 (
söh
, , (
_MdoubÀ_
));

176 
__MATH_REDIRCALL
 (
sqπ
, , (
_MdoubÀ_
));

178 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__exã∫_Æways_ölöe


180 
_MdoubÀ_


181 
	$__REDIRFROM
 (
__gamma
, 
_r_föôe
Ë(
_MdoubÀ_
, *);

183 
__exã∫_Æways_ölöe
 
_MdoubÀ_


184 
	`__NTH
 (
	$__REDIRFROM
 (
tgamma
, ) (
_MdoubÀ_
 
__d
))

186 
__loˇl_signgam
 = 0;

187 
_MdoubÀ_
 
__ªs
 = 
	`__REDIRTO
 (
gamma
, 
_r
Ë(
__d
, &
__loˇl_signgam
);

188  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

189 
	}
}

192 #unde‡
__REDIRFROM


193 #unde‡
__REDIRTO


194 #unde‡
__MATH_REDIRCALL


195 #unde‡
__MATH_REDIRCALL_2


196 #unde‡
__MATH_REDIRCALL_INTERNAL


197 #unde‡
__MATH_REDIRCALL_X


	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

21 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

22 
__©åibuã__
 ((
__c⁄°__
));

25 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

26 
__©åibuã__
 ((
__c⁄°__
));

30 
__MATHDECL_1
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_1
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

36 
__MATHDECL_1
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

39 
__MATHDECL_1
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

42 
__MATHDECL_1
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
))

43 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
)

114 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

180 #i‡!
__MATH_DECLARING_FLOATN


182 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

185 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

189 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

194 #ifde‡
__USE_ISOC99


196 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

199 #ifde‡
__USE_ISOC99


201 
__MATHCALLX
 (
«n
,, (c⁄° *
__ègb
), (
__c⁄°__
));

205 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

206 #i‡((!
deföed
 
__˝lu•lus
 \

207 || 
	g__˝lu•lus
 < 201103L \

208 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

209 && !
__MATH_DECLARING_FLOATN


211 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

215 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

217 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

218 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

219 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

220 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

226 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


228 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

229 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

230 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

233 #ifde‡
__USE_ISOC99


235 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

238 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

239 #i‡!
__MATH_DECLARING_FLOATN


241 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

245 #ifde‡
__USE_MISC


249 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

253 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


256 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

259 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

260 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


261 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

264 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


266 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

268 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

272 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

274 #ifde‡
__USE_ISOC99


276 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

280 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

283 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


285 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

288 #ifde‡
__USE_ISOC99


290 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

294 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

298 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

302 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

307 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

314 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

315 
__exãnsi⁄__


316 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

320 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

321 
__exãnsi⁄__


322 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

326 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

329 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

332 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

335 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

338 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
__MATH_DECLARING_FLOATN


340 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

344 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

345 
__width
));

349 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

355 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

356 
__width
));

361 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

362 
__width
));

365 
__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

368 
__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

371 
__MATHDECL_1
 (, 
tŸÆ‹dî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
))

372 
__©åibuã__
 ((
__c⁄°__
));

375 
__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
))

376 
__©åibuã__
 ((
__c⁄°__
));

379 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

382 
__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

385 
__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

388 
__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

391 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

392 && 
	g__MATH_DECLARING_DOUBLE
 \

393 && !
deföed
 
	g__USE_XOPEN2K8
)) \

394 && !
__MATH_DECLARING_FLOATN


396 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathinline.h

19 #i‚de‡
_MATH_H


23 #i‚de‡
__exã∫_Æways_ölöe


24 
	#__MATH_INLINE
 
__ölöe


	)

26 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

31 #i‡
__GNUC_PREREQ
 (2, 8)

32 #i‡!
__GNUC_PREREQ
 (3, 4Ë&& !
deföed
 
__NO_MATH_INLINES
 \

33 && 
deföed
 
	g__OPTIMIZE__


37 #ifde‡
__USE_ISOC99


40 #ifde‡
__SSE_MATH__


41 
__MATH_INLINE
 

42 
__NTH
 (
	$Ãötf
 (
__x
))

44 
__ªs
;

49 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

50  
__ªs
;

51 
	}
}

53 #ifde‡
__SSE2_MATH__


54 
__MATH_INLINE
 

55 
__NTH
 (
	$Ãöt
 (
__x
))

57 
__ªs
;

62 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

63  
__ªs
;

64 
	}
}

66 #ifde‡
__x86_64__


67 
__exãnsi⁄__


68 
__MATH_INLINE
 

69 
__NTH
 (
	$Œrötf
 (
__x
))

71 
__ªs
;

76 
__asm
 
	`__vﬁ©ûe__
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

77  
__ªs
;

78 
	}
}

79 
__exãnsi⁄__


80 
__MATH_INLINE
 

81 
__NTH
 (
	$Œröt
 (
__x
))

83 
__ªs
;

88 
__asm
 
	`__vﬁ©ûe__
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

89  
__ªs
;

90 
	}
}

93 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

94 && 
deföed
 
__SSE2_MATH__


96 
__MATH_INLINE
 

97 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

99 #ifde‡
__AVX__


100 
__ªs
;

101 
	`__asm
 ("vmaxs†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

102  
__ªs
;

104 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

105  
__x
;

107 
	}
}

108 
__MATH_INLINE
 

109 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

111 #ifde‡
__AVX__


112 
__ªs
;

113 
	`__asm
 ("vmaxsd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

114  
__ªs
;

116 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

117  
__x
;

119 
	}
}

122 
__MATH_INLINE
 

123 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

125 #ifde‡
__AVX__


126 
__ªs
;

127 
	`__asm
 ("vmös†%2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

128  
__ªs
;

130 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

131  
__x
;

133 
	}
}

134 
__MATH_INLINE
 

135 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

137 #ifde‡
__AVX__


138 
__ªs
;

139 
	`__asm
 ("vmösd %2, %1, %0" : "=x" (
__ªs
Ë: "x" (
x
), "xm" (
__y
));

140  
__ªs
;

142 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

143  
__x
;

145 
	}
}

150 #i‡
deföed
 
__SSE4_1__
 && deföed 
__SSE2_MATH__


151 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


154 
__MATH_INLINE
 

155 
__NTH
 (
	$röt
 (
__x
))

157 
__ªs
;

162 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

163  
__ªs
;

164 
	}
}

165 
__MATH_INLINE
 

166 
__NTH
 (
	$rötf
 (
__x
))

168 
__ªs
;

173 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

174  
__ªs
;

175 
	}
}

177 #ifde‡
__USE_ISOC99


179 
__MATH_INLINE
 

180 
__NTH
 (
	$√¨byöt
 (
__x
))

182 
__ªs
;

187 
__asm
 
	`__vﬁ©ûe__
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

188  
__ªs
;

189 
	}
}

190 
__MATH_INLINE
 

191 
__NTH
 (
	$√¨byötf
 (
__x
))

193 
__ªs
;

198 
__asm
 
	`__vﬁ©ûe__
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

199  
__ªs
;

200 
	}
}

206 
__MATH_INLINE
 

207 
__NTH
 (
	$˚û
 (
__x
))

209 
__ªs
;

210 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

211  
__ªs
;

212 
	}
}

214 
__MATH_INLINE
 

215 
__NTH
 (
	$˚ûf
 (
__x
))

217 
__ªs
;

218 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

219  
__ªs
;

220 
	}
}

223 
__MATH_INLINE
 

224 
__NTH
 (
	$Êo‹
 (
__x
))

226 
__ªs
;

227 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

228  
__ªs
;

229 
	}
}

231 
__MATH_INLINE
 

232 
__NTH
 (
	$Êo‹f
 (
__x
))

234 
__ªs
;

235 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

236  
__ªs
;

237 
	}
}

245 #i‡!
deföed
 
__SSE2_MATH__
 && !deföed 
__x86_64__


246 #i‡((!
deföed
 
__NO_MATH_INLINES
 || deföed 
__LIBC_INTERNAL_MATH_INLINES
) \

247 && 
deföed
 
	g__OPTIMIZE__
)

251 #unde‡
m©h_îrh™dlög


260 #ifde‡
__USE_ISOC99


261 
	#__ölöe_m©h›
(
func
, 
›
) \

262 
	`__ölöe_m©h›_
 (, 
func
, 
›
) \

263 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

264 
	`__ölöe_m©h›_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

265 
	#__ölöe_m©h›NP
(
func
, 
›
) \

266 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
) \

267 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
) \

268 
	`__ölöe_m©h›NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
)

	)

270 
	#__ölöe_m©h›
(
func
, 
›
) \

271 
	`__ölöe_m©h›_
 (, 
func
, 
›
)

	)

272 
	#__ölöe_m©h›NP
(
func
, 
›
) \

273 
	`__ölöe_m©h›NP_
 (, 
func
, 
›
)

	)

276 
	#__ölöe_m©h›_
(
Êﬂt_ty≥
, 
func
, 
›
) \

277 
	`__ölöe_m©h›_de˛_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

278 
	#__ölöe_m©h›NP_
(
Êﬂt_ty≥
, 
func
, 
›
) \

279 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, "0" (
__x
))

	)

282 #ifde‡
__USE_ISOC99


283 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

284 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
) \

285 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

286 
	`__ölöe_m©h›_de˛_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

287 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

288 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
) \

289 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
f
), 
›
, 
∑øms
) \

290 
	`__ölöe_m©h›_de˛NP_
 (, 
	`__CONCAT
(
func
,
l
), 
›
, 
∑øms
)

	)

292 
	#__ölöe_m©h›_de˛
(
func
, 
›
, 
∑øms
...) \

293 
	`__ölöe_m©h›_de˛_
 (, 
func
, 
›
, 
∑øms
)

	)

294 
	#__ölöe_m©h›_de˛NP
(
func
, 
›
, 
∑øms
...) \

295 
	`__ölöe_m©h›_de˛NP_
 (, 
func
, 
›
, 
∑øms
)

	)

298 
	#__ölöe_m©h›_de˛_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

299 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

300 
	`__ölöe_m©h›_de˛NP_
 (
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
)

	)

302 
	#__ölöe_m©h›_de˛NP_
(
Êﬂt_ty≥
, 
func
, 
›
, 
∑øms
...) \

303 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
__x
)) \

305 
Êﬂt_ty≥
 
__ªsu…
; \

306 
__asm
 
	`__vﬁ©ûe__
 (
›
 : "Ò" (
__ªsu…
Ë: 
∑øms
); \

307  
__ªsu…
; \

308 }

	)

311 #ifde‡
__USE_ISOC99


312 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

313 
	`__ölöe_m©hcode_
 (, 
func
, 
¨g
, 
code
) \

314 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

315 
	`__ölöe_m©hcode_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

316 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

317 
	`__ölöe_m©hcodeNP_
 (, 
func
, 
¨g
, 
code
) \

318 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g
, 
code
) \

319 
	`__ölöe_m©hcodeNP_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g
, 
code
)

	)

320 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

321 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

322 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

323 
	`__ölöe_m©hcode2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

324 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

325 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
) \

326 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
code
) \

327 
	`__ölöe_m©hcodeNP2_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
code
)

	)

328 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

329 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

330 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

331 
	`__ölöe_m©hcode3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

332 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

333 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

334 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
f
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

335 
	`__ölöe_m©hcodeNP3_
 (, 
	`__CONCAT
(
func
,
l
), 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

337 
	#__ölöe_m©hcode
(
func
, 
¨g
, 
code
) \

338 
	`__ölöe_m©hcode_
 (, 
func
, (
¨g
), 
code
)

	)

339 
	#__ölöe_m©hcodeNP
(
func
, 
¨g
, 
code
) \

340 
	`__ölöe_m©hcodeNP_
 (, 
func
, (
¨g
), 
code
)

	)

341 
	#__ölöe_m©hcode2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

342 
	`__ölöe_m©hcode2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

343 
	#__ölöe_m©hcodeNP2
(
func
, 
¨g1
, 
¨g2
, 
code
) \

344 
	`__ölöe_m©hcodeNP2_
 (, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

345 
	#__ölöe_m©hcode3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

346 
	`__ölöe_m©hcode3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

347 
	#__ölöe_m©hcodeNP3
(
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

348 
	`__ölöe_m©hcodeNP3_
 (, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

351 
	#__ölöe_m©hcode_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

352 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥Ë
__THROW
; \

353 
	`__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
)

	)

355 
	#__ölöe_m©hcodeNP_
(
Êﬂt_ty≥
, 
func
, 
¨g
, 
code
) \

356 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g
)) \

358 
code
; \

359 }

	)

362 
	#__ölöe_m©hcode2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

363 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

364 
	`__ölöe_m©hcodeNP2_
 (
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
)

	)

366 
	#__ölöe_m©hcodeNP2_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
code
) \

367 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
)) \

369 
code
; \

370 }

	)

372 
	#__ölöe_m©hcode3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

373 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`func
 (Êﬂt_ty≥, flﬂt_ty≥, flﬂt_ty≥Ë
__THROW
; \

374 
	`__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
)

	)

376 
	#__ölöe_m©hcodeNP3_
(
Êﬂt_ty≥
, 
func
, 
¨g1
, 
¨g2
, 
¨g3
, 
code
) \

377 
__MATH_INLINE
 
Êﬂt_ty≥
 
	`__NTH
 (
	`func
 (Êﬂt_ty≥ 
¨g1
, flﬂt_ty≥ 
¨g2
, \

378 
Êﬂt_ty≥
 
¨g3
)) \

380 
code
; \

381 }

	)

385 #i‡!
deföed
 
__NO_MATH_INLINES
 && deföed 
__OPTIMIZE__


389 #ifde‡
__FAST_MATH__


390 #ifde‡
__USE_GNU


391 
	#__söcos_code
 \

392 
__co§
; \

393 
__sör
; \

394 
__swtmp
; \

395 
__asm
 
__vﬁ©ûe__
 \

410 : "Ò" (
__co§
), "=u" (
__sör
), "˜" (
__swtmp
Ë: "0" (
__x
)); \

411 *
__söx
 = 
__sör
; \

412 *
__cosx
 = 
__co§


	)

414 
__MATH_INLINE
 

415 
__NTH
 (
	$__söcos
 (
__x
, *
__söx
, *
__cosx
))

417 
__söcos_code
;

418 
	}
}

420 
__MATH_INLINE
 

421 
__NTH
 (
	$__söcosf
 (
__x
, *
__söx
, *
__cosx
))

423 
__söcos_code
;

424 
	}
}

426 
__MATH_INLINE
 

427 
__NTH
 (
	$__söco¶
 (
__x
, *
__söx
, *
__cosx
))

429 
__söcos_code
;

430 
	}
}

437 #i‡
__GNUC_PREREQ
 (3, 5)

438 
	#__expm1_code
 \

439 
__ãmp
; \

440 
__ãmp
 = 
	`__buûtö_expm1l
 (
__x
); \

441  
__ãmp
 ? __ãm∞: 
__x


	)

443 
	#__expm1_code
 \

444 
__vÆue
; \

445 
__exp⁄ít
; \

446 
__ãmp
; \

447 
__asm
 
__vﬁ©ûe__
 \

456 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

457 
__asm
 
__vﬁ©ûe__
 \

459 : "Ò" (
__ãmp
Ë: "0" (1.0), "u" (
__exp⁄ít
)); \

460 
__ãmp
 -= 1.0; \

461 
__ãmp
 +
__vÆue
; \

462  
__ãmp
 ? __ãm∞: 
__x


	)

464 
	$__ölöe_m©hcodeNP_
 (, 
__expm1l
, 
__x
, 
__expm1_code
)

466 #i‡
	`__GNUC_PREREQ
 (3, 4)

467 
	`__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
,  
	$__buûtö_ex∂
 (
__x
))

469 
	#__exp_code
 \

470 
__vÆue
; \

471 
__exp⁄ít
; \

472 
__asm
 
__vﬁ©ûe__
 \

480 : "Ò" (
__vÆue
), "=u" (
__exp⁄ít
Ë: "0" (
__x
)); \

481 
__vÆue
 += 1.0; \

482 
__asm
 
__vﬁ©ûe__
 \

484 : "Ò" (
__vÆue
Ë: "0" (__vÆue), "u" (
__exp⁄ít
)); \

485  
__vÆue


	)

486 
	$__ölöe_m©hcodeNP
 (
exp
, 
__x
, 
__exp_code
)

487 
	$__ölöe_m©hcodeNP_
 (, 
__ex∂
, 
__x
, 
__exp_code
)

491 #i‡!
	`__GNUC_PREREQ
 (3, 5)

492 
	`__ölöe_m©hcodeNP
 (
èn
, 
__x
, \

493 
__vÆue
; \

494 
__vÆue2
 
	`__©åibuã__
 ((
__unu£d__
)); \

495 
__asm
 
__vﬁ©ûe__
 \

497 : "Ò" (
__vÆue2
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

498  
__vÆue
)

503 #i‡
	`__GNUC_PREREQ
 (3, 4)

504 
	`__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
,

505  
	$__buûtö_©™2l
 (
__y
, 
__x
))

507 
	#__©™2_code
 \

508 
__vÆue
; \

509 
__asm
 
__vﬁ©ûe__
 \

511 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "st(1)"); \

512  
__vÆue


	)

513 #ifde‡
__FAST_MATH__


514 
	$__ölöe_m©hcodeNP2
 (
©™2
, 
__y
, 
__x
, 
__©™2_code
)

516 
	$__ölöe_m©hcodeNP2_
 (, 
__©™2l
, 
__y
, 
__x
, 
__©™2_code
)

520 #i‡
deföed
 
__FAST_MATH__
 && !
	`__GNUC_PREREQ
 (3, 5)

521 
	`__ölöe_m©hcodeNP2
 (
fmod
, 
__x
, 
__y
, \

522 
__vÆue
; \

523 
__asm
 
__vﬁ©ûe__
 \

528 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" (
__y
) : "ax", "cc"); \

529  
__vÆue
)

533 #ifde‡
__FAST_MATH__


534 #i‡!
	`__GNUC_PREREQ
 (3,3)

535 
	`__ölöe_m©h›NP
 (
sqπ
, "fsqrt")

536 
	`__ölöe_m©h›NP_
 (, 
__sqπl
, "fsqrt")

537 
	#__libc_sqπl
(
n
Ë
	`__sqπl
 (n)

	)

539 
	#__libc_sqπl
(
n
Ë
	`__buûtö_sqπl
 (n)

	)

543 #i‡
	`__GNUC_PREREQ
 (2, 8)

544 
	`__ölöe_m©hcodeNP_
 (, 
Ábs
, 
__x
,  
	$__buûtö_Ábs
 (
__x
))

545 #ifde‡
__USE_ISOC99


546 
	`__ölöe_m©hcodeNP_
 (, 
Ábsf
, 
__x
,  
	$__buûtö_Ábsf
 (
__x
))

547 
	`__ölöe_m©hcodeNP_
 (, 
Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

549 
	`__ölöe_m©hcodeNP_
 (, 
__Áb¶
, 
__x
,  
	$__buûtö_Áb¶
 (
__x
))

551 
	`__ölöe_m©h›
 (
Ábs
, "fabs")

552 
	`__ölöe_m©h›_
 (, 
__Áb¶
, "fabs")

555 #ifde‡
__FAST_MATH__


556 #i‡!
	`__GNUC_PREREQ
 (3, 4)

558 
	`__ölöe_m©h›NP
 (
sö
, "fsin")

560 
	`__ölöe_m©h›NP
 (
cos
, "fcos")

562 
	`__ölöe_m©h›_de˛NP
 (
log
, "Êd 2; fxch; fyl2x", "0" (
__x
) : "st(1)")

565 #i‡!
	`__GNUC_PREREQ
 (3, 5)

566 
	`__ölöe_m©h›_de˛NP
 (
log10
, "Êdlg2; fxch; fyl2x", "0" (
__x
) : "st(1)")

568 
	`__ölöe_m©hcodeNP
 (
asö
, 
__x
,  
	`__©™2l
 (__x, 
	`__libc_sqπl
 (1.0 - __x * __x)))

569 
	`__ölöe_m©hcodeNP
 (
acos
, 
__x
,  
	`__©™2l
 (
	`__libc_sqπl
 (1.0 - __x * __x), __x))

572 #i‡!
	`__GNUC_PREREQ
 (3, 4)

573 
	`__ölöe_m©h›_de˛NP
 (
©™
, "Êd1; f∑èn", "0" (
__x
) : "st(1)")

577 
	`__ölöe_m©hcode_
 (, 
__sgn1l
, 
__x
, \

578 
__exãnsi⁄__
 uni⁄ { 
__xld
; 
__xi
[3]; } 
__n
 = \

579 { 
__xld
: 
__x
 
	}
}; \

580 
	g__n
.
	g__xi
[2] = (
__n
.
__xi
[2] & 0x8000) | 0x3fff; \

581 
	g__n
.
	g__xi
[1] = 0x80000000; \

582 
	g__n
.
	g__xi
[0] = 0; \

583  
	g__n
.
	g__xld
)

586 #ifde‡
__FAST_MATH__


588 
__ölöe_m©hcodeNP
 (
söh
, 
__x
, \

589 
__exm1
 = 
__expm1l
 (
__Áb¶
 (
__x
)); \

590  0.5 * (
__exm1
 / (__exm1 + 1.0Ë+ __exm1Ë* 
	$__sgn1l
 (
__x
))

592 
	`__ölöe_m©hcodeNP
 (
cosh
, 
__x
, \

593 
__ex
 = 
	`__ex∂
 (
__x
); \

594  0.5 * (
__ex
 + 1.0 / __ex))

596 
	`__ölöe_m©hcodeNP
 (
ènh
, 
__x
, \

597 
__exm1
 = 
	`__expm1l
 (-
	`__Áb¶
 (
__x
 + __x)); \

598  
__exm1
 / (__exm1 + 2.0Ë* 
	`__sgn1l
 (-
__x
))

601 
	`__ölöe_m©hcodeNP
 (
Êo‹
, 
__x
, \

602 
__vÆue
; \

603 
__ign‹e
; \

604 
__cw
; \

605 
__cwtmp
; \

606 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

614 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

615 "=m" (
__cw
) \

616 : "0" (
__x
)); \

617  
__vÆue
)

619 
	`__ölöe_m©hcodeNP
 (
˚û
, 
__x
, \

620 
__vÆue
; \

621 
__ign‹e
; \

622 
__cw
; \

623 
__cwtmp
; \

624 
__asm
 
	`__vﬁ©ûe
 ("fnstcw %3\n\t" \

632 : "Ò" (
__vÆue
), "=&q" (
__ign‹e
), "=m" (
__cwtmp
), \

633 "=m" (
__cw
) \

634 : "0" (
__x
)); \

635  
__vÆue
)

637 #ifde‡
__FAST_MATH__


638 
	#__ldexp_code
 \

639 
__vÆue
; \

640 
__asm
 
__vﬁ©ûe__
 \

642 : "Ò" (
__vÆue
Ë: "0" (
__x
), "u" ((Ë
__y
)); \

643  
__vÆue


	)

645 
__MATH_INLINE
 

646 
	`__NTH
 (
	$ldexp
 (
__x
, 
__y
))

648 
__ldexp_code
;

649 
	}
}

654 #ifde‡
__USE_ISOC99


656 #ifde‡
__FAST_MATH__


657 
	$__ölöe_m©hcodeNP
 (
expm1
, 
__x
, 
__expm1_code
)

661 
	#__M_SQRT2
 1.41421356237309504880L

	)

663 #i‡!
	`__GNUC_PREREQ
 (3, 5)

664 
	`__ölöe_m©hcodeNP
 (
log1p
, 
__x
, \

665 
__vÆue
; \

666 i‡(
	`__Áb¶
 (
__x
Ë>1.0 - 0.5 * 
__M_SQRT2
) \

667 
__vÆue
 = 
	`logl
 (1.0 + 
__x
); \

669 
__asm
 
__vﬁ©ûe__
 \

673 : "Ò" (
__vÆue
Ë: "0" (
__x
) : "st(1)"); \

674  
__vÆue
)

679 
	`__ölöe_m©hcodeNP
 (
asöh
, 
__x
, \

680 
__y
 = 
	`__Áb¶
 (
__x
); \

681  (
	`log1∂
 (
__y
 * __y / (
	`__libc_sqπl
 (__y * __y + 1.0) + 1.0) + __y) \

682 * 
	$__sgn1l
 (
__x
)))

684 
	`__ölöe_m©hcodeNP
 (
acosh
, 
__x
, \

685  
	`logl
 (
__x
 + 
	`__libc_sqπl
 (__x - 1.0) * __libc_sqrtl (__x + 1.0)))

687 
	`__ölöe_m©hcodeNP
 (
©™h
, 
__x
, \

688 
__y
 = 
	`__Áb¶
 (
__x
); \

689  -0.5 * 
	`log1∂
 (-(
__y
 + __yË/ (1.0 + __y)Ë* 
	$__sgn1l
 (
__x
))

692 
	`__ölöe_m©hcodeNP2
 (
hypŸ
, 
__x
, 
__y
,

693  
	`__libc_sqπl
 (
__x
 * __x + 
__y
 * __y))

695 #i‡!
	`__GNUC_PREREQ
 (3, 5)

696 
	`__ölöe_m©hcodeNP
(
logb
, 
__x
, \

697 
__vÆue
; \

698 
__junk
; \

699 
__asm
 
__vﬁ©ûe__
 \

701 : "Ò" (
__junk
), "=u" (
__vÆue
Ë: "0" (
__x
)); \

702  
__vÆue
)

708 #ifde‡
__USE_ISOC99


709 #ifde‡
__FAST_MATH__


711 #i‡!
	`__GNUC_PREREQ
 (3, 5)

712 
	`__ölöe_m©h›_de˛NP
 (
log2
, "Êd1; fxch; fyl2x", "0" (
__x
) : "st(1)")

715 
__MATH_INLINE
 

716 
	`__NTH
 (
	$ldexpf
 (
__x
, 
__y
))

718 
__ldexp_code
;

719 
	}
}

721 
__MATH_INLINE
 

722 
__NTH
 (
	$ldex∂
 (
__x
, 
__y
))

724 
__ldexp_code
;

725 
	}
}

727 
__ölöe_m©h›NP
 (
röt
, "frndint")

730 
	#__Ãöt_code
 \

731 
__Ãöåes
; \

732 
__asm__
 
__vﬁ©ûe__
 \

734 : "=m" (
__Ãöåes
Ë: "t" (
__x
) : "st"); \

735  
__Ãöåes


	)

736 
__MATH_INLINE
 

737 
__NTH
 (
	$Ãötf
 (
__x
))

739 
__Ãöt_code
;

740 
	}
}

741 
__MATH_INLINE
 

742 
__NTH
 (
	$Ãöt
 (
__x
))

744 
__Ãöt_code
;

745 
	}
}

746 
__MATH_INLINE
 

747 
__NTH
 (
	$Ãöé
 (
__x
))

749 
__Ãöt_code
;

750 
	}
}

751 #unde‡
__Ãöt_code


753 
	#__Œröt_code
 \

754 
__Œröåes
; \

755 
__asm__
 
__vﬁ©ûe__
 \

757 : "=m" (
__Œröåes
Ë: "t" (
__x
) : "st"); \

758  
__Œröåes


	)

759 
__exãnsi⁄__


760 
__MATH_INLINE
 

761 
__NTH
 (
	$Œrötf
 (
__x
))

763 
__Œröt_code
;

764 
	}
}

765 
__exãnsi⁄__


766 
__MATH_INLINE
 

767 
__NTH
 (
	$Œröt
 (
__x
))

769 
__Œröt_code
;

770 
	}
}

771 
__exãnsi⁄__


772 
__MATH_INLINE
 

773 
__NTH
 (
	$Œröé
 (
__x
))

775 
__Œröt_code
;

776 
	}
}

777 #unde‡
__Œröt_code


782 #ifde‡
__USE_MISC


784 #i‡
deföed
 
__FAST_MATH__
 && !
__GNUC_PREREQ
 (3, 5)

785 
__ölöe_m©hcodeNP2
 (
dªm
, 
__x
, 
__y
, \

786 
__vÆue
; \

787 
__˛obbîed
; \

788 
__asm
 
__vﬁ©ûe__
 \

793 : "Ò" (
__vÆue
), "=&a" (
__˛obbîed
Ë: "0" (
__x
), "u" (
__y
) : "cc"); \

794  
__vÆue
)

799 
__MATH_INLINE
 

800 
__NTH
 (
	$__föôe
 (
__x
))

802  (
__exãnsi⁄__


803 (((((uni⁄ { 
__d
; 
__i
[2]; }Ë{__d: 
__x
}).__i[1]

805 
	}
}

810 #unde‡
__©™2_code


811 #ifde‡
__FAST_MATH__


812 #unde‡
__expm1_code


813 #unde‡
__exp_code


814 #unde‡
__söcos_code


821 #ifde‡
__LIBC_INTERNAL_MATH_INLINES


822 
__ölöe_m©h›
 (
__õì754_sqπ
, "fsqrt")

823 
__ölöe_m©hcode2_
 (, 
__õì754_©™2l
, 
__y
, 
__x
,

824 
__vÆue
;

825 
__asm
 
__vﬁ©ûe__
 ("fpatan\n\t"

826 : "Ò" (
__vÆue
)

827 : "0" (
__x
), "u" (
__y
) : "st(1)");

828  
__vÆue
;)

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 #ifde‡
__USE_MISC


28 
	#MAP_32BIT
 0x40

	)

32 #ifde‡
__USE_MISC


33 
	#MAP_GROWSDOWN
 0x00100

	)

34 
	#MAP_DENYWRITE
 0x00800

	)

35 
	#MAP_EXECUTABLE
 0x01000

	)

36 
	#MAP_LOCKED
 0x02000

	)

37 
	#MAP_NORESERVE
 0x04000

	)

38 
	#MAP_POPULATE
 0x08000

	)

39 
	#MAP_NONBLOCK
 0x10000

	)

40 
	#MAP_STACK
 0x20000

	)

41 
	#MAP_HUGETLB
 0x40000

	)

45 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/netdb.h

18 #i‚de‡
_NETDB_H


26 
	s√ã¡


28 *
	mn_«me
;

29 **
	mn_Æü£s
;

30 
	mn_addπy≥
;

31 
uöt32_t
 
	mn_√t
;

	@/usr/include/bits/param.h

19 #i‚de‡
_SYS_PARAM_H


23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<löux/limôs.h
>

28 
	~<löux/∑øm.h
>

31 #ifde‡
__undef_ARG_MAX


32 #unde‡
ARG_MAX


33 #unde‡
__undef_ARG_MAX


36 
	#MAXSYMLINKS
 20

	)

41 
	#NOFILE
 256

	)

42 
	#NCARGS
 131072

	)

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

31 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

34 
	#_POSIX_AIO_MAX
 1

	)

37 
	#_POSIX_ARG_MAX
 4096

	)

40 #ifde‡
__USE_XOPEN2K


41 
	#_POSIX_CHILD_MAX
 25

	)

43 
	#_POSIX_CHILD_MAX
 6

	)

47 
	#_POSIX_DELAYTIMER_MAX
 32

	)

51 
	#_POSIX_HOST_NAME_MAX
 255

	)

54 
	#_POSIX_LINK_MAX
 8

	)

57 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

60 
	#_POSIX_MAX_CANON
 255

	)

64 
	#_POSIX_MAX_INPUT
 255

	)

67 
	#_POSIX_MQ_OPEN_MAX
 8

	)

70 
	#_POSIX_MQ_PRIO_MAX
 32

	)

73 
	#_POSIX_NAME_MAX
 14

	)

76 #ifde‡
__USE_XOPEN2K


77 
	#_POSIX_NGROUPS_MAX
 8

	)

79 
	#_POSIX_NGROUPS_MAX
 0

	)

83 #ifde‡
__USE_XOPEN2K


84 
	#_POSIX_OPEN_MAX
 20

	)

86 
	#_POSIX_OPEN_MAX
 16

	)

89 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


92 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

96 
	#_POSIX_PATH_MAX
 256

	)

99 
	#_POSIX_PIPE_BUF
 512

	)

103 
	#_POSIX_RE_DUP_MAX
 255

	)

106 
	#_POSIX_RTSIG_MAX
 8

	)

109 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

112 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

115 
	#_POSIX_SIGQUEUE_MAX
 32

	)

118 
	#_POSIX_SSIZE_MAX
 32767

	)

121 
	#_POSIX_STREAM_MAX
 8

	)

124 
	#_POSIX_SYMLINK_MAX
 255

	)

128 
	#_POSIX_SYMLOOP_MAX
 8

	)

131 
	#_POSIX_TIMER_MAX
 32

	)

134 
	#_POSIX_TTY_NAME_MAX
 9

	)

137 #ifde‡
__USE_XOPEN2K


138 
	#_POSIX_TZNAME_MAX
 6

	)

140 
	#_POSIX_TZNAME_MAX
 3

	)

143 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


145 
	#_POSIX_QLIMIT
 1

	)

149 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

152 
	#_POSIX_UIO_MAXIOV
 16

	)

156 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

160 
	~<bôs/loˇl_lim.h
>

163 #i‚def 
SSIZE_MAX


164 
	#SSIZE_MAX
 
LONG_MAX


	)

171 #i‚def 
NGROUPS_MAX


172 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

22 #i‚def 
_BITS_POSIX2_LIM_H


23 
	#_BITS_POSIX2_LIM_H
 1

	)

27 
	#_POSIX2_BC_BASE_MAX
 99

	)

30 
	#_POSIX2_BC_DIM_MAX
 2048

	)

33 
	#_POSIX2_BC_SCALE_MAX
 99

	)

36 
	#_POSIX2_BC_STRING_MAX
 1000

	)

40 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

44 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

47 
	#_POSIX2_LINE_MAX
 2048

	)

51 
	#_POSIX2_RE_DUP_MAX
 255

	)

55 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

62 #i‚def 
BC_BASE_MAX


63 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

65 #i‚def 
BC_DIM_MAX


66 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

68 #i‚def 
BC_SCALE_MAX


69 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

71 #i‚def 
BC_STRING_MAX


72 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

74 #i‚def 
COLL_WEIGHTS_MAX


75 
	#COLL_WEIGHTS_MAX
 255

	)

77 #i‚def 
EXPR_NEST_MAX


78 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

80 #i‚def 
LINE_MAX


81 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

83 #i‚def 
CHARCLASS_NAME_MAX


84 
	#CHARCLASS_NAME_MAX
 2048

	)

88 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

29 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

32 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

35 
	#_POSIX_FSYNC
 200809L

	)

38 
	#_POSIX_MAPPED_FILES
 200809L

	)

41 
	#_POSIX_MEMLOCK
 200809L

	)

44 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

47 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

50 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

54 
	#_POSIX_VDISABLE
 '\0'

	)

57 
	#_POSIX_NO_TRUNC
 1

	)

60 
	#_XOPEN_REALTIME
 1

	)

63 
	#_XOPEN_REALTIME_THREADS
 1

	)

66 
	#_XOPEN_SHM
 1

	)

69 
	#_POSIX_THREADS
 200809L

	)

72 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

73 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

76 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

79 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

85 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

89 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

91 #ifde‡
__USE_XOPEN2K8


93 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

96 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

100 
	#_POSIX_SEMAPHORES
 200809L

	)

103 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

106 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

107 
	#_POSIX_ASYNC_IO
 1

	)

109 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

111 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

114 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

117 
	#_LFS_LARGEFILE
 1

	)

118 
	#_LFS64_LARGEFILE
 1

	)

119 
	#_LFS64_STDIO
 1

	)

122 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

125 
	#_POSIX_CPUTIME
 0

	)

128 
	#_POSIX_THREAD_CPUTIME
 0

	)

131 
	#_POSIX_REGEXP
 1

	)

134 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

137 
	#_POSIX_SHELL
 1

	)

140 
	#_POSIX_TIMEOUTS
 200809L

	)

143 
	#_POSIX_SPIN_LOCKS
 200809L

	)

146 
	#_POSIX_SPAWN
 200809L

	)

149 
	#_POSIX_TIMERS
 200809L

	)

152 
	#_POSIX_BARRIERS
 200809L

	)

155 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

158 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

161 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

164 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

167 
	#_POSIX_ADVISORY_INFO
 200809L

	)

170 
	#_POSIX_IPV6
 200809L

	)

173 
	#_POSIX_RAW_SOCKETS
 200809L

	)

176 
	#_POSIX2_CHAR_TERM
 200809L

	)

179 
	#_POSIX_SPORADIC_SERVER
 -1

	)

180 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_TRACE
 -1

	)

184 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

185 
	#_POSIX_TRACE_INHERIT
 -1

	)

186 
	#_POSIX_TRACE_LOG
 -1

	)

189 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/resource.h

19 #i‚de‡
_SYS_RESOURCE_H


23 
	~<bôs/ty≥s.h
>

31 
	e__æimô_ªsour˚


34 
	mRLIMIT_CPU
 = 0,

35 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

38 
	mRLIMIT_FSIZE
 = 1,

39 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

42 
	mRLIMIT_DATA
 = 2,

43 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

46 
	mRLIMIT_STACK
 = 3,

47 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

50 
	mRLIMIT_CORE
 = 4,

51 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

57 
	m__RLIMIT_RSS
 = 5,

58 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

61 
	mRLIMIT_NOFILE
 = 7,

62 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

63 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

64 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

67 
	mRLIMIT_AS
 = 9,

68 
	#RLIMIT_AS
 
RLIMIT_AS


	)

71 
	m__RLIMIT_NPROC
 = 6,

72 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

75 
	m__RLIMIT_MEMLOCK
 = 8,

76 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

79 
	m__RLIMIT_LOCKS
 = 10,

80 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

83 
	m__RLIMIT_SIGPENDING
 = 11,

84 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

87 
	m__RLIMIT_MSGQUEUE
 = 12,

88 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

93 
	m__RLIMIT_NICE
 = 13,

94 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

98 
	m__RLIMIT_RTPRIO
 = 14,

99 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

104 
	m__RLIMIT_RTTIME
 = 15,

105 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

107 
	m__RLIMIT_NLIMITS
 = 16,

108 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


109 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

110 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

114 #i‚de‡
__USE_FILE_OFFSET64


115 
	#RLIM_INFINITY
 ((
__æim_t
Ë-1)

	)

117 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

120 #ifde‡
__USE_LARGEFILE64


121 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

125 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

126 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

130 #i‚de‡
__USE_FILE_OFFSET64


131 
__æim_t
 
	tæim_t
;

133 
__æim64_t
 
	tæim_t
;

135 #ifde‡
__USE_LARGEFILE64


136 
__æim64_t
 
	tæim64_t
;

139 
	sæimô


142 
æim_t
 
	mæim_cur
;

144 
æim_t
 
	mæim_max
;

147 #ifde‡
__USE_LARGEFILE64


148 
	sæimô64


151 
æim64_t
 
	mæim_cur
;

153 
æim64_t
 
	mæim_max
;

158 
	e__rußge_who


161 
	mRUSAGE_SELF
 = 0,

162 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

165 
	mRUSAGE_CHILDREN
 = -1

166 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

168 #ifde‡
__USE_GNU


171 
	mRUSAGE_THREAD
 = 1

172 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

174 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

178 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

179 
	~<bôs/ty≥s/°ru˘_rußge.h
>

182 
	#PRIO_MIN
 -20

	)

183 
	#PRIO_MAX
 20

	)

187 
	e__¥i‹ôy_which


189 
	mPRIO_PROCESS
 = 0,

190 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

191 
	mPRIO_PGRP
 = 1,

192 
	#PRIO_PGRP
 
PRIO_PGRP


	)

193 
	mPRIO_USER
 = 2

194 
	#PRIO_USER
 
PRIO_USER


	)

198 
	g__BEGIN_DECLS


200 #ifde‡
__USE_GNU


202 #i‚de‡
__USE_FILE_OFFSET64


203 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

204 c⁄° 
æimô
 *
__√w_limô
,

205 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

207 #ifde‡
__REDIRECT_NTH


208 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

209 
__æimô_ªsour˚
 
__ªsour˚
,

210 c⁄° 
æimô
 *
__√w_limô
,

211 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

213 
	#¥limô
 
¥limô64


	)

216 #ifde‡
__USE_LARGEFILE64


217 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

218 c⁄° 
æimô64
 *
__√w_limô
,

219 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

223 
__END_DECLS


	@/usr/include/bits/sem.h

18 #i‚de‡
_SYS_SEM_H


22 
	~<sys/ty≥s.h
>

25 
	#SEM_UNDO
 0x1000

	)

28 
	#GETPID
 11

	)

29 
	#GETVAL
 12

	)

30 
	#GETALL
 13

	)

31 
	#GETNCNT
 14

	)

32 
	#GETZCNT
 15

	)

33 
	#SETVAL
 16

	)

34 
	#SETALL
 17

	)

38 
	s£mid_ds


40 
ùc_≥rm
 
	m£m_≥rm
;

41 
__time_t
 
	m£m_Ÿime
;

42 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved1
;

43 
__time_t
 
	m£m_˘ime
;

44 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved2
;

45 
__sysˇŒ_ul⁄g_t
 
	m£m_n£ms
;

46 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved3
;

47 
__sysˇŒ_ul⁄g_t
 
	m__glibc_ª£rved4
;

64 
	#_SEM_SEMUN_UNDEFINED
 1

	)

66 #ifde‡
__USE_MISC


69 
	#SEM_STAT
 18

	)

70 
	#SEM_INFO
 19

	)

72 
	s£möfo


74 
	m£mm≠
;

75 
	m£mmni
;

76 
	m£mmns
;

77 
	m£mmnu
;

78 
	m£mm¶
;

79 
	m£m›m
;

80 
	m£mume
;

81 
	m£musz
;

82 
	m£mvmx
;

83 
	m£m´m
;

	@/usr/include/bits/semaphore.h

19 #i‚de‡
_SEMAPHORE_H


23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_SEM_T
 32

	)

28 
	#__SIZEOF_SEM_T
 16

	)

33 
	#SEM_FAILED
 ((
£m_t
 *Ë0)

	)

38 
	m__size
[
__SIZEOF_SEM_T
];

39 
	m__Æign
;

40 } 
	t£m_t
;

	@/usr/include/bits/setjmp.h

19 #i‚de‡
_BITS_SETJMP_H


20 
	#_BITS_SETJMP_H
 1

	)

22 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


26 
	~<bôs/w‹dsize.h
>

28 #i‚de‡
_ASM


30 #i‡
__WORDSIZE
 == 64

31 
	t__jmp_buf
[8];

32 #ñi‡
deföed
 
__x86_64__


33 
__exãnsi⁄__
 
	t__jmp_buf
[8];

35 
	t__jmp_buf
[6];

	@/usr/include/bits/shm.h

18 #i‚de‡
_SYS_SHM_H


22 
	~<bôs/ty≥s.h
>

25 
	#SHM_R
 0400

	)

26 
	#SHM_W
 0200

	)

29 
	#SHM_RDONLY
 010000

	)

30 
	#SHM_RND
 020000

	)

31 
	#SHM_REMAP
 040000

	)

32 
	#SHM_EXEC
 0100000

	)

35 
	#SHM_LOCK
 11

	)

36 
	#SHM_UNLOCK
 12

	)

38 
	g__BEGIN_DECLS


41 
	#SHMLBA
 (
	`__gë∑gesize
 ())

	)

42 
	$__gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

46 
__sysˇŒ_ul⁄g_t
 
	tshm©t_t
;

49 
	sshmid_ds


51 
ùc_≥rm
 
shm_≥rm
;

52 
size_t
 
shm_£gsz
;

53 
__time_t
 
shm_©ime
;

54 #i‚de‡
__x86_64__


55 
__glibc_ª£rved1
;

57 
__time_t
 
shm_dtime
;

58 #i‚de‡
__x86_64__


59 
__glibc_ª£rved2
;

61 
__time_t
 
shm_˘ime
;

62 #i‚de‡
__x86_64__


63 
__glibc_ª£rved3
;

65 
__pid_t
 
shm_˝id
;

66 
__pid_t
 
shm_Õid
;

67 
shm©t_t
 
shm_«âch
;

68 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved4
;

69 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved5
;

72 #ifde‡
__USE_MISC


75 
	#SHM_STAT
 13

	)

76 
	#SHM_INFO
 14

	)

79 
	#SHM_DEST
 01000

	)

80 
	#SHM_LOCKED
 02000

	)

81 
	#SHM_HUGETLB
 04000

	)

82 
	#SHM_NORESERVE
 010000

	)

84 
	sshmöfo


86 
__sysˇŒ_ul⁄g_t
 
shmmax
;

87 
__sysˇŒ_ul⁄g_t
 
shmmö
;

88 
__sysˇŒ_ul⁄g_t
 
shmmni
;

89 
__sysˇŒ_ul⁄g_t
 
shm£g
;

90 
__sysˇŒ_ul⁄g_t
 
shmÆl
;

91 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved1
;

92 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved2
;

93 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved3
;

94 
__sysˇŒ_ul⁄g_t
 
__glibc_ª£rved4
;

97 
	sshm_öfo


99 
u£d_ids
;

100 
__sysˇŒ_ul⁄g_t
 
shm_tŸ
;

101 
__sysˇŒ_ul⁄g_t
 
shm_rss
;

102 
__sysˇŒ_ul⁄g_t
 
shm_swp
;

103 
__sysˇŒ_ul⁄g_t
 
sw≠_©ãm±s
;

104 
__sysˇŒ_ul⁄g_t
 
sw≠_suc˚s£s
;

109 
__END_DECLS


	@/usr/include/bits/sigaction.h

19 #i‚de‡
_SIGNAL_H


24 
	ssiga˘i⁄


27 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


31 
__sigh™dÀr_t
 
	mß_h™dÀr
;

33 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

35 
	m__siga˘i⁄_h™dÀr
;

36 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

37 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

39 
__sigh™dÀr_t
 
	mß_h™dÀr
;

43 
__sig£t_t
 
	mß_mask
;

46 
	mß_Êags
;

49 (*
	mß_ª°‹î
) ();

53 
	#SA_NOCLDSTOP
 1

	)

54 
	#SA_NOCLDWAIT
 2

	)

55 
	#SA_SIGINFO
 4

	)

57 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


58 
	#SA_ONSTACK
 0x08000000

	)

60 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


61 
	#SA_RESTART
 0x10000000

	)

62 
	#SA_NODEFER
 0x40000000

	)

64 
	#SA_RESETHAND
 0x80000000

	)

66 #ifde‡
__USE_MISC


67 
	#SA_INTERRUPT
 0x20000000

	)

70 
	#SA_NOMASK
 
SA_NODEFER


	)

71 
	#SA_ONESHOT
 
SA_RESETHAND


	)

72 
	#SA_STACK
 
SA_ONSTACK


	)

76 
	#SIG_BLOCK
 0

	)

77 
	#SIG_UNBLOCK
 1

	)

78 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

18 #i‚de‡
_BITS_SIGCONTEXT_H


19 
	#_BITS_SIGCONTEXT_H
 1

	)

21 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


25 
	~<bôs/ty≥s.h
>

27 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

28 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

29 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

31 
	s_Âx_sw_byãs


33 
__uöt32_t
 
	mmagic1
;

34 
__uöt32_t
 
	mexãnded_size
;

35 
__uöt64_t
 
	mx°©e_bv
;

36 
__uöt32_t
 
	mx°©e_size
;

37 
__uöt32_t
 
	m__glibc_ª£rved1
[7];

40 
	s_Âªg


42 
	msignifiˇnd
[4];

43 
	mexp⁄ít
;

46 
	s_Âxªg


48 
	msignifiˇnd
[4];

49 
	mexp⁄ít
;

50 
	m__glibc_ª£rved1
[3];

53 
	s_xmmªg


55 
__uöt32_t
 
	mñemít
[4];

60 #i‚de‡
__x86_64__


62 
	s_Â°©e


65 
__uöt32_t
 
	mcw
;

66 
__uöt32_t
 
	msw
;

67 
__uöt32_t
 
	mèg
;

68 
__uöt32_t
 
	mùoff
;

69 
__uöt32_t
 
	mcs£l
;

70 
__uöt32_t
 
	md©aoff
;

71 
__uöt32_t
 
	md©a£l
;

72 
_Âªg
 
	m_°
[8];

73 
	m°©us
;

74 
	mmagic
;

77 
__uöt32_t
 
	m_fx§_ív
[6];

78 
__uöt32_t
 
	mmxc§
;

79 
__uöt32_t
 
	m__glibc_ª£rved1
;

80 
_Âxªg
 
	m_fx§_°
[8];

81 
_xmmªg
 
	m_xmm
[8];

82 
__uöt32_t
 
	m__glibc_ª£rved2
[56];

85 #i‚de‡
sigc⁄ãxt_°ru˘


90 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

93 
	#X86_FXSR_MAGIC
 0x0000

	)

95 
	ssigc⁄ãxt


97 
	mgs
, 
	m__gsh
;

98 
	mfs
, 
	m__fsh
;

99 
	mes
, 
	m__esh
;

100 
	mds
, 
	m__dsh
;

101 
	medi
;

102 
	mesi
;

103 
	mebp
;

104 
	me•
;

105 
	mebx
;

106 
	medx
;

107 
	mecx
;

108 
	móx
;

109 
	må≠no
;

110 
	mîr
;

111 
	meù
;

112 
	mcs
, 
	m__csh
;

113 
	meÊags
;

114 
	me•_©_sig«l
;

115 
	mss
, 
	m__ssh
;

116 
_Â°©e
 * 
	mÂ°©e
;

117 
	mﬁdmask
;

118 
	m¸2
;

123 
	s_Â°©e


126 
__uöt16_t
 
	mcwd
;

127 
__uöt16_t
 
	mswd
;

128 
__uöt16_t
 
	m·w
;

129 
__uöt16_t
 
	mf›
;

130 
__uöt64_t
 
	mrù
;

131 
__uöt64_t
 
	mrdp
;

132 
__uöt32_t
 
	mmxc§
;

133 
__uöt32_t
 
	mmx¸_mask
;

134 
_Âxªg
 
	m_°
[8];

135 
_xmmªg
 
	m_xmm
[16];

136 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

139 
	ssigc⁄ãxt


141 
__uöt64_t
 
	mr8
;

142 
__uöt64_t
 
	mr9
;

143 
__uöt64_t
 
	mr10
;

144 
__uöt64_t
 
	mr11
;

145 
__uöt64_t
 
	mr12
;

146 
__uöt64_t
 
	mr13
;

147 
__uöt64_t
 
	mr14
;

148 
__uöt64_t
 
	mr15
;

149 
__uöt64_t
 
	mrdi
;

150 
__uöt64_t
 
	mrsi
;

151 
__uöt64_t
 
	mrbp
;

152 
__uöt64_t
 
	mrbx
;

153 
__uöt64_t
 
	mrdx
;

154 
__uöt64_t
 
	møx
;

155 
__uöt64_t
 
	mrcx
;

156 
__uöt64_t
 
	mr•
;

157 
__uöt64_t
 
	mrù
;

158 
__uöt64_t
 
	meÊags
;

159 
	mcs
;

160 
	mgs
;

161 
	mfs
;

162 
	m__∑d0
;

163 
__uöt64_t
 
	mîr
;

164 
__uöt64_t
 
	må≠no
;

165 
__uöt64_t
 
	mﬁdmask
;

166 
__uöt64_t
 
	m¸2
;

167 
__exãnsi⁄__
 union

169 
_Â°©e
 * 
	mÂ°©e
;

170 
__uöt64_t
 
	m__Â°©e_w‹d
;

172 
__uöt64_t
 
	m__ª£rved1
 [8];

177 
	s_xßve_hdr


179 
__uöt64_t
 
	mx°©e_bv
;

180 
__uöt64_t
 
	m__glibc_ª£rved1
[2];

181 
__uöt64_t
 
	m__glibc_ª£rved2
[5];

184 
	s_ymmh_°©e


186 
__uöt32_t
 
	mymmh_•a˚
[64];

189 
	s_x°©e


191 
_Â°©e
 
	mÂ°©e
;

192 
_xßve_hdr
 
	mx°©e_hdr
;

193 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/sigevent-consts.h

19 #i‚de‡
_BITS_SIGEVENT_CONSTS_H


20 
	#_BITS_SIGEVENT_CONSTS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_AIO_H


29 
	mSIGEV_SIGNAL
 = 0,

30 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

31 
	mSIGEV_NONE
,

32 
	#SIGEV_NONE
 
SIGEV_NONE


	)

33 
	mSIGEV_THREAD
,

34 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

36 
	mSIGEV_THREAD_ID
 = 4

38 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/siginfo-consts.h

19 #i‚de‡
_BITS_SIGINFO_CONSTS_H


20 
	#_BITS_SIGINFO_CONSTS_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	~<bôs/sigöfo-¨ch.h
>

29 #i‚de‡
__SI_ASYNCIO_AFTER_SIGIO


30 
	#__SI_ASYNCIO_AFTER_SIGIO
 1

	)

37 
	mSI_ASYNCNL
 = -60,

38 
	mSI_TKILL
 = -6,

39 
	mSI_SIGIO
,

40 #i‡
__SI_ASYNCIO_AFTER_SIGIO


41 
	mSI_ASYNCIO
,

42 
	mSI_MESGQ
,

43 
	mSI_TIMER
,

45 
	mSI_MESGQ
,

46 
	mSI_TIMER
,

47 
	mSI_ASYNCIO
,

49 
	mSI_QUEUE
,

50 
	mSI_USER
,

51 
	mSI_KERNEL
 = 0x80

53 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

54 
	#SI_TKILL
 
SI_TKILL


	)

55 
	#SI_SIGIO
 
SI_SIGIO


	)

56 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

57 
	#SI_MESGQ
 
SI_MESGQ


	)

58 
	#SI_TIMER
 
SI_TIMER


	)

59 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

60 
	#SI_QUEUE
 
SI_QUEUE


	)

61 
	#SI_USER
 
SI_USER


	)

62 
	#SI_KERNEL
 
SI_KERNEL


	)

66 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


70 
	mILL_ILLOPC
 = 1,

71 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

72 
	mILL_ILLOPN
,

73 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

74 
	mILL_ILLADR
,

75 
	#ILL_ILLADR
 
ILL_ILLADR


	)

76 
	mILL_ILLTRP
,

77 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

78 
	mILL_PRVOPC
,

79 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

80 
	mILL_PRVREG
,

81 
	#ILL_PRVREG
 
ILL_PRVREG


	)

82 
	mILL_COPROC
,

83 
	#ILL_COPROC
 
ILL_COPROC


	)

84 
	mILL_BADSTK


85 
	#ILL_BADSTK
 
ILL_BADSTK


	)

91 
	mFPE_INTDIV
 = 1,

92 
	#FPE_INTDIV
 
FPE_INTDIV


	)

93 
	mFPE_INTOVF
,

94 
	#FPE_INTOVF
 
FPE_INTOVF


	)

95 
	mFPE_FLTDIV
,

96 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

97 
	mFPE_FLTOVF
,

98 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

99 
	mFPE_FLTUND
,

100 
	#FPE_FLTUND
 
FPE_FLTUND


	)

101 
	mFPE_FLTRES
,

102 
	#FPE_FLTRES
 
FPE_FLTRES


	)

103 
	mFPE_FLTINV
,

104 
	#FPE_FLTINV
 
FPE_FLTINV


	)

105 
	mFPE_FLTSUB


106 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

112 
	mSEGV_MAPERR
 = 1,

113 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

114 
	mSEGV_ACCERR
,

115 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

116 
	mSEGV_BNDERR
,

117 
	#SEGV_BNDERR
 
SEGV_BNDERR


	)

118 
	mSEGV_PKUERR


119 
	#SEGV_PKUERR
 
SEGV_PKUERR


	)

125 
	mBUS_ADRALN
 = 1,

126 
	#BUS_ADRALN
 
BUS_ADRALN


	)

127 
	mBUS_ADRERR
,

128 
	#BUS_ADRERR
 
BUS_ADRERR


	)

129 
	mBUS_OBJERR
,

130 
	#BUS_OBJERR
 
BUS_OBJERR


	)

131 
	mBUS_MCEERR_AR
,

132 
	#BUS_MCEERR_AR
 
BUS_MCEERR_AR


	)

133 
	mBUS_MCEERR_AO


134 
	#BUS_MCEERR_AO
 
BUS_MCEERR_AO


	)

138 #ifde‡
__USE_XOPEN_EXTENDED


142 
	mTRAP_BRKPT
 = 1,

143 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

144 
	mTRAP_TRACE


145 
	#TRAP_TRACE
 
TRAP_TRACE


	)

149 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


153 
	mCLD_EXITED
 = 1,

154 
	#CLD_EXITED
 
CLD_EXITED


	)

155 
	mCLD_KILLED
,

156 
	#CLD_KILLED
 
CLD_KILLED


	)

157 
	mCLD_DUMPED
,

158 
	#CLD_DUMPED
 
CLD_DUMPED


	)

159 
	mCLD_TRAPPED
,

160 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

161 
	mCLD_STOPPED
,

162 
	#CLD_STOPPED
 
CLD_STOPPED


	)

163 
	mCLD_CONTINUED


164 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

170 
	mPOLL_IN
 = 1,

171 
	#POLL_IN
 
POLL_IN


	)

172 
	mPOLL_OUT
,

173 
	#POLL_OUT
 
POLL_OUT


	)

174 
	mPOLL_MSG
,

175 
	#POLL_MSG
 
POLL_MSG


	)

176 
	mPOLL_ERR
,

177 
	#POLL_ERR
 
POLL_ERR


	)

178 
	mPOLL_PRI
,

179 
	#POLL_PRI
 
POLL_PRI


	)

180 
	mPOLL_HUP


181 
	#POLL_HUP
 
POLL_HUP


	)

187 #ifde‡
__USE_GNU


188 
	~<bôs/sigöfo-c⁄°s-¨ch.h
>

	@/usr/include/bits/signum.h

19 #i‚de‡
_BITS_SIGNUM_H


20 
	#_BITS_SIGNUM_H
 1

	)

22 #i‚de‡
_SIGNAL_H


26 
	~<bôs/signum-gíîic.h
>

31 
	#SIGSTKFLT
 16

	)

32 
	#SIGPWR
 30

	)

34 #unde‡
SIGBUS


35 
	#SIGBUS
 7

	)

36 #unde‡
SIGUSR1


37 
	#SIGUSR1
 10

	)

38 #unde‡
SIGUSR2


39 
	#SIGUSR2
 12

	)

40 #unde‡
SIGCHLD


41 
	#SIGCHLD
 17

	)

42 #unde‡
SIGCONT


43 
	#SIGCONT
 18

	)

44 #unde‡
SIGSTOP


45 
	#SIGSTOP
 19

	)

46 #unde‡
SIGTSTP


47 
	#SIGTSTP
 20

	)

48 #unde‡
SIGURG


49 
	#SIGURG
 23

	)

50 #unde‡
SIGPOLL


51 
	#SIGPOLL
 29

	)

52 #unde‡
SIGSYS


53 
	#SIGSYS
 31

	)

55 #unde‡
__SIGRTMAX


56 
	#__SIGRTMAX
 64

	)

	@/usr/include/bits/sigstack.h

19 #i‚de‡
_BITS_SIGSTACK_H


20 
	#_BITS_SIGSTACK_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


27 
	#MINSIGSTKSZ
 2048

	)

30 
	#SIGSTKSZ
 8192

	)

	@/usr/include/bits/sigthread.h

19 #i‚de‡
_BITS_SIGTHREAD_H


20 
	#_BITS_SIGTHREAD_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/ty≥s/__sig£t_t.h
>

31 
	$±hªad_sigmask
 (
__how
,

32 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/socket.h

19 #i‚de‡
__BITS_SOCKET_H


20 
	#__BITS_SOCKET_H


	)

22 #i‚de‡
_SYS_SOCKET_H


26 
	#__√ed_size_t


	)

27 
	~<°ddef.h
>

29 
	~<sys/ty≥s.h
>

32 #i‚de‡
__sockÀn_t_deföed


33 
__sockÀn_t
 
	tsockÀn_t
;

34 
	#__sockÀn_t_deföed


	)

38 
	~<bôs/sockë_ty≥.h
>

41 
	#PF_UNSPEC
 0

	)

42 
	#PF_LOCAL
 1

	)

43 
	#PF_UNIX
 
PF_LOCAL


	)

44 
	#PF_FILE
 
PF_LOCAL


	)

45 
	#PF_INET
 2

	)

46 
	#PF_AX25
 3

	)

47 
	#PF_IPX
 4

	)

48 
	#PF_APPLETALK
 5

	)

49 
	#PF_NETROM
 6

	)

50 
	#PF_BRIDGE
 7

	)

51 
	#PF_ATMPVC
 8

	)

52 
	#PF_X25
 9

	)

53 
	#PF_INET6
 10

	)

54 
	#PF_ROSE
 11

	)

55 
	#PF_DEC√t
 12

	)

56 
	#PF_NETBEUI
 13

	)

57 
	#PF_SECURITY
 14

	)

58 
	#PF_KEY
 15

	)

59 
	#PF_NETLINK
 16

	)

60 
	#PF_ROUTE
 
PF_NETLINK


	)

61 
	#PF_PACKET
 17

	)

62 
	#PF_ASH
 18

	)

63 
	#PF_ECONET
 19

	)

64 
	#PF_ATMSVC
 20

	)

65 
	#PF_RDS
 21

	)

66 
	#PF_SNA
 22

	)

67 
	#PF_IRDA
 23

	)

68 
	#PF_PPPOX
 24

	)

69 
	#PF_WANPIPE
 25

	)

70 
	#PF_LLC
 26

	)

71 
	#PF_IB
 27

	)

72 
	#PF_MPLS
 28

	)

73 
	#PF_CAN
 29

	)

74 
	#PF_TIPC
 30

	)

75 
	#PF_BLUETOOTH
 31

	)

76 
	#PF_IUCV
 32

	)

77 
	#PF_RXRPC
 33

	)

78 
	#PF_ISDN
 34

	)

79 
	#PF_PHONET
 35

	)

80 
	#PF_IEEE802154
 36

	)

81 
	#PF_CAIF
 37

	)

82 
	#PF_ALG
 38

	)

83 
	#PF_NFC
 39

	)

84 
	#PF_VSOCK
 40

	)

85 
	#PF_KCM
 41

	)

86 
	#PF_QIPCRTR
 42

	)

87 
	#PF_SMC
 43

	)

88 
	#PF_MAX
 44

	)

91 
	#AF_UNSPEC
 
PF_UNSPEC


	)

92 
	#AF_LOCAL
 
PF_LOCAL


	)

93 
	#AF_UNIX
 
PF_UNIX


	)

94 
	#AF_FILE
 
PF_FILE


	)

95 
	#AF_INET
 
PF_INET


	)

96 
	#AF_AX25
 
PF_AX25


	)

97 
	#AF_IPX
 
PF_IPX


	)

98 
	#AF_APPLETALK
 
PF_APPLETALK


	)

99 
	#AF_NETROM
 
PF_NETROM


	)

100 
	#AF_BRIDGE
 
PF_BRIDGE


	)

101 
	#AF_ATMPVC
 
PF_ATMPVC


	)

102 
	#AF_X25
 
PF_X25


	)

103 
	#AF_INET6
 
PF_INET6


	)

104 
	#AF_ROSE
 
PF_ROSE


	)

105 
	#AF_DEC√t
 
PF_DEC√t


	)

106 
	#AF_NETBEUI
 
PF_NETBEUI


	)

107 
	#AF_SECURITY
 
PF_SECURITY


	)

108 
	#AF_KEY
 
PF_KEY


	)

109 
	#AF_NETLINK
 
PF_NETLINK


	)

110 
	#AF_ROUTE
 
PF_ROUTE


	)

111 
	#AF_PACKET
 
PF_PACKET


	)

112 
	#AF_ASH
 
PF_ASH


	)

113 
	#AF_ECONET
 
PF_ECONET


	)

114 
	#AF_ATMSVC
 
PF_ATMSVC


	)

115 
	#AF_RDS
 
PF_RDS


	)

116 
	#AF_SNA
 
PF_SNA


	)

117 
	#AF_IRDA
 
PF_IRDA


	)

118 
	#AF_PPPOX
 
PF_PPPOX


	)

119 
	#AF_WANPIPE
 
PF_WANPIPE


	)

120 
	#AF_LLC
 
PF_LLC


	)

121 
	#AF_IB
 
PF_IB


	)

122 
	#AF_MPLS
 
PF_MPLS


	)

123 
	#AF_CAN
 
PF_CAN


	)

124 
	#AF_TIPC
 
PF_TIPC


	)

125 
	#AF_BLUETOOTH
 
PF_BLUETOOTH


	)

126 
	#AF_IUCV
 
PF_IUCV


	)

127 
	#AF_RXRPC
 
PF_RXRPC


	)

128 
	#AF_ISDN
 
PF_ISDN


	)

129 
	#AF_PHONET
 
PF_PHONET


	)

130 
	#AF_IEEE802154
 
PF_IEEE802154


	)

131 
	#AF_CAIF
 
PF_CAIF


	)

132 
	#AF_ALG
 
PF_ALG


	)

133 
	#AF_NFC
 
PF_NFC


	)

134 
	#AF_VSOCK
 
PF_VSOCK


	)

135 
	#AF_KCM
 
PF_KCM


	)

136 
	#AF_QIPCRTR
 
PF_QIPCRTR


	)

137 
	#AF_SMC
 
PF_SMC


	)

138 
	#AF_MAX
 
PF_MAX


	)

144 
	#SOL_RAW
 255

	)

145 
	#SOL_DECNET
 261

	)

146 
	#SOL_X25
 262

	)

147 
	#SOL_PACKET
 263

	)

148 
	#SOL_ATM
 264

	)

149 
	#SOL_AAL
 265

	)

150 
	#SOL_IRDA
 266

	)

151 
	#SOL_NETBEUI
 267

	)

152 
	#SOL_LLC
 268

	)

153 
	#SOL_DCCP
 269

	)

154 
	#SOL_NETLINK
 270

	)

155 
	#SOL_TIPC
 271

	)

156 
	#SOL_RXRPC
 272

	)

157 
	#SOL_PPPOL2TP
 273

	)

158 
	#SOL_BLUETOOTH
 274

	)

159 
	#SOL_PNPIPE
 275

	)

160 
	#SOL_RDS
 276

	)

161 
	#SOL_IUCV
 277

	)

162 
	#SOL_CAIF
 278

	)

163 
	#SOL_ALG
 279

	)

164 
	#SOL_NFC
 280

	)

165 
	#SOL_KCM
 281

	)

166 
	#SOL_TLS
 282

	)

169 
	#SOMAXCONN
 128

	)

172 
	~<bôs/sockaddr.h
>

175 
	ssockaddr


177 
__SOCKADDR_COMMON
 (
ß_
);

178 
	mß_d©a
[14];

184 
	#__ss_Æig¡y≥
 

	)

185 
	#_SS_PADSIZE
 \

186 (
_SS_SIZE
 - 
__SOCKADDR_COMMON_SIZE
 -  (
__ss_Æig¡y≥
))

	)

188 
	ssockaddr_°‹age


190 
__SOCKADDR_COMMON
 (
ss_
);

191 
	m__ss_∑ddög
[
_SS_PADSIZE
];

192 
__ss_Æig¡y≥
 
	m__ss_Æign
;

199 
	mMSG_OOB
 = 0x01,

200 
	#MSG_OOB
 
MSG_OOB


	)

201 
	mMSG_PEEK
 = 0x02,

202 
	#MSG_PEEK
 
MSG_PEEK


	)

203 
	mMSG_DONTROUTE
 = 0x04,

204 
	#MSG_DONTROUTE
 
MSG_DONTROUTE


	)

205 #ifde‡
__USE_GNU


207 
	mMSG_TRYHARD
 = 
MSG_DONTROUTE
,

208 
	#MSG_TRYHARD
 
MSG_DONTROUTE


	)

210 
	mMSG_CTRUNC
 = 0x08,

211 
	#MSG_CTRUNC
 
MSG_CTRUNC


	)

212 
	mMSG_PROXY
 = 0x10,

213 
	#MSG_PROXY
 
MSG_PROXY


	)

214 
	mMSG_TRUNC
 = 0x20,

215 
	#MSG_TRUNC
 
MSG_TRUNC


	)

216 
	mMSG_DONTWAIT
 = 0x40,

217 
	#MSG_DONTWAIT
 
MSG_DONTWAIT


	)

218 
	mMSG_EOR
 = 0x80,

219 
	#MSG_EOR
 
MSG_EOR


	)

220 
	mMSG_WAITALL
 = 0x100,

221 
	#MSG_WAITALL
 
MSG_WAITALL


	)

222 
	mMSG_FIN
 = 0x200,

223 
	#MSG_FIN
 
MSG_FIN


	)

224 
	mMSG_SYN
 = 0x400,

225 
	#MSG_SYN
 
MSG_SYN


	)

226 
	mMSG_CONFIRM
 = 0x800,

227 
	#MSG_CONFIRM
 
MSG_CONFIRM


	)

228 
	mMSG_RST
 = 0x1000,

229 
	#MSG_RST
 
MSG_RST


	)

230 
	mMSG_ERRQUEUE
 = 0x2000,

231 
	#MSG_ERRQUEUE
 
MSG_ERRQUEUE


	)

232 
	mMSG_NOSIGNAL
 = 0x4000,

233 
	#MSG_NOSIGNAL
 
MSG_NOSIGNAL


	)

234 
	mMSG_MORE
 = 0x8000,

235 
	#MSG_MORE
 
MSG_MORE


	)

236 
	mMSG_WAITFORONE
 = 0x10000,

237 
	#MSG_WAITFORONE
 
MSG_WAITFORONE


	)

238 
	mMSG_BATCH
 = 0x40000,

239 
	#MSG_BATCH
 
MSG_BATCH


	)

240 
	mMSG_ZEROCOPY
 = 0x4000000,

241 
	#MSG_ZEROCOPY
 
MSG_ZEROCOPY


	)

242 
	mMSG_FASTOPEN
 = 0x20000000,

243 
	#MSG_FASTOPEN
 
MSG_FASTOPEN


	)

245 
	mMSG_CMSG_CLOEXEC
 = 0x40000000

248 
	#MSG_CMSG_CLOEXEC
 
MSG_CMSG_CLOEXEC


	)

254 
	smsghdr


256 *
	mmsg_«me
;

257 
sockÀn_t
 
	mmsg_«mñí
;

259 
iovec
 *
	mmsg_iov
;

260 
size_t
 
	mmsg_iovÀn
;

262 *
	mmsg_c⁄åﬁ
;

263 
size_t
 
	mmsg_c⁄åﬁÀn
;

268 
	mmsg_Êags
;

272 
	scmsghdr


274 
size_t
 
	mcmsg_Àn
;

279 
	mcmsg_Àvñ
;

280 
	mcmsg_ty≥
;

281 #i‡
__glibc_c99_Êex¨r_avaûabÀ


282 
__exãnsi⁄__
 
__cmsg_d©a
 
	m__Êex¨r
;

287 #i‡
__glibc_c99_Êex¨r_avaûabÀ


288 
	#CMSG_DATA
(
cmsg
Ë((cmsg)->
__cmsg_d©a
)

	)

290 
	#CMSG_DATA
(
cmsg
Ë((*Ë((
cmsghdr
 *Ë(cmsgË+ 1))

	)

292 
	#CMSG_NXTHDR
(
mhdr
, 
cmsg
Ë
	`__cmsg_nxthdr
 (mhdr, cmsg)

	)

293 
	#CMSG_FIRSTHDR
(
mhdr
) \

294 ((
size_t
Ë(
mhdr
)->
msg_c⁄åﬁÀn
 > (
cmsghdr
) \

295 ? (
cmsghdr
 *Ë(
mhdr
)->
msg_c⁄åﬁ
 : (cmsghd∏*Ë0)

	)

296 
	#CMSG_ALIGN
(
Àn
Ë((÷íË+  (
size_t
) - 1) \

297 & (
size_t
Ë~( (size_tË- 1))

	)

298 
	#CMSG_SPACE
(
Àn
Ë(
	`CMSG_ALIGN
 (len) \

299 + 
	`CMSG_ALIGN
 ( (
cmsghdr
)))

	)

300 
	#CMSG_LEN
(
Àn
Ë(
	`CMSG_ALIGN
 ( (
cmsghdr
)Ë+ (Àn))

	)

302 
cmsghdr
 *
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
,

303 
cmsghdr
 *
__cmsg
Ë
__THROW
;

304 #ifde‡
__USE_EXTERN_INLINES


305 #i‚de‡
_EXTERN_INLINE


306 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

308 
_EXTERN_INLINE
 
cmsghdr
 *

309 
	`__NTH
 (
	$__cmsg_nxthdr
 (
msghdr
 *
__mhdr
, 
cmsghdr
 *
__cmsg
))

311 i‡((
size_t
Ë
__cmsg
->
cmsg_Àn
 <  (
cmsghdr
))

313  (
cmsghdr
 *) 0;

315 
__cmsg
 = (
cmsghdr
 *) ((*) __cmsg

316 + 
	`CMSG_ALIGN
 (
__cmsg
->
cmsg_Àn
));

317 i‡((*Ë(
__cmsg
 + 1Ë> ((*Ë
__mhdr
->
msg_c⁄åﬁ


318 + 
__mhdr
->
msg_c⁄åﬁÀn
)

319 || ((*Ë
__cmsg
 + 
	`CMSG_ALIGN
 (__cmsg->
cmsg_Àn
)

320 > ((*Ë
__mhdr
->
msg_c⁄åﬁ
 + __mhdr->
msg_c⁄åﬁÀn
)))

322  (
cmsghdr
 *) 0;

323  
__cmsg
;

324 
	}
}

331 
	mSCM_RIGHTS
 = 0x01

332 
	#SCM_RIGHTS
 
SCM_RIGHTS


	)

333 #ifde‡
__USE_GNU


334 , 
	mSCM_CREDENTIALS
 = 0x02

335 
	#SCM_CREDENTIALS
 
SCM_CREDENTIALS


	)

339 #ifde‡
__USE_GNU


341 
	su¸ed


343 
pid_t
 
	mpid
;

344 
uid_t
 
	muid
;

345 
gid_t
 
	mgid
;

350 #i‚de‡
__USE_MISC


351 #i‚de‡
FIOGETOWN


352 
	#__SYS_SOCKET_H_undef_FIOGETOWN


	)

354 #i‚de‡
FIOSETOWN


355 
	#__SYS_SOCKET_H_undef_FIOSETOWN


	)

357 #i‚de‡
SIOCATMARK


358 
	#__SYS_SOCKET_H_undef_SIOCATMARK


	)

360 #i‚de‡
SIOCGPGRP


361 
	#__SYS_SOCKET_H_undef_SIOCGPGRP


	)

363 #i‚de‡
SIOCGSTAMP


364 
	#__SYS_SOCKET_H_undef_SIOCGSTAMP


	)

366 #i‚de‡
SIOCGSTAMPNS


367 
	#__SYS_SOCKET_H_undef_SIOCGSTAMPNS


	)

369 #i‚de‡
SIOCSPGRP


370 
	#__SYS_SOCKET_H_undef_SIOCSPGRP


	)

373 #i‚de‡
IOCSIZE_MASK


374 
	#__SYS_SOCKET_H_undef_IOCSIZE_MASK


	)

376 #i‚de‡
IOCSIZE_SHIFT


377 
	#__SYS_SOCKET_H_undef_IOCSIZE_SHIFT


	)

379 #i‚de‡
IOC_IN


380 
	#__SYS_SOCKET_H_undef_IOC_IN


	)

382 #i‚de‡
IOC_INOUT


383 
	#__SYS_SOCKET_H_undef_IOC_INOUT


	)

385 #i‚de‡
IOC_OUT


386 
	#__SYS_SOCKET_H_undef_IOC_OUT


	)

390 
	~<asm/sockë.h
>

392 #i‚de‡
__USE_MISC


393 #ifde‡
__SYS_SOCKET_H_undef_FIOGETOWN


394 #unde‡
__SYS_SOCKET_H_undef_FIOGETOWN


395 #unde‡
FIOGETOWN


397 #ifde‡
__SYS_SOCKET_H_undef_FIOSETOWN


398 #unde‡
__SYS_SOCKET_H_undef_FIOSETOWN


399 #unde‡
FIOSETOWN


401 #ifde‡
__SYS_SOCKET_H_undef_SIOCATMARK


402 #unde‡
__SYS_SOCKET_H_undef_SIOCATMARK


403 #unde‡
SIOCATMARK


405 #ifde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


406 #unde‡
__SYS_SOCKET_H_undef_SIOCGPGRP


407 #unde‡
SIOCGPGRP


409 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


410 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMP


411 #unde‡
SIOCGSTAMP


413 #ifde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


414 #unde‡
__SYS_SOCKET_H_undef_SIOCGSTAMPNS


415 #unde‡
SIOCGSTAMPNS


417 #ifde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


418 #unde‡
__SYS_SOCKET_H_undef_SIOCSPGRP


419 #unde‡
SIOCSPGRP


422 #ifde‡
__SYS_SOCKET_H_undef_IOCSIZE_MASK


423 #unde‡
__SYS_SOCKET_H_undef_IOCSIZE_MASK


424 #unde‡
IOCSIZE_MASK


426 #ifde‡
__SYS_SOCKET_H_undef_IOCSIZE_SHIFT


427 #unde‡
__SYS_SOCKET_H_undef_IOCSIZE_SHIFT


428 #unde‡
IOCSIZE_SHIFT


430 #ifde‡
__SYS_SOCKET_H_undef_IOC_IN


431 #unde‡
__SYS_SOCKET_H_undef_IOC_IN


432 #unde‡
IOC_IN


434 #ifde‡
__SYS_SOCKET_H_undef_IOC_INOUT


435 #unde‡
__SYS_SOCKET_H_undef_IOC_INOUT


436 #unde‡
IOC_INOUT


438 #ifde‡
__SYS_SOCKET_H_undef_IOC_OUT


439 #unde‡
__SYS_SOCKET_H_undef_IOC_OUT


440 #unde‡
IOC_OUT


444 
	slögî


446 
	ml_⁄off
;

447 
	ml_lögî
;

	@/usr/include/bits/socket2.h

19 #i‚de‡
_SYS_SOCKET_H


23 
ssize_t
 
__ªcv_chk
 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

24 
__Êags
);

25 
ssize_t
 
__REDIRECT
 (
__ªcv_Æüs
, (
__fd
, *
__buf
, 
size_t
 
__n
,

26 
__Êags
), 
ªcv
);

27 
ssize_t
 
__REDIRECT
 (
__ªcv_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__n
, size_à
__buÊí
,

29 
__Êags
), 
__ªcv_chk
)

30 
__w¨«âr
 ("recv called with biggerÜengthÅhan size of destination "

33 
__f‹tify_fun˘i⁄
 
ssize_t


34 
	$ªcv
 (
__fd
, *
__buf
, 
size_t
 
__n
, 
__Êags
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

39  
	`__ªcv_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

41 i‡(
__n
 > 
	`__bos0
 (
__buf
))

42  
	`__ªcv_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
);

44  
	`__ªcv_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
);

45 
	}
}

47 
ssize_t
 
__ªcv‰om_chk
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

48 
size_t
 
__buÊí
, 
__Êags
,

49 
__SOCKADDR_ARG
 
__addr
,

50 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
);

51 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_Æüs
,

52 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

53 
__Êags
, 
__SOCKADDR_ARG
 
__addr
,

54 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
ªcv‰om
);

55 
ssize_t
 
__REDIRECT
 (
__ªcv‰om_chk_w¨n
,

56 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
,

57 
size_t
 
__buÊí
, 
__Êags
,

58 
__SOCKADDR_ARG
 
__addr
,

59 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
), 
__ªcv‰om_chk
)

60 
__w¨«âr
 ("recvfrom called with biggerÜengthÅhan size of "

63 
__f‹tify_fun˘i⁄
 
ssize_t


64 
	$ªcv‰om
 (
__fd
, *
__ª°ri˘
 
__buf
, 
size_t
 
__n
, 
__Êags
,

65 
__SOCKADDR_ARG
 
__addr
, 
sockÀn_t
 *
__ª°ri˘
 
__addr_Àn
)

67 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

70  
	`__ªcv‰om_chk
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

71 
__addr
, 
__addr_Àn
);

72 i‡(
__n
 > 
	`__bos0
 (
__buf
))

73  
	`__ªcv‰om_chk_w¨n
 (
__fd
, 
__buf
, 
__n
, 
	`__bos0
 (__buf), 
__Êags
,

74 
__addr
, 
__addr_Àn
);

76  
	`__ªcv‰om_Æüs
 (
__fd
, 
__buf
, 
__n
, 
__Êags
, 
__addr
, 
__addr_Àn
);

77 
	}
}

	@/usr/include/bits/ss_flags.h

19 #i‚de‡
_BITS_SS_FLAGS_H


20 
	#_BITS_SS_FLAGS_H
 1

	)

22 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


29 
	mSS_ONSTACK
 = 1,

30 
	#SS_ONSTACK
 
SS_ONSTACK


	)

31 
	mSS_DISABLE


32 
	#SS_DISABLE
 
SS_DISABLE


	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

26 #i‚de‡
__x86_64__


27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

33 
	#_MKNOD_VER_LINUX
 1

	)

34 
	#_MKNOD_VER_SVR4
 2

	)

35 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

37 
	#_STAT_VER_KERNEL
 0

	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‚de‡
__x86_64__


50 
	m__∑d1
;

52 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‚de‡
__x86_64__


58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #ifde‡
__x86_64__


67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‚de‡
__x86_64__


71 
	m__∑d2
;

73 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #ifde‡
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

105 #ifde‡
__x86_64__


106 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__glibc_ª£rved4
;

110 
	m__glibc_ª£rved5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #ifde‡
__x86_64__


123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #ifde‡
__x86_64__


135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #ifde‡
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

156 
__time_t
 
	m°_©ime
;

157 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

158 
__time_t
 
	m°_mtime
;

159 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

160 
__time_t
 
	m°_˘ime
;

161 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

163 #ifde‡
__x86_64__


164 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

166 
__öo64_t
 
	m°_öo
;

172 
	#_STATBUF_ST_BLKSIZE


	)

173 
	#_STATBUF_ST_RDEV


	)

175 
	#_STATBUF_ST_NSEC


	)

179 
	#__S_IFMT
 0170000

	)

182 
	#__S_IFDIR
 0040000

	)

183 
	#__S_IFCHR
 0020000

	)

184 
	#__S_IFBLK
 0060000

	)

185 
	#__S_IFREG
 0100000

	)

186 
	#__S_IFIFO
 0010000

	)

187 
	#__S_IFLNK
 0120000

	)

188 
	#__S_IFSOCK
 0140000

	)

192 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

193 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

194 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

198 
	#__S_ISUID
 04000

	)

199 
	#__S_ISGID
 02000

	)

200 
	#__S_ISVTX
 01000

	)

201 
	#__S_IREAD
 0400

	)

202 
	#__S_IWRITE
 0200

	)

203 
	#__S_IEXEC
 0100

	)

205 #ifde‡
__USE_ATFILE


206 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

207 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statvfs.h

18 #i‚de‡
_SYS_STATVFS_H


22 
	~<bôs/ty≥s.h
>

24 #i‡(
__WORDSIZE
 == 32 \

25 && (!
deföed
 
	g__SYSCALL_WORDSIZE
 || __SYSCALL_WORDSIZE == 32))

26 
	#_STATVFSBUF_F_UNUSED


	)

29 
	s°©vfs


31 
f_bsize
;

32 
	mf_‰size
;

33 #i‚de‡
__USE_FILE_OFFSET64


34 
__fsblk˙t_t
 
	mf_blocks
;

35 
__fsblk˙t_t
 
	mf_b‰ì
;

36 
__fsblk˙t_t
 
	mf_bavaû
;

37 
__fsfû˙t_t
 
	mf_fûes
;

38 
__fsfû˙t_t
 
	mf_f‰ì
;

39 
__fsfû˙t_t
 
	mf_Ávaû
;

41 
__fsblk˙t64_t
 
	mf_blocks
;

42 
__fsblk˙t64_t
 
	mf_b‰ì
;

43 
__fsblk˙t64_t
 
	mf_bavaû
;

44 
__fsfû˙t64_t
 
	mf_fûes
;

45 
__fsfû˙t64_t
 
	mf_f‰ì
;

46 
__fsfû˙t64_t
 
	mf_Ávaû
;

48 
	mf_fsid
;

49 #ifde‡
_STATVFSBUF_F_UNUSED


50 
	m__f_unu£d
;

52 
	mf_Êag
;

53 
	mf_«memax
;

54 
	m__f_•¨e
[6];

57 #ifde‡
__USE_LARGEFILE64


58 
	s°©vfs64


60 
	mf_bsize
;

61 
	mf_‰size
;

62 
__fsblk˙t64_t
 
	mf_blocks
;

63 
__fsblk˙t64_t
 
	mf_b‰ì
;

64 
__fsblk˙t64_t
 
	mf_bavaû
;

65 
__fsfû˙t64_t
 
	mf_fûes
;

66 
__fsfû˙t64_t
 
	mf_f‰ì
;

67 
__fsfû˙t64_t
 
	mf_Ávaû
;

68 
	mf_fsid
;

69 #ifde‡
_STATVFSBUF_F_UNUSED


70 
	m__f_unu£d
;

72 
	mf_Êag
;

73 
	mf_«memax
;

74 
	m__f_•¨e
[6];

82 
	mST_RDONLY
 = 1,

83 
	#ST_RDONLY
 
ST_RDONLY


	)

84 
	mST_NOSUID
 = 2

85 
	#ST_NOSUID
 
ST_NOSUID


	)

86 #ifde‡
__USE_GNU


88 
	mST_NODEV
 = 4,

89 
	#ST_NODEV
 
ST_NODEV


	)

90 
	mST_NOEXEC
 = 8,

91 
	#ST_NOEXEC
 
ST_NOEXEC


	)

92 
	mST_SYNCHRONOUS
 = 16,

93 
	#ST_SYNCHRONOUS
 
ST_SYNCHRONOUS


	)

94 
	mST_MANDLOCK
 = 64,

95 
	#ST_MANDLOCK
 
ST_MANDLOCK


	)

96 
	mST_WRITE
 = 128,

97 
	#ST_WRITE
 
ST_WRITE


	)

98 
	mST_APPEND
 = 256,

99 
	#ST_APPEND
 
ST_APPEND


	)

100 
	mST_IMMUTABLE
 = 512,

101 
	#ST_IMMUTABLE
 
ST_IMMUTABLE


	)

102 
	mST_NOATIME
 = 1024,

103 
	#ST_NOATIME
 
ST_NOATIME


	)

104 
	mST_NODIRATIME
 = 2048,

105 
	#ST_NODIRATIME
 
ST_NODIRATIME


	)

106 
	mST_RELATIME
 = 4096

107 
	#ST_RELATIME
 
ST_RELATIME


	)

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

30 && !
deföed
 
__REDIRECT
 \

31 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

32 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

36 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

37 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

41 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


42 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

43 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

46 #ifdef 
__USE_ISOC99


47 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

48 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

49 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

50 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

51 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

53 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

54 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

55 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

59 #ifde‡
__USE_XOPEN2K8


60 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

61 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

64 #ifde‡
__USE_GNU


65 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

66 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

67 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

68 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

72 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


73 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

74 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

75 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


76 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

77 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

79 #i‡
__USE_FORTIFY_LEVEL
 > 1

80 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

82 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

83 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

84 #ifde‡
__USE_XOPEN2K8


85 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_STDIO_H


23 #i‚de‡
__exã∫_ölöe


24 
	#__STDIO_INLINE
 
ölöe


	)

26 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

30 #ifde‡
__USE_EXTERN_INLINES


33 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

35 
__STDIO_INLINE
 

36 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

38  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

39 
	}
}

43 
__STDIO_INLINE
 

44 
	$gëch¨
 ()

46  
	`_IO_gëc
 (
°dö
);

47 
	}
}

50 #ifde‡
__USE_MISC


52 
__STDIO_INLINE
 

53 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

55  
	`_IO_gëc_u∆ocked
 (
__Â
);

56 
	}
}

60 #ifde‡
__USE_POSIX


62 
__STDIO_INLINE
 

63 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

65  
	`_IO_gëc_u∆ocked
 (
__Â
);

66 
	}
}

69 
__STDIO_INLINE
 

70 
	$gëch¨_u∆ocked
 ()

72  
	`_IO_gëc_u∆ocked
 (
°dö
);

73 
	}
}

78 
__STDIO_INLINE
 

79 
	$putch¨
 (
__c
)

81  
	`_IO_putc
 (
__c
, 
°dout
);

82 
	}
}

85 #ifde‡
__USE_MISC


87 
__STDIO_INLINE
 

88 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

90  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

91 
	}
}

95 #ifde‡
__USE_POSIX


97 
__STDIO_INLINE
 

98 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

100  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

101 
	}
}

104 
__STDIO_INLINE
 

105 
	$putch¨_u∆ocked
 (
__c
)

107  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

108 
	}
}

112 #ifdef 
__USE_GNU


114 
__STDIO_INLINE
 
_IO_ssize_t


115 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

117  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

118 
	}
}

122 #ifde‡
__USE_MISC


124 
__STDIO_INLINE
 

125 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

127  
	`_IO_„of_u∆ocked
 (
__°ªam
);

128 
	}
}

131 
__STDIO_INLINE
 

132 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

134  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

135 
	}
}

141 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

142 && !
deföed
 
	g__˝lu•lus


144 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

145 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

146 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

147 && (
size_t
Ë(
size
) != 0) \

148 ? ({ *
__±r
 = (*Ë(
±r
); \

149 
FILE
 *
__°ªam
 = (
°ªam
); \

150 
size_t
 
__˙t
; \

151 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

152 
__˙t
 > 0; --__cnt) \

154 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

155 i‡(
__c
 =
EOF
) \

157 *
__±r
++ = 
__c
; \

159 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

160 / (
size_t
Ë(
size
); }) \

161 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

162 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

164 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

165 (Ë(
n
), (
size_t
) 0) \

166 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

168 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

169 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

170 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

171 && (
size_t
Ë(
size
) != 0) \

172 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

173 
FILE
 *
__°ªam
 = (
°ªam
); \

174 
size_t
 
__˙t
; \

175 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

176 
__˙t
 > 0; --__cnt) \

177 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

179 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

180 / (
size_t
Ë(
size
); }) \

181 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

182 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

184 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

185 (Ë(
n
), (
size_t
) 0) \

186 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

190 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

19 #i‚de‡
_STDIO_H


23 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

24 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

25 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

26 c⁄° *
__ª°ri˘
 
__f‹m©
,

27 
_G_va_li°
 
__≠
Ë
__THROW
;

29 #ifde‡
__va_¨g_∑ck


30 
__f‹tify_fun˘i⁄
 

31 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

33  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

34 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

35 
	}
}

36 #ñi‡!
deföed
 
__˝lu•lus


37 
	#•rötf
(
°r
, ...) \

38 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

39 
__VA_ARGS__
)

	)

42 
__f‹tify_fun˘i⁄
 

43 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

44 
_G_va_li°
 
__≠
))

46  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

47 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

48 
	}
}

50 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


52 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

53 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

54 ...Ë
__THROW
;

55 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

56 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
_G_va_li°
 
__≠
Ë
__THROW
;

59 #ifde‡
__va_¨g_∑ck


60 
__f‹tify_fun˘i⁄
 

61 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

62 c⁄° *
__ª°ri˘
 
__fmt
, ...))

64  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

65 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

66 
	}
}

67 #ñi‡!
deföed
 
__˝lu•lus


68 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

69 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

70 
__VA_ARGS__
)

	)

73 
__f‹tify_fun˘i⁄
 

74 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

75 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

77  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

78 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

79 
	}
}

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

85 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

86 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

87 
__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

88 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

89 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

90 
__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

91 
_G_va_li°
 
__≠
);

93 #ifde‡
__va_¨g_∑ck


94 
__f‹tify_fun˘i⁄
 

95 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

97  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

98 
	`__va_¨g_∑ck
 ());

99 
	}
}

101 
__f‹tify_fun˘i⁄
 

102 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

104  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

105 
	}
}

106 #ñi‡!
deföed
 
__˝lu•lus


107 
	#¥ötf
(...) \

108 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

109 
	#Ârötf
(
°ªam
, ...) \

110 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

113 
__f‹tify_fun˘i⁄
 

114 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

116 #ifde‡
__USE_EXTERN_INLINES


117  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

119  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

121 
	}
}

123 
__f‹tify_fun˘i⁄
 

124 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

127  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

128 
	}
}

130 #ifde‡
__USE_XOPEN2K8


131 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

132 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

133 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

134 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

135 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

137 #ifde‡
__va_¨g_∑ck


138 
__f‹tify_fun˘i⁄
 

139 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

141  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

142 
	`__va_¨g_∑ck
 ());

143 
	}
}

144 #ñi‡!
deföed
 
__˝lu•lus


145 
	#d¥ötf
(
fd
, ...) \

146 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

149 
__f‹tify_fun˘i⁄
 

150 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

152  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

153 
	}
}

156 #ifde‡
__USE_GNU


158 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

159 c⁄° *
__ª°ri˘
 
__fmt
, ...)

160 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

161 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

162 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

163 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

164 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

165 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

167 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

168 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

169 
__Êag
,

170 c⁄° *
__ª°ri˘
 
__f‹m©
,

171 
_G_va_li°
 
__¨gs
)

172 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

174 #ifde‡
__va_¨g_∑ck


175 
__f‹tify_fun˘i⁄
 

176 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

178  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

179 
	`__va_¨g_∑ck
 ());

180 
	}
}

182 
__f‹tify_fun˘i⁄
 

183 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

186  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

190 
__f‹tify_fun˘i⁄
 

191 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

192 c⁄° *
__ª°ri˘
 
__fmt
, ...))

194  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

195 
	`__va_¨g_∑ck
 ());

196 
	}
}

197 #ñi‡!
deföed
 
__˝lu•lus


198 
	#a•rötf
(
±r
, ...) \

199 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

200 
	#__a•rötf
(
±r
, ...) \

201 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

202 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

203 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

206 
__f‹tify_fun˘i⁄
 

207 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

208 
_G_va_li°
 
__≠
))

210  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

211 
	}
}

213 
__f‹tify_fun˘i⁄
 

214 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

215 c⁄° *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

217  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

218 
__≠
);

219 
	}
}

225 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

226 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

227 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

228 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

231 
__f‹tify_fun˘i⁄
 
__wur
 *

232 
	$gës
 (*
__°r
)

234 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

235  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

236  
	`__gës_w¨n
 (
__°r
);

237 
	}
}

240 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

241 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

242 *
	`__REDIRECT
 (
__fgës_Æüs
,

243 (*
__ª°ri˘
 
__s
, 
__n
,

244 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

245 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

246 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

247 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

248 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

251 
__f‹tify_fun˘i⁄
 
__wur
 *

252 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

254 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

256 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

257  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

259 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

260  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

262  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

263 
	}
}

265 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

266 
size_t
 
__size
, size_à
__n
,

267 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

268 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

269 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

270 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

271 
‰ód
Ë
__wur
;

272 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

273 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

274 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
),

276 
__‰ód_chk
)

277 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

280 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


281 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

282 
FILE
 *
__ª°ri˘
 
__°ªam
)

284 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

286 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

287 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

288 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

289  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

291 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

292  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

294  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

295 
	}
}

297 #ifde‡
__USE_GNU


298 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

299 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

300 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

301 (*
__ª°ri˘
 
__s
, 
__n
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

303 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

304 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

305 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

306 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

309 
__f‹tify_fun˘i⁄
 
__wur
 *

310 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

312 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

314 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

315  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

317 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

318  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

320  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

321 
	}
}

324 #ifde‡
__USE_MISC


325 #unde‡
‰ód_u∆ocked


326 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

327 
size_t
 
__size
, size_à
__n
,

328 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

329 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

330 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

331 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

332 
‰ód_u∆ocked
Ë
__wur
;

333 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

334 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

335 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
),

337 
__‰ód_u∆ocked_chk
)

338 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

341 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


342 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

343 
FILE
 *
__ª°ri˘
 
__°ªam
)

345 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

347 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

348 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

349 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

350  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

351 
__°ªam
);

353 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

354  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

355 
__°ªam
);

358 #ifde‡
__USE_EXTERN_INLINES


359 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

360 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

361 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

362 && 
__size
 * 
__n
 <= 8)

364 
size_t
 
__˙t
 = 
__size
 * 
__n
;

365 *
__˝å
 = (*Ë
__±r
;

366 i‡(
__˙t
 == 0)

369 ; 
__˙t
 > 0; --__cnt)

371 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

372 i‡(
__c
 =
EOF
)

374 *
__˝å
++ = 
__c
;

376  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

379  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

380 
	}
}

	@/usr/include/bits/stdio_lim.h

18 #i‚de‡
_BITS_STDIO_LIM_H


19 
	#_BITS_STDIO_LIM_H
 1

	)

21 #i‚de‡
_STDIO_H


25 
	#L_tm≤am
 20

	)

26 
	#TMP_MAX
 238328

	)

27 
	#FILENAME_MAX
 4096

	)

29 #ifde‡
__USE_POSIX


30 
	#L_˘îmid
 9

	)

31 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


32 
	#L_cu£rid
 9

	)

36 #unde‡
FOPEN_MAX


37 
	#FOPEN_MAX
 16

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (*Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

39  (*Ë
__p
;

42  
NULL
;

43 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 #ifde‡
__USE_GNU


28 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

31 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

32 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

41 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


42 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

43  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

45  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

48  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

54 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

55 
size_t
 
__buÊí
), 
±¢ame_r
)

56 
	`__n⁄nuŒ
 ((2));

57 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

58 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

59 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

60 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

63 
__f‹tify_fun˘i⁄
 

64 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

66 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

68 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

69  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

70 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

71  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

73  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

74 
	}
}

77 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

78 
__THROW
 
__wur
;

79 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

80 
w˘omb
Ë
__wur
;

82 
__f‹tify_fun˘i⁄
 
__wur
 

83 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

88 
	#__STDLIB_MB_LEN_MAX
 16

	)

89 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


92 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

93  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

94  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

95 
	}
}

98 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

99 c⁄° *
__ª°ri˘
 
__§c
,

100 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

101 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

102 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

103 c⁄° *
__ª°ri˘
 
__§c
,

104 
size_t
 
__Àn
), 
mb°owcs
);

105 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

106 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

107 c⁄° *
__ª°ri˘
 
__§c
,

108 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

109 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

112 
__f‹tify_fun˘i⁄
 
size_t


113 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

114 
size_t
 
__Àn
))

116 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

118 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

119  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

120 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

122 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

123  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

124 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

126  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

127 
	}
}

130 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

131 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

132 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

133 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

134 (*
__ª°ri˘
 
__d°
,

135 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

136 
size_t
 
__Àn
), 
wc°ombs
);

137 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

138 (*
__ª°ri˘
 
__d°
,

139 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

140 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

141 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

143 
__f‹tify_fun˘i⁄
 
size_t


144 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

145 
size_t
 
__Àn
))

147 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

149 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

150  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

151 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

152  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

154  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

155 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 #i‡!
__GNUC_PREREQ
 (5,0)

26 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

30 
__f‹tify_fun˘i⁄
 *

31 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

32 
size_t
 
__Àn
))

34  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

35 
	}
}

37 
__f‹tify_fun˘i⁄
 *

38 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

40  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

41 
	}
}

43 #ifde‡
__USE_GNU


44 
__f‹tify_fun˘i⁄
 *

45 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

46 
size_t
 
__Àn
))

48  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

49 
	}
}

58 
__f‹tify_fun˘i⁄
 *

59 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

63 #i‡!
	`__GNUC_PREREQ
 (5,0)

64 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

65 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

67 
	`__w¨n_mem£t_zîo_Àn
 ();

68  
__de°
;

71  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

72 
	}
}

74 #ifde‡
__USE_MISC


75 
	~<bôs/°rögs_f‹tifõd.h
>

77 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

78 
__THROW
 
	`__n⁄nuŒ
 ((1));

80 
__f‹tify_fun˘i⁄
 

81 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

83 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__bos0
 (__dest));

84 
	}
}

87 
__f‹tify_fun˘i⁄
 *

88 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

90  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

91 
	}
}

93 #ifde‡
__USE_GNU


94 
__f‹tify_fun˘i⁄
 *

95 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

97  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

98 
	}
}

102 
__f‹tify_fun˘i⁄
 *

103 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

104 
size_t
 
__Àn
))

106  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

107 
	}
}

110 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

111 
size_t
 
__de°Àn
Ë
__THROW
;

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

125 
__f‹tify_fun˘i⁄
 *

126 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

128  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

129 
	}
}

132 
__f‹tify_fun˘i⁄
 *

133 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

134 
size_t
 
__Àn
))

136  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

137 
	}
}

	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

26 
	}
}

28 
__f‹tify_fun˘i⁄
 

29 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

31 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

32 
	}
}

	@/usr/include/bits/sys_errlist.h

19 #i‚de‡
_STDIO_H


25 #ifde‡ 
__USE_MISC


26 
sys_√º
;

27 c⁄° *c⁄° 
sys_îæi°
[];

29 #ifde‡ 
__USE_GNU


30 
_sys_√º
;

31 c⁄° *c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

80 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

30 
	t__u_ch¨
;

31 
	t__u_sh‹t
;

32 
	t__u_öt
;

33 
	t__u_l⁄g
;

36 sig√d 
	t__öt8_t
;

37 
	t__uöt8_t
;

38 sig√d 
	t__öt16_t
;

39 
	t__uöt16_t
;

40 sig√d 
	t__öt32_t
;

41 
	t__uöt32_t
;

42 #i‡
__WORDSIZE
 == 64

43 sig√d 
	t__öt64_t
;

44 
	t__uöt64_t
;

46 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

47 
__exãnsi⁄__
 
	t__uöt64_t
;

51 #i‡
__WORDSIZE
 == 64

52 
	t__quad_t
;

53 
	t__u_quad_t
;

55 
__exãnsi⁄__
 
	t__quad_t
;

56 
__exãnsi⁄__
 
	t__u_quad_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	t__ötmax_t
;

62 
	t__uötmax_t
;

64 
__exãnsi⁄__
 
	t__ötmax_t
;

65 
__exãnsi⁄__
 
	t__uötmax_t
;

98 
	#__S16_TYPE
 

	)

99 
	#__U16_TYPE
 

	)

100 
	#__S32_TYPE
 

	)

101 
	#__U32_TYPE
 

	)

102 
	#__SLONGWORD_TYPE
 

	)

103 
	#__ULONGWORD_TYPE
 

	)

104 #i‡
__WORDSIZE
 == 32

105 
	#__SQUAD_TYPE
 
__quad_t


	)

106 
	#__UQUAD_TYPE
 
__u_quad_t


	)

107 
	#__SWORD_TYPE
 

	)

108 
	#__UWORD_TYPE
 

	)

109 
	#__SLONG32_TYPE
 

	)

110 
	#__ULONG32_TYPE
 

	)

111 
	#__S64_TYPE
 
__quad_t


	)

112 
	#__U64_TYPE
 
__u_quad_t


	)

115 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

116 #ñi‡
__WORDSIZE
 == 64

117 
	t__SQUAD_TYPE
 

	)

118 
	t__UQUAD_TYPE
 

	)

119 
	t__SWORD_TYPE
 

	)

120 
	t__UWORD_TYPE
 

	)

121 
	t__SLONG32_TYPE
 

	)

122 
	t__ULONG32_TYPE
 

	)

123 
	t__S64_TYPE
 

	)

124 
	t__U64_TYPE
 

	)

126 
	t__STD_TYPE
 

	)

130 
	~<bôs/ty≥sizes.h
>

133 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

134 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

135 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

136 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

137 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

138 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

139 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

140 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

141 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

142 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

143 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

144 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

145 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

146 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

147 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

148 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

149 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

150 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

152 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

153 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

156 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

159 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

162 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

167 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

168 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

171 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

172 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

175 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

176 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

179 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

181 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

186 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

190 
__off64_t
 
	t__loff_t
;

191 *
	t__ˇddr_t
;

194 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

197 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

202 
	t__sig_©omic_t
;

204 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/sig_atomic_t.h

1 #i‚de‡
__sig_©omic_t_deföed


2 
	#__sig_©omic_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
__sig_©omic_t
 
	tsig_©omic_t
;

	@/usr/include/bits/types/sigevent_t.h

1 #i‚de‡
__sigevít_t_deföed


2 
	#__sigevít_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SIGEV_MAX_SIZE
 64

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

16 #i‚de‡
__have_±hªad_©å_t


17 
±hªad_©å_t
 
	t±hªad_©å_t
;

18 
	#__have_±hªad_©å_t
 1

	)

22 
	ssigevít


24 
__sigvÆ_t
 
	msigev_vÆue
;

25 
	msigev_signo
;

26 
	msigev_nŸify
;

30 
	m_∑d
[
__SIGEV_PAD_SIZE
];

34 
__pid_t
 
	m_tid
;

38 (*
	m_fun˘i⁄
Ë(
	m__sigvÆ_t
);

39 
±hªad_©å_t
 *
	m_©åibuã
;

40 } 
	m_sigev_thªad
;

41 } 
	m_sigev_un
;

42 } 
	tsigevít_t
;

45 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

46 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

	@/usr/include/bits/types/siginfo_t.h

1 #i‚de‡
__sigöfo_t_deföed


2 
	#__sigöfo_t_deföed
 1

	)

4 
	~<bôs/w‹dsize.h
>

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ty≥s/__sigvÆ_t.h
>

8 
	#__SI_MAX_SIZE
 128

	)

9 #i‡
__WORDSIZE
 == 64

10 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

12 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

16 
	~<bôs/sigöfo-¨ch.h
>

17 #i‚de‡
__SI_ALIGNMENT


18 
	#__SI_ALIGNMENT


	)

20 #i‚de‡
__SI_BAND_TYPE


21 
	#__SI_BAND_TYPE
 

	)

23 #i‚de‡
__SI_CLOCK_T


24 
	#__SI_CLOCK_T
 
__˛ock_t


	)

26 #i‚de‡
__SI_ERRNO_THEN_CODE


27 
	#__SI_ERRNO_THEN_CODE
 1

	)

29 #i‚de‡
__SI_HAVE_SIGSYS


30 
	#__SI_HAVE_SIGSYS
 1

	)

32 #i‚de‡
__SI_SIGFAULT_ADDL


33 
	#__SI_SIGFAULT_ADDL


	)

38 
	msi_signo
;

39 #i‡
__SI_ERRNO_THEN_CODE


40 
	msi_î∫o
;

42 
	msi_code
;

44 
	msi_code
;

45 
	msi_î∫o
;

47 #i‡
__WORDSIZE
 == 64

48 
	m__∑d0
;

53 
	m_∑d
[
__SI_PAD_SIZE
];

58 
__pid_t
 
	msi_pid
;

59 
__uid_t
 
	msi_uid
;

60 } 
	m_kûl
;

65 
	msi_tid
;

66 
	msi_ovîrun
;

67 
__sigvÆ_t
 
	msi_sigvÆ
;

68 } 
	m_timî
;

73 
__pid_t
 
	msi_pid
;

74 
__uid_t
 
	msi_uid
;

75 
__sigvÆ_t
 
	msi_sigvÆ
;

76 } 
	m_π
;

81 
__pid_t
 
	msi_pid
;

82 
__uid_t
 
	msi_uid
;

83 
	msi_°©us
;

84 
__SI_CLOCK_T
 
	msi_utime
;

85 
__SI_CLOCK_T
 
	msi_°ime
;

86 } 
	m_sigchld
;

91 *
	msi_addr
;

92 
__SI_SIGFAULT_ADDL


93 
	msi_addr_lsb
;

99 *
	m_lowî
;

100 *
	m_uµî
;

101 } 
	m_addr_bnd
;

103 
__uöt32_t
 
	m_pkey
;

104 } 
	m_bounds
;

105 } 
	m_sigÁu…
;

110 
__SI_BAND_TYPE
 
	msi_b™d
;

111 
	msi_fd
;

112 } 
	m_sigpﬁl
;

115 #i‡
__SI_HAVE_SIGSYS


118 *
	m_ˇŒ_addr
;

119 
	m_sysˇŒ
;

120 
	m_¨ch
;

121 } 
	m_sigsys
;

123 } 
	m_sifõlds
;

124 } 
	tsigöfo_t
 
	t__SI_ALIGNMENT
;

128 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

129 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

130 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

131 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

132 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

133 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

134 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

135 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

136 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

137 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

138 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

139 
	#si_addr_lsb
 
_sifõlds
.
_sigÁu…
.
si_addr_lsb


	)

140 
	#si_lowî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_lowî


	)

141 
	#si_uµî
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_addr_bnd
.
_uµî


	)

142 
	#si_pkey
 
_sifõlds
.
_sigÁu…
.
_bounds
.
_pkey


	)

143 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

144 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

145 #i‡
__SI_HAVE_SIGSYS


146 
	#si_ˇŒ_addr
 
_sifõlds
.
_sigsys
.
_ˇŒ_addr


	)

147 
	#si_sysˇŒ
 
_sifõlds
.
_sigsys
.
_sysˇŒ


	)

148 
	#si_¨ch
 
_sifõlds
.
_sigsys
.
_¨ch


	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/sigval_t.h

1 #i‚de‡
__sigvÆ_t_deföed


2 
	#__sigvÆ_t_deföed


	)

4 
	~<bôs/ty≥s/__sigvÆ_t.h
>

12 #i‚de‡
__USE_POSIX199309


16 
__sigvÆ_t
 
	tsigvÆ_t
;

	@/usr/include/bits/types/stack_t.h

19 #i‚de‡
__°ack_t_deföed


20 
	#__°ack_t_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

28 *
	mss_•
;

29 
	mss_Êags
;

30 
size_t
 
	mss_size
;

31 } 
	t°ack_t
;

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_osockaddr.h

1 #i‚de‡
__osockaddr_deföed


2 
	#__osockaddr_deföed
 1

	)

6 
	sosockaddr


8 
	mß_Ámûy
;

9 
	mß_d©a
[14];

	@/usr/include/bits/types/struct_rusage.h

19 #i‚de‡
__rußge_deföed


20 
	#__rußge_deföed
 1

	)

22 
	~<bôs/ty≥s.h
>

23 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

31 
	srußge


34 
timevÆ
 
	mru_utime
;

36 
timevÆ
 
	mru_°ime
;

38 
__exãnsi⁄__
 union

40 
	mru_maxrss
;

41 
__sysˇŒ_¶⁄g_t
 
	m__ru_maxrss_w‹d
;

46 
__exãnsi⁄__
 union

48 
	mru_ixrss
;

49 
__sysˇŒ_¶⁄g_t
 
	m__ru_ixrss_w‹d
;

52 
__exãnsi⁄__
 union

54 
	mru_idrss
;

55 
__sysˇŒ_¶⁄g_t
 
	m__ru_idrss_w‹d
;

58 
__exãnsi⁄__
 union

60 
	mru_i§ss
;

61 
__sysˇŒ_¶⁄g_t
 
	m__ru_i§ss_w‹d
;

65 
__exãnsi⁄__
 union

67 
	mru_möÊt
;

68 
__sysˇŒ_¶⁄g_t
 
	m__ru_möÊt_w‹d
;

71 
__exãnsi⁄__
 union

73 
	mru_majÊt
;

74 
__sysˇŒ_¶⁄g_t
 
	m__ru_majÊt_w‹d
;

77 
__exãnsi⁄__
 union

79 
	mru_nsw≠
;

80 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsw≠_w‹d
;

84 
__exãnsi⁄__
 union

86 
	mru_öblock
;

87 
__sysˇŒ_¶⁄g_t
 
	m__ru_öblock_w‹d
;

90 
__exãnsi⁄__
 union

92 
	mru_oublock
;

93 
__sysˇŒ_¶⁄g_t
 
	m__ru_oublock_w‹d
;

96 
__exãnsi⁄__
 union

98 
	mru_msg¢d
;

99 
__sysˇŒ_¶⁄g_t
 
	m__ru_msg¢d_w‹d
;

102 
__exãnsi⁄__
 union

104 
	mru_msgrcv
;

105 
__sysˇŒ_¶⁄g_t
 
	m__ru_msgrcv_w‹d
;

108 
__exãnsi⁄__
 union

110 
	mru_nsig«ls
;

111 
__sysˇŒ_¶⁄g_t
 
	m__ru_nsig«ls_w‹d
;

116 
__exãnsi⁄__
 union

118 
	mru_nvcsw
;

119 
__sysˇŒ_¶⁄g_t
 
	m__ru_nvcsw_w‹d
;

123 
__exãnsi⁄__
 union

125 
	mru_nivcsw
;

126 
__sysˇŒ_¶⁄g_t
 
	m__ru_nivcsw_w‹d
;

	@/usr/include/bits/types/struct_sigstack.h

19 #i‚de‡
__sig°ack_deföed


20 
	#__sig°ack_deföed
 1

	)

23 
	ssig°ack


25 *
	mss_•
;

26 
	mss_⁄°ack
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

9 
	stime•ec


11 
__time_t
 
	mtv_£c
;

12 
__sysˇŒ_¶⁄g_t
 
	mtv_n£c
;

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 
__time_t
 
	mtv_£c
;

11 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

24 
size_t
 
__buÊí
Ë
__wur
;

25 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

26 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

27 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

28 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

29 
size_t
 
__buÊí
), 
__ªad_chk
)

30 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

33 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


34 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

36 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

38 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

39  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

41 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

42  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

44  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

45 
	}
}

47 #ifde‡
__USE_UNIX98


48 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

49 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

50 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

52 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

53 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

54 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

55 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

56 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

57 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

61 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

63 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

64 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

65 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

66 
__¥ód64_chk
)

67 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

70 #i‚de‡
__USE_FILE_OFFSET64


71 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


72 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

74 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

76 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

77  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

79 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

80  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

81 
	`__bos0
 (
__buf
));

83  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


87 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

89 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

91 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

92  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

94 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

95  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

96 
	`__bos0
 (
__buf
));

99  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

100 
	}
}

103 #ifde‡
__USE_LARGEFILE64


104 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


105 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

107 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

109 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

110  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

112 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

113  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

114 
	`__bos0
 (
__buf
));

117  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

118 
	}
}

122 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


123 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

124 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

125 
size_t
 
__buÊí
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

127 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

128 (c⁄° *
__ª°ri˘
 
__∑th
,

129 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

130 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

131 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

132 (c⁄° *
__ª°ri˘
 
__∑th
,

133 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

134 
size_t
 
__buÊí
), 
__ªadlök_chk
)

135 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

138 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


139 
	`__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

140 
size_t
 
__Àn
))

142 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

144 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

145  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

147 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

148  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

150  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

151 
	}
}

154 #ifde‡
__USE_ATFILE


155 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

156 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

157 
size_t
 
__buÊí
)

158 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

159 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

160 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

161 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

162 
ªadlök©
)

163 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

164 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

165 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

167 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

168 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

172 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


173 
	`__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

174 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

176 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

178 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

179  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

181 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

182  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

183 
	`__bos
 (
__buf
));

185  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

186 
	}
}

189 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

190 
__THROW
 
__wur
;

191 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

192 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

193 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

194 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

195 
__gëcwd_chk
)

196 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

199 
__f‹tify_fun˘i⁄
 
__wur
 *

200 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

202 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

204 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

205  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

207 i‡(
__size
 > 
	`__bos
 (
__buf
))

208  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

210  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

211 
	}
}

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


214 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

215 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

216 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

217 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

220 
__f‹tify_fun˘i⁄
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

221 
	`__NTH
 (
	$gëwd
 (*
__buf
))

223 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

224  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

225  
	`__gëwd_w¨n
 (
__buf
);

226 
	}
}

229 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

230 
size_t
 
__buÊí
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

232 
size_t
 
__Àn
), 
c⁄f°r
);

233 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

234 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

235 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

236 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

239 
__f‹tify_fun˘i⁄
 
size_t


240 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

242 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

244 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

245  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

247 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

248  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

250  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

251 
	}
}

254 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

255 
__THROW
 
__wur
;

256 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

257 
gëgroups
Ë
__wur
;

258 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

259 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

260 
__gëgroups_chk
)

261 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

264 
__f‹tify_fun˘i⁄
 

265 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

267 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

269 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

270  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

272 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

273  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

275  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

276 
	}
}

279 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

280 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

281 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

282 
size_t
 
__buÊí
), 
ây«me_r
)

283 
	`__n⁄nuŒ
 ((2));

284 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

285 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

286 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

287 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

290 
__f‹tify_fun˘i⁄
 

291 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

293 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

295 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

296  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

298 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

299  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

301  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

302 
	}
}

305 #ifde‡
__USE_POSIX199506


306 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

307 
	`__n⁄nuŒ
 ((1));

308 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

309 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

310 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

311 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

312 
__gëlogö_r_chk
)

313 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

316 
__f‹tify_fun˘i⁄
 

317 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

319 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

321 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

322  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

324 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

325  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

327  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

328 
	}
}

332 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


333 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

335 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

336 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

337 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

338 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

339 
__gëho°«me_chk
)

340 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

343 
__f‹tify_fun˘i⁄
 

344 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

346 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

348 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

349  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

351 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

352  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

354  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

355 
	}
}

359 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

360 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

361 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

362 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

363 
size_t
 
__buÊí
),

364 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

365 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

366 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

367 
__gëdomaö«me_chk
)

368 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

372 
__f‹tify_fun˘i⁄
 

373 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

375 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

377 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

378  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

380 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

381  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

383  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

384 
	}
}

	@/usr/include/bits/utsname.h

18 #i‚de‡
_SYS_UTSNAME_H


23 
	#_UTSNAME_LENGTH
 65

	)

28 
	#_UTSNAME_DOMAIN_LENGTH
 
_UTSNAME_LENGTH


	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

42 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


43 #i‚de‡
__ENUM_IDTYPE_T


44 
	#__ENUM_IDTYPE_T
 1

	)

48 #unde‡
P_ALL


49 #unde‡
P_PID


50 #unde‡
P_PGID


54 
	mP_ALL
,

55 
	mP_PID
,

56 
	mP_PGID


57 } 
	tidty≥_t
;

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 #ifde‡
__x86_64__


12 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

14 
	#__SYSCALL_WORDSIZE
 64

	)

16 
	#__WORDSIZE_TIME64_COMPAT32
 0

	)

	@/usr/include/bits/xopen_lim.h

29 #i‚de‡
_XOPEN_LIM_H


30 
	#_XOPEN_LIM_H
 1

	)

62 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

64 
	~<bôs/uio_lim.h
>

65 #ifde‡
__IOV_MAX


66 
	#IOV_MAX
 
__IOV_MAX


	)

68 #unde‡
IOV_MAX


73 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

76 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

79 
	#NL_MSGMAX
 
INT_MAX


	)

83 #i‡
deföed
 
__USE_GNU
 || !deföed 
__USE_XOPEN2K8


84 
	#NL_NMAX
 
INT_MAX


	)

88 
	#NL_SETMAX
 
INT_MAX


	)

91 
	#NL_TEXTMAX
 
INT_MAX


	)

94 
	#NZERO
 20

	)

98 #ifde‡
INT_MAX


99 #i‡
INT_MAX
 == 32767

100 
	#WORD_BIT
 16

	)

102 #i‡
INT_MAX
 == 2147483647

103 
	#WORD_BIT
 32

	)

106 
	#WORD_BIT
 64

	)

109 #ñi‡
deföed
 
__INT_MAX__


110 #i‡
__INT_MAX__
 == 32767

111 
	#WORD_BIT
 16

	)

113 #i‡
__INT_MAX__
 == 2147483647

114 
	#WORD_BIT
 32

	)

117 
	#WORD_BIT
 64

	)

121 
	#WORD_BIT
 32

	)

125 #ifde‡
LONG_MAX


126 #i‡
LONG_MAX
 == 2147483647

127 
	#LONG_BIT
 32

	)

130 
	#LONG_BIT
 64

	)

132 #ñi‡
deföed
 
__LONG_MAX__


133 #i‡
__LONG_MAX__
 == 2147483647

134 
	#LONG_BIT
 32

	)

137 
	#LONG_BIT
 64

	)

140 
	~<bôs/w‹dsize.h
>

141 #i‡
__WORDSIZE
 == 64

142 
	#LONG_BIT
 64

	)

144 
	#LONG_BIT
 32

	)

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_MISC


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

61 
	~<bôs/uöä-idítôy.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

80 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

81 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

82 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

83 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

85 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

86 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

87 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

88 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

90 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

91 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

92 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

93 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

119 #unde‡
__USE_ISOC11


120 #unde‡
__USE_ISOC99


121 #unde‡
__USE_ISOC95


122 #unde‡
__USE_ISOCXX11


123 #unde‡
__USE_POSIX


124 #unde‡
__USE_POSIX2


125 #unde‡
__USE_POSIX199309


126 #unde‡
__USE_POSIX199506


127 #unde‡
__USE_XOPEN


128 #unde‡
__USE_XOPEN_EXTENDED


129 #unde‡
__USE_UNIX98


130 #unde‡
__USE_XOPEN2K


131 #unde‡
__USE_XOPEN2KXSI


132 #unde‡
__USE_XOPEN2K8


133 #unde‡
__USE_XOPEN2K8XSI


134 #unde‡
__USE_LARGEFILE


135 #unde‡
__USE_LARGEFILE64


136 #unde‡
__USE_FILE_OFFSET64


137 #unde‡
__USE_MISC


138 #unde‡
__USE_ATFILE


139 #unde‡
__USE_GNU


140 #unde‡
__USE_FORTIFY_LEVEL


141 #unde‡
__KERNEL_STRICT_NAMES


142 #unde‡
__GLIBC_USE_DEPRECATED_GETS


146 #i‚de‡
_LOOSE_KERNEL_NAMES


147 
	#__KERNEL_STRICT_NAMES


	)

157 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


158 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

159 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

161 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

168 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


169 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

170 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

172 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

176 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

182 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

183 && !
deföed
 
	g_DEFAULT_SOURCE


185 #unde‡
_DEFAULT_SOURCE


186 
	#_DEFAULT_SOURCE
 1

	)

190 #ifde‡
_GNU_SOURCE


191 #unde‡
_ISOC95_SOURCE


192 
	#_ISOC95_SOURCE
 1

	)

193 #unde‡
_ISOC99_SOURCE


194 
	#_ISOC99_SOURCE
 1

	)

195 #unde‡
_ISOC11_SOURCE


196 
	#_ISOC11_SOURCE
 1

	)

197 #unde‡
_POSIX_SOURCE


198 
	#_POSIX_SOURCE
 1

	)

199 #unde‡
_POSIX_C_SOURCE


200 
	#_POSIX_C_SOURCE
 200809L

	)

201 #unde‡
_XOPEN_SOURCE


202 
	#_XOPEN_SOURCE
 700

	)

203 #unde‡
_XOPEN_SOURCE_EXTENDED


204 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

205 #unde‡
_LARGEFILE64_SOURCE


206 
	#_LARGEFILE64_SOURCE
 1

	)

207 #unde‡
_DEFAULT_SOURCE


208 
	#_DEFAULT_SOURCE
 1

	)

209 #unde‡
_ATFILE_SOURCE


210 
	#_ATFILE_SOURCE
 1

	)

215 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

216 || (!
deföed
 
	g__STRICT_ANSI__
 \

217 && !
deföed
 
	g_ISOC99_SOURCE
 \

218 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

219 && !
deföed
 
	g_XOPEN_SOURCE
))

220 #unde‡
_DEFAULT_SOURCE


221 
	#_DEFAULT_SOURCE
 1

	)

225 #i‡(
deföed
 
_ISOC11_SOURCE
 \

226 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

227 
	#__USE_ISOC11
 1

	)

231 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

232 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

233 
	#__USE_ISOC99
 1

	)

237 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

238 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

239 
	#__USE_ISOC95
 1

	)

242 #ifde‡
__˝lu•lus


244 #i‡
__˝lu•lus
 >= 201703L

245 
	#__USE_ISOC11
 1

	)

249 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


250 
	#__USE_ISOCXX11
 1

	)

251 
	#__USE_ISOC99
 1

	)

258 #ifde‡
_DEFAULT_SOURCE


259 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


260 
	#__USE_POSIX_IMPLICITLY
 1

	)

262 #unde‡
_POSIX_SOURCE


263 
	#_POSIX_SOURCE
 1

	)

264 #unde‡
_POSIX_C_SOURCE


265 
	#_POSIX_C_SOURCE
 200809L

	)

268 #i‡((!
deföed
 
__STRICT_ANSI__
 \

269 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

270 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

271 
	#_POSIX_SOURCE
 1

	)

272 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

273 
	#_POSIX_C_SOURCE
 2

	)

274 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

275 
	#_POSIX_C_SOURCE
 199506L

	)

276 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

277 
	#_POSIX_C_SOURCE
 200112L

	)

279 
	#_POSIX_C_SOURCE
 200809L

	)

281 
	#__USE_POSIX_IMPLICITLY
 1

	)

290 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

291 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

292 
	#_POSIX_SOURCE
 1

	)

293 #unde‡
_POSIX_C_SOURCE


294 
	#_POSIX_C_SOURCE
 199506L

	)

297 #i‡(
deföed
 
_POSIX_SOURCE
 \

298 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

299 || 
deföed
 
_XOPEN_SOURCE
)

300 
	#__USE_POSIX
 1

	)

303 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


304 
	#__USE_POSIX2
 1

	)

307 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

308 
	#__USE_POSIX199309
 1

	)

311 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

312 
	#__USE_POSIX199506
 1

	)

315 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

316 
	#__USE_XOPEN2K
 1

	)

317 #unde‡
__USE_ISOC95


318 
	#__USE_ISOC95
 1

	)

319 #unde‡
__USE_ISOC99


320 
	#__USE_ISOC99
 1

	)

323 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

324 
	#__USE_XOPEN2K8
 1

	)

325 #unde‡
_ATFILE_SOURCE


326 
	#_ATFILE_SOURCE
 1

	)

329 #ifdef 
_XOPEN_SOURCE


330 
	#__USE_XOPEN
 1

	)

331 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

332 
	#__USE_XOPEN_EXTENDED
 1

	)

333 
	#__USE_UNIX98
 1

	)

334 #unde‡
_LARGEFILE_SOURCE


335 
	#_LARGEFILE_SOURCE
 1

	)

336 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

337 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

338 
	#__USE_XOPEN2K8
 1

	)

339 
	#__USE_XOPEN2K8XSI
 1

	)

341 
	#__USE_XOPEN2K
 1

	)

342 
	#__USE_XOPEN2KXSI
 1

	)

343 #unde‡
__USE_ISOC95


344 
	#__USE_ISOC95
 1

	)

345 #unde‡
__USE_ISOC99


346 
	#__USE_ISOC99
 1

	)

349 #ifde‡
_XOPEN_SOURCE_EXTENDED


350 
	#__USE_XOPEN_EXTENDED
 1

	)

355 #ifde‡
_LARGEFILE_SOURCE


356 
	#__USE_LARGEFILE
 1

	)

359 #ifde‡
_LARGEFILE64_SOURCE


360 
	#__USE_LARGEFILE64
 1

	)

363 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

364 
	#__USE_FILE_OFFSET64
 1

	)

367 #i‡
deföed
 
_DEFAULT_SOURCE


368 
	#__USE_MISC
 1

	)

371 #ifdef 
_ATFILE_SOURCE


372 
	#__USE_ATFILE
 1

	)

375 #ifdef 
_GNU_SOURCE


376 
	#__USE_GNU
 1

	)

379 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

380 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

381 #i‡
_FORTIFY_SOURCE
 > 1

382 
	#__USE_FORTIFY_LEVEL
 2

	)

384 
	#__USE_FORTIFY_LEVEL
 1

	)

387 
	#__USE_FORTIFY_LEVEL
 0

	)

394 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


395 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

397 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

402 
	~<°dc-¥edef.h
>

410 #unde‡
__GNU_LIBRARY__


411 
	#__GNU_LIBRARY__
 6

	)

415 
	#__GLIBC__
 2

	)

416 
	#__GLIBC_MINOR__
 27

	)

418 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

419 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

422 #i‚de‡
__ASSEMBLER__


423 #i‚de‡
_SYS_CDEFS_H


424 
	~<sys/cdefs.h
>

429 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


430 
	#__USE_LARGEFILE
 1

	)

431 
	#__USE_LARGEFILE64
 1

	)

437 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

438 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

439 && 
deföed
 
	g__exã∫_ölöe


440 
	#__USE_EXTERN_INLINES
 1

	)

448 
	~<gnu/°ubs.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

19 #i‚def 
_SCHED_H


20 
	#_SCHED_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

31 
	~<bôs/ty≥s/time_t.h
>

32 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‚de‡
__USE_XOPEN2K


34 
	~<time.h
>

37 #i‚de‡
__pid_t_deföed


38 
__pid_t
 
	tpid_t
;

39 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

44 
	~<bôs/˝u-£t.h
>

47 
	#sched_¥i‹ôy
 
sched_¥i‹ôy


	)

48 
	#__sched_¥i‹ôy
 
sched_¥i‹ôy


	)

51 
__BEGIN_DECLS


54 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

55 
__THROW
;

58 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

62 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

65 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

68 
	$sched_yõld
 (Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

77 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

80 #ifde‡
__USE_GNU


82 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

83 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

86 
˝u£ç
)

	)

87 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

88 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

90 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

91 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

92 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

93 
˝u£ç
)

	)

94 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

95 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

97 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

98 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

100 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

102 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

104 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

106 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

108 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

110 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

111 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

112 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

113 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

115 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

116 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

117 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

121 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

126 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

129 
__END_DECLS


	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
__BEGIN_DECLS


101 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

102 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

103 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

104 
timevÆ
 *
__ª°ri˘
 
__timeout
);

106 #ifde‡
__USE_XOPEN2K


113 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

114 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

115 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

116 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

117 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

122 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


123 
	~<bôs/£À˘2.h
>

126 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

19 #i‚de‡
_SYS_SYSMACROS_H_OUTER


21 #i‚de‡
__SYSMACROS_DEPRECATED_INCLUSION


22 
	#_SYS_SYSMACROS_H_OUTER
 1

	)

30 #unde‡
maj‹


31 #unde‡
mö‹


32 #unde‡
makedev


36 #i‚de‡
_SYS_SYSMACROS_H


37 
	#_SYS_SYSMACROS_H
 1

	)

39 
	~<„©uªs.h
>

40 
	~<bôs/ty≥s.h
>

41 
	~<bôs/sysma¸os.h
>

52 
	#__SYSMACROS_DM
(
symbﬁ
Ë
__SYSMACROS_DM1
 \

53 (
In
 
the
 
GNU
 
C
 
Libøry
, #symbﬁ 
is
 
deföed
\
n
\

54 
by
 <
sys
/
sysma¸os
.
h
>. 
F‹
 
hi°‹iˇl
 
com∑tibûôy
, 
ô
 
is
\
n
\

55 
cuºíéy
 
deföed
 
by
 <
sys
/
ty≥s
.
h
> 
as
 
wñl
, 
but
 
we
 
∂™
 
to
\
n
\

56 
ªmove
 
this
 
so⁄
. 
To
 
u£
 #symbﬁ, 
ö˛ude
 <
sys
/
sysma¸os
.
h
>\
n
\

57 
dúe˘ly
. 
If
 
you
 
did
 
nŸ
 
öãnd
 
to
 
u£
 
a
 
sy°em
-
deföed
 
ma¸o
\
n
\

58 #symbﬁ, 
you
 
should
 
undeföe
 
ô
 
a·î
 
ö˛udög
 <
sys
/
ty≥s
.
h
>.)

	)

62 
	#__SYSMACROS_DM1
(...Ë
	`__glibc_ma¸o_w¨nög
 (#__VA_ARGS__)

	)

64 
	#__SYSMACROS_DECL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

65 
πy≥
 
gnu_dev_
##
«me
 
¥Ÿo
 
__THROW
 
__©åibuã_c⁄°__
;

	)

67 
	#__SYSMACROS_IMPL_TEMPL
(
πy≥
, 
«me
, 
¥Ÿo
) \

68 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 
πy≥
 \

69 
	`__NTH
 (
gnu_dev_
##
«me
 
¥Ÿo
)

	)

71 
__BEGIN_DECLS


73 
	$__SYSMACROS_DECLARE_MAJOR
 (
__SYSMACROS_DECL_TEMPL
)

74 
	$__SYSMACROS_DECLARE_MINOR
 (
__SYSMACROS_DECL_TEMPL
)

75 
	$__SYSMACROS_DECLARE_MAKEDEV
 (
__SYSMACROS_DECL_TEMPL
)

77 #ifde‡
__USE_EXTERN_INLINES


79 
	$__SYSMACROS_DEFINE_MAJOR
 (
__SYSMACROS_IMPL_TEMPL
)

80 
	$__SYSMACROS_DEFINE_MINOR
 (
__SYSMACROS_IMPL_TEMPL
)

81 
	$__SYSMACROS_DEFINE_MAKEDEV
 (
__SYSMACROS_IMPL_TEMPL
)

85 
__END_DECLS


89 #i‚de‡
__SYSMACROS_NEED_IMPLEMENTATION


90 #unde‡
__SYSMACROS_DECL_TEMPL


91 #unde‡
__SYSMACROS_IMPL_TEMPL


92 #unde‡
__SYSMACROS_DECLARE_MAJOR


93 #unde‡
__SYSMACROS_DECLARE_MINOR


94 #unde‡
__SYSMACROS_DECLARE_MAKEDEV


95 #unde‡
__SYSMACROS_DEFINE_MAJOR


96 #unde‡
__SYSMACROS_DEFINE_MINOR


97 #unde‡
__SYSMACROS_DEFINE_MAKEDEV


100 #ifde‡
__SYSMACROS_DEPRECATED_INCLUSION


101 
	#maj‹
(
dev
Ë
	`__SYSMACROS_DM
 (
maj‹
Ë
	`gnu_dev_maj‹
 (dev)

	)

102 
	#mö‹
(
dev
Ë
	`__SYSMACROS_DM
 (
mö‹
Ë
	`gnu_dev_mö‹
 (dev)

	)

103 
	#makedev
(
maj
, 
mö
Ë
	`__SYSMACROS_DM
 (
makedev
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

105 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

106 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

107 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ucontext.h

18 #i‚de‡
_SYS_UCONTEXT_H


19 
	#_SYS_UCONTEXT_H
 1

	)

21 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/ty≥s/sig£t_t.h
>

25 
	~<bôs/ty≥s/°ack_t.h
>

28 #ifde‡
__USE_MISC


29 
	#__˘x
(
Êd
Ë
	)
fld

31 
	#__˘x
(
Êd
Ë
__
 ## 
	)
fld

34 #ifde‡
__x86_64__


37 
__exãnsi⁄__
 
	tgªg_t
;

40 
	#__NGREG
 23

	)

41 #ifde‡
__USE_MISC


42 
	#NGREG
 
__NGREG


	)

46 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

48 #ifde‡
__USE_GNU


52 
	mREG_R8
 = 0,

53 
	#REG_R8
 
REG_R8


	)

54 
	mREG_R9
,

55 
	#REG_R9
 
REG_R9


	)

56 
	mREG_R10
,

57 
	#REG_R10
 
REG_R10


	)

58 
	mREG_R11
,

59 
	#REG_R11
 
REG_R11


	)

60 
	mREG_R12
,

61 
	#REG_R12
 
REG_R12


	)

62 
	mREG_R13
,

63 
	#REG_R13
 
REG_R13


	)

64 
	mREG_R14
,

65 
	#REG_R14
 
REG_R14


	)

66 
	mREG_R15
,

67 
	#REG_R15
 
REG_R15


	)

68 
	mREG_RDI
,

69 
	#REG_RDI
 
REG_RDI


	)

70 
	mREG_RSI
,

71 
	#REG_RSI
 
REG_RSI


	)

72 
	mREG_RBP
,

73 
	#REG_RBP
 
REG_RBP


	)

74 
	mREG_RBX
,

75 
	#REG_RBX
 
REG_RBX


	)

76 
	mREG_RDX
,

77 
	#REG_RDX
 
REG_RDX


	)

78 
	mREG_RAX
,

79 
	#REG_RAX
 
REG_RAX


	)

80 
	mREG_RCX
,

81 
	#REG_RCX
 
REG_RCX


	)

82 
	mREG_RSP
,

83 
	#REG_RSP
 
REG_RSP


	)

84 
	mREG_RIP
,

85 
	#REG_RIP
 
REG_RIP


	)

86 
	mREG_EFL
,

87 
	#REG_EFL
 
REG_EFL


	)

88 
	mREG_CSGSFS
,

89 
	#REG_CSGSFS
 
REG_CSGSFS


	)

90 
	mREG_ERR
,

91 
	#REG_ERR
 
REG_ERR


	)

92 
	mREG_TRAPNO
,

93 
	#REG_TRAPNO
 
REG_TRAPNO


	)

94 
	mREG_OLDMASK
,

95 
	#REG_OLDMASK
 
REG_OLDMASK


	)

96 
	mREG_CR2


97 
	#REG_CR2
 
REG_CR2


	)

101 
	s_libc_Âxªg


103 
__˘x
(
signifiˇnd
)[4];

104 
__˘x
(
exp⁄ít
);

105 
	m__glibc_ª£rved1
[3];

108 
	s_libc_xmmªg


110 
__uöt32_t
 
__˘x
(
ñemít
)[4];

113 
	s_libc_Â°©e


116 
__uöt16_t
 
__˘x
(
cwd
);

117 
__uöt16_t
 
__˘x
(
swd
);

118 
__uöt16_t
 
__˘x
(
·w
);

119 
__uöt16_t
 
__˘x
(
f›
);

120 
__uöt64_t
 
__˘x
(
rù
);

121 
__uöt64_t
 
__˘x
(
rdp
);

122 
__uöt32_t
 
__˘x
(
mxc§
);

123 
__uöt32_t
 
__˘x
(
mx¸_mask
);

124 
_libc_Âxªg
 
	m_°
[8];

125 
_libc_xmmªg
 
	m_xmm
[16];

126 
__uöt32_t
 
	m__glibc_ª£rved1
[24];

130 
_libc_Â°©e
 *
	tÂªg£t_t
;

135 
gªg£t_t
 
__˘x
(
gªgs
);

137 
Âªg£t_t
 
__˘x
(
Âªgs
);

138 
__exãnsi⁄__
 
	m__ª£rved1
 [8];

139 } 
	tmc⁄ãxt_t
;

142 
	suc⁄ãxt_t


144 
__˘x
(
uc_Êags
);

145 
uc⁄ãxt_t
 *
	muc_lök
;

146 
°ack_t
 
	muc_°ack
;

147 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

148 
sig£t_t
 
	muc_sigmask
;

149 
_libc_Â°©e
 
	m__Âªgs_mem
;

150 } 
	tuc⁄ãxt_t
;

155 
	tgªg_t
;

158 
	#__NGREG
 19

	)

159 #ifde‡
__USE_MISC


160 
	#NGREG
 
__NGREG


	)

164 
gªg_t
 
	tgªg£t_t
[
__NGREG
];

166 #ifde‡
__USE_GNU


170 
	mREG_GS
 = 0,

171 
	#REG_GS
 
REG_GS


	)

172 
	mREG_FS
,

173 
	#REG_FS
 
REG_FS


	)

174 
	mREG_ES
,

175 
	#REG_ES
 
REG_ES


	)

176 
	mREG_DS
,

177 
	#REG_DS
 
REG_DS


	)

178 
	mREG_EDI
,

179 
	#REG_EDI
 
REG_EDI


	)

180 
	mREG_ESI
,

181 
	#REG_ESI
 
REG_ESI


	)

182 
	mREG_EBP
,

183 
	#REG_EBP
 
REG_EBP


	)

184 
	mREG_ESP
,

185 
	#REG_ESP
 
REG_ESP


	)

186 
	mREG_EBX
,

187 
	#REG_EBX
 
REG_EBX


	)

188 
	mREG_EDX
,

189 
	#REG_EDX
 
REG_EDX


	)

190 
	mREG_ECX
,

191 
	#REG_ECX
 
REG_ECX


	)

192 
	mREG_EAX
,

193 
	#REG_EAX
 
REG_EAX


	)

194 
	mREG_TRAPNO
,

195 
	#REG_TRAPNO
 
REG_TRAPNO


	)

196 
	mREG_ERR
,

197 
	#REG_ERR
 
REG_ERR


	)

198 
	mREG_EIP
,

199 
	#REG_EIP
 
REG_EIP


	)

200 
	mREG_CS
,

201 
	#REG_CS
 
REG_CS


	)

202 
	mREG_EFL
,

203 
	#REG_EFL
 
REG_EFL


	)

204 
	mREG_UESP
,

205 
	#REG_UESP
 
REG_UESP


	)

206 
	mREG_SS


207 
	#REG_SS
 
REG_SS


	)

212 
	s_libc_Âªg


214 
__˘x
(
signifiˇnd
)[4];

215 
__˘x
(
exp⁄ít
);

218 
	s_libc_Â°©e


220 
__˘x
(
cw
);

221 
__˘x
(
sw
);

222 
__˘x
(
èg
);

223 
__˘x
(
ùoff
);

224 
__˘x
(
cs£l
);

225 
__˘x
(
d©aoff
);

226 
__˘x
(
d©a£l
);

227 
_libc_Âªg
 
	m_°
[8];

228 
__˘x
(
°©us
);

232 
_libc_Â°©e
 *
	tÂªg£t_t
;

237 
gªg£t_t
 
__˘x
(
gªgs
);

240 
Âªg£t_t
 
__˘x
(
Âªgs
);

241 
__˘x
(
ﬁdmask
);

242 
__˘x
(
¸2
);

243 } 
	tmc⁄ãxt_t
;

246 
	suc⁄ãxt_t


248 
__˘x
(
uc_Êags
);

249 
uc⁄ãxt_t
 *
	muc_lök
;

250 
°ack_t
 
	muc_°ack
;

251 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

252 
sig£t_t
 
	muc_sigmask
;

253 
_libc_Â°©e
 
	m__Âªgs_mem
;

254 } 
	tuc⁄ãxt_t
;

258 #unde‡
__˘x


	@/usr/include/asm/socket.h

1 
	~<asm-gíîic/sockë.h
>

	@/usr/include/bits/_G_config.h

4 #i‚de‡
_BITS_G_CONFIG_H


5 
	#_BITS_G_CONFIG_H
 1

	)

7 #i‡!
deföed
 
_BITS_LIBIO_H
 && !deföed 
_G_CONFIG_H


13 
	~<bôs/ty≥s.h
>

14 
	#__√ed_size_t


	)

15 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


16 
	#__√ed_wch¨_t


	)

18 
	#__√ed_NULL


	)

19 
	~<°ddef.h
>

21 
	~<bôs/ty≥s/__mb°©e_t.h
>

22 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


23 
	~<bôs/ty≥s/wöt_t.h
>

28 
__off_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos_t
;

33 
__off64_t
 
	m__pos
;

34 
__mb°©e_t
 
	m__°©e
;

35 } 
	t_G_Âos64_t
;

36 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


37 
	~<gc⁄v.h
>

40 
__gc⁄v_öfo
 
	m__cd
;

43 
__gc⁄v_öfo
 
	m__cd
;

44 
__gc⁄v_°ï_d©a
 
	m__d©a
;

45 } 
	m__comböed
;

46 } 
	t_G_ic⁄v_t
;

51 
	#_G_va_li°
 
__gnuc_va_li°


	)

53 
	#_G_HAVE_MMAP
 1

	)

54 
	#_G_HAVE_MREMAP
 1

	)

56 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

59 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

61 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/bits/byteswap-16.h

19 #i‚de‡
_BITS_BYTESWAP_H


23 #ifde‡
__GNUC__


24 #i‡
__GNUC__
 >= 2

25 
	#__bsw≠_16
(
x
) \

26 (
__exãnsi⁄__
 \

27 ({ 
__v
, 
__x
 = (Ë(
x
); \

28 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

29 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

31 
	`__asm__
 ("rorw $8, %w0" \

32 : "Ù" (
__v
) \

33 : "0" (
__x
) \

35 
__v
; }))

	)

38 
	#__bsw≠_16
(
x
) \

39 (
__exãnsi⁄__
 \

40 ({ 
__x
 = (Ë(
x
); \

41 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

44 
__ölöe
 

45 
	$__bsw≠_16
 (
__bsx
)

47  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

48 
	}
}

	@/usr/include/bits/cpu-set.h

20 #i‚de‡
_BITS_CPU_SET_H


21 
	#_BITS_CPU_SET_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#__CPU_SETSIZE
 1024

	)

29 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

32 
__CPU_MASK_TYPE
 
	t__˝u_mask
;

35 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

36 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

41 
__˝u_mask
 
	m__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

42 } 
	t˝u_£t_t
;

45 #i‡
__GNUC_PREREQ
 (2, 91)

46 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

47 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

49 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

51 
size_t
 
__i
; \

52 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

53 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

54 
__i
 = 0; __ò< 
__imax
; ++__i) \

55 
__bôs
[
__i
] = 0; \

56 } 0)

	)

58 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

59 (
__exãnsi⁄__
 \

60 ({ 
size_t
 
__˝u
 = (
˝u
); \

61 
__˝u
 / 8 < (
£tsize
) \

62 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

63 |
	`__CPUMASK
 (
__˝u
)) \

64 : 0; }))

	)

65 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

66 (
__exãnsi⁄__
 \

67 ({ 
size_t
 
__˝u
 = (
˝u
); \

68 
__˝u
 / 8 < (
£tsize
) \

69 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

70 &~
	`__CPUMASK
 (
__˝u
)) \

71 : 0; }))

	)

72 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

73 (
__exãnsi⁄__
 \

74 ({ 
size_t
 
__˝u
 = (
˝u
); \

75 
__˝u
 / 8 < (
£tsize
) \

76 ? ((((c⁄° 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

77 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

78 : 0; }))

	)

80 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

81 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

83 #i‡
__GNUC_PREREQ
 (2, 91)

84 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

85 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

87 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

88 (
__exãnsi⁄__
 \

89 ({ c⁄° 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

90 c⁄° 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

91 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

92 
size_t
 
__i
; \

93 
__i
 = 0; __ò< 
__imax
; ++__i) \

94 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

96 
__i
 =
__imax
; }))

	)

99 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

100 (
__exãnsi⁄__
 \

101 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

102 c⁄° 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

103 c⁄° 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

104 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

105 
size_t
 
__i
; \

106 
__i
 = 0; __ò< 
__imax
; ++__i) \

107 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

108 
__de°
; }))

	)

110 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

111 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

112 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

113 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

115 
__BEGIN_DECLS


117 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

118 
__THROW
;

119 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

120 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

122 
__END_DECLS


	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‚de‡
__USE_FILE_OFFSET64


105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

205 
	#F_ADD_SEALS
 1033

	)

206 
	#F_GET_SEALS
 1034

	)

208 
	#F_GET_RW_HINT
 1035

	)

209 
	#F_SET_RW_HINT
 1036

	)

210 
	#F_GET_FILE_RW_HINT
 1037

	)

211 
	#F_SET_FILE_RW_HINT
 1038

	)

213 #ifde‡
__USE_XOPEN2K8


214 
	#F_DUPFD_CLOEXEC
 1030

	)

219 
	#FD_CLOEXEC
 1

	)

221 #i‚de‡
F_RDLCK


223 
	#F_RDLCK
 0

	)

224 
	#F_WRLCK
 1

	)

225 
	#F_UNLCK
 2

	)

230 #i‚de‡
F_EXLCK


231 
	#F_EXLCK
 4

	)

232 
	#F_SHLCK
 8

	)

235 #ifde‡
__USE_MISC


237 
	#LOCK_SH
 1

	)

238 
	#LOCK_EX
 2

	)

239 
	#LOCK_NB
 4

	)

241 
	#LOCK_UN
 8

	)

244 #ifde‡
__USE_GNU


245 
	#LOCK_MAND
 32

	)

246 
	#LOCK_READ
 64

	)

247 
	#LOCK_WRITE
 128

	)

248 
	#LOCK_RW
 192

	)

251 #ifde‡
__USE_GNU


253 
	#DN_ACCESS
 0x00000001

	)

254 
	#DN_MODIFY
 0x00000002

	)

255 
	#DN_CREATE
 0x00000004

	)

256 
	#DN_DELETE
 0x00000008

	)

257 
	#DN_RENAME
 0x00000010

	)

258 
	#DN_ATTRIB
 0x00000020

	)

259 
	#DN_MULTISHOT
 0x80000000

	)

263 #ifde‡
__USE_GNU


265 
	e__pid_ty≥


267 
	mF_OWNER_TID
 = 0,

268 
	mF_OWNER_PID
,

269 
	mF_OWNER_PGRP
,

270 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


274 
	sf_ow√r_ex


276 
__pid_ty≥
 
	mty≥
;

277 
__pid_t
 
	mpid
;

281 #ifde‡
__USE_GNU


283 
	#F_SEAL_SEAL
 0x0001

	)

284 
	#F_SEAL_SHRINK
 0x0002

	)

285 
	#F_SEAL_GROW
 0x0004

	)

286 
	#F_SEAL_WRITE
 0x0008

	)

289 #ifde‡
__USE_GNU


291 
	#RWF_WRITE_LIFE_NOT_SET
 0

	)

292 
	#RWH_WRITE_LIFE_NONE
 1

	)

293 
	#RWH_WRITE_LIFE_SHORT
 2

	)

294 
	#RWH_WRITE_LIFE_MEDIUM
 3

	)

295 
	#RWH_WRITE_LIFE_LONG
 4

	)

296 
	#RWH_WRITE_LIFE_EXTREME
 5

	)

301 #ifdef 
__USE_MISC


302 
	#FAPPEND
 
O_APPEND


	)

303 
	#FFSYNC
 
O_FSYNC


	)

304 
	#FASYNC
 
O_ASYNC


	)

305 
	#FNONBLOCK
 
O_NONBLOCK


	)

306 
	#FNDELAY
 
O_NDELAY


	)

309 #i‚de‡
__POSIX_FADV_DONTNEED


310 
	#__POSIX_FADV_DONTNEED
 4

	)

311 
	#__POSIX_FADV_NOREUSE
 5

	)

314 #ifde‡
__USE_XOPEN2K


315 
	#POSIX_FADV_NORMAL
 0

	)

316 
	#POSIX_FADV_RANDOM
 1

	)

317 
	#POSIX_FADV_SEQUENTIAL
 2

	)

318 
	#POSIX_FADV_WILLNEED
 3

	)

319 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

320 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

324 #ifde‡
__USE_GNU


326 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

329 
	#SYNC_FILE_RANGE_WRITE
 2

	)

332 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

337 
	#SPLICE_F_MOVE
 1

	)

338 
	#SPLICE_F_NONBLOCK
 2

	)

341 
	#SPLICE_F_MORE
 4

	)

342 
	#SPLICE_F_GIFT
 8

	)

346 
	~<löux/ÁŒoc.h
>

350 
	sfûe_h™dÀ


352 
	mh™dÀ_byãs
;

353 
	mh™dÀ_ty≥
;

355 
	mf_h™dÀ
[0];

359 
	#MAX_HANDLE_SZ
 128

	)

363 #ifde‡
__USE_ATFILE


364 
	#AT_FDCWD
 -100

	)

367 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

368 
	#AT_REMOVEDIR
 0x200

	)

370 
	#AT_SYMLINK_FOLLOW
 0x400

	)

371 #ifde‡
__USE_GNU


372 
	#AT_NO_AUTOMOUNT
 0x800

	)

374 
	#AT_EMPTY_PATH
 0x1000

	)

376 
	#AT_EACCESS
 0x200

	)

380 
	g__BEGIN_DECLS


382 #ifde‡
__USE_GNU


385 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

386 
__THROW
;

393 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

394 
__Êags
);

401 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

402 
size_t
 
__cou¡
, 
__Êags
);

408 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

409 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

410 
__Êags
);

416 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

417 
__Êags
);

423 #i‚de‡
__USE_FILE_OFFSET64


424 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

426 #ifde‡
__REDIRECT


427 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

428 
__off64_t
 
__Àn
),

429 
ÁŒoˇã64
);

431 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

434 #ifde‡
__USE_LARGEFILE64


435 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

436 
__off64_t
 
__Àn
);

441 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

442 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

443 
__Êags
Ë
__THROW
;

449 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

450 
__Êags
);

454 
__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

62 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


63 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

65 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

68 #i‚de‡
__ASSEMBLER__


73 #i‡
__HAVE_FLOAT16


74 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


76 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

78 
	#__f16
(
x
Ëx##
f16


	)

82 #i‡
__HAVE_FLOAT32


83 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


84 
	#__f32
(
x
Ëx##
f


	)

86 
	#__f32
(
x
Ëx##
f32


	)

90 #i‡
__HAVE_FLOAT64


91 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


92 #ifde‡
__NO_LONG_DOUBLE_MATH


93 
	#__f64
(
x
Ëx##
l


	)

95 
	#__f64
(
x
Ë
	)
x

98 
	#__f64
(
x
Ëx##
f64


	)

102 #i‡
__HAVE_FLOAT32X


103 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


104 
	#__f32x
(
x
Ë
	)
x

106 
	#__f32x
(
x
Ëx##
f32x


	)

110 #i‡
__HAVE_FLOAT64X


111 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


112 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


113 
	#__f64x
(
x
Ëx##
l


	)

115 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

118 
	#__f64x
(
x
Ëx##
f64x


	)

122 #i‡
__HAVE_FLOAT128X


123 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


126 
	#__f128x
(
x
Ëx##
f128x


	)

131 #i‡
__HAVE_FLOAT16


132 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


133 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

134 
	#__CFLOAT16
 
__cÊﬂt16


	)

136 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

140 #i‡
__HAVE_FLOAT32


141 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


142 
	#__CFLOAT32
 
_Com∂ex
 

	)

144 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

148 #i‡
__HAVE_FLOAT64


149 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


150 #ifde‡
__NO_LONG_DOUBLE_MATH


151 
	#__CFLOAT64
 
_Com∂ex
 

	)

153 
	#__CFLOAT64
 
_Com∂ex
 

	)

156 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

160 #i‡
__HAVE_FLOAT32X


161 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


162 
	#__CFLOAT32X
 
_Com∂ex
 

	)

164 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

168 #i‡
__HAVE_FLOAT64X


169 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


170 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


171 
	#__CFLOAT64X
 
_Com∂ex
 

	)

173 
	#__CFLOAT64X
 
__CFLOAT128


	)

176 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

180 #i‡
__HAVE_FLOAT128X


181 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


184 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

189 #i‡
__HAVE_FLOAT16


191 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


192 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

195 #i‡!
__GNUC_PREREQ
 (7, 0)

196 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

197 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

198 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

199 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

204 #i‡
__HAVE_FLOAT32


206 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


207 
	t_Flﬂt32
;

210 #i‡!
__GNUC_PREREQ
 (7, 0)

211 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

212 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

213 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

214 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

219 #i‡
__HAVE_FLOAT64


228 #ifde‡
__NO_LONG_DOUBLE_MATH


230 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


231 
	t_Flﬂt64
;

234 #i‡!
__GNUC_PREREQ
 (7, 0)

235 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

236 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

237 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

238 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

243 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


244 
	t_Flﬂt64
;

247 #i‡!
__GNUC_PREREQ
 (7, 0)

248 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

249 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

250 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

251 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

258 #i‡
__HAVE_FLOAT32X


260 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


261 
	t_Flﬂt32x
;

264 #i‡!
__GNUC_PREREQ
 (7, 0)

265 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

266 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

267 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

268 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

273 #i‡
__HAVE_FLOAT64X


275 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


277 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


278 
	t_Flﬂt64x
;

281 #i‡!
__GNUC_PREREQ
 (7, 0)

282 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

283 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

284 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

285 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

290 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


291 
_Flﬂt128
 
	t_Flﬂt64x
;

294 #i‡!
__GNUC_PREREQ
 (7, 0)

295 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

296 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

297 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

298 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

305 #i‡
__HAVE_FLOAT128X


307 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| 
deföed
 
__˝lu•lus


311 #i‡!
__GNUC_PREREQ
 (7, 0)

312 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

313 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

314 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

315 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/libio-ldbl.h

19 #i‚de‡
_BITS_LIBIO_LDBL_H


20 
	#_BITS_LIBIO_LDBL_H
 1

	)

22 #i‚de‡
_BITS_LIBIO_H


26 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

27 
	$__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	#PTHREAD_STACK_MIN
 16384

	)

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 #ifde‡
__USE_MISC


45 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 #ifde‡
__USE_MISC


51 
	#MAP_FILE
 0

	)

52 #ifde‡
__MAP_ANONYMOUS


53 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

55 
	#MAP_ANONYMOUS
 0x20

	)

57 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

59 
	#MAP_HUGE_SHIFT
 26

	)

60 
	#MAP_HUGE_MASK
 0x3f

	)

64 
	#MS_ASYNC
 1

	)

65 
	#MS_SYNC
 4

	)

66 
	#MS_INVALIDATE
 2

	)

69 #ifde‡
__USE_GNU


70 
	#MREMAP_MAYMOVE
 1

	)

71 
	#MREMAP_FIXED
 2

	)

75 #ifde‡
__USE_MISC


76 
	#MADV_NORMAL
 0

	)

77 
	#MADV_RANDOM
 1

	)

78 
	#MADV_SEQUENTIAL
 2

	)

79 
	#MADV_WILLNEED
 3

	)

80 
	#MADV_DONTNEED
 4

	)

81 
	#MADV_FREE
 8

	)

82 
	#MADV_REMOVE
 9

	)

83 
	#MADV_DONTFORK
 10

	)

84 
	#MADV_DOFORK
 11

	)

85 
	#MADV_MERGEABLE
 12

	)

86 
	#MADV_UNMERGEABLE
 13

	)

87 
	#MADV_HUGEPAGE
 14

	)

88 
	#MADV_NOHUGEPAGE
 15

	)

89 
	#MADV_DONTDUMP
 16

	)

91 
	#MADV_DODUMP
 17

	)

92 
	#MADV_WIPEONFORK
 18

	)

93 
	#MADV_KEEPONFORK
 19

	)

94 
	#MADV_HWPOISON
 100

	)

98 #ifde‡
__USE_XOPEN2K


99 
	#POSIX_MADV_NORMAL
 0

	)

100 
	#POSIX_MADV_RANDOM
 1

	)

101 
	#POSIX_MADV_SEQUENTIAL
 2

	)

102 
	#POSIX_MADV_WILLNEED
 3

	)

103 
	#POSIX_MADV_DONTNEED
 4

	)

107 #i‚de‡
MCL_CURRENT


108 
	#MCL_CURRENT
 1

	)

109 
	#MCL_FUTURE
 2

	)

111 
	#MCL_ONFAULT
 4

	)

115 
	~<bôs/mm™-sh¨ed.h
>

	@/usr/include/bits/sched.h

20 #i‚de‡
_BITS_SCHED_H


21 
	#_BITS_SCHED_H
 1

	)

23 #i‚de‡
_SCHED_H


28 
	#SCHED_OTHER
 0

	)

29 
	#SCHED_FIFO
 1

	)

30 
	#SCHED_RR
 2

	)

31 #ifde‡
__USE_GNU


32 
	#SCHED_BATCH
 3

	)

33 
	#SCHED_ISO
 4

	)

34 
	#SCHED_IDLE
 5

	)

35 
	#SCHED_DEADLINE
 6

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWCGROUP
 0x02000000

	)

66 
	#CLONE_NEWUTS
 0x04000000

	)

67 
	#CLONE_NEWIPC
 0x08000000

	)

68 
	#CLONE_NEWUSER
 0x10000000

	)

69 
	#CLONE_NEWPID
 0x20000000

	)

70 
	#CLONE_NEWNET
 0x40000000

	)

71 
	#CLONE_IO
 0x80000000

	)

75 
	ssched_∑øm


77 
	msched_¥i‹ôy
;

80 
	g__BEGIN_DECLS


82 #ifde‡
__USE_GNU


84 
	$˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

85 
__Êags
, *
__¨g
, ...Ë
__THROW
;

88 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

91 
	$sched_gë˝u
 (Ë
__THROW
;

94 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


22 
	~<bôs/w‹dsize.h
>

25 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

27 #i‡
__WORDSIZE
 == 64

28 
	#__FD_ZERO_STOS
 "°osq"

	)

30 
	#__FD_ZERO_STOS
 "°o¶"

	)

33 
	#__FD_ZERO
(
fd•
) \

35 
__d0
, 
__d1
; \

36 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

37 : "=c" (
__d0
), "=D" (
__d1
) \

38 : "a" (0), "0" ( (
fd_£t
) \

39 /  (
__fd_mask
)), \

40 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

42 } 0)

	)

48 
	#__FD_ZERO
(
£t
) \

50 
__i
; \

51 
fd_£t
 *
__¨r
 = (
£t
); \

52 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

53 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

54 } 0)

	)

58 
	#__FD_SET
(
d
, 
£t
) \

59 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

60 
	#__FD_CLR
(
d
, 
£t
) \

61 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

62 
	#__FD_ISSET
(
d
, 
£t
) \

63 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


24 
__fdñt_chk
 (
__d
);

25 
	$__fdñt_w¨n
 (
__d
)

26 
	`__w¨«âr
 ("bit outside of fd_set selected");

27 #unde‡
__FD_ELT


28 
	#__FD_ELT
(
d
) \

29 
__exãnsi⁄__
 \

30 ({ 
__d
 = (
d
); \

31 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

32 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

33 ? (
__d
 / 
__NFDBITS
) \

34 : 
	`__fdñt_w¨n
 (
__d
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/siginfo-arch.h

2 #i‚de‡
_BITS_SIGINFO_ARCH_H


3 
	#_BITS_SIGINFO_ARCH_H
 1

	)

5 #i‡
deföed
 
__x86_64__
 && 
__WORDSIZE
 == 32

12 
__˛ock_t
 
	t__©åibuã__
 ((
	t__Æig√d__
 (4))Ë
	t__sigchld_˛ock_t
;

13 
	#__SI_ALIGNMENT
 
	`__©åibuã__
 ((
	`__Æig√d__
 (8)))

	)

14 
	#__SI_CLOCK_T
 
__sigchld_˛ock_t


	)

	@/usr/include/bits/siginfo-consts-arch.h

2 #i‚de‡
_BITS_SIGINFO_CONSTS_ARCH_H


3 
	#_BITS_SIGINFO_CONSTS_ARCH_H
 1

	)

	@/usr/include/bits/signum-generic.h

19 #i‚def 
_BITS_SIGNUM_GENERIC_H


20 
	#_BITS_SIGNUM_GENERIC_H
 1

	)

22 #i‚de‡
_SIGNAL_H


28 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

29 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

30 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

32 #ifde‡
__USE_XOPEN


33 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

48 
	#SIGINT
 2

	)

49 
	#SIGILL
 4

	)

50 
	#SIGABRT
 6

	)

51 
	#SIGFPE
 8

	)

52 
	#SIGSEGV
 11

	)

53 
	#SIGTERM
 15

	)

56 
	#SIGHUP
 1

	)

57 
	#SIGQUIT
 3

	)

58 
	#SIGTRAP
 5

	)

59 
	#SIGKILL
 9

	)

60 
	#SIGBUS
 10

	)

61 
	#SIGSYS
 12

	)

62 
	#SIGPIPE
 13

	)

63 
	#SIGALRM
 14

	)

66 
	#SIGURG
 16

	)

67 
	#SIGSTOP
 17

	)

68 
	#SIGTSTP
 18

	)

69 
	#SIGCONT
 19

	)

70 
	#SIGCHLD
 20

	)

71 
	#SIGTTIN
 21

	)

72 
	#SIGTTOU
 22

	)

73 
	#SIGPOLL
 23

	)

74 
	#SIGXCPU
 24

	)

75 
	#SIGXFSZ
 25

	)

76 
	#SIGVTALRM
 26

	)

77 
	#SIGPROF
 27

	)

78 
	#SIGUSR1
 30

	)

79 
	#SIGUSR2
 31

	)

83 
	#SIGWINCH
 28

	)

86 
	#SIGIO
 
SIGPOLL


	)

87 
	#SIGIOT
 
SIGABRT


	)

88 
	#SIGCLD
 
SIGCHLD


	)

96 
	#__SIGRTMIN
 32

	)

97 
	#__SIGRTMAX
 
__SIGRTMIN


	)

100 
	#_NSIG
 (
__SIGRTMAX
 + 1)

	)

	@/usr/include/bits/sockaddr.h

23 #i‚de‡
_BITS_SOCKADDR_H


24 
	#_BITS_SOCKADDR_H
 1

	)

28 
	tß_Ámûy_t
;

34 
	#__SOCKADDR_COMMON
(
ß_¥efix
) \

35 
ß_Ámûy_t
 
ß_¥efix
##
Ámûy


	)

37 
	#__SOCKADDR_COMMON_SIZE
 ( ())

	)

40 
	#_SS_SIZE
 128

	)

	@/usr/include/bits/socket_type.h

19 #i‚de‡
_SYS_SOCKET_H


24 
	e__sockë_ty≥


26 
	mSOCK_STREAM
 = 1,

28 
	#SOCK_STREAM
 
SOCK_STREAM


	)

29 
	mSOCK_DGRAM
 = 2,

31 
	#SOCK_DGRAM
 
SOCK_DGRAM


	)

32 
	mSOCK_RAW
 = 3,

33 
	#SOCK_RAW
 
SOCK_RAW


	)

34 
	mSOCK_RDM
 = 4,

35 
	#SOCK_RDM
 
SOCK_RDM


	)

36 
	mSOCK_SEQPACKET
 = 5,

38 
	#SOCK_SEQPACKET
 
SOCK_SEQPACKET


	)

39 
	mSOCK_DCCP
 = 6,

40 
	#SOCK_DCCP
 
SOCK_DCCP


	)

41 
	mSOCK_PACKET
 = 10,

44 
	#SOCK_PACKET
 
SOCK_PACKET


	)

49 
	mSOCK_CLOEXEC
 = 02000000,

51 
	#SOCK_CLOEXEC
 
SOCK_CLOEXEC


	)

52 
	mSOCK_NONBLOCK
 = 00004000

54 
	#SOCK_NONBLOCK
 
SOCK_NONBLOCK


	)

	@/usr/include/bits/sysmacros.h

19 #i‚de‡
_BITS_SYSMACROS_H


20 
	#_BITS_SYSMACROS_H
 1

	)

22 #i‚de‡
_SYS_SYSMACROS_H


36 
	#__SYSMACROS_DECLARE_MAJOR
(
DECL_TEMPL
) \

37 
	`DECL_TEMPL
(, 
maj‹
, (
__dev_t
 
__dev
))

	)

39 
	#__SYSMACROS_DEFINE_MAJOR
(
DECL_TEMPL
) \

40 
	`__SYSMACROS_DECLARE_MAJOR
 (
DECL_TEMPL
) \

42 
__maj‹
; \

43 
__maj‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000fff00u) >> 8); \

44 
__maj‹
 |((
__dev
 & (
__dev_t
) 0xfffff00000000000u) >> 32); \

45  
__maj‹
; \

46 }

	)

48 
	#__SYSMACROS_DECLARE_MINOR
(
DECL_TEMPL
) \

49 
	`DECL_TEMPL
(, 
mö‹
, (
__dev_t
 
__dev
))

	)

51 
	#__SYSMACROS_DEFINE_MINOR
(
DECL_TEMPL
) \

52 
	`__SYSMACROS_DECLARE_MINOR
 (
DECL_TEMPL
) \

54 
__mö‹
; \

55 
__mö‹
 = ((
__dev
 & (
__dev_t
) 0x00000000000000ffu) >> 0); \

56 
__mö‹
 |((
__dev
 & (
__dev_t
) 0x00000ffffff00000u) >> 12); \

57  
__mö‹
; \

58 }

	)

60 
	#__SYSMACROS_DECLARE_MAKEDEV
(
DECL_TEMPL
) \

61 
	`DECL_TEMPL
(
__dev_t
, 
makedev
, (
__maj‹
, 
__mö‹
))

	)

63 
	#__SYSMACROS_DEFINE_MAKEDEV
(
DECL_TEMPL
) \

64 
	`__SYSMACROS_DECLARE_MAKEDEV
 (
DECL_TEMPL
) \

66 
__dev_t
 
__dev
; \

67 
__dev
 = (((
__dev_t
Ë(
__maj‹
 & 0x00000fffu)) << 8); \

68 
__dev
 |(((
__dev_t
Ë(
__maj‹
 & 0xfffff000u)) << 32); \

69 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0x000000ffu)) << 0); \

70 
__dev
 |(((
__dev_t
Ë(
__mö‹
 & 0xffffff00u)) << 12); \

71  
__dev
; \

72 }

	)

	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

77 
	~<bôs/±hªadty≥s-¨ch.h
>

81 #i‡!
__PTHREAD_MUTEX_USE_UNION


82 
	s__±hªad_öã∫Æ_li°


84 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

85 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

86 } 
	t__±hªad_li°_t
;

88 
	s__±hªad_öã∫Æ_¶i°


90 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

91 } 
	t__±hªad_¶i°_t
;

95 #i‡
__PTHREAD_MUTEX_LOCK_ELISION


96 #i‡!
__PTHREAD_MUTEX_USE_UNION


97 
	#__PTHREAD_SPINS_DATA
 \

98 
__•ös
; \

99 
__ñisi⁄


	)

100 
	#__PTHREAD_SPINS
 0, 0

	)

102 
	#__PTHREAD_SPINS_DATA
 \

105 
__e•ös
; \

106 
__ìlisi⁄
; \

107 } 
__ñisi⁄_d©a


	)

108 
	#__PTHREAD_SPINS
 { 0, 0 }

	)

109 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

110 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

113 
	#__PTHREAD_SPINS_DATA
 
__•ös


	)

115 
	#__PTHREAD_SPINS
 0

	)

118 
	s__±hªad_muãx_s


120 
__lock
 
	m__LOCK_ALIGNMENT
;

121 
	m__cou¡
;

122 
	m__ow√r
;

123 #i‡!
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


124 
	m__nu£rs
;

148 
	m__köd
;

149 
	m__PTHREAD_COMPAT_PADDING_MID


150 #i‡
__PTHREAD_MUTEX_NUSERS_AFTER_KIND


151 
	m__nu£rs
;

153 #i‡!
__PTHREAD_MUTEX_USE_UNION


154 
	m__PTHREAD_SPINS_DATA
;

155 
__±hªad_li°_t
 
	m__li°
;

156 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

158 
__exãnsi⁄__
 union

160 
	m__PTHREAD_SPINS_DATA
;

161 
__±hªad_¶i°_t
 
	m__li°
;

163 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

165 
	m__PTHREAD_COMPAT_PADDING_END


171 
	s__±hªad_c⁄d_s


173 
__exãnsi⁄__
 union

175 
__exãnsi⁄__
 
	m__w£q
;

178 
	m__low
;

179 
	m__high
;

180 } 
	m__w£q32
;

182 
__exãnsi⁄__
 union

184 
__exãnsi⁄__
 
	m__g1_°¨t
;

187 
	m__low
;

188 
	m__high
;

189 } 
	m__g1_°¨t32
;

191 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

192 
	m__g_size
[2];

193 
	m__g1_‹ig_size
;

194 
	m__wªfs
;

195 
	m__g_sig«ls
[2];

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 
	mmodes
;

29 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

30 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

31 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

32 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

33 
	m°©us
;

34 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

35 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

36 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

37 
timevÆ
 
	mtime
;

38 
__sysˇŒ_¶⁄g_t
 
	mtick
;

39 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

40 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

41 
	mshi·
;

42 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

43 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

44 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

45 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

46 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

48 
	mèi
;

57 
	#ADJ_OFFSET
 0x0001

	)

58 
	#ADJ_FREQUENCY
 0x0002

	)

59 
	#ADJ_MAXERROR
 0x0004

	)

60 
	#ADJ_ESTERROR
 0x0008

	)

61 
	#ADJ_STATUS
 0x0010

	)

62 
	#ADJ_TIMECONST
 0x0020

	)

63 
	#ADJ_TAI
 0x0080

	)

64 
	#ADJ_SETOFFSET
 0x0100

	)

65 
	#ADJ_MICRO
 0x1000

	)

66 
	#ADJ_NANO
 0x2000

	)

67 
	#ADJ_TICK
 0x4000

	)

68 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

69 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

72 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

73 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

74 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

75 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

76 
	#MOD_STATUS
 
ADJ_STATUS


	)

77 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

78 
	#MOD_CLKB
 
ADJ_TICK


	)

79 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

80 
	#MOD_TAI
 
ADJ_TAI


	)

81 
	#MOD_MICRO
 
ADJ_MICRO


	)

82 
	#MOD_NANO
 
ADJ_NANO


	)

86 
	#STA_PLL
 0x0001

	)

87 
	#STA_PPSFREQ
 0x0002

	)

88 
	#STA_PPSTIME
 0x0004

	)

89 
	#STA_FLL
 0x0008

	)

91 
	#STA_INS
 0x0010

	)

92 
	#STA_DEL
 0x0020

	)

93 
	#STA_UNSYNC
 0x0040

	)

94 
	#STA_FREQHOLD
 0x0080

	)

96 
	#STA_PPSSIGNAL
 0x0100

	)

97 
	#STA_PPSJITTER
 0x0200

	)

98 
	#STA_PPSWANDER
 0x0400

	)

99 
	#STA_PPSERROR
 0x0800

	)

101 
	#STA_CLOCKERR
 0x1000

	)

102 
	#STA_NANO
 0x2000

	)

103 
	#STA_MODE
 0x4000

	)

104 
	#STA_CLK
 0x8000

	)

107 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

108 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

20 #i‚de‡
_BITS_TYPES___LOCALE_T_H


21 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

42 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/bits/types/__sigval_t.h

19 #i‚de‡
____sigvÆ_t_deföed


20 
	#____sigvÆ_t_deföed


	)

23 #ifde‡
__USE_POSIX199309


24 
	usigvÆ


26 
	msivÆ_öt
;

27 *
	msivÆ_±r
;

30 
sigvÆ
 
	t__sigvÆ_t
;

32 
	u__sigvÆ


34 
	m__sivÆ_öt
;

35 *
	m__sivÆ_±r
;

38 
__sigvÆ
 
	t__sigvÆ_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

68 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

69 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

70 
	#__TIMER_T_TYPE
 *

	)

71 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

72 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

73 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

74 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

76 #ifde‡
__x86_64__


80 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

83 
	#__INO_T_MATCHES_INO64_T
 1

	)

86 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

88 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

92 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio_lim.h

19 #i‚de‡
_BITS_UIO_LIM_H


20 
	#_BITS_UIO_LIM_H
 1

	)

30 
	#__IOV_MAX
 1024

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/errno.h

1 
	~<asm/î∫o.h
>

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

2 #i‚de‡
_LINUX_PARAM_H


3 
	#_LINUX_PARAM_H


	)

5 
	~<asm/∑øm.h
>

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

41 
	#__STDC_IEC_559__
 1

	)

44 #ifde‡
__GCC_IEC_559_COMPLEX


45 #i‡
__GCC_IEC_559_COMPLEX
 > 0

46 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_559_COMPLEX__
 1

	)

58 
	#__STDC_ISO_10646__
 201706L

	)

61 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/sys/cdefs.h

18 #i‚def 
_SYS_CDEFS_H


19 
	#_SYS_CDEFS_H
 1

	)

22 #i‚de‡
_FEATURES_H


23 
	~<„©uªs.h
>

29 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


34 #unde‡
__P


35 #unde‡
__PMT


37 #ifde‡
__GNUC__


41 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


42 
	#__LEAF
 , 
__Àaf__


	)

43 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

45 
	#__LEAF


	)

46 
	#__LEAF_ATTR


	)

54 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

55 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

56 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

57 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

58 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

60 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

61 
	#__THROW
 
	`throw
 ()

	)

62 
	#__THROWNL
 
	`throw
 ()

	)

63 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

64 
	#__NTHNL
(
f˘
Ëf˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

69 
	#__NTHNL
(
f˘
Ë
	)
fct

75 
	#__ölöe


	)

77 
	#__THROW


	)

78 
	#__THROWNL


	)

79 
	#__NTH
(
f˘
Ë
	)
fct

86 #i‡
deföed
 
__˛™g__
 && deföed 
__has_exãnsi⁄


87 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

89 
	#__glibc_˛™g_has_exãnsi⁄
(
ext
Ë0

	)

94 
	#__P
(
¨gs
Ë
	)
args

95 
	#__PMT
(
¨gs
Ë
	)
args

100 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

101 
	#__STRING
(
x
Ë#x

	)

104 
	#__±r_t
 *

	)

108 #ifdef 
__˝lu•lus


109 
	#__BEGIN_DECLS
 "C" {

	)

110 
	#__END_DECLS
 }

	)

112 
	#__BEGIN_DECLS


	)

113 
	#__END_DECLS


	)

118 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

119 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

121 #i‡
__GNUC_PREREQ
 (4,3)

122 
	#__w¨nde˛
(
«me
, 
msg
) \

123 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

124 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

125 
	#__îr‹de˛
(
«me
, 
msg
) \

126 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

128 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

129 
	#__w¨«âr
(
msg
)

	)

130 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

137 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

138 
	#__Êex¨r
 []

	)

139 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

140 #ñi‡
__GNUC_PREREQ
 (2,97)

143 
	#__Êex¨r
 []

	)

144 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

145 #ñi‡
deföed
 
__GNUC__


148 
	#__Êex¨r
 [0]

	)

149 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

152 
	#__Êex¨r
 [1]

	)

153 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

167 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

169 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

170 #ifde‡
__˝lu•lus


171 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

172 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

173 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

174 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

176 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

177 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

178 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

179 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

181 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

182 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

195 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

196 
	#__©åibuã__
(
xyz
Ë

	)

202 #i‡
__GNUC_PREREQ
 (2,96)

203 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

205 
	#__©åibuã_mÆloc__


	)

210 #i‡
__GNUC_PREREQ
 (4, 3)

211 
	#__©åibuã_Æloc_size__
(
∑øms
) \

212 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

214 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

220 #i‡
__GNUC_PREREQ
 (2,96)

221 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

223 
	#__©åibuã_puª__


	)

227 #i‡
__GNUC_PREREQ
 (2,5)

228 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

230 
	#__©åibuã_c⁄°__


	)

236 #i‡
__GNUC_PREREQ
 (3,1)

237 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

238 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

240 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

241 
	#__©åibuã_noölöe__


	)

245 #i‡
__GNUC_PREREQ
 (3,2)

246 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

248 
	#__©åibuã_dïªˇãd__


	)

254 #i‡
__GNUC_PREREQ
 (4,5) || \

255 
	$__glibc_˛™g_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

256 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

257 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

259 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

268 #i‡
	`__GNUC_PREREQ
 (2,8)

269 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

278 #i‡
	`__GNUC_PREREQ
 (2,97)

279 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

280 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

282 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

287 #i‡
	`__GNUC_PREREQ
 (3,3)

288 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

290 
	#__n⁄nuŒ
(
∑øms
)

	)

295 #i‡
	`__GNUC_PREREQ
 (3,4)

296 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

297 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

298 #i‡
__USE_FORTIFY_LEVEL
 > 0

299 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

302 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

304 #i‚de‡
__wur


305 
	#__wur


	)

309 #i‡
	`__GNUC_PREREQ
 (3,2)

313 #unde‡
__Æways_ölöe


314 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

316 #unde‡
__Æways_ölöe


317 
	#__Æways_ölöe
 
__ölöe


	)

322 #i‡
	`__GNUC_PREREQ
 (4,3)

323 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

325 
	#__©åibuã_¨tificül__


	)

337 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

338 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

339 || 
deföed
 
__GNUC_GNU_INLINE__
)))

340 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


341 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

342 
	#__exã∫_Æways_ölöe
 \

343 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

345 
	#__exã∫_ölöe
 
__ölöe


	)

346 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

350 #ifde‡
__exã∫_Æways_ölöe


351 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

356 #i‡
	`__GNUC_PREREQ
 (4,3)

357 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

358 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

365 #i‡!
	`__GNUC_PREREQ
 (2,8)

366 
	#__exãnsi⁄__


	)

370 #i‡!
	`__GNUC_PREREQ
 (2,92)

371 
	#__ª°ri˘


	)

377 #i‡
	`__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


378 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

380 #ifde‡
__GNUC__


381 
	#__ª°ri˘_¨r


	)

383 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

384 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

387 
	#__ª°ri˘_¨r


	)

392 #i‡
__GNUC__
 >= 3

393 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

394 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

396 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

397 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

400 #i‡(!
deföed
 
_N‹ëu∫
 \

401 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

402 && !
	$__GNUC_PREREQ
 (4,7))

403 #i‡
	`__GNUC_PREREQ
 (2,8)

404 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

406 
	#_N‹ëu∫


	)

410 #i‡
	`__GNUC_PREREQ
 (8, 0)

414 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

416 
	#__©åibuã_n⁄°rög__


	)

419 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

420 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

421 && (!
	`__GNUC_PREREQ
 (4, 6Ë|| 
deföed
 
__STRICT_ANSI__
))

422 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

423 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

424 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

427 
	~<bôs/w‹dsize.h
>

428 
	~<bôs/l⁄g-doubÀ.h
>

430 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


431 
	#__LDBL_COMPAT
 1

	)

432 #ifde‡
__REDIRECT


433 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

434 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

435 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

436 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

437 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

438 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

439 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

440 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

441 
	#__LDBL_REDIR_DECL
(
«me
) \

442 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

443 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

444 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

445 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

446 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

449 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


450 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

451 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

452 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

453 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

454 
	#__LDBL_REDIR_DECL
(
«me
)

	)

455 #ifde‡
__REDIRECT


456 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

457 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

458 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

467 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

468 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

469 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

470 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

472 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

482 #i‡!
deföed
 
__˝lu•lus
 \

483 && (
	`__GNUC_PREREQ
 (4, 9) \

484 || 
	`__glibc_˛™g_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

485 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

486 && 
__STDC_VERSION__
 >= 201112L))

487 
	#__HAVE_GENERIC_SELECTION
 1

	)

489 
	#__HAVE_GENERIC_SELECTION
 0

	)

	@/usr/include/asm-generic/socket.h

2 #i‚de‡
__ASM_GENERIC_SOCKET_H


3 
	#__ASM_GENERIC_SOCKET_H


	)

5 
	~<asm/sockios.h
>

8 
	#SOL_SOCKET
 1

	)

10 
	#SO_DEBUG
 1

	)

11 
	#SO_REUSEADDR
 2

	)

12 
	#SO_TYPE
 3

	)

13 
	#SO_ERROR
 4

	)

14 
	#SO_DONTROUTE
 5

	)

15 
	#SO_BROADCAST
 6

	)

16 
	#SO_SNDBUF
 7

	)

17 
	#SO_RCVBUF
 8

	)

18 
	#SO_SNDBUFFORCE
 32

	)

19 
	#SO_RCVBUFFORCE
 33

	)

20 
	#SO_KEEPALIVE
 9

	)

21 
	#SO_OOBINLINE
 10

	)

22 
	#SO_NO_CHECK
 11

	)

23 
	#SO_PRIORITY
 12

	)

24 
	#SO_LINGER
 13

	)

25 
	#SO_BSDCOMPAT
 14

	)

26 
	#SO_REUSEPORT
 15

	)

27 #i‚de‡
SO_PASSCRED


28 
	#SO_PASSCRED
 16

	)

29 
	#SO_PEERCRED
 17

	)

30 
	#SO_RCVLOWAT
 18

	)

31 
	#SO_SNDLOWAT
 19

	)

32 
	#SO_RCVTIMEO
 20

	)

33 
	#SO_SNDTIMEO
 21

	)

37 
	#SO_SECURITY_AUTHENTICATION
 22

	)

38 
	#SO_SECURITY_ENCRYPTION_TRANSPORT
 23

	)

39 
	#SO_SECURITY_ENCRYPTION_NETWORK
 24

	)

41 
	#SO_BINDTODEVICE
 25

	)

44 
	#SO_ATTACH_FILTER
 26

	)

45 
	#SO_DETACH_FILTER
 27

	)

46 
	#SO_GET_FILTER
 
SO_ATTACH_FILTER


	)

48 
	#SO_PEERNAME
 28

	)

49 
	#SO_TIMESTAMP
 29

	)

50 
	#SCM_TIMESTAMP
 
SO_TIMESTAMP


	)

52 
	#SO_ACCEPTCONN
 30

	)

54 
	#SO_PEERSEC
 31

	)

55 
	#SO_PASSSEC
 34

	)

56 
	#SO_TIMESTAMPNS
 35

	)

57 
	#SCM_TIMESTAMPNS
 
SO_TIMESTAMPNS


	)

59 
	#SO_MARK
 36

	)

61 
	#SO_TIMESTAMPING
 37

	)

62 
	#SCM_TIMESTAMPING
 
SO_TIMESTAMPING


	)

64 
	#SO_PROTOCOL
 38

	)

65 
	#SO_DOMAIN
 39

	)

67 
	#SO_RXQ_OVFL
 40

	)

69 
	#SO_WIFI_STATUS
 41

	)

70 
	#SCM_WIFI_STATUS
 
SO_WIFI_STATUS


	)

71 
	#SO_PEEK_OFF
 42

	)

74 
	#SO_NOFCS
 43

	)

76 
	#SO_LOCK_FILTER
 44

	)

78 
	#SO_SELECT_ERR_QUEUE
 45

	)

80 
	#SO_BUSY_POLL
 46

	)

82 
	#SO_MAX_PACING_RATE
 47

	)

84 
	#SO_BPF_EXTENSIONS
 48

	)

86 
	#SO_INCOMING_CPU
 49

	)

88 
	#SO_ATTACH_BPF
 50

	)

89 
	#SO_DETACH_BPF
 
SO_DETACH_FILTER


	)

91 
	#SO_ATTACH_REUSEPORT_CBPF
 51

	)

92 
	#SO_ATTACH_REUSEPORT_EBPF
 52

	)

94 
	#SO_CNX_ADVICE
 53

	)

96 
	#SCM_TIMESTAMPING_OPT_STATS
 54

	)

98 
	#SO_MEMINFO
 55

	)

100 
	#SO_INCOMING_NAPI_ID
 56

	)

102 
	#SO_COOKIE
 57

	)

104 
	#SCM_TIMESTAMPING_PKTINFO
 58

	)

106 
	#SO_PEERGROUPS
 59

	)

108 
	#SO_ZEROCOPY
 60

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/bits/long-double.h

	@/usr/include/bits/mman-shared.h

19 #i‚de‡
_SYS_MMAN_H


23 #ifde‡
__USE_GNU


25 #i‚de‡
MFD_CLOEXEC


26 
	#MFD_CLOEXEC
 1U

	)

27 
	#MFD_ALLOW_SEALING
 2U

	)

28 
	#MFD_HUGETLB
 4U

	)

32 #i‚de‡
MLOCK_ONFAULT


33 
	#MLOCK_ONFAULT
 1U

	)

37 #i‚de‡
PKEY_DISABLE_ACCESS


38 
	#PKEY_DISABLE_ACCESS
 0x1

	)

39 
	#PKEY_DISABLE_WRITE
 0x2

	)

42 
__BEGIN_DECLS


46 
	$memfd_¸óã
 (c⁄° *
__«me
, 
__Êags
Ë
__THROW
;

50 
	$mlock2
 (c⁄° *
__addr
, 
size_t
 
__Àngth
, 
__Êags
Ë
__THROW
;

56 
	$pkey_Æloc
 (
__Êags
, 
__ac˚ss_rights
Ë
__THROW
;

60 
	$pkey_£t
 (
__key
, 
__ac˚ss_rights
Ë
__THROW
;

64 
	$pkey_gë
 (
__key
Ë
__THROW
;

68 
	$pkey_‰ì
 (
__key
Ë
__THROW
;

72 
	$pkey_m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
, 
__pkey
Ë
__THROW
;

74 
__END_DECLS


	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

29 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

31 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

32 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

33 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

34 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

35 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

38 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

39 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

40 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

45 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

46 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

47 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

48 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

51 
	#__PTHREAD_COMPAT_PADDING_MID


	)

52 
	#__PTHREAD_COMPAT_PADDING_END


	)

53 
	#__PTHREAD_MUTEX_LOCK_ELISION
 1

	)

54 #ifde‡
__x86_64__


55 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 0

	)

56 
	#__PTHREAD_MUTEX_USE_UNION
 0

	)

58 
	#__PTHREAD_MUTEX_NUSERS_AFTER_KIND
 1

	)

59 
	#__PTHREAD_MUTEX_USE_UNION
 1

	)

62 
	#__LOCK_ALIGNMENT


	)

63 
	#__ONCE_ALIGNMENT


	)

65 
	s__±hªad_rwlock_¨ch_t


67 
	m__ªadîs
;

68 
	m__wrôîs
;

69 
	m__wΩha£_fuãx
;

70 
	m__wrôîs_fuãx
;

71 
	m__∑d3
;

72 
	m__∑d4
;

73 #ifde‡
__x86_64__


74 
	m__cur_wrôî
;

75 
	m__sh¨ed
;

76 sig√d 
	m__rwñisi⁄
;

77 #ifde‡ 
__ILP32__


78 
	m__∑d1
[3];

79 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

81 
	m__∑d1
[7];

82 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

84 
	m__∑d2
;

87 
	m__Êags
;

88 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

92 
	m__Êags
;

93 
	m__sh¨ed
;

94 sig√d 
	m__rwñisi⁄
;

95 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0

	)

96 
	m__∑d2
;

97 
	m__cur_wrôî
;

101 #i‚de‡
__x86_64__


103 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/types/wint_t.h

1 #i‚de‡
__wöt_t_deföed


2 
	#__wöt_t_deföed
 1

	)

9 #i‚de‡
_WINT_T


10 
	#_WINT_T
 1

	)

16 #i‚de‡
__WINT_TYPE__


17 
	#__WINT_TYPE__
 

	)

20 
__WINT_TYPE__
 
	twöt_t
;

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s/__mb°©e_t.h
>

27 
	~<bôs/ty≥s/wöt_t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004,

60 
	m__GCONV_TRANSLIT
 = 0x0008

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 
	s__gc⁄v_°ï


86 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

87 c⁄° *
__mod«me
;

89 
__cou¡î
;

91 *
__‰om_«me
;

92 *
__to_«me
;

94 
__gc⁄v_f˘
 
__f˘
;

95 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

96 
__gc⁄v_öô_f˘
 
__öô_f˘
;

97 
__gc⁄v_íd_f˘
 
__íd_f˘
;

101 
__mö_√eded_‰om
;

102 
__max_√eded_‰om
;

103 
__mö_√eded_to
;

104 
__max_√eded_to
;

107 
__°©eful
;

109 *
__d©a
;

114 
	s__gc⁄v_°ï_d©a


116 *
__outbuf
;

117 *
__outbu„nd
;

121 
__Êags
;

125 
__övoˇti⁄_cou¡î
;

129 
__öã∫Æ_u£
;

131 
__mb°©e_t
 *
__°©ï
;

132 
__mb°©e_t
 
__°©e
;

138 
	s__gc⁄v_öfo


140 
size_t
 
__n°ïs
;

141 
__gc⁄v_°ï
 *
__°ïs
;

142 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
[0];

143 } *
	t__gc⁄v_t
;

146 
	`__gc⁄v_å™¶ôî©e
 (
__gc⁄v_°ï
 *
°ï
,

147 
__gc⁄v_°ï_d©a
 *
°ï_d©a
,

148 c⁄° *
öbuf°¨t
,

149 c⁄° **
öbuÂ
,

150 c⁄° *
öbu„nd
,

151 **
outbuf°¨t
,

152 
size_t
 *
úªvîsibÀ
);

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_chÊags


	)

11 
	#__°ub_Áâach


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_fdëach


	)

14 
	#__°ub_gây


	)

15 
	#__°ub_lchmod


	)

16 
	#__°ub_ªvoke


	)

17 
	#__°ub_£éogö


	)

18 
	#__°ub_sigªtu∫


	)

19 
	#__°ub_s°k


	)

20 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-x32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub___com∑t_¸óã_moduÀ


	)

12 
	#__°ub___com∑t_gë_kî√l_syms


	)

13 
	#__°ub___com∑t_quîy_moduÀ


	)

14 
	#__°ub___com∑t_u£lib


	)

15 
	#__°ub_chÊags


	)

16 
	#__°ub_Áâach


	)

17 
	#__°ub_fchÊags


	)

18 
	#__°ub_fdëach


	)

19 
	#__°ub_gëmsg


	)

20 
	#__°ub_gây


	)

21 
	#__°ub_lchmod


	)

22 
	#__°ub_nfs£rv˘l


	)

23 
	#__°ub_putmsg


	)

24 
	#__°ub_ªvoke


	)

25 
	#__°ub_£éogö


	)

26 
	#__°ub_sigªtu∫


	)

27 
	#__°ub_s°k


	)

28 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

2 #i‚de‡
_FALLOC_H_


3 
	#_FALLOC_H_


	)

5 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

6 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

7 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

29 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

43 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

60 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

78 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/asm-generic/errno.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_H


3 
	#_ASM_GENERIC_ERRNO_H


	)

5 
	~<asm-gíîic/î∫o-ba£.h
>

7 
	#EDEADLK
 35

	)

8 
	#ENAMETOOLONG
 36

	)

9 
	#ENOLCK
 37

	)

18 
	#ENOSYS
 38

	)

20 
	#ENOTEMPTY
 39

	)

21 
	#ELOOP
 40

	)

22 
	#EWOULDBLOCK
 
EAGAIN


	)

23 
	#ENOMSG
 42

	)

24 
	#EIDRM
 43

	)

25 
	#ECHRNG
 44

	)

26 
	#EL2NSYNC
 45

	)

27 
	#EL3HLT
 46

	)

28 
	#EL3RST
 47

	)

29 
	#ELNRNG
 48

	)

30 
	#EUNATCH
 49

	)

31 
	#ENOCSI
 50

	)

32 
	#EL2HLT
 51

	)

33 
	#EBADE
 52

	)

34 
	#EBADR
 53

	)

35 
	#EXFULL
 54

	)

36 
	#ENOANO
 55

	)

37 
	#EBADRQC
 56

	)

38 
	#EBADSLT
 57

	)

40 
	#EDEADLOCK
 
EDEADLK


	)

42 
	#EBFONT
 59

	)

43 
	#ENOSTR
 60

	)

44 
	#ENODATA
 61

	)

45 
	#ETIME
 62

	)

46 
	#ENOSR
 63

	)

47 
	#ENONET
 64

	)

48 
	#ENOPKG
 65

	)

49 
	#EREMOTE
 66

	)

50 
	#ENOLINK
 67

	)

51 
	#EADV
 68

	)

52 
	#ESRMNT
 69

	)

53 
	#ECOMM
 70

	)

54 
	#EPROTO
 71

	)

55 
	#EMULTIHOP
 72

	)

56 
	#EDOTDOT
 73

	)

57 
	#EBADMSG
 74

	)

58 
	#EOVERFLOW
 75

	)

59 
	#ENOTUNIQ
 76

	)

60 
	#EBADFD
 77

	)

61 
	#EREMCHG
 78

	)

62 
	#ELIBACC
 79

	)

63 
	#ELIBBAD
 80

	)

64 
	#ELIBSCN
 81

	)

65 
	#ELIBMAX
 82

	)

66 
	#ELIBEXEC
 83

	)

67 
	#EILSEQ
 84

	)

68 
	#ERESTART
 85

	)

69 
	#ESTRPIPE
 86

	)

70 
	#EUSERS
 87

	)

71 
	#ENOTSOCK
 88

	)

72 
	#EDESTADDRREQ
 89

	)

73 
	#EMSGSIZE
 90

	)

74 
	#EPROTOTYPE
 91

	)

75 
	#ENOPROTOOPT
 92

	)

76 
	#EPROTONOSUPPORT
 93

	)

77 
	#ESOCKTNOSUPPORT
 94

	)

78 
	#EOPNOTSUPP
 95

	)

79 
	#EPFNOSUPPORT
 96

	)

80 
	#EAFNOSUPPORT
 97

	)

81 
	#EADDRINUSE
 98

	)

82 
	#EADDRNOTAVAIL
 99

	)

83 
	#ENETDOWN
 100

	)

84 
	#ENETUNREACH
 101

	)

85 
	#ENETRESET
 102

	)

86 
	#ECONNABORTED
 103

	)

87 
	#ECONNRESET
 104

	)

88 
	#ENOBUFS
 105

	)

89 
	#EISCONN
 106

	)

90 
	#ENOTCONN
 107

	)

91 
	#ESHUTDOWN
 108

	)

92 
	#ETOOMANYREFS
 109

	)

93 
	#ETIMEDOUT
 110

	)

94 
	#ECONNREFUSED
 111

	)

95 
	#EHOSTDOWN
 112

	)

96 
	#EHOSTUNREACH
 113

	)

97 
	#EALREADY
 114

	)

98 
	#EINPROGRESS
 115

	)

99 
	#ESTALE
 116

	)

100 
	#EUCLEAN
 117

	)

101 
	#ENOTNAM
 118

	)

102 
	#ENAVAIL
 119

	)

103 
	#EISNAM
 120

	)

104 
	#EREMOTEIO
 121

	)

105 
	#EDQUOT
 122

	)

107 
	#ENOMEDIUM
 123

	)

108 
	#EMEDIUMTYPE
 124

	)

109 
	#ECANCELED
 125

	)

110 
	#ENOKEY
 126

	)

111 
	#EKEYEXPIRED
 127

	)

112 
	#EKEYREVOKED
 128

	)

113 
	#EKEYREJECTED
 129

	)

116 
	#EOWNERDEAD
 130

	)

117 
	#ENOTRECOVERABLE
 131

	)

119 
	#ERFKILL
 132

	)

121 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/param.h

2 #i‚de‡
__ASM_GENERIC_PARAM_H


3 
	#__ASM_GENERIC_PARAM_H


	)

5 #i‚de‡
HZ


6 
	#HZ
 100

	)

9 #i‚de‡
EXEC_PAGESIZE


10 
	#EXEC_PAGESIZE
 4096

	)

13 #i‚de‡
NOGROUP


14 
	#NOGROUP
 (-1)

	)

17 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/sockios.h

1 
	~<asm-gíîic/sockios.h
>

	@/usr/include/asm-generic/errno-base.h

2 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


3 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

5 
	#EPERM
 1

	)

6 
	#ENOENT
 2

	)

7 
	#ESRCH
 3

	)

8 
	#EINTR
 4

	)

9 
	#EIO
 5

	)

10 
	#ENXIO
 6

	)

11 
	#E2BIG
 7

	)

12 
	#ENOEXEC
 8

	)

13 
	#EBADF
 9

	)

14 
	#ECHILD
 10

	)

15 
	#EAGAIN
 11

	)

16 
	#ENOMEM
 12

	)

17 
	#EACCES
 13

	)

18 
	#EFAULT
 14

	)

19 
	#ENOTBLK
 15

	)

20 
	#EBUSY
 16

	)

21 
	#EEXIST
 17

	)

22 
	#EXDEV
 18

	)

23 
	#ENODEV
 19

	)

24 
	#ENOTDIR
 20

	)

25 
	#EISDIR
 21

	)

26 
	#EINVAL
 22

	)

27 
	#ENFILE
 23

	)

28 
	#EMFILE
 24

	)

29 
	#ENOTTY
 25

	)

30 
	#ETXTBSY
 26

	)

31 
	#EFBIG
 27

	)

32 
	#ENOSPC
 28

	)

33 
	#ESPIPE
 29

	)

34 
	#EROFS
 30

	)

35 
	#EMLINK
 31

	)

36 
	#EPIPE
 32

	)

37 
	#EDOM
 33

	)

38 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/sockios.h

2 #i‚de‡
__ASM_GENERIC_SOCKIOS_H


3 
	#__ASM_GENERIC_SOCKIOS_H


	)

6 
	#FIOSETOWN
 0x8901

	)

7 
	#SIOCSPGRP
 0x8902

	)

8 
	#FIOGETOWN
 0x8903

	)

9 
	#SIOCGPGRP
 0x8904

	)

10 
	#SIOCATMARK
 0x8905

	)

11 
	#SIOCGSTAMP
 0x8906

	)

12 
	#SIOCGSTAMPNS
 0x8907

	)

	@
1
.
1
/usr/include
276
6950
aslr.c
aslr.h
config.h
cvars/cvar-erlang.c
cvars/cvar-erlang.h
cvars/cvar-exponential.c
cvars/cvar-exponential.h
cvars/cvar-gamma.c
cvars/cvar-lognormal.c
cvars/cvar-lognormal.h
cvars/cvar-normal.c
cvars/cvar-normal.h
cvars/cvar-triangular.c
cvars/cvar-triangular.h
cvars/cvar-uniform.c
cvars/cvar-uniform.h
cvars/cvar-weibull.c
cvars/cvar-weibull.h
cvars/cvar.h
cvars/cvar_tokens.c
cvars/cvar_tokens.h
cvars/cvar_trace.h
cvars/mtwist/mtcctest.cc
cvars/mtwist/mttest.c
cvars/mtwist/mtwist.c
cvars/mtwist/mtwist.h
cvars/mtwist/randistrs.c
cvars/mtwist/randistrs.h
cvars/mtwist/rdcctest.cc
cvars/mtwist/rdtest.c
cvars/test/sanity.c
eventgen.c
eventgen.h
fb_avl.c
fb_avl.h
fb_cvar.c
fb_cvar.h
fb_localfs.c
fb_random.c
fb_random.h
fbtime.c
fbtime.h
filebench.h
fileset.c
fileset.h
flag.h
flowop.c
flowop.h
flowop_library.c
fsplug.h
gamma_dist.c
gamma_dist.h
ioprio.c
ioprio.h
ipc.c
ipc.h
misc.c
misc.h
multi_client_sync.c
multi_client_sync.h
parser_gram.c
parser_gram.h
parser_gram.y
parser_lex.c
parser_lex.l
parsertypes.h
procflow.c
procflow.h
stats.c
stats.h
threadflow.c
threadflow.h
utils.c
utils.h
vars.c
vars.h
/usr/include/aio.h
/usr/include/alloca.h
/usr/include/arpa/inet.h
/usr/include/asm/unistd.h
/usr/include/assert.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/inttypes.h
/usr/include/libgen.h
/usr/include/libintl.h
/usr/include/limits.h
/usr/include/locale.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/errno.h
/usr/include/sys/ipc.h
/usr/include/sys/mman.h
/usr/include/sys/param.h
/usr/include/sys/personality.h
/usr/include/sys/resource.h
/usr/include/sys/sem.h
/usr/include/sys/shm.h
/usr/include/sys/socket.h
/usr/include/sys/stat.h
/usr/include/sys/statvfs.h
/usr/include/sys/time.h
/usr/include/sys/timeb.h
/usr/include/sys/times.h
/usr/include/sys/types.h
/usr/include/sys/utsname.h
/usr/include/sys/wait.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/asm/unistd_x32.h
/usr/include/bits/byteswap.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/in.h
/usr/include/bits/ipc.h
/usr/include/bits/ipctypes.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/libio.h
/usr/include/bits/locale.h
/usr/include/bits/math-finite.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/netdb.h
/usr/include/bits/param.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/sem.h
/usr/include/bits/semaphore.h
/usr/include/bits/setjmp.h
/usr/include/bits/shm.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/sigevent-consts.h
/usr/include/bits/siginfo-consts.h
/usr/include/bits/signum.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/socket.h
/usr/include/bits/socket2.h
/usr/include/bits/ss_flags.h
/usr/include/bits/stat.h
/usr/include/bits/statvfs.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/sig_atomic_t.h
/usr/include/bits/types/sigevent_t.h
/usr/include/bits/types/siginfo_t.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/sigval_t.h
/usr/include/bits/types/stack_t.h
/usr/include/bits/types/struct_iovec.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_osockaddr.h
/usr/include/bits/types/struct_rusage.h
/usr/include/bits/types/struct_sigstack.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/uintn-identity.h
/usr/include/bits/unistd.h
/usr/include/bits/utsname.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ucontext.h
/usr/include/asm/socket.h
/usr/include/bits/_G_config.h
/usr/include/bits/byteswap-16.h
/usr/include/bits/cpu-set.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/mman-linux.h
/usr/include/bits/sched.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/siginfo-arch.h
/usr/include/bits/siginfo-consts-arch.h
/usr/include/bits/signum-generic.h
/usr/include/bits/sockaddr.h
/usr/include/bits/socket_type.h
/usr/include/bits/sysmacros.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__sigset_t.h
/usr/include/bits/types/__sigval_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/asm-generic/socket.h
/usr/include/asm/errno.h
/usr/include/asm/param.h
/usr/include/bits/long-double.h
/usr/include/bits/mman-shared.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/types/wint_t.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/gnu/stubs-x32.h
/usr/include/linux/falloc.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/param.h
/usr/include/asm/sockios.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/sockios.h
