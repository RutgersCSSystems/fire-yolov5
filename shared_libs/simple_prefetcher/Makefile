CXX=mpic++
CC=gcc

LIBS=-lpthread -lrt -ldl -lmpi
FLAGS=-fPIC -shared -std=gnu++11 -Wno-unused-result -g
INCLUDE=

KB=1024
MB=`echo "$(KB)*1024" | bc`
25MB=`echo "$(KB)*1024*25" | bc`
15MB=`echo "$(KB)*1024*15" | bc`

NR_RA_PAGES=40
NR_WORKERS=2
PORTION_PAGES=32
NR_ADJACENT_CHECK=10
MIN_FILE_SZ=$(15MB)
CROSS_BITMAP_SHIFT=24

SOURCES = frontend.cpp uinode.cpp mpiio.cpp utils/thpool.c utils/bitarray.c utils/hashtable.c


#DEBUG=-DDEBUG
ENABLE_OS_STATS=-DENABLE_OS_STATS ##comment if dont need OS STATS
OTHERFLAGS=-DMAINTAIN_UINODE -DENABLE_MPI $(ENABLE_OS_STATS)
VAR_FLAGS=-DNR_RA_PAGES=$(NR_RA_PAGES) -DNR_WORKERS=$(NR_WORKERS) -DPORTION_PAGES=$(PORTION_PAGES) $(OTHERFLAGS)
VAR_FLAGS+=-DNR_ADJACENT_CHECK=$(NR_ADJACENT_CHECK) -DMIN_FILE_SZ=$(MIN_FILE_SZ) -DCROSS_BITMAP_SHIFT=$(CROSS_BITMAP_SHIFT)


ONLY_INTERCEPT=-DONLY_INTERCEPT
DISABLE_FADV_RANDOM=-DDISABLE_FADV_RANDOM ##Disables any FADV_RANDOM from App
DISABLE_FADV_DONTNEED=-DDISABLE_FADV_DONTNEED
DISABLE_MADV_DONTNEED=-DDISABLE_MADV_DONTNEED
OS_ONLY=-DDISABLE_APP_READAHEADS
THPOOL_FILE_RA=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DBLIND_PREFETCH
THPOOL_BLOCK_RA=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DDISABLE_APP_READAHEAD

THPOOL_BLOCK_RA_INFO=-DTHPOOL_PREFETCH -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS -DBLIND_PREFETCH 

THPOOL_FILE_RA_INFO=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS
THPOOL_BLOCK_RA_BUDGET=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DENABLE_EVICTION
THPOOL_BLOCK_RA_BUDGET_INFO=-DTHPOOL_PREFETCH -DBLIND_PREFETCH -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE

PREDICTOR_THPOOL_FILE_RA=-DTHPOOL_PREFETCH -DFULL_PREFETCH -DPREDICTOR
PREDICTOR_THPOOL_BLOCK_RA=-DTHPOOL_PREFETCH -DPREDICTOR


PREDICTOR_THPOOL_BLOCK_RA_BUDGET=-DTHPOOL_PREFETCH -DPREDICTOR -DMODIFIED_RA -DENABLE_EVICTION

PREDICTOR_THPOOL_BLOCK_RA_INFO=-DTHPOOL_PREFETCH -DPREDICTOR -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE -DDISABLE_APP_READAHEADS

PREDICTOR_THPOOL_BLOCK_RA_BUDGET_INFO=-DTHPOOL_PREFETCH -DPREDICTOR -DDISABLE_APP_READAHEADS -DENABLE_EVICTION # -DMODIFIED_RA -DREADAHEAD_INFO_PC_STATE  

all: Vanilla Cross_Blind OSonly INTERCEPT Cross_Info Cross_Info_Predict Cross_Pred_Budget Cross_Info_Predict_IOOPT Cross_Pred_Budget_IOOPT Cross_Naive_IOOPT DISABLE_ADV Cross_Naive_full Vanilla_RA_IOOPT Cross_Info_IOOPT

#App Readahead + readahead syscall (Only constructor and destructor)
Vanilla: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_Vanilla.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS)

OSonly: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_OSonly.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(OS_ONLY)


#Just blind prefetch, all app readahead disabled, readahead syscall
Cross_Blind: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_Cross_Blind.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(THPOOL_BLOCK_RA) $(DISABLE_FADV_DONTNEED)

#Cross-Blind + readahead_info syscall + bitmap checking
Cross_Info: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_Cross_Info.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(DISABLE_FADV_DONTNEED) $(THPOOL_BLOCK_RA_INFO)

#Cross-Info + IOOPT
Cross_Info_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CII.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(DISABLE_FADV_DONTNEED) $(THPOOL_BLOCK_RA_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT


#Cross_Info + Predictor
Cross_Info_Predict: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIP.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO)


#Cross_Info_Predict + IOOPT
Cross_Info_Predict_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CIPI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT


Cross_Pred_Budget: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CPBV.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_BUDGET_INFO)
	    

Vanilla_RA_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_VRAI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(THPOOL_BLOCK_RA) $(DISABLE_FADV_DONTNEED) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT

Cross_Naive_full: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CNF.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(THPOOL_FULL_RA_INFO) $(DISABLE_FADV_DONTNEED)


Cross_Naive_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CNI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(THPOOL_BLOCK_RA_INFO) $(DISABLE_FADV_DONTNEED) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT


Cross_Pred_Budget_IOOPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_CPBI.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_RANDOM) $(PREDICTOR_THPOOL_BLOCK_RA_BUDGET_INFO) \
	    -DSET_READ_UNLIMITED -DUNSET_2MB_RA_LIMIT


INTERCEPT: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_INTERCEPT.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(ONLY_INTERCEPT)

DISABLE_ADV: $(SOURCES)
	$(CXX) $(INCLUDE) $(FLAGS) -o lib_DISABLE_ADV.so $^ $(LIBS) $(DEBUG) \
	    $(VAR_FLAGS) $(DISABLE_FADV_DONTNEED) $(DISABLE_MADV_DONTNEED)

install:
	sudo cp *.so /usr/local/lib
	sudo cp *.so /usr/lib

clean:
	rm *.so
